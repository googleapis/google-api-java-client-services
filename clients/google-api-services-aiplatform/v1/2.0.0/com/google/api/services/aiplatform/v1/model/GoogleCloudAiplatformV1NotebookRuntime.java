/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * A runtime is a virtual machine allocated to a particular user for a particular Notebook file on
 * temporary basis with lifetime limited to 24 hours.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1NotebookRuntime extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The specification of persistent disk attached to the notebook runtime as data disk
   * storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1PersistentDiskSpec dataPersistentDiskSpec;

  /**
   * The description of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Customer-managed encryption key spec for the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  /**
   * Output only. EUC configuration of the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookEucConfig eucConfig;

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expirationTime;

  /**
   * Output only. The health state of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String healthState;

  /**
   * Output only. The idle shutdown configuration of the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookIdleShutdownConfig idleShutdownConfig;

  /**
   * Output only. Whether NotebookRuntime is upgradable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isUpgradable;

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or
   * "vertex"; if absent, it should be "vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The specification of a single machine used by the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1MachineSpec machineSpec;

  /**
   * Output only. The resource name of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Network spec of the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NetworkSpec networkSpec;

  /**
   * Optional. The Compute Engine tags to add to runtime (see [Tagging
   * instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> networkTags;

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookRuntimeTemplateRef notebookRuntimeTemplateRef;

  /**
   * Output only. The type of the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notebookRuntimeType;

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String proxyUri;

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runtimeState;

  /**
   * Required. The user email of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runtimeUser;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. Deprecated: This field is no longer used and the "Vertex AI Notebook Service
   * Account" (service-PROJECT_NUMBER@gcp-sa-aiplatform-vm.iam.gserviceaccount.com) is used for the
   * runtime workload identity. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-
   * notebook-service-account for more details. The service account that the NotebookRuntime
   * workload runs as.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Runtime Shielded VM spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1ShieldedVmConfig shieldedVmConfig;

  /**
   * Output only. Software config of the notebook runtime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookSoftwareConfig softwareConfig;

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The specification of persistent disk attached to the notebook runtime as data disk
   * storage.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1PersistentDiskSpec getDataPersistentDiskSpec() {
    return dataPersistentDiskSpec;
  }

  /**
   * Output only. The specification of persistent disk attached to the notebook runtime as data disk
   * storage.
   * @param dataPersistentDiskSpec dataPersistentDiskSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setDataPersistentDiskSpec(GoogleCloudAiplatformV1PersistentDiskSpec dataPersistentDiskSpec) {
    this.dataPersistentDiskSpec = dataPersistentDiskSpec;
    return this;
  }

  /**
   * The description of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The description of the NotebookRuntime.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Customer-managed encryption key spec for the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  /**
   * Output only. Customer-managed encryption key spec for the notebook runtime.
   * @param encryptionSpec encryptionSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Output only. EUC configuration of the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookEucConfig getEucConfig() {
    return eucConfig;
  }

  /**
   * Output only. EUC configuration of the notebook runtime.
   * @param eucConfig eucConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setEucConfig(GoogleCloudAiplatformV1NotebookEucConfig eucConfig) {
    this.eucConfig = eucConfig;
    return this;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * @return value or {@code null} for none
   */
  public String getExpirationTime() {
    return expirationTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * @param expirationTime expirationTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Output only. The health state of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getHealthState() {
    return healthState;
  }

  /**
   * Output only. The health state of the NotebookRuntime.
   * @param healthState healthState or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setHealthState(java.lang.String healthState) {
    this.healthState = healthState;
    return this;
  }

  /**
   * Output only. The idle shutdown configuration of the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookIdleShutdownConfig getIdleShutdownConfig() {
    return idleShutdownConfig;
  }

  /**
   * Output only. The idle shutdown configuration of the notebook runtime.
   * @param idleShutdownConfig idleShutdownConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setIdleShutdownConfig(GoogleCloudAiplatformV1NotebookIdleShutdownConfig idleShutdownConfig) {
    this.idleShutdownConfig = idleShutdownConfig;
    return this;
  }

  /**
   * Output only. Whether NotebookRuntime is upgradable.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsUpgradable() {
    return isUpgradable;
  }

  /**
   * Output only. Whether NotebookRuntime is upgradable.
   * @param isUpgradable isUpgradable or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setIsUpgradable(java.lang.Boolean isUpgradable) {
    this.isUpgradable = isUpgradable;
    return this;
  }

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or
   * "vertex"; if absent, it should be "vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or
   * "vertex"; if absent, it should be "vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The specification of a single machine used by the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1MachineSpec getMachineSpec() {
    return machineSpec;
  }

  /**
   * Output only. The specification of a single machine used by the notebook runtime.
   * @param machineSpec machineSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setMachineSpec(GoogleCloudAiplatformV1MachineSpec machineSpec) {
    this.machineSpec = machineSpec;
    return this;
  }

  /**
   * Output only. The resource name of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the NotebookRuntime.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Network spec of the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NetworkSpec getNetworkSpec() {
    return networkSpec;
  }

  /**
   * Output only. Network spec of the notebook runtime.
   * @param networkSpec networkSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setNetworkSpec(GoogleCloudAiplatformV1NetworkSpec networkSpec) {
    this.networkSpec = networkSpec;
    return this;
  }

  /**
   * Optional. The Compute Engine tags to add to runtime (see [Tagging
   * instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNetworkTags() {
    return networkTags;
  }

  /**
   * Optional. The Compute Engine tags to add to runtime (see [Tagging
   * instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
   * @param networkTags networkTags or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setNetworkTags(java.util.List<java.lang.String> networkTags) {
    this.networkTags = networkTags;
    return this;
  }

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntimeTemplateRef getNotebookRuntimeTemplateRef() {
    return notebookRuntimeTemplateRef;
  }

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * @param notebookRuntimeTemplateRef notebookRuntimeTemplateRef or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setNotebookRuntimeTemplateRef(GoogleCloudAiplatformV1NotebookRuntimeTemplateRef notebookRuntimeTemplateRef) {
    this.notebookRuntimeTemplateRef = notebookRuntimeTemplateRef;
    return this;
  }

  /**
   * Output only. The type of the notebook runtime.
   * @return value or {@code null} for none
   */
  public java.lang.String getNotebookRuntimeType() {
    return notebookRuntimeType;
  }

  /**
   * Output only. The type of the notebook runtime.
   * @param notebookRuntimeType notebookRuntimeType or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setNotebookRuntimeType(java.lang.String notebookRuntimeType) {
    this.notebookRuntimeType = notebookRuntimeType;
    return this;
  }

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getProxyUri() {
    return proxyUri;
  }

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * @param proxyUri proxyUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setProxyUri(java.lang.String proxyUri) {
    this.proxyUri = proxyUri;
    return this;
  }

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuntimeState() {
    return runtimeState;
  }

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * @param runtimeState runtimeState or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setRuntimeState(java.lang.String runtimeState) {
    this.runtimeState = runtimeState;
    return this;
  }

  /**
   * Required. The user email of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuntimeUser() {
    return runtimeUser;
  }

  /**
   * Required. The user email of the NotebookRuntime.
   * @param runtimeUser runtimeUser or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setRuntimeUser(java.lang.String runtimeUser) {
    this.runtimeUser = runtimeUser;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. Deprecated: This field is no longer used and the "Vertex AI Notebook Service
   * Account" (service-PROJECT_NUMBER@gcp-sa-aiplatform-vm.iam.gserviceaccount.com) is used for the
   * runtime workload identity. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-
   * notebook-service-account for more details. The service account that the NotebookRuntime
   * workload runs as.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Output only. Deprecated: This field is no longer used and the "Vertex AI Notebook Service
   * Account" (service-PROJECT_NUMBER@gcp-sa-aiplatform-vm.iam.gserviceaccount.com) is used for the
   * runtime workload identity. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-
   * notebook-service-account for more details. The service account that the NotebookRuntime
   * workload runs as.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Runtime Shielded VM spec.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1ShieldedVmConfig getShieldedVmConfig() {
    return shieldedVmConfig;
  }

  /**
   * Output only. Runtime Shielded VM spec.
   * @param shieldedVmConfig shieldedVmConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setShieldedVmConfig(GoogleCloudAiplatformV1ShieldedVmConfig shieldedVmConfig) {
    this.shieldedVmConfig = shieldedVmConfig;
    return this;
  }

  /**
   * Output only. Software config of the notebook runtime.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookSoftwareConfig getSoftwareConfig() {
    return softwareConfig;
  }

  /**
   * Output only. Software config of the notebook runtime.
   * @param softwareConfig softwareConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setSoftwareConfig(GoogleCloudAiplatformV1NotebookSoftwareConfig softwareConfig) {
    this.softwareConfig = softwareConfig;
    return this;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * @param version version or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1NotebookRuntime set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1NotebookRuntime) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1NotebookRuntime clone() {
    return (GoogleCloudAiplatformV1NotebookRuntime) super.clone();
  }

}
