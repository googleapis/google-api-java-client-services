/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * The specification for automatically creating a DNS record.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutomatedDnsCreationSpec extends com.google.api.client.json.GenericJson {

  /**
   * Required. The DNS suffix to use for the DNS record. Must end with a dot. This should be a valid
   * DNS domain name as per RFC 1035. Each label (between dots) can contain letters, digits, and
   * hyphens, and must not start or end with a hyphen. Example: "my-service.example.com.",
   * "internal."
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dnsSuffix;

  /**
   * Required. The hostname (the first label of the FQDN) to use for the DNS record. This should be
   * a valid DNS label as per RFC 1035. Generally, this means the hostname can contain letters,
   * digits, and hyphens, and must not start or end with a hyphen. Example: "my-instance", "db-1"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostname;

  /**
   * Optional. The Time To Live for the DNS record, in seconds. If not provided, a default of 30
   * seconds will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String ttl;

  /**
   * Required. The DNS suffix to use for the DNS record. Must end with a dot. This should be a valid
   * DNS domain name as per RFC 1035. Each label (between dots) can contain letters, digits, and
   * hyphens, and must not start or end with a hyphen. Example: "my-service.example.com.",
   * "internal."
   * @return value or {@code null} for none
   */
  public java.lang.String getDnsSuffix() {
    return dnsSuffix;
  }

  /**
   * Required. The DNS suffix to use for the DNS record. Must end with a dot. This should be a valid
   * DNS domain name as per RFC 1035. Each label (between dots) can contain letters, digits, and
   * hyphens, and must not start or end with a hyphen. Example: "my-service.example.com.",
   * "internal."
   * @param dnsSuffix dnsSuffix or {@code null} for none
   */
  public AutomatedDnsCreationSpec setDnsSuffix(java.lang.String dnsSuffix) {
    this.dnsSuffix = dnsSuffix;
    return this;
  }

  /**
   * Required. The hostname (the first label of the FQDN) to use for the DNS record. This should be
   * a valid DNS label as per RFC 1035. Generally, this means the hostname can contain letters,
   * digits, and hyphens, and must not start or end with a hyphen. Example: "my-instance", "db-1"
   * @return value or {@code null} for none
   */
  public java.lang.String getHostname() {
    return hostname;
  }

  /**
   * Required. The hostname (the first label of the FQDN) to use for the DNS record. This should be
   * a valid DNS label as per RFC 1035. Generally, this means the hostname can contain letters,
   * digits, and hyphens, and must not start or end with a hyphen. Example: "my-instance", "db-1"
   * @param hostname hostname or {@code null} for none
   */
  public AutomatedDnsCreationSpec setHostname(java.lang.String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Optional. The Time To Live for the DNS record, in seconds. If not provided, a default of 30
   * seconds will be used.
   * @return value or {@code null} for none
   */
  public String getTtl() {
    return ttl;
  }

  /**
   * Optional. The Time To Live for the DNS record, in seconds. If not provided, a default of 30
   * seconds will be used.
   * @param ttl ttl or {@code null} for none
   */
  public AutomatedDnsCreationSpec setTtl(String ttl) {
    this.ttl = ttl;
    return this;
  }

  @Override
  public AutomatedDnsCreationSpec set(String fieldName, Object value) {
    return (AutomatedDnsCreationSpec) super.set(fieldName, value);
  }

  @Override
  public AutomatedDnsCreationSpec clone() {
    return (AutomatedDnsCreationSpec) super.clone();
  }

}
