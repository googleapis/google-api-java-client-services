/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1.model;

/**
 * Message describing the user-specified automated backup policy. All fields in the automated backup
 * policy are optional. Defaults for each field are provided if they are not set.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutomatedBackupPolicy extends com.google.api.client.json.GenericJson {

  /**
   * The length of the time window during which a backup can be taken. If a backup does not succeed
   * within this time window, it will be canceled and considered failed. The backup window must be
   * at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1
   * hour.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String backupWindow;

  /**
   * Whether automated automated backups are enabled. If not set, defaults to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * Optional. The encryption config can be specified to encrypt the backups with a customer-managed
   * encryption key (CMEK). When this field is not specified, the backup will then use default
   * encryption scheme to protect the user data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EncryptionConfig encryptionConfig;

  /**
   * Labels to apply to backups created using this configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * The location where the backup will be stored. Currently, the only supported option is to store
   * the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Quantity-based Backup retention policy to retain recent backups.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QuantityBasedRetention quantityBasedRetention;

  /**
   * Time-based Backup retention policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeBasedRetention timeBasedRetention;

  /**
   * Weekly schedule for the Backup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WeeklySchedule weeklySchedule;

  /**
   * The length of the time window during which a backup can be taken. If a backup does not succeed
   * within this time window, it will be canceled and considered failed. The backup window must be
   * at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1
   * hour.
   * @return value or {@code null} for none
   */
  public String getBackupWindow() {
    return backupWindow;
  }

  /**
   * The length of the time window during which a backup can be taken. If a backup does not succeed
   * within this time window, it will be canceled and considered failed. The backup window must be
   * at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1
   * hour.
   * @param backupWindow backupWindow or {@code null} for none
   */
  public AutomatedBackupPolicy setBackupWindow(String backupWindow) {
    this.backupWindow = backupWindow;
    return this;
  }

  /**
   * Whether automated automated backups are enabled. If not set, defaults to true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Whether automated automated backups are enabled. If not set, defaults to true.
   * @param enabled enabled or {@code null} for none
   */
  public AutomatedBackupPolicy setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Optional. The encryption config can be specified to encrypt the backups with a customer-managed
   * encryption key (CMEK). When this field is not specified, the backup will then use default
   * encryption scheme to protect the user data.
   * @return value or {@code null} for none
   */
  public EncryptionConfig getEncryptionConfig() {
    return encryptionConfig;
  }

  /**
   * Optional. The encryption config can be specified to encrypt the backups with a customer-managed
   * encryption key (CMEK). When this field is not specified, the backup will then use default
   * encryption scheme to protect the user data.
   * @param encryptionConfig encryptionConfig or {@code null} for none
   */
  public AutomatedBackupPolicy setEncryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * Labels to apply to backups created using this configuration.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels to apply to backups created using this configuration.
   * @param labels labels or {@code null} for none
   */
  public AutomatedBackupPolicy setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * The location where the backup will be stored. Currently, the only supported option is to store
   * the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * The location where the backup will be stored. Currently, the only supported option is to store
   * the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
   * @param location location or {@code null} for none
   */
  public AutomatedBackupPolicy setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Quantity-based Backup retention policy to retain recent backups.
   * @return value or {@code null} for none
   */
  public QuantityBasedRetention getQuantityBasedRetention() {
    return quantityBasedRetention;
  }

  /**
   * Quantity-based Backup retention policy to retain recent backups.
   * @param quantityBasedRetention quantityBasedRetention or {@code null} for none
   */
  public AutomatedBackupPolicy setQuantityBasedRetention(QuantityBasedRetention quantityBasedRetention) {
    this.quantityBasedRetention = quantityBasedRetention;
    return this;
  }

  /**
   * Time-based Backup retention policy.
   * @return value or {@code null} for none
   */
  public TimeBasedRetention getTimeBasedRetention() {
    return timeBasedRetention;
  }

  /**
   * Time-based Backup retention policy.
   * @param timeBasedRetention timeBasedRetention or {@code null} for none
   */
  public AutomatedBackupPolicy setTimeBasedRetention(TimeBasedRetention timeBasedRetention) {
    this.timeBasedRetention = timeBasedRetention;
    return this;
  }

  /**
   * Weekly schedule for the Backup.
   * @return value or {@code null} for none
   */
  public WeeklySchedule getWeeklySchedule() {
    return weeklySchedule;
  }

  /**
   * Weekly schedule for the Backup.
   * @param weeklySchedule weeklySchedule or {@code null} for none
   */
  public AutomatedBackupPolicy setWeeklySchedule(WeeklySchedule weeklySchedule) {
    this.weeklySchedule = weeklySchedule;
    return this;
  }

  @Override
  public AutomatedBackupPolicy set(String fieldName, Object value) {
    return (AutomatedBackupPolicy) super.set(fieldName, value);
  }

  @Override
  public AutomatedBackupPolicy clone() {
    return (AutomatedBackupPolicy) super.clone();
  }

}
