/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigee.v1.model;

/**
 * Model definition for GoogleCloudApigeeV1SyncAuthorization.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Apigee API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudApigeeV1SyncAuthorization extends com.google.api.client.json.GenericJson {

  /**
   * Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous
   * updates from overwriting each other. For example, when you call
   * [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response.
   * Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to
   * ensure that you are updating the correct version. If you don't pass the ETag in the call to
   * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately.
   * **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid
   * race conditions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Required. Array of service accounts to grant access to control plane resources, each specified
   * using the following format: `serviceAccount:` service-account-name. The service-account-name is
   * formatted like an email address. For example: `my-synchronizer-manager-
   * service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service
   * accounts, for example, if you have multiple environments and wish to assign a unique service
   * account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See
   * also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about
   * #create-the-service-accounts).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> identities;

  /**
   * Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous
   * updates from overwriting each other. For example, when you call
   * [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response.
   * Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to
   * ensure that you are updating the correct version. If you don't pass the ETag in the call to
   * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately.
   * **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid
   * race conditions.
   * @see #decodeEtag()
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous
   * updates from overwriting each other. For example, when you call
   * [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response.
   * Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to
   * ensure that you are updating the correct version. If you don't pass the ETag in the call to
   * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately.
   * **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid
   * race conditions.
   * @see #getEtag()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeEtag() {
    return com.google.api.client.util.Base64.decodeBase64(etag);
  }

  /**
   * Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous
   * updates from overwriting each other. For example, when you call
   * [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response.
   * Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to
   * ensure that you are updating the correct version. If you don't pass the ETag in the call to
   * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately.
   * **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid
   * race conditions.
   * @see #encodeEtag()
   * @param etag etag or {@code null} for none
   */
  public GoogleCloudApigeeV1SyncAuthorization setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous
   * updates from overwriting each other. For example, when you call
   * [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response.
   * Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to
   * ensure that you are updating the correct version. If you don't pass the ETag in the call to
   * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately.
   * **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid
   * race conditions.
   * @see #setEtag()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleCloudApigeeV1SyncAuthorization encodeEtag(byte[] etag) {
    this.etag = com.google.api.client.util.Base64.encodeBase64URLSafeString(etag);
    return this;
  }

  /**
   * Required. Array of service accounts to grant access to control plane resources, each specified
   * using the following format: `serviceAccount:` service-account-name. The service-account-name is
   * formatted like an email address. For example: `my-synchronizer-manager-
   * service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service
   * accounts, for example, if you have multiple environments and wish to assign a unique service
   * account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See
   * also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about
   * #create-the-service-accounts).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIdentities() {
    return identities;
  }

  /**
   * Required. Array of service accounts to grant access to control plane resources, each specified
   * using the following format: `serviceAccount:` service-account-name. The service-account-name is
   * formatted like an email address. For example: `my-synchronizer-manager-
   * service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service
   * accounts, for example, if you have multiple environments and wish to assign a unique service
   * account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See
   * also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about
   * #create-the-service-accounts).
   * @param identities identities or {@code null} for none
   */
  public GoogleCloudApigeeV1SyncAuthorization setIdentities(java.util.List<java.lang.String> identities) {
    this.identities = identities;
    return this;
  }

  @Override
  public GoogleCloudApigeeV1SyncAuthorization set(String fieldName, Object value) {
    return (GoogleCloudApigeeV1SyncAuthorization) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudApigeeV1SyncAuthorization clone() {
    return (GoogleCloudApigeeV1SyncAuthorization) super.clone();
  }

}
