/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1;

/**
 * Service definition for Networkconnectivity (v1).
 *
 * <p>
 * This API enables connectivity with and between Google Cloud resources.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link NetworkconnectivityRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Networkconnectivity extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Network Connectivity API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://networkconnectivity.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://networkconnectivity.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Networkconnectivity(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Networkconnectivity(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
   *   {@code Networkconnectivity.Projects.List request = networkconnectivity.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
     *   {@code Networkconnectivity.Locations.List request = networkconnectivity.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the networkconnectivity server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the networkconnectivity server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the networkconnectivity server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the networkconnectivity server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Global collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.Global.List request = networkconnectivity.global().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Global global() {
        return new Global();
      }

      /**
       * The "global" collection of methods.
       */
      public class Global {

        /**
         * An accessor for creating requests from the Hubs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
         *   {@code Networkconnectivity.Hubs.List request = networkconnectivity.hubs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Hubs hubs() {
          return new Hubs();
        }

        /**
         * The "hubs" collection of methods.
         */
        public class Hubs {

          /**
           * Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
           *
           * Create a request for the method "hubs.acceptSpoke".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link AcceptSpoke#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the hub into which to accept the spoke.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.AcceptHubSpokeRequest}
           * @return the request
           */
          public AcceptSpoke acceptSpoke(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.AcceptHubSpokeRequest content) throws java.io.IOException {
            AcceptSpoke result = new AcceptSpoke(name, content);
            initialize(result);
            return result;
          }

          public class AcceptSpoke extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:acceptSpoke";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
             *
             * Create a request for the method "hubs.acceptSpoke".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link AcceptSpoke#execute()} method to invoke the remote
             * operation. <p> {@link
             * AcceptSpoke#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub into which to accept the spoke.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.AcceptHubSpokeRequest}
             * @since 1.13
             */
            protected AcceptSpoke(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.AcceptHubSpokeRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public AcceptSpoke set$Xgafv(java.lang.String $Xgafv) {
              return (AcceptSpoke) super.set$Xgafv($Xgafv);
            }

            @Override
            public AcceptSpoke setAccessToken(java.lang.String accessToken) {
              return (AcceptSpoke) super.setAccessToken(accessToken);
            }

            @Override
            public AcceptSpoke setAlt(java.lang.String alt) {
              return (AcceptSpoke) super.setAlt(alt);
            }

            @Override
            public AcceptSpoke setCallback(java.lang.String callback) {
              return (AcceptSpoke) super.setCallback(callback);
            }

            @Override
            public AcceptSpoke setFields(java.lang.String fields) {
              return (AcceptSpoke) super.setFields(fields);
            }

            @Override
            public AcceptSpoke setKey(java.lang.String key) {
              return (AcceptSpoke) super.setKey(key);
            }

            @Override
            public AcceptSpoke setOauthToken(java.lang.String oauthToken) {
              return (AcceptSpoke) super.setOauthToken(oauthToken);
            }

            @Override
            public AcceptSpoke setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AcceptSpoke) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AcceptSpoke setQuotaUser(java.lang.String quotaUser) {
              return (AcceptSpoke) super.setQuotaUser(quotaUser);
            }

            @Override
            public AcceptSpoke setUploadType(java.lang.String uploadType) {
              return (AcceptSpoke) super.setUploadType(uploadType);
            }

            @Override
            public AcceptSpoke setUploadProtocol(java.lang.String uploadProtocol) {
              return (AcceptSpoke) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub into which to accept the spoke. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub into which to accept the spoke.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub into which to accept the spoke. */
            public AcceptSpoke setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public AcceptSpoke set(String parameterName, Object value) {
              return (AcceptSpoke) super.set(parameterName, value);
            }
          }
          /**
           * Creates a new Network Connectivity Center hub in the specified project.
           *
           * Create a request for the method "hubs.create".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Hub}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.Hub content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/hubs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Creates a new Network Connectivity Center hub in the specified project.
             *
             * Create a request for the method "hubs.create".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Create#execute()} method to invoke the remote
             * operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Hub}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.Hub content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. A unique identifier for the hub. */
            @com.google.api.client.util.Key
            private java.lang.String hubId;

            /** Required. A unique identifier for the hub.
             */
            public java.lang.String getHubId() {
              return hubId;
            }

            /** Required. A unique identifier for the hub. */
            public Create setHubId(java.lang.String hubId) {
              this.hubId = hubId;
              return this;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
           your request, the server knows to ignore the request if it has already been completed. The server
           guarantees that a request doesn't result in creation of duplicate commitments for at least 60
           minutes. For example, consider a situation where you make an initial request and the request times
           out. If you make the request again with the same request ID, the server can check to see whether
           the original operation was received. If it was, the server ignores the second request. This
           behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
           valid UUID, with the exception that zero UUID is not supported
           (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a Network Connectivity Center hub.
           *
           * Create a request for the method "hubs.delete".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the hub to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Deletes a Network Connectivity Center hub.
             *
             * Create a request for the method "hubs.delete".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
           your request, the server knows to ignore the request if it has already been completed. The server
           guarantees that a request doesn't result in creation of duplicate commitments for at least 60
           minutes. For example, consider a situation where you make an initial request and the request times
           out. If you make the request again with the same request ID, the server can check to see whether
           the original operation was received. If it was, the server ignores the second request. This
           behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
           valid UUID, with the exception that zero UUID is not supported
           (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details about a Network Connectivity Center hub.
           *
           * Create a request for the method "hubs.get".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the hub resource to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Hub> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Gets details about a Network Connectivity Center hub.
             *
             * Create a request for the method "hubs.get".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub resource to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Hub.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub resource to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub resource to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub resource to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "hubs.getIamPolicy".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "hubs.getIamPolicy".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists the Network Connectivity Center hubs associated with a given project.
           *
           * Create a request for the method "hubs.list".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource's name.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListHubsResponse> {

            private static final String REST_PATH = "v1/{+parent}/hubs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Lists the Network Connectivity Center hubs associated with a given project.
             *
             * Create a request for the method "hubs.list".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource's name.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListHubsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource's name. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource's name.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource's name. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** An expression that filters the list of results. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that filters the list of results.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** An expression that filters the list of results. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort the results by a certain order. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort the results by a certain order.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort the results by a certain order. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The maximum number of results per page to return. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of results per page to return.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of results per page to return. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Lists the Network Connectivity Center spokes associated with a specified hub and location. The
           * list includes both spokes that are attached to the hub and spokes that have been proposed but not
           * yet accepted.
           *
           * Create a request for the method "hubs.listSpokes".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link ListSpokes#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the hub.
           * @return the request
           */
          public ListSpokes listSpokes(java.lang.String name) throws java.io.IOException {
            ListSpokes result = new ListSpokes(name);
            initialize(result);
            return result;
          }

          public class ListSpokes extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListHubSpokesResponse> {

            private static final String REST_PATH = "v1/{+name}:listSpokes";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Lists the Network Connectivity Center spokes associated with a specified hub and location. The
             * list includes both spokes that are attached to the hub and spokes that have been proposed but
             * not yet accepted.
             *
             * Create a request for the method "hubs.listSpokes".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link ListSpokes#execute()} method to invoke the remote
             * operation. <p> {@link
             * ListSpokes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub.
             * @since 1.13
             */
            protected ListSpokes(java.lang.String name) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListHubSpokesResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListSpokes set$Xgafv(java.lang.String $Xgafv) {
              return (ListSpokes) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListSpokes setAccessToken(java.lang.String accessToken) {
              return (ListSpokes) super.setAccessToken(accessToken);
            }

            @Override
            public ListSpokes setAlt(java.lang.String alt) {
              return (ListSpokes) super.setAlt(alt);
            }

            @Override
            public ListSpokes setCallback(java.lang.String callback) {
              return (ListSpokes) super.setCallback(callback);
            }

            @Override
            public ListSpokes setFields(java.lang.String fields) {
              return (ListSpokes) super.setFields(fields);
            }

            @Override
            public ListSpokes setKey(java.lang.String key) {
              return (ListSpokes) super.setKey(key);
            }

            @Override
            public ListSpokes setOauthToken(java.lang.String oauthToken) {
              return (ListSpokes) super.setOauthToken(oauthToken);
            }

            @Override
            public ListSpokes setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListSpokes) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListSpokes setQuotaUser(java.lang.String quotaUser) {
              return (ListSpokes) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListSpokes setUploadType(java.lang.String uploadType) {
              return (ListSpokes) super.setUploadType(uploadType);
            }

            @Override
            public ListSpokes setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListSpokes) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub. */
            public ListSpokes setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** An expression that filters the list of results. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that filters the list of results.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** An expression that filters the list of results. */
            public ListSpokes setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort the results by name or create_time. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort the results by name or create_time.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort the results by name or create_time. */
            public ListSpokes setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The maximum number of results to return per page. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of results to return per page.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of results to return per page. */
            public ListSpokes setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The page token. */
            public ListSpokes setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * A list of locations. Specify one of the following: `[global]`, a single region (for
             * example, `[us-central1]`), or a combination of values (for example, `[global, us-
             * central1, us-west1]`). If the spoke_locations field is populated, the list of results
             * includes only spokes in the specified location. If the spoke_locations field is not
             * populated, the list of results includes spokes in all locations.
             */
            @com.google.api.client.util.Key
            private java.util.List<java.lang.String> spokeLocations;

            /** A list of locations. Specify one of the following: `[global]`, a single region (for example, `[us-
           central1]`), or a combination of values (for example, `[global, us-central1, us-west1]`). If the
           spoke_locations field is populated, the list of results includes only spokes in the specified
           location. If the spoke_locations field is not populated, the list of results includes spokes in all
           locations.
             */
            public java.util.List<java.lang.String> getSpokeLocations() {
              return spokeLocations;
            }

            /**
             * A list of locations. Specify one of the following: `[global]`, a single region (for
             * example, `[us-central1]`), or a combination of values (for example, `[global, us-
             * central1, us-west1]`). If the spoke_locations field is populated, the list of results
             * includes only spokes in the specified location. If the spoke_locations field is not
             * populated, the list of results includes spokes in all locations.
             */
            public ListSpokes setSpokeLocations(java.util.List<java.lang.String> spokeLocations) {
              this.spokeLocations = spokeLocations;
              return this;
            }

            /**
             * The view of the spoke to return. The view that you use determines which spoke fields
             * are included in the response.
             */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** The view of the spoke to return. The view that you use determines which spoke fields are included
           in the response.
             */
            public java.lang.String getView() {
              return view;
            }

            /**
             * The view of the spoke to return. The view that you use determines which spoke fields
             * are included in the response.
             */
            public ListSpokes setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public ListSpokes set(String parameterName, Object value) {
              return (ListSpokes) super.set(parameterName, value);
            }
          }
          /**
           * Updates the description and/or labels of a Network Connectivity Center hub.
           *
           * Create a request for the method "hubs.patch".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The name of the hub. Hub names must be unique. They use the following form:
           *        `projects/{project_number}/locations/global/hubs/{hub_id}`
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Hub}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Hub content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Updates the description and/or labels of a Network Connectivity Center hub.
             *
             * Create a request for the method "hubs.patch".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
             * operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The name of the hub. Hub names must be unique. They use the following form:
           *        `projects/{project_number}/locations/global/hubs/{hub_id}`
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Hub}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Hub content) {
              super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The name of the hub. Hub names must be unique. They use the following
             * form: `projects/{project_number}/locations/global/hubs/{hub_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The name of the hub. Hub names must be unique. They use the following form:
           `projects/{project_number}/locations/global/hubs/{hub_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The name of the hub. Hub names must be unique. They use the following
             * form: `projects/{project_number}/locations/global/hubs/{hub_id}`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
           your request, the server knows to ignore the request if it has already been completed. The server
           guarantees that a request doesn't result in creation of duplicate commitments for at least 60
           minutes. For example, consider a situation where you make an initial request and the request times
           out. If you make the request again with the same request ID, the server can check to see whether
           the original operation was received. If it was, the server ignores the second request. This
           behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
           valid UUID, with the exception that zero UUID is not supported
           (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server knows to ignore the request if it has already
             * been completed. The server guarantees that a request doesn't result in creation of
             * duplicate commitments for at least 60 minutes. For example, consider a situation
             * where you make an initial request and the request times out. If you make the request
             * again with the same request ID, the server can check to see whether the original
             * operation was received. If it was, the server ignores the second request. This
             * behavior prevents clients from mistakenly creating duplicate commitments. The request
             * ID must be a valid UUID, with the exception that zero UUID is not supported
             * (00000000-0000-0000-0000-000000000000).
             */
            public Patch setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            /**
             * Optional. In the case of an update to an existing hub, field mask is used to specify
             * the fields to be overwritten. The fields specified in the update_mask are relative to
             * the resource, not the full request. A field is overwritten if it is in the mask. If
             * the user does not provide a mask, then all fields are overwritten.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. In the case of an update to an existing hub, field mask is used to specify the fields to
           be overwritten. The fields specified in the update_mask are relative to the resource, not the full
           request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all
           fields are overwritten.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. In the case of an update to an existing hub, field mask is used to specify
             * the fields to be overwritten. The fields specified in the update_mask are relative to
             * the resource, not the full request. A field is overwritten if it is in the mask. If
             * the user does not provide a mask, then all fields are overwritten.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Query the Private Service Connect propagation status of a Network Connectivity Center hub.
           *
           * Create a request for the method "hubs.queryStatus".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link QueryStatus#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the hub.
           * @return the request
           */
          public QueryStatus queryStatus(java.lang.String name) throws java.io.IOException {
            QueryStatus result = new QueryStatus(name);
            initialize(result);
            return result;
          }

          public class QueryStatus extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.QueryHubStatusResponse> {

            private static final String REST_PATH = "v1/{+name}:queryStatus";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Query the Private Service Connect propagation status of a Network Connectivity Center hub.
             *
             * Create a request for the method "hubs.queryStatus".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link QueryStatus#execute()} method to invoke the remote
             * operation. <p> {@link
             * QueryStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub.
             * @since 1.13
             */
            protected QueryStatus(java.lang.String name) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.QueryHubStatusResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public QueryStatus set$Xgafv(java.lang.String $Xgafv) {
              return (QueryStatus) super.set$Xgafv($Xgafv);
            }

            @Override
            public QueryStatus setAccessToken(java.lang.String accessToken) {
              return (QueryStatus) super.setAccessToken(accessToken);
            }

            @Override
            public QueryStatus setAlt(java.lang.String alt) {
              return (QueryStatus) super.setAlt(alt);
            }

            @Override
            public QueryStatus setCallback(java.lang.String callback) {
              return (QueryStatus) super.setCallback(callback);
            }

            @Override
            public QueryStatus setFields(java.lang.String fields) {
              return (QueryStatus) super.setFields(fields);
            }

            @Override
            public QueryStatus setKey(java.lang.String key) {
              return (QueryStatus) super.setKey(key);
            }

            @Override
            public QueryStatus setOauthToken(java.lang.String oauthToken) {
              return (QueryStatus) super.setOauthToken(oauthToken);
            }

            @Override
            public QueryStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (QueryStatus) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public QueryStatus setQuotaUser(java.lang.String quotaUser) {
              return (QueryStatus) super.setQuotaUser(quotaUser);
            }

            @Override
            public QueryStatus setUploadType(java.lang.String uploadType) {
              return (QueryStatus) super.setUploadType(uploadType);
            }

            @Override
            public QueryStatus setUploadProtocol(java.lang.String uploadProtocol) {
              return (QueryStatus) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub. */
            public QueryStatus setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. An expression that filters the list of results. The filter can be used to
             * filter the results by the following fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code` * `psc_propagation_status.message`
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. An expression that filters the list of results. The filter can be used to filter the
           results by the following fields: * `psc_propagation_status.source_spoke` *
           `psc_propagation_status.source_group` * `psc_propagation_status.source_forwarding_rule` *
           `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
           `psc_propagation_status.code` * `psc_propagation_status.message`
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. An expression that filters the list of results. The filter can be used to
             * filter the results by the following fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code` * `psc_propagation_status.message`
             */
            public QueryStatus setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. Aggregate the results by the specified fields. A comma-separated list of
             * any of these fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code`
             */
            @com.google.api.client.util.Key
            private java.lang.String groupBy;

            /** Optional. Aggregate the results by the specified fields. A comma-separated list of any of these
           fields: * `psc_propagation_status.source_spoke` * `psc_propagation_status.source_group` *
           `psc_propagation_status.source_forwarding_rule` * `psc_propagation_status.target_spoke` *
           `psc_propagation_status.target_group` * `psc_propagation_status.code`
             */
            public java.lang.String getGroupBy() {
              return groupBy;
            }

            /**
             * Optional. Aggregate the results by the specified fields. A comma-separated list of
             * any of these fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code`
             */
            public QueryStatus setGroupBy(java.lang.String groupBy) {
              this.groupBy = groupBy;
              return this;
            }

            /**
             * Optional. Sort the results in ascending order by the specified fields. A comma-
             * separated list of any of these fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code` If `group_by` is set, the value of the `order_by` field
             * must be the same as or a subset of the `group_by` field.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. Sort the results in ascending order by the specified fields. A comma-separated list of
           any of these fields: * `psc_propagation_status.source_spoke` *
           `psc_propagation_status.source_group` * `psc_propagation_status.source_forwarding_rule` *
           `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
           `psc_propagation_status.code` If `group_by` is set, the value of the `order_by` field must be the
           same as or a subset of the `group_by` field.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. Sort the results in ascending order by the specified fields. A comma-
             * separated list of any of these fields: * `psc_propagation_status.source_spoke` *
             * `psc_propagation_status.source_group` *
             * `psc_propagation_status.source_forwarding_rule` *
             * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` *
             * `psc_propagation_status.code` If `group_by` is set, the value of the `order_by` field
             * must be the same as or a subset of the `group_by` field.
             */
            public QueryStatus setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** Optional. The maximum number of results to return per page. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of results to return per page.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Optional. The maximum number of results to return per page. */
            public QueryStatus setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. The page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. The page token. */
            public QueryStatus setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public QueryStatus set(String parameterName, Object value) {
              return (QueryStatus) super.set(parameterName, value);
            }
          }
          /**
           * Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was
           * previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to
           * connect to other spokes that are attached to the hub.
           *
           * Create a request for the method "hubs.rejectSpoke".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link RejectSpoke#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the hub from which to reject the spoke.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.RejectHubSpokeRequest}
           * @return the request
           */
          public RejectSpoke rejectSpoke(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.RejectHubSpokeRequest content) throws java.io.IOException {
            RejectSpoke result = new RejectSpoke(name, content);
            initialize(result);
            return result;
          }

          public class RejectSpoke extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}:rejectSpoke";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was
             * previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able
             * to connect to other spokes that are attached to the hub.
             *
             * Create a request for the method "hubs.rejectSpoke".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link RejectSpoke#execute()} method to invoke the remote
             * operation. <p> {@link
             * RejectSpoke#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the hub from which to reject the spoke.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.RejectHubSpokeRequest}
             * @since 1.13
             */
            protected RejectSpoke(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.RejectHubSpokeRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public RejectSpoke set$Xgafv(java.lang.String $Xgafv) {
              return (RejectSpoke) super.set$Xgafv($Xgafv);
            }

            @Override
            public RejectSpoke setAccessToken(java.lang.String accessToken) {
              return (RejectSpoke) super.setAccessToken(accessToken);
            }

            @Override
            public RejectSpoke setAlt(java.lang.String alt) {
              return (RejectSpoke) super.setAlt(alt);
            }

            @Override
            public RejectSpoke setCallback(java.lang.String callback) {
              return (RejectSpoke) super.setCallback(callback);
            }

            @Override
            public RejectSpoke setFields(java.lang.String fields) {
              return (RejectSpoke) super.setFields(fields);
            }

            @Override
            public RejectSpoke setKey(java.lang.String key) {
              return (RejectSpoke) super.setKey(key);
            }

            @Override
            public RejectSpoke setOauthToken(java.lang.String oauthToken) {
              return (RejectSpoke) super.setOauthToken(oauthToken);
            }

            @Override
            public RejectSpoke setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (RejectSpoke) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public RejectSpoke setQuotaUser(java.lang.String quotaUser) {
              return (RejectSpoke) super.setQuotaUser(quotaUser);
            }

            @Override
            public RejectSpoke setUploadType(java.lang.String uploadType) {
              return (RejectSpoke) super.setUploadType(uploadType);
            }

            @Override
            public RejectSpoke setUploadProtocol(java.lang.String uploadProtocol) {
              return (RejectSpoke) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the hub from which to reject the spoke. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the hub from which to reject the spoke.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the hub from which to reject the spoke. */
            public RejectSpoke setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public RejectSpoke set(String parameterName, Object value) {
              return (RejectSpoke) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "hubs.setIamPolicy".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "hubs.setIamPolicy".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "hubs.testIamPermissions".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "hubs.testIamPermissions".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
             * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
             * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/hubs/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Groups collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
           *   {@code Networkconnectivity.Groups.List request = networkconnectivity.groups().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Groups groups() {
            return new Groups();
          }

          /**
           * The "groups" collection of methods.
           */
          public class Groups {

            /**
             * Gets details about a Network Connectivity Center group.
             *
             * Create a request for the method "groups.get".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the route table resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Group> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");

              /**
               * Gets details about a Network Connectivity Center group.
               *
               * Create a request for the method "groups.get".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               * <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the route table resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Group.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the route table resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the route table resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the route table resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "groups.getIamPolicy".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "groups.getIamPolicy".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset. The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
             which resources support conditions in their IAM policies, see the [IAM
             documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Lists groups in a given hub.
             *
             * Create a request for the method "groups.list".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource's name.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListGroupsResponse> {

              private static final String REST_PATH = "v1/{+parent}/groups";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

              /**
               * Lists groups in a given hub.
               *
               * Create a request for the method "groups.list".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               * <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource's name.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListGroupsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent resource's name. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource's name.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent resource's name. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** An expression that filters the list of results. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that filters the list of results.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** An expression that filters the list of results. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Sort the results by a certain order. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Sort the results by a certain order.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Sort the results by a certain order. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /** The maximum number of results to return per page. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of results to return per page.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The maximum number of results to return per page. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the parameters of a Network Connectivity Center group.
             *
             * Create a request for the method "groups.patch".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Immutable. The name of the group. Group names must be unique. They use the following form:
             *        `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Group}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Group content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");

              /**
               * Updates the parameters of a Network Connectivity Center group.
               *
               * Create a request for the method "groups.patch".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
               * operation. <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Immutable. The name of the group. Group names must be unique. They use the following form:
             *        `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
               * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Group}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Group content) {
                super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Immutable. The name of the group. Group names must be unique. They use the
               * following form:
               * `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Immutable. The name of the group. Group names must be unique. They use the following form:
             `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Immutable. The name of the group. Group names must be unique. They use the
               * following form:
               * `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Optional. A request ID to identify requests. Specify a unique request ID so that if
               * you must retry your request, the server knows to ignore the request if it has
               * already been completed. The server guarantees that a request doesn't result in
               * creation of duplicate commitments for at least 60 minutes. For example, consider a
               * situation where you make an initial request and the request times out. If you make
               * the request again with the same request ID, the server can check to see whether the
               * original operation was received. If it was, the server ignores the second request.
               * This behavior prevents clients from mistakenly creating duplicate commitments. The
               * request ID must be a valid UUID, with the exception that zero UUID is not supported
               * (00000000-0000-0000-0000-000000000000).
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
             your request, the server knows to ignore the request if it has already been completed. The server
             guarantees that a request doesn't result in creation of duplicate commitments for at least 60
             minutes. For example, consider a situation where you make an initial request and the request times
             out. If you make the request again with the same request ID, the server can check to see whether
             the original operation was received. If it was, the server ignores the second request. This
             behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
             valid UUID, with the exception that zero UUID is not supported
             (00000000-0000-0000-0000-000000000000).
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * Optional. A request ID to identify requests. Specify a unique request ID so that if
               * you must retry your request, the server knows to ignore the request if it has
               * already been completed. The server guarantees that a request doesn't result in
               * creation of duplicate commitments for at least 60 minutes. For example, consider a
               * situation where you make an initial request and the request times out. If you make
               * the request again with the same request ID, the server can check to see whether the
               * original operation was received. If it was, the server ignores the second request.
               * This behavior prevents clients from mistakenly creating duplicate commitments. The
               * request ID must be a valid UUID, with the exception that zero UUID is not supported
               * (00000000-0000-0000-0000-000000000000).
               */
              public Patch setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              /**
               * Optional. In the case of an update to an existing group, field mask is used to
               * specify the fields to be overwritten. The fields specified in the update_mask are
               * relative to the resource, not the full request. A field is overwritten if it is in
               * the mask. If the user does not provide a mask, then all fields are overwritten.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Optional. In the case of an update to an existing group, field mask is used to specify the fields
             to be overwritten. The fields specified in the update_mask are relative to the resource, not the
             full request. A field is overwritten if it is in the mask. If the user does not provide a mask,
             then all fields are overwritten.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Optional. In the case of an update to an existing group, field mask is used to
               * specify the fields to be overwritten. The fields specified in the update_mask are
               * relative to the resource, not the full request. A field is overwritten if it is in
               * the mask. If the user does not provide a mask, then all fields are overwritten.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "groups.setIamPolicy".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "groups.setIamPolicy".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
                super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "groups.testIamPermissions".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "groups.testIamPermissions".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
               * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
               * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
                super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the RouteTables collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
           *   {@code Networkconnectivity.RouteTables.List request = networkconnectivity.routeTables().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public RouteTables routeTables() {
            return new RouteTables();
          }

          /**
           * The "routeTables" collection of methods.
           */
          public class RouteTables {

            /**
             * Gets details about a Network Connectivity Center route table.
             *
             * Create a request for the method "routeTables.get".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the route table resource.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.RouteTable> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");

              /**
               * Gets details about a Network Connectivity Center route table.
               *
               * Create a request for the method "routeTables.get".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               * <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the route table resource.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.RouteTable.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the route table resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the route table resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the route table resource. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists route tables in a given hub.
             *
             * Create a request for the method "routeTables.list".
             *
             * This request holds the parameters needed by the networkconnectivity server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent resource's name.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListRouteTablesResponse> {

              private static final String REST_PATH = "v1/{+parent}/routeTables";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+$");

              /**
               * Lists route tables in a given hub.
               *
               * Create a request for the method "routeTables.list".
               *
               * This request holds the parameters needed by the the networkconnectivity server.  After setting
               * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               * <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent resource's name.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListRouteTablesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent resource's name. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent resource's name.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent resource's name. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/hubs/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** An expression that filters the list of results. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that filters the list of results.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** An expression that filters the list of results. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Sort the results by a certain order. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Sort the results by a certain order.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Sort the results by a certain order. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /** The maximum number of results to return per page. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of results to return per page.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The maximum number of results to return per page. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The page token. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The page token. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Routes collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
             *   {@code Networkconnectivity.Routes.List request = networkconnectivity.routes().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Routes routes() {
              return new Routes();
            }

            /**
             * The "routes" collection of methods.
             */
            public class Routes {

              /**
               * Gets details about the specified route.
               *
               * Create a request for the method "routes.get".
               *
               * This request holds the parameters needed by the networkconnectivity server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the route resource.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Route> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$");

                /**
                 * Gets details about the specified route.
                 *
                 * Create a request for the method "routes.get".
                 *
                 * This request holds the parameters needed by the the networkconnectivity server.  After setting
                 * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the route resource.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Route.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** Required. The name of the route resource. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the route resource.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Required. The name of the route resource. */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists routes in a given route table.
               *
               * Create a request for the method "routes.list".
               *
               * This request holds the parameters needed by the networkconnectivity server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent resource's name.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListRoutesResponse> {

                private static final String REST_PATH = "v1/{+parent}/routes";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");

                /**
                 * Lists routes in a given route table.
                 *
                 * Create a request for the method "routes.list".
                 *
                 * This request holds the parameters needed by the the networkconnectivity server.  After setting
                 * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent resource's name.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListRoutesResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /** Required. The parent resource's name. */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent resource's name.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /** Required. The parent resource's name. */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /** An expression that filters the list of results. */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** An expression that filters the list of results.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /** An expression that filters the list of results. */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /** Sort the results by a certain order. */
                @com.google.api.client.util.Key
                private java.lang.String orderBy;

                /** Sort the results by a certain order.
                 */
                public java.lang.String getOrderBy() {
                  return orderBy;
                }

                /** Sort the results by a certain order. */
                public List setOrderBy(java.lang.String orderBy) {
                  this.orderBy = orderBy;
                  return this;
                }

                /** The maximum number of results to return per page. */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The maximum number of results to return per page.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /** The maximum number of results to return per page. */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /** The page token. */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** The page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /** The page token. */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
        }
        /**
         * An accessor for creating requests from the PolicyBasedRoutes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
         *   {@code Networkconnectivity.PolicyBasedRoutes.List request = networkconnectivity.policyBasedRoutes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public PolicyBasedRoutes policyBasedRoutes() {
          return new PolicyBasedRoutes();
        }

        /**
         * The "policyBasedRoutes" collection of methods.
         */
        public class PolicyBasedRoutes {

          /**
           * Creates a new policy-based route in a given project and location.
           *
           * Create a request for the method "policyBasedRoutes.create".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource's name of the PolicyBasedRoute.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/policyBasedRoutes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Creates a new policy-based route in a given project and location.
             *
             * Create a request for the method "policyBasedRoutes.create".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Create#execute()} method to invoke the remote
             * operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource's name of the PolicyBasedRoute.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource's name of the PolicyBasedRoute. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource's name of the PolicyBasedRoute.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource's name of the PolicyBasedRoute. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. Unique id for the policy-based route to create. */
            @com.google.api.client.util.Key
            private java.lang.String policyBasedRouteId;

            /** Required. Unique id for the policy-based route to create.
             */
            public java.lang.String getPolicyBasedRouteId() {
              return policyBasedRouteId;
            }

            /** Required. Unique id for the policy-based route to create. */
            public Create setPolicyBasedRouteId(java.lang.String policyBasedRouteId) {
              this.policyBasedRouteId = policyBasedRouteId;
              return this;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server knows to ignore the request if it has
             * already been completed. The server guarantees that for at least 60 minutes since the
             * first request. For example, consider a situation where you make an initial request
             * and the request times out. If you make the request again with the same request ID,
             * the server can check if original operation with the same request ID was received, and
             * if so, ignores the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
           must retry your request, the server knows to ignore the request if it has already been completed.
           The server guarantees that for at least 60 minutes since the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, ignores the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server knows to ignore the request if it has
             * already been completed. The server guarantees that for at least 60 minutes since the
             * first request. For example, consider a situation where you make an initial request
             * and the request times out. If you make the request again with the same request ID,
             * the server can check if original operation with the same request ID was received, and
             * if so, ignores the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single policy-based route.
           *
           * Create a request for the method "policyBasedRoutes.delete".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the policy-based route resource to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");

            /**
             * Deletes a single policy-based route.
             *
             * Create a request for the method "policyBasedRoutes.delete".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the policy-based route resource to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the policy-based route resource to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the policy-based route resource to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the policy-based route resource to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server knows to ignore the request if it has
             * already been completed. The server guarantees that for at least 60 minutes after the
             * first request. For example, consider a situation where you make an initial request
             * and the request times out. If you make the request again with the same request ID,
             * the server can check if original operation with the same request ID was received, and
             * if so, ignores the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
           must retry your request, the server knows to ignore the request if it has already been completed.
           The server guarantees that for at least 60 minutes after the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, ignores the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server knows to ignore the request if it has
             * already been completed. The server guarantees that for at least 60 minutes after the
             * first request. For example, consider a situation where you make an initial request
             * and the request times out. If you make the request again with the same request ID,
             * the server can check if original operation with the same request ID was received, and
             * if so, ignores the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single policy-based route.
           *
           * Create a request for the method "policyBasedRoutes.get".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the PolicyBasedRoute resource to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");

            /**
             * Gets details of a single policy-based route.
             *
             * Create a request for the method "policyBasedRoutes.get".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the PolicyBasedRoute resource to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.PolicyBasedRoute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the PolicyBasedRoute resource to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the PolicyBasedRoute resource to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the PolicyBasedRoute resource to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "policyBasedRoutes.getIamPolicy".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "policyBasedRoutes.getIamPolicy".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists policy-based routes in a given project and location.
           *
           * Create a request for the method "policyBasedRoutes.list".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource's name.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListPolicyBasedRoutesResponse> {

            private static final String REST_PATH = "v1/{+parent}/policyBasedRoutes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global$");

            /**
             * Lists policy-based routes in a given project and location.
             *
             * Create a request for the method "policyBasedRoutes.list".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource's name.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListPolicyBasedRoutesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource's name. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource's name.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource's name. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/global$");
              }
              this.parent = parent;
              return this;
            }

            /** A filter expression that filters the results listed in the response. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** A filter expression that filters the results listed in the response.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** A filter expression that filters the results listed in the response. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Sort the results by a certain order. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Sort the results by a certain order.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Sort the results by a certain order. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /** The maximum number of results per page that should be returned. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of results per page that should be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of results per page that should be returned. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "policyBasedRoutes.setIamPolicy".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "policyBasedRoutes.setIamPolicy".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "policyBasedRoutes.testIamPermissions".
           *
           * This request holds the parameters needed by the networkconnectivity server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "policyBasedRoutes.testIamPermissions".
             *
             * This request holds the parameters needed by the the networkconnectivity server.  After setting
             * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
             * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
             * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
              super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the InternalRanges collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.InternalRanges.List request = networkconnectivity.internalRanges().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public InternalRanges internalRanges() {
        return new InternalRanges();
      }

      /**
       * The "internalRanges" collection of methods.
       */
      public class InternalRanges {

        /**
         * Creates a new internal range in a given project and location.
         *
         * Create a request for the method "internalRanges.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the internal range.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.InternalRange}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.InternalRange content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/internalRanges";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new internal range in a given project and location.
           *
           * Create a request for the method "internalRanges.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the internal range.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.InternalRange}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.InternalRange content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name of the internal range. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the internal range.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name of the internal range. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo')
           * See https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          @com.google.api.client.util.Key
          private java.lang.String internalRangeId;

          /** Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See
         https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          public java.lang.String getInternalRangeId() {
            return internalRangeId;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo')
           * See https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          public Create setInternalRangeId(java.lang.String internalRangeId) {
            this.internalRangeId = internalRangeId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single internal range.
         *
         * Create a request for the method "internalRanges.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the internal range to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");

          /**
           * Deletes a single internal range.
           *
           * Create a request for the method "internalRanges.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the internal range to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the internal range to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the internal range to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the internal range to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single internal range.
         *
         * Create a request for the method "internalRanges.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the InternalRange to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.InternalRange> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");

          /**
           * Gets details of a single internal range.
           *
           * Create a request for the method "internalRanges.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the InternalRange to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.InternalRange.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the InternalRange to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the InternalRange to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the InternalRange to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists internal ranges in a given project and location.
         *
         * Create a request for the method "internalRanges.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListInternalRangesResponse> {

          private static final String REST_PATH = "v1/{+parent}/internalRanges";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists internal ranges in a given project and location.
           *
           * Create a request for the method "internalRanges.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListInternalRangesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results per page that should be returned. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results per page that should be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results per page that should be returned. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single internal range.
         *
         * Create a request for the method "internalRanges.patch".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The name of an internal range. Format:
         *        projects/{project}/locations/{location}/internalRanges/{internal_range} See:
         *        https://google.aip.dev/122#fields-representing-resource-names
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.InternalRange}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.InternalRange content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");

          /**
           * Updates the parameters of a single internal range.
           *
           * Create a request for the method "internalRanges.patch".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The name of an internal range. Format:
         *        projects/{project}/locations/{location}/internalRanges/{internal_range} See:
         *        https://google.aip.dev/122#fields-representing-resource-names
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.InternalRange}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.InternalRange content) {
            super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The name of an internal range. Format:
           * projects/{project}/locations/{location}/internalRanges/{internal_range} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The name of an internal range. Format:
         projects/{project}/locations/{location}/internalRanges/{internal_range} See:
         https://google.aip.dev/122#fields-representing-resource-names
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The name of an internal range. Format:
           * projects/{project}/locations/{location}/internalRanges/{internal_range} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * InternalRange resource by the update. The fields specified in the update_mask are
           * relative to the resource, not the full request. A field will be overwritten if it is in
           * the mask. If the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Field mask is used to specify the fields to be overwritten in the InternalRange resource
         by the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * InternalRange resource by the update. The fields specified in the update_mask are
           * relative to the resource, not the full request. A field will be overwritten if it is in
           * the mask. If the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.Operations.List request = networkconnectivity.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningCancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
           * operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningCancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningCancelOperationRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the RegionalEndpoints collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.RegionalEndpoints.List request = networkconnectivity.regionalEndpoints().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public RegionalEndpoints regionalEndpoints() {
        return new RegionalEndpoints();
      }

      /**
       * The "regionalEndpoints" collection of methods.
       */
      public class RegionalEndpoints {

        /**
         * Creates a new RegionalEndpoint in a given project and location.
         *
         * Create a request for the method "regionalEndpoints.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the RegionalEndpoint.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/regionalEndpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new RegionalEndpoint in a given project and location.
           *
           * Create a request for the method "regionalEndpoints.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the RegionalEndpoint.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name of the RegionalEndpoint. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the RegionalEndpoint.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name of the RegionalEndpoint. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Unique id of the Regional Endpoint to be created. */
          @com.google.api.client.util.Key
          private java.lang.String regionalEndpointId;

          /** Required. Unique id of the Regional Endpoint to be created.
           */
          public java.lang.String getRegionalEndpointId() {
            return regionalEndpointId;
          }

          /** Required. Unique id of the Regional Endpoint to be created. */
          public Create setRegionalEndpointId(java.lang.String regionalEndpointId) {
            this.regionalEndpointId = regionalEndpointId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server knows to ignore the request if it has
           * already been completed. The server guarantees that for at least 60 minutes since the
           * first request. For example, consider a situation where you make an initial request and
           * the request times out. If you make the request again with the same request ID, the
           * server can check if the original operation with the same request ID was received, and
           * if so, ignores the second request. This prevents clients from accidentally creating
           * duplicate commitments. The request ID must be a valid UUID with the exception that zero
           * UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server knows to ignore the request if it has already been completed.
         The server guarantees that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if the original operation with the same
         request ID was received, and if so, ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server knows to ignore the request if it has
           * already been completed. The server guarantees that for at least 60 minutes since the
           * first request. For example, consider a situation where you make an initial request and
           * the request times out. If you make the request again with the same request ID, the
           * server can check if the original operation with the same request ID was received, and
           * if so, ignores the second request. This prevents clients from accidentally creating
           * duplicate commitments. The request ID must be a valid UUID with the exception that zero
           * UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single RegionalEndpoint.
         *
         * Create a request for the method "regionalEndpoints.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the RegionalEndpoint to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");

          /**
           * Deletes a single RegionalEndpoint.
           *
           * Create a request for the method "regionalEndpoints.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the RegionalEndpoint to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the RegionalEndpoint to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the RegionalEndpoint to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the RegionalEndpoint to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server knows to ignore the request if it has
           * already been completed. The server guarantees that for at least 60 minutes since the
           * first request. For example, consider a situation where you make an initial request and
           * the request times out. If you make the request again with the same request ID, the
           * server can check if the original operation with the same request ID was received, and
           * if so, ignores the second request. This prevents clients from accidentally creating
           * duplicate commitments. The request ID must be a valid UUID with the exception that zero
           * UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server knows to ignore the request if it has already been completed.
         The server guarantees that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if the original operation with the same
         request ID was received, and if so, ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server knows to ignore the request if it has
           * already been completed. The server guarantees that for at least 60 minutes since the
           * first request. For example, consider a situation where you make an initial request and
           * the request times out. If you make the request again with the same request ID, the
           * server can check if the original operation with the same request ID was received, and
           * if so, ignores the second request. This prevents clients from accidentally creating
           * duplicate commitments. The request ID must be a valid UUID with the exception that zero
           * UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single RegionalEndpoint.
         *
         * Create a request for the method "regionalEndpoints.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the RegionalEndpoint resource to get. Format:
         *        `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");

          /**
           * Gets details of a single RegionalEndpoint.
           *
           * Create a request for the method "regionalEndpoints.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the RegionalEndpoint resource to get. Format:
         *        `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.RegionalEndpoint.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the RegionalEndpoint resource to get. Format:
           * `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the RegionalEndpoint resource to get. Format:
         `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the RegionalEndpoint resource to get. Format:
           * `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists RegionalEndpoints in a given project and location.
         *
         * Create a request for the method "regionalEndpoints.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the RegionalEndpoint.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListRegionalEndpointsResponse> {

          private static final String REST_PATH = "v1/{+parent}/regionalEndpoints";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists RegionalEndpoints in a given project and location.
           *
           * Create a request for the method "regionalEndpoints.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the RegionalEndpoint.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListRegionalEndpointsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name of the RegionalEndpoint. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the RegionalEndpoint.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name of the RegionalEndpoint. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified,
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer items than requested. If unspecified, server will pick
         an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified,
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ServiceClasses collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.ServiceClasses.List request = networkconnectivity.serviceClasses().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ServiceClasses serviceClasses() {
        return new ServiceClasses();
      }

      /**
       * The "serviceClasses" collection of methods.
       */
      public class ServiceClasses {

        /**
         * Deletes a single ServiceClass.
         *
         * Create a request for the method "serviceClasses.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the ServiceClass to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Deletes a single ServiceClass.
           *
           * Create a request for the method "serviceClasses.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the ServiceClass to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the ServiceClass to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the ServiceClass to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the ServiceClass to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag is computed by the server, and may be sent on update and delete requests to
         ensure the client has an up-to-date value before proceeding.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single ServiceClass.
         *
         * Create a request for the method "serviceClasses.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the ServiceClass to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ServiceClass> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Gets details of a single ServiceClass.
           *
           * Create a request for the method "serviceClasses.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the ServiceClass to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ServiceClass.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the ServiceClass to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the ServiceClass to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the ServiceClass to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "serviceClasses.getIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "serviceClasses.getIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists ServiceClasses in a given project and location.
         *
         * Create a request for the method "serviceClasses.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListServiceClassesResponse> {

          private static final String REST_PATH = "v1/{+parent}/serviceClasses";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ServiceClasses in a given project and location.
           *
           * Create a request for the method "serviceClasses.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListServiceClassesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results per page that should be returned. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results per page that should be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results per page that should be returned. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single ServiceClass.
         *
         * Create a request for the method "serviceClasses.patch".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The name of a ServiceClass resource. Format:
         *        projects/{project}/locations/{location}/serviceClasses/{service_class} See:
         *        https://google.aip.dev/122#fields-representing-resource-names
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceClass}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceClass content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Updates the parameters of a single ServiceClass.
           *
           * Create a request for the method "serviceClasses.patch".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The name of a ServiceClass resource. Format:
         *        projects/{project}/locations/{location}/serviceClasses/{service_class} See:
         *        https://google.aip.dev/122#fields-representing-resource-names
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceClass}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceClass content) {
            super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The name of a ServiceClass resource. Format:
           * projects/{project}/locations/{location}/serviceClasses/{service_class} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The name of a ServiceClass resource. Format:
         projects/{project}/locations/{location}/serviceClasses/{service_class} See:
         https://google.aip.dev/122#fields-representing-resource-names
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The name of a ServiceClass resource. Format:
           * projects/{project}/locations/{location}/serviceClasses/{service_class} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceClass resource by the update. The fields specified in the update_mask are
           * relative to the resource, not the full request. A field will be overwritten if it is in
           * the mask. If the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Field mask is used to specify the fields to be overwritten in the ServiceClass resource
         by the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceClass resource by the update. The fields specified in the update_mask are
           * relative to the resource, not the full request. A field will be overwritten if it is in
           * the mask. If the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "serviceClasses.setIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "serviceClasses.setIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "serviceClasses.testIamPermissions".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "serviceClasses.testIamPermissions".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
           * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ServiceConnectionMaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.ServiceConnectionMaps.List request = networkconnectivity.serviceConnectionMaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ServiceConnectionMaps serviceConnectionMaps() {
        return new ServiceConnectionMaps();
      }

      /**
       * The "serviceConnectionMaps" collection of methods.
       */
      public class ServiceConnectionMaps {

        /**
         * Creates a new ServiceConnectionMap in a given project and location.
         *
         * Create a request for the method "serviceConnectionMaps.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-
         *        east1
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionMaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new ServiceConnectionMap in a given project and location.
           *
           * Create a request for the method "serviceConnectionMaps.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-
         *        east1
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionMap. ex.
           * projects/123/locations/us-east1
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-
         east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionMap. ex.
           * projects/123/locations/us-east1
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location. If one is not
           * provided, one will be generated.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceConnectionMapId;

          /** Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See
         https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one
         will be generated.
           */
          public java.lang.String getServiceConnectionMapId() {
            return serviceConnectionMapId;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location. If one is not
           * provided, one will be generated.
           */
          public Create setServiceConnectionMapId(java.lang.String serviceConnectionMapId) {
            this.serviceConnectionMapId = serviceConnectionMapId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single ServiceConnectionMap.
         *
         * Create a request for the method "serviceConnectionMaps.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the ServiceConnectionMap to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Deletes a single ServiceConnectionMap.
           *
           * Create a request for the method "serviceConnectionMaps.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the ServiceConnectionMap to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the ServiceConnectionMap to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the ServiceConnectionMap to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the ServiceConnectionMap to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag is computed by the server, and may be sent on update and delete requests to
         ensure the client has an up-to-date value before proceeding.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single ServiceConnectionMap.
         *
         * Create a request for the method "serviceConnectionMaps.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the ServiceConnectionMap to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Gets details of a single ServiceConnectionMap.
           *
           * Create a request for the method "serviceConnectionMaps.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the ServiceConnectionMap to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the ServiceConnectionMap to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the ServiceConnectionMap to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the ServiceConnectionMap to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "serviceConnectionMaps.getIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "serviceConnectionMaps.getIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists ServiceConnectionMaps in a given project and location.
         *
         * Create a request for the method "serviceConnectionMaps.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionMapsResponse> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionMaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ServiceConnectionMaps in a given project and location.
           *
           * Create a request for the method "serviceConnectionMaps.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionMapsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results per page that should be returned. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results per page that should be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results per page that should be returned. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single ServiceConnectionMap.
         *
         * Create a request for the method "serviceConnectionMaps.patch".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The name of a ServiceConnectionMap. Format:
         *        projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
         *        See: https://google.aip.dev/122#fields-representing-resource-names
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Updates the parameters of a single ServiceConnectionMap.
           *
           * Create a request for the method "serviceConnectionMaps.patch".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The name of a ServiceConnectionMap. Format:
         *        projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
         *        See: https://google.aip.dev/122#fields-representing-resource-names
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionMap content) {
            super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The name of a ServiceConnectionMap. Format:
           * projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
           * See: https://google.aip.dev/122#fields-representing-resource-names
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The name of a ServiceConnectionMap. Format:
         projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See:
         https://google.aip.dev/122#fields-representing-resource-names
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The name of a ServiceConnectionMap. Format:
           * projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
           * See: https://google.aip.dev/122#fields-representing-resource-names
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceConnectionMap resource by the update. The fields specified in the update_mask
           * are relative to the resource, not the full request. A field will be overwritten if it
           * is in the mask. If the user does not provide a mask then all fields will be
           * overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionMap
         resource by the update. The fields specified in the update_mask are relative to the resource, not
         the full request. A field will be overwritten if it is in the mask. If the user does not provide a
         mask then all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceConnectionMap resource by the update. The fields specified in the update_mask
           * are relative to the resource, not the full request. A field will be overwritten if it
           * is in the mask. If the user does not provide a mask then all fields will be
           * overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "serviceConnectionMaps.setIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "serviceConnectionMaps.setIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "serviceConnectionMaps.testIamPermissions".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "serviceConnectionMaps.testIamPermissions".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
           * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ServiceConnectionPolicies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.ServiceConnectionPolicies.List request = networkconnectivity.serviceConnectionPolicies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ServiceConnectionPolicies serviceConnectionPolicies() {
        return new ServiceConnectionPolicies();
      }

      /**
       * The "serviceConnectionPolicies" collection of methods.
       */
      public class ServiceConnectionPolicies {

        /**
         * Creates a new ServiceConnectionPolicy in a given project and location.
         *
         * Create a request for the method "serviceConnectionPolicies.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-
         *        east1
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new ServiceConnectionPolicy in a given project and location.
           *
           * Create a request for the method "serviceConnectionPolicies.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-
         *        east1
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionPolicy. ex.
           * projects/123/locations/us-east1
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-
         east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionPolicy. ex.
           * projects/123/locations/us-east1
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceConnectionPolicyId;

          /** Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo')
         See https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          public java.lang.String getServiceConnectionPolicyId() {
            return serviceConnectionPolicyId;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location.
           */
          public Create setServiceConnectionPolicyId(java.lang.String serviceConnectionPolicyId) {
            this.serviceConnectionPolicyId = serviceConnectionPolicyId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single ServiceConnectionPolicy.
         *
         * Create a request for the method "serviceConnectionPolicies.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the ServiceConnectionPolicy to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Deletes a single ServiceConnectionPolicy.
           *
           * Create a request for the method "serviceConnectionPolicies.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the ServiceConnectionPolicy to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the ServiceConnectionPolicy to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the ServiceConnectionPolicy to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the ServiceConnectionPolicy to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag is computed by the server, and may be sent on update and delete requests to
         ensure the client has an up-to-date value before proceeding.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single ServiceConnectionPolicy.
         *
         * Create a request for the method "serviceConnectionPolicies.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the ServiceConnectionPolicy to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Gets details of a single ServiceConnectionPolicy.
           *
           * Create a request for the method "serviceConnectionPolicies.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the ServiceConnectionPolicy to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the ServiceConnectionPolicy to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the ServiceConnectionPolicy to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the ServiceConnectionPolicy to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "serviceConnectionPolicies.getIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "serviceConnectionPolicies.getIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists ServiceConnectionPolicies in a given project and location.
         *
         * Create a request for the method "serviceConnectionPolicies.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionPoliciesResponse> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionPolicies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ServiceConnectionPolicies in a given project and location.
           *
           * Create a request for the method "serviceConnectionPolicies.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionPoliciesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results per page that should be returned. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results per page that should be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results per page that should be returned. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single ServiceConnectionPolicy.
         *
         * Create a request for the method "serviceConnectionPolicies.patch".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The name of a ServiceConnectionPolicy. Format:
         *        projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_poli
         *        cy} See: https://google.aip.dev/122#fields-representing-resource-names
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Updates the parameters of a single ServiceConnectionPolicy.
           *
           * Create a request for the method "serviceConnectionPolicies.patch".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The name of a ServiceConnectionPolicy. Format:
         *        projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_poli
         *        cy} See: https://google.aip.dev/122#fields-representing-resource-names
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionPolicy content) {
            super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/
           * {location}/serviceConnectionPolicies/{service_connection_policy} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The name of a ServiceConnectionPolicy. Format:
         projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See:
         https://google.aip.dev/122#fields-representing-resource-names
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/
           * {location}/serviceConnectionPolicies/{service_connection_policy} See:
           * https://google.aip.dev/122#fields-representing-resource-names
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceConnectionPolicy resource by the update. The fields specified in the update_mask
           * are relative to the resource, not the full request. A field will be overwritten if it
           * is in the mask. If the user does not provide a mask then all fields will be
           * overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionPolicy
         resource by the update. The fields specified in the update_mask are relative to the resource, not
         the full request. A field will be overwritten if it is in the mask. If the user does not provide a
         mask then all fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. Field mask is used to specify the fields to be overwritten in the
           * ServiceConnectionPolicy resource by the update. The fields specified in the update_mask
           * are relative to the resource, not the full request. A field will be overwritten if it
           * is in the mask. If the user does not provide a mask then all fields will be
           * overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "serviceConnectionPolicies.setIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "serviceConnectionPolicies.setIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "serviceConnectionPolicies.testIamPermissions".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "serviceConnectionPolicies.testIamPermissions".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
           * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ServiceConnectionTokens collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.ServiceConnectionTokens.List request = networkconnectivity.serviceConnectionTokens().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ServiceConnectionTokens serviceConnectionTokens() {
        return new ServiceConnectionTokens();
      }

      /**
       * The "serviceConnectionTokens" collection of methods.
       */
      public class ServiceConnectionTokens {

        /**
         * Creates a new ServiceConnectionToken in a given project and location.
         *
         * Create a request for the method "serviceConnectionTokens.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-
         *        east1
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionTokens";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new ServiceConnectionToken in a given project and location.
           *
           * Create a request for the method "serviceConnectionTokens.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-
         *        east1
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionToken. ex.
           * projects/123/locations/us-east1
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-
         east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource's name of the ServiceConnectionToken. ex.
           * projects/123/locations/us-east1
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location. If one is not
           * provided, one will be generated.
           */
          @com.google.api.client.util.Key
          private java.lang.String serviceConnectionTokenId;

          /** Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo')
         See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided,
         one will be generated.
           */
          public java.lang.String getServiceConnectionTokenId() {
            return serviceConnectionTokenId;
          }

          /**
           * Optional. Resource ID (i.e. 'foo' in
           * '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See
           * https://google.aip.dev/122#resource-id-segments Unique per location. If one is not
           * provided, one will be generated.
           */
          public Create setServiceConnectionTokenId(java.lang.String serviceConnectionTokenId) {
            this.serviceConnectionTokenId = serviceConnectionTokenId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single ServiceConnectionToken.
         *
         * Create a request for the method "serviceConnectionTokens.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the ServiceConnectionToken to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");

          /**
           * Deletes a single ServiceConnectionToken.
           *
           * Create a request for the method "serviceConnectionTokens.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the ServiceConnectionToken to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the ServiceConnectionToken to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the ServiceConnectionToken to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the ServiceConnectionToken to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag is computed by the server, and may be sent on update and delete requests to
         ensure the client has an up-to-date value before proceeding.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag is computed by the server, and may be sent on update and delete
           * requests to ensure the client has an up-to-date value before proceeding.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single ServiceConnectionToken.
         *
         * Create a request for the method "serviceConnectionTokens.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the ServiceConnectionToken to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");

          /**
           * Gets details of a single ServiceConnectionToken.
           *
           * Create a request for the method "serviceConnectionTokens.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the ServiceConnectionToken to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ServiceConnectionToken.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the ServiceConnectionToken to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the ServiceConnectionToken to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the ServiceConnectionToken to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists ServiceConnectionTokens in a given project and location.
         *
         * Create a request for the method "serviceConnectionTokens.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionTokensResponse> {

          private static final String REST_PATH = "v1/{+parent}/serviceConnectionTokens";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ServiceConnectionTokens in a given project and location.
           *
           * Create a request for the method "serviceConnectionTokens.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource's name. ex. projects/123/locations/us-east1
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListServiceConnectionTokensResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource's name. ex. projects/123/locations/us-east1 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** A filter expression that filters the results listed in the response. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter expression that filters the results listed in the response.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** A filter expression that filters the results listed in the response. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results per page that should be returned. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results per page that should be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results per page that should be returned. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Spokes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Networkconnectivity networkconnectivity = new Networkconnectivity(...);}
       *   {@code Networkconnectivity.Spokes.List request = networkconnectivity.spokes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Spokes spokes() {
        return new Spokes();
      }

      /**
       * The "spokes" collection of methods.
       */
      public class Spokes {

        /**
         * Creates a Network Connectivity Center spoke.
         *
         * Create a request for the method "spokes.create".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Spoke}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.Spoke content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/spokes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Network Connectivity Center spoke.
           *
           * Create a request for the method "spokes.create".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Spoke}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.networkconnectivity.v1.model.Spoke content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server knows to ignore the request if it has already been completed. The server
         guarantees that a request doesn't result in creation of duplicate commitments for at least 60
         minutes. For example, consider a situation where you make an initial request and the request times
         out. If you make the request again with the same request ID, the server can check to see whether
         the original operation was received. If it was, the server ignores the second request. This
         behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
         valid UUID, with the exception that zero UUID is not supported
         (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. Unique id for the spoke to create. */
          @com.google.api.client.util.Key
          private java.lang.String spokeId;

          /** Required. Unique id for the spoke to create.
           */
          public java.lang.String getSpokeId() {
            return spokeId;
          }

          /** Required. Unique id for the spoke to create. */
          public Create setSpokeId(java.lang.String spokeId) {
            this.spokeId = spokeId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Network Connectivity Center spoke.
         *
         * Create a request for the method "spokes.delete".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the spoke to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Deletes a Network Connectivity Center spoke.
           *
           * Create a request for the method "spokes.delete".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the spoke to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Networkconnectivity.this, "DELETE", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the spoke to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the spoke to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the spoke to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server knows to ignore the request if it has already been completed. The server
         guarantees that a request doesn't result in creation of duplicate commitments for at least 60
         minutes. For example, consider a situation where you make an initial request and the request times
         out. If you make the request again with the same request ID, the server can check to see whether
         the original operation was received. If it was, the server ignores the second request. This
         behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
         valid UUID, with the exception that zero UUID is not supported
         (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about a Network Connectivity Center spoke.
         *
         * Create a request for the method "spokes.get".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the spoke resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Spoke> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Gets details about a Network Connectivity Center spoke.
           *
           * Create a request for the method "spokes.get".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the spoke resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Spoke.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the spoke resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the spoke resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the spoke resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "spokes.getIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "spokes.getIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists the Network Connectivity Center spokes in a specified project and location.
         *
         * Create a request for the method "spokes.list".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.ListSpokesResponse> {

          private static final String REST_PATH = "v1/{+parent}/spokes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the Network Connectivity Center spokes in a specified project and location.
           *
           * Create a request for the method "spokes.list".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Networkconnectivity.this, "GET", REST_PATH, null, com.google.api.services.networkconnectivity.v1.model.ListSpokesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** An expression that filters the list of results. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression that filters the list of results.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** An expression that filters the list of results. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Sort the results by a certain order. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Sort the results by a certain order.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Sort the results by a certain order. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of results to return per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of results to return per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of results to return per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a Network Connectivity Center spoke.
         *
         * Create a request for the method "spokes.patch".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The name of the spoke. Spoke names must be unique. They use the following form:
         *        `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Spoke}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Spoke content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Updates the parameters of a Network Connectivity Center spoke.
           *
           * Create a request for the method "spokes.patch".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The name of the spoke. Spoke names must be unique. They use the following form:
         *        `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.Spoke}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.networkconnectivity.v1.model.Spoke content) {
            super(Networkconnectivity.this, "PATCH", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The name of the spoke. Spoke names must be unique. They use the following
           * form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The name of the spoke. Spoke names must be unique. They use the following form:
         `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The name of the spoke. Spoke names must be unique. They use the following
           * form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server knows to ignore the request if it has already been completed. The server
         guarantees that a request doesn't result in creation of duplicate commitments for at least 60
         minutes. For example, consider a situation where you make an initial request and the request times
         out. If you make the request again with the same request ID, the server can check to see whether
         the original operation was received. If it was, the server ignores the second request. This
         behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a
         valid UUID, with the exception that zero UUID is not supported
         (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server knows to ignore the request if it has already been
           * completed. The server guarantees that a request doesn't result in creation of duplicate
           * commitments for at least 60 minutes. For example, consider a situation where you make
           * an initial request and the request times out. If you make the request again with the
           * same request ID, the server can check to see whether the original operation was
           * received. If it was, the server ignores the second request. This behavior prevents
           * clients from mistakenly creating duplicate commitments. The request ID must be a valid
           * UUID, with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. In the case of an update to an existing spoke, field mask is used to specify
           * the fields to be overwritten. The fields specified in the update_mask are relative to
           * the resource, not the full request. A field is overwritten if it is in the mask. If the
           * user does not provide a mask, then all fields are overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Optional. In the case of an update to an existing spoke, field mask is used to specify the fields
         to be overwritten. The fields specified in the update_mask are relative to the resource, not the
         full request. A field is overwritten if it is in the mask. If the user does not provide a mask,
         then all fields are overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Optional. In the case of an update to an existing spoke, field mask is used to specify
           * the fields to be overwritten. The fields specified in the update_mask are relative to
           * the resource, not the full request. A field is overwritten if it is in the mask. If the
           * user does not provide a mask, then all fields are overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "spokes.setIamPolicy".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "spokes.setIamPolicy".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.SetIamPolicyRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "spokes.testIamPermissions".
         *
         * This request holds the parameters needed by the networkconnectivity server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends NetworkconnectivityRequest<com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "spokes.testIamPermissions".
           *
           * This request holds the parameters needed by the the networkconnectivity server.  After setting
           * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
           * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsRequest content) {
            super(Networkconnectivity.this, "POST", REST_PATH, content, com.google.api.services.networkconnectivity.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Networkconnectivity}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Networkconnectivity}. */
    @Override
    public Networkconnectivity build() {
      return new Networkconnectivity(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link NetworkconnectivityRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setNetworkconnectivityRequestInitializer(
        NetworkconnectivityRequestInitializer networkconnectivityRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(networkconnectivityRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
