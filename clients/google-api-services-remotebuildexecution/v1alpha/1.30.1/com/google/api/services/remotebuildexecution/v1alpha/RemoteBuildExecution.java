/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.remotebuildexecution.v1alpha;

/**
 * Service definition for RemoteBuildExecution (v1alpha).
 *
 * <p>
 * Supplies a Remote Execution API service for tools such as bazel.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/remote-build-execution/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RemoteBuildExecutionRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class RemoteBuildExecution extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.30.10 of the Remote Build Execution API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://admin-remotebuildexecution.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public RemoteBuildExecution(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  RemoteBuildExecution(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code RemoteBuildExecution remotebuildexecution = new RemoteBuildExecution(...);}
   *   {@code RemoteBuildExecution.Projects.List request = remotebuildexecution.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Instances collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code RemoteBuildExecution remotebuildexecution = new RemoteBuildExecution(...);}
     *   {@code RemoteBuildExecution.Instances.List request = remotebuildexecution.instances().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Instances instances() {
      return new Instances();
    }

    /**
     * The "instances" collection of methods.
     */
    public class Instances {

      /**
       * Creates a new instance in the specified region. Returns a long running operation which contains
       * an instance on completion. While the long running operation is in progress, any call to
       * `GetInstance` returns an instance in state `CREATING`.
       *
       * Create a request for the method "instances.create".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
       * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new instance in the specified region. Returns a long running operation which contains
         * an instance on completion. While the long running operation is in progress, any call to
         * `GetInstance` returns an instance in state `CREATING`.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
         * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest content) {
          super(RemoteBuildExecution.this, "POST", REST_PATH, content, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes the specified instance. Returns a long running operation which contains a
       * `google.protobuf.Empty` response on completion. Deleting an instance with worker pools in it will
       * delete these worker pools.
       *
       * Create a request for the method "instances.delete".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Name of the instance to delete. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Deletes the specified instance. Returns a long running operation which contains a
         * `google.protobuf.Empty` response on completion. Deleting an instance with worker pools in it
         * will delete these worker pools.
         *
         * Create a request for the method "instances.delete".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the instance to delete. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(RemoteBuildExecution.this, "DELETE", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the instance to delete. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the instance to delete. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the instance to delete. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the specified instance.
       *
       * Create a request for the method "instances.get".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Name of the instance to retrieve. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Returns the specified instance.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the instance to retrieve. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(RemoteBuildExecution.this, "GET", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the instance to retrieve. Format:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the instance to retrieve. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the instance to retrieve. Format:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists instances in a project.
       *
       * Create a request for the method "instances.list".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Resource name of the project. Format: `projects/[PROJECT_ID]`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists instances in a project.
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Resource name of the project. Format: `projects/[PROJECT_ID]`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(RemoteBuildExecution.this, "GET", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name of the project. Format: `projects/[PROJECT_ID]`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Resource name of the project. Format: `projects/[PROJECT_ID]`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Resource name of the project. Format: `projects/[PROJECT_ID]`. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified instance. Returns a long running operation which contains the updated
       * instance in the response on completion.
       *
       * Create a request for the method "instances.patch".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
       *        Name should not be populated when creating an instance since it is provided in the
       *        `instance_id` field.
       * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Updates the specified instance. Returns a long running operation which contains the updated
         * instance in the response on completion.
         *
         * Create a request for the method "instances.patch".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
       *        Name should not be populated when creating an instance since it is provided in the
       *        `instance_id` field.
         * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance content) {
          super(RemoteBuildExecution.this, "PATCH", REST_PATH, content, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Instance resource name formatted as:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`. Name should not be populated when
         * creating an instance since it is provided in the `instance_id` field.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
       Name should not be populated when creating an instance since it is provided in the `instance_id`
       field.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Instance resource name formatted as:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`. Name should not be populated when
         * creating an instance since it is provided in the `instance_id` field.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Deprecated, use instance.logging_enabled instead. Whether to enable Stackdriver logging
         * for this instance.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean loggingEnabled;

        /** Deprecated, use instance.logging_enabled instead. Whether to enable Stackdriver logging for this
       instance.
         */
        public java.lang.Boolean getLoggingEnabled() {
          return loggingEnabled;
        }

        /**
         * Deprecated, use instance.logging_enabled instead. Whether to enable Stackdriver logging
         * for this instance.
         */
        public Patch setLoggingEnabled(java.lang.Boolean loggingEnabled) {
          this.loggingEnabled = loggingEnabled;
          return this;
        }

        /**
         * Deprecated, use instance.Name instead. Name of the instance to update. Format:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name1;

        /** Deprecated, use instance.Name instead. Name of the instance to update. Format:
       `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public java.lang.String getName1() {
          return name1;
        }

        /**
         * Deprecated, use instance.Name instead. Name of the instance to update. Format:
         * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         */
        public Patch setName1(java.lang.String name1) {
          this.name1 = name1;
          return this;
        }

        /**
         * The update mask applies to instance. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         * If an empty update_mask is provided, only the non-default valued field in the worker pool
         * field will be updated. Note that in order to update a field to the default value (zero,
         * false, empty string) an explicit update_mask must be provided.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask applies to instance. For the `FieldMask` definition, see
       https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If an empty
       update_mask is provided, only the non-default valued field in the worker pool field will be
       updated. Note that in order to update a field to the default value (zero, false, empty string) an
       explicit update_mask must be provided.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask applies to instance. For the `FieldMask` definition, see
         * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
         * If an empty update_mask is provided, only the non-default valued field in the worker pool
         * field will be updated. Note that in order to update a field to the default value (zero,
         * false, empty string) an explicit update_mask must be provided.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Workerpools collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code RemoteBuildExecution remotebuildexecution = new RemoteBuildExecution(...);}
       *   {@code RemoteBuildExecution.Workerpools.List request = remotebuildexecution.workerpools().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Workerpools workerpools() {
        return new Workerpools();
      }

      /**
       * The "workerpools" collection of methods.
       */
      public class Workerpools {

        /**
         * Creates a new worker pool with a specified size and configuration. Returns a long running
         * operation which contains a worker pool on completion. While the long running operation is in
         * progress, any call to `GetWorkerPool` returns a worker pool in state `CREATING`.
         *
         * Create a request for the method "workerpools.create".
         *
         * This request holds the parameters needed by the remotebuildexecution server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Resource name of the instance in which to create the new worker pool. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+parent}/workerpools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Creates a new worker pool with a specified size and configuration. Returns a long running
           * operation which contains a worker pool on completion. While the long running operation is in
           * progress, any call to `GetWorkerPool` returns a worker pool in state `CREATING`.
           *
           * Create a request for the method "workerpools.create".
           *
           * This request holds the parameters needed by the the remotebuildexecution server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Resource name of the instance in which to create the new worker pool. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest content) {
            super(RemoteBuildExecution.this, "POST", REST_PATH, content, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the instance in which to create the new worker pool. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Resource name of the instance in which to create the new worker pool. Format:
         `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Resource name of the instance in which to create the new worker pool. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified worker pool. Returns a long running operation, which contains a
         * `google.protobuf.Empty` response on completion. While the long running operation is in progress,
         * any call to `GetWorkerPool` returns a worker pool in state `DELETING`.
         *
         * Create a request for the method "workerpools.delete".
         *
         * This request holds the parameters needed by the remotebuildexecution server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Name of the worker pool to delete. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");

          /**
           * Deletes the specified worker pool. Returns a long running operation, which contains a
           * `google.protobuf.Empty` response on completion. While the long running operation is in
           * progress, any call to `GetWorkerPool` returns a worker pool in state `DELETING`.
           *
           * Create a request for the method "workerpools.delete".
           *
           * This request holds the parameters needed by the the remotebuildexecution server.  After setting
           * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Name of the worker pool to delete. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(RemoteBuildExecution.this, "DELETE", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the worker pool to delete. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Name of the worker pool to delete. Format:
         `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Name of the worker pool to delete. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the specified worker pool.
         *
         * Create a request for the method "workerpools.get".
         *
         * This request holds the parameters needed by the remotebuildexecution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Name of the worker pool to retrieve. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");

          /**
           * Returns the specified worker pool.
           *
           * Create a request for the method "workerpools.get".
           *
           * This request holds the parameters needed by the the remotebuildexecution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Name of the worker pool to retrieve. Format:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(RemoteBuildExecution.this, "GET", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the worker pool to retrieve. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Name of the worker pool to retrieve. Format:
         `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Name of the worker pool to retrieve. Format:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists worker pools in an instance.
         *
         * Create a request for the method "workerpools.list".
         *
         * This request holds the parameters needed by the remotebuildexecution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/workerpools";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Lists worker pools in an instance.
           *
           * Create a request for the method "workerpools.list".
           *
           * This request holds the parameters needed by the the remotebuildexecution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(RemoteBuildExecution.this, "GET", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A filter expression that filters resources listed in the response. The
           * expression must specify the field name, a comparison operator, and the value that you
           * want to use for filtering. The value must be a string, a number, or a boolean. String
           * values are case-insensitive. The comparison operator must be either `:`, `=`, `!=`,
           * `>`, `>=`, `<=` or `<`. The `:` operator can be used with string fields to match
           * substrings. For non-string fields it is equivalent to the `=` operator. The `:*`
           * comparison can be used to test whether a key has been defined. You can also filter on
           * nested fields. To filter on multiple expressions, you can separate expression using
           * `AND` and `OR` operators, using parentheses to specify precedence. If neither operator
           * is specified, `AND` is assumed. Examples: Include only pools with more than 100
           * reserved workers: `(worker_count > 100) (worker_config.reserved = true)` Include only
           * pools with a certain label or machines of the n1-standard family:
           * `worker_config.labels.key1 : * OR worker_config.machine_type: n1-standard`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter expression that filters resources listed in the response. The expression must
         specify the field name, a comparison operator, and the value that you want to use for filtering.
         The value must be a string, a number, or a boolean. String values are case-insensitive. The
         comparison operator must be either `:`, `=`, `!=`, `>`, `>=`, `<=` or `<`. The `:` operator can be
         used with string fields to match substrings. For non-string fields it is equivalent to the `=`
         operator. The `:*` comparison can be used to test whether a key has been defined. You can also
         filter on nested fields. To filter on multiple expressions, you can separate expression using `AND`
         and `OR` operators, using parentheses to specify precedence. If neither operator is specified,
         `AND` is assumed. Examples: Include only pools with more than 100 reserved workers: `(worker_count
         > 100) (worker_config.reserved = true)` Include only pools with a certain label or machines of the
         n1-standard family: `worker_config.labels.key1 : * OR worker_config.machine_type: n1-standard`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter expression that filters resources listed in the response. The
           * expression must specify the field name, a comparison operator, and the value that you
           * want to use for filtering. The value must be a string, a number, or a boolean. String
           * values are case-insensitive. The comparison operator must be either `:`, `=`, `!=`,
           * `>`, `>=`, `<=` or `<`. The `:` operator can be used with string fields to match
           * substrings. For non-string fields it is equivalent to the `=` operator. The `:*`
           * comparison can be used to test whether a key has been defined. You can also filter on
           * nested fields. To filter on multiple expressions, you can separate expression using
           * `AND` and `OR` operators, using parentheses to specify precedence. If neither operator
           * is specified, `AND` is assumed. Examples: Include only pools with more than 100
           * reserved workers: `(worker_count > 100) (worker_config.reserved = true)` Include only
           * pools with a certain label or machines of the n1-standard family:
           * `worker_config.labels.key1 : * OR worker_config.machine_type: n1-standard`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing worker pool with a specified size and/or configuration. Returns a long
         * running operation, which contains a worker pool on completion. While the long running operation
         * is in progress, any call to `GetWorkerPool` returns a worker pool in state `UPDATING`.
         *
         * Create a request for the method "workerpools.patch".
         *
         * This request holds the parameters needed by the remotebuildexecution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name WorkerPool resource name formatted as:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be
         *        populated when creating a worker pool since it is provided in the `poolId` field.
         * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");

          /**
           * Updates an existing worker pool with a specified size and/or configuration. Returns a long
           * running operation, which contains a worker pool on completion. While the long running operation
           * is in progress, any call to `GetWorkerPool` returns a worker pool in state `UPDATING`.
           *
           * Create a request for the method "workerpools.patch".
           *
           * This request holds the parameters needed by the the remotebuildexecution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name WorkerPool resource name formatted as:
         *        `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be
         *        populated when creating a worker pool since it is provided in the `poolId` field.
           * @param content the {@link com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest content) {
            super(RemoteBuildExecution.this, "PATCH", REST_PATH, content, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * WorkerPool resource name formatted as:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not
           * be populated when creating a worker pool since it is provided in the `poolId` field.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** WorkerPool resource name formatted as:
         `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated
         when creating a worker pool since it is provided in the `poolId` field.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * WorkerPool resource name formatted as:
           * `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not
           * be populated when creating a worker pool since it is provided in the `poolId` field.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/workerpools/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code RemoteBuildExecution remotebuildexecution = new RemoteBuildExecution(...);}
     *   {@code RemoteBuildExecution.Operations.List request = remotebuildexecution.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the remotebuildexecution server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends RemoteBuildExecutionRequest<com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the remotebuildexecution server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(RemoteBuildExecution.this, "GET", REST_PATH, null, com.google.api.services.remotebuildexecution.v1alpha.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link RemoteBuildExecution}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link RemoteBuildExecution}. */
    @Override
    public RemoteBuildExecution build() {
      return new RemoteBuildExecution(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RemoteBuildExecutionRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRemoteBuildExecutionRequestInitializer(
        RemoteBuildExecutionRequestInitializer remotebuildexecutionRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(remotebuildexecutionRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
