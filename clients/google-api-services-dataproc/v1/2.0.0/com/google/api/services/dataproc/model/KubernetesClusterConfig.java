/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.model;

/**
 * The configuration for running the Dataproc cluster on Kubernetes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KubernetesClusterConfig extends com.google.api.client.json.GenericJson {

  /**
   * Required. The configuration for running the Dataproc cluster on GKE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GkeClusterConfig gkeClusterConfig;

  /**
   * Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not
   * exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is
   * not installed into it. If not specified, the name of the Dataproc Cluster is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kubernetesNamespace;

  /**
   * Optional. The software configuration for this Dataproc cluster running on Kubernetes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KubernetesSoftwareConfig kubernetesSoftwareConfig;

  /**
   * Required. The configuration for running the Dataproc cluster on GKE.
   * @return value or {@code null} for none
   */
  public GkeClusterConfig getGkeClusterConfig() {
    return gkeClusterConfig;
  }

  /**
   * Required. The configuration for running the Dataproc cluster on GKE.
   * @param gkeClusterConfig gkeClusterConfig or {@code null} for none
   */
  public KubernetesClusterConfig setGkeClusterConfig(GkeClusterConfig gkeClusterConfig) {
    this.gkeClusterConfig = gkeClusterConfig;
    return this;
  }

  /**
   * Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not
   * exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is
   * not installed into it. If not specified, the name of the Dataproc Cluster is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getKubernetesNamespace() {
    return kubernetesNamespace;
  }

  /**
   * Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not
   * exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is
   * not installed into it. If not specified, the name of the Dataproc Cluster is used.
   * @param kubernetesNamespace kubernetesNamespace or {@code null} for none
   */
  public KubernetesClusterConfig setKubernetesNamespace(java.lang.String kubernetesNamespace) {
    this.kubernetesNamespace = kubernetesNamespace;
    return this;
  }

  /**
   * Optional. The software configuration for this Dataproc cluster running on Kubernetes.
   * @return value or {@code null} for none
   */
  public KubernetesSoftwareConfig getKubernetesSoftwareConfig() {
    return kubernetesSoftwareConfig;
  }

  /**
   * Optional. The software configuration for this Dataproc cluster running on Kubernetes.
   * @param kubernetesSoftwareConfig kubernetesSoftwareConfig or {@code null} for none
   */
  public KubernetesClusterConfig setKubernetesSoftwareConfig(KubernetesSoftwareConfig kubernetesSoftwareConfig) {
    this.kubernetesSoftwareConfig = kubernetesSoftwareConfig;
    return this;
  }

  @Override
  public KubernetesClusterConfig set(String fieldName, Object value) {
    return (KubernetesClusterConfig) super.set(fieldName, value);
  }

  @Override
  public KubernetesClusterConfig clone() {
    return (KubernetesClusterConfig) super.clone();
  }

}
