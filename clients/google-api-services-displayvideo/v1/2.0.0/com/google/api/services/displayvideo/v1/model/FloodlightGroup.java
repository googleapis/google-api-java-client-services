/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * A single Floodlight group.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FloodlightGroup extends com.google.api.client.json.GenericJson {

  /**
   * The Active View video viewability metric configuration for the Floodlight group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ActiveViewVideoViewabilityMetricConfig activeViewConfig;

  /**
   * User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to
   * create reporting data that is tailored to your unique business needs. Custom Floodlight
   * variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass
   * to them. You can use them to track virtually any type of data that you collect about your
   * customers, such as the genre of movie that a customer purchases, the country to which the item
   * is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could
   * be used or recognized as personally identifiable information (PII). Example: `custom_variables
   * { fields { "U1": value { number_value: 123.4 }, "U2": value { string_value: "MyVariable2" },
   * "U3": value { string_value: "MyVariable3" } } }` Acceptable values for keys are "U1" through
   * "U100", inclusive. String values must be less than 64 characters long, and cannot contain the
   * following characters: `"<>`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> customVariables;

  /**
   * Required. The display name of the Floodlight group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. The unique ID of the Floodlight group. Assigned by the system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long floodlightGroupId;

  /**
   * Required. The lookback window for the Floodlight group. Both click_days and impression_days are
   * required. Acceptable values for both are `0` to `90`, inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LookbackWindow lookbackWindow;

  /**
   * Output only. The resource name of the Floodlight group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. The web tag type enabled for the Floodlight group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String webTagType;

  /**
   * The Active View video viewability metric configuration for the Floodlight group.
   * @return value or {@code null} for none
   */
  public ActiveViewVideoViewabilityMetricConfig getActiveViewConfig() {
    return activeViewConfig;
  }

  /**
   * The Active View video viewability metric configuration for the Floodlight group.
   * @param activeViewConfig activeViewConfig or {@code null} for none
   */
  public FloodlightGroup setActiveViewConfig(ActiveViewVideoViewabilityMetricConfig activeViewConfig) {
    this.activeViewConfig = activeViewConfig;
    return this;
  }

  /**
   * User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to
   * create reporting data that is tailored to your unique business needs. Custom Floodlight
   * variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass
   * to them. You can use them to track virtually any type of data that you collect about your
   * customers, such as the genre of movie that a customer purchases, the country to which the item
   * is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could
   * be used or recognized as personally identifiable information (PII). Example: `custom_variables
   * { fields { "U1": value { number_value: 123.4 }, "U2": value { string_value: "MyVariable2" },
   * "U3": value { string_value: "MyVariable3" } } }` Acceptable values for keys are "U1" through
   * "U100", inclusive. String values must be less than 64 characters long, and cannot contain the
   * following characters: `"<>`.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getCustomVariables() {
    return customVariables;
  }

  /**
   * User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to
   * create reporting data that is tailored to your unique business needs. Custom Floodlight
   * variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass
   * to them. You can use them to track virtually any type of data that you collect about your
   * customers, such as the genre of movie that a customer purchases, the country to which the item
   * is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could
   * be used or recognized as personally identifiable information (PII). Example: `custom_variables
   * { fields { "U1": value { number_value: 123.4 }, "U2": value { string_value: "MyVariable2" },
   * "U3": value { string_value: "MyVariable3" } } }` Acceptable values for keys are "U1" through
   * "U100", inclusive. String values must be less than 64 characters long, and cannot contain the
   * following characters: `"<>`.
   * @param customVariables customVariables or {@code null} for none
   */
  public FloodlightGroup setCustomVariables(java.util.Map<String, java.lang.Object> customVariables) {
    this.customVariables = customVariables;
    return this;
  }

  /**
   * Required. The display name of the Floodlight group.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the Floodlight group.
   * @param displayName displayName or {@code null} for none
   */
  public FloodlightGroup setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. The unique ID of the Floodlight group. Assigned by the system.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFloodlightGroupId() {
    return floodlightGroupId;
  }

  /**
   * Output only. The unique ID of the Floodlight group. Assigned by the system.
   * @param floodlightGroupId floodlightGroupId or {@code null} for none
   */
  public FloodlightGroup setFloodlightGroupId(java.lang.Long floodlightGroupId) {
    this.floodlightGroupId = floodlightGroupId;
    return this;
  }

  /**
   * Required. The lookback window for the Floodlight group. Both click_days and impression_days are
   * required. Acceptable values for both are `0` to `90`, inclusive.
   * @return value or {@code null} for none
   */
  public LookbackWindow getLookbackWindow() {
    return lookbackWindow;
  }

  /**
   * Required. The lookback window for the Floodlight group. Both click_days and impression_days are
   * required. Acceptable values for both are `0` to `90`, inclusive.
   * @param lookbackWindow lookbackWindow or {@code null} for none
   */
  public FloodlightGroup setLookbackWindow(LookbackWindow lookbackWindow) {
    this.lookbackWindow = lookbackWindow;
    return this;
  }

  /**
   * Output only. The resource name of the Floodlight group.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the Floodlight group.
   * @param name name or {@code null} for none
   */
  public FloodlightGroup setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The web tag type enabled for the Floodlight group.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebTagType() {
    return webTagType;
  }

  /**
   * Required. The web tag type enabled for the Floodlight group.
   * @param webTagType webTagType or {@code null} for none
   */
  public FloodlightGroup setWebTagType(java.lang.String webTagType) {
    this.webTagType = webTagType;
    return this;
  }

  @Override
  public FloodlightGroup set(String fieldName, Object value) {
    return (FloodlightGroup) super.set(fieldName, value);
  }

  @Override
  public FloodlightGroup clone() {
    return (FloodlightGroup) super.clone();
  }

}
