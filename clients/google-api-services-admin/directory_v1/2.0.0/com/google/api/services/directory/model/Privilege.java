/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.directory.model;

/**
 * Model definition for Privilege.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Privilege extends com.google.api.client.json.GenericJson {

  /**
   * A list of child privileges. Privileges for a service form a tree. Each privilege can have a
   * list of child privileges; this list is empty for a leaf privilege.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Privilege> childPrivileges;

  /**
   * ETag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * If the privilege can be restricted to an organization unit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isOuScopable;

  /**
   * The type of the API resource. This is always `admin#directory#privilege`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The name of the privilege.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String privilegeName;

  /**
   * The obfuscated ID of the service this privilege is for. This value is returned with
   * [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceId;

  /**
   * The name of the service this privilege is for.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceName;

  /**
   * A list of child privileges. Privileges for a service form a tree. Each privilege can have a
   * list of child privileges; this list is empty for a leaf privilege.
   * @return value or {@code null} for none
   */
  public java.util.List<Privilege> getChildPrivileges() {
    return childPrivileges;
  }

  /**
   * A list of child privileges. Privileges for a service form a tree. Each privilege can have a
   * list of child privileges; this list is empty for a leaf privilege.
   * @param childPrivileges childPrivileges or {@code null} for none
   */
  public Privilege setChildPrivileges(java.util.List<Privilege> childPrivileges) {
    this.childPrivileges = childPrivileges;
    return this;
  }

  /**
   * ETag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * ETag of the resource.
   * @param etag etag or {@code null} for none
   */
  public Privilege setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * If the privilege can be restricted to an organization unit.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsOuScopable() {
    return isOuScopable;
  }

  /**
   * If the privilege can be restricted to an organization unit.
   * @param isOuScopable isOuScopable or {@code null} for none
   */
  public Privilege setIsOuScopable(java.lang.Boolean isOuScopable) {
    this.isOuScopable = isOuScopable;
    return this;
  }

  /**
   * The type of the API resource. This is always `admin#directory#privilege`.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The type of the API resource. This is always `admin#directory#privilege`.
   * @param kind kind or {@code null} for none
   */
  public Privilege setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The name of the privilege.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrivilegeName() {
    return privilegeName;
  }

  /**
   * The name of the privilege.
   * @param privilegeName privilegeName or {@code null} for none
   */
  public Privilege setPrivilegeName(java.lang.String privilegeName) {
    this.privilegeName = privilegeName;
    return this;
  }

  /**
   * The obfuscated ID of the service this privilege is for. This value is returned with
   * [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceId() {
    return serviceId;
  }

  /**
   * The obfuscated ID of the service this privilege is for. This value is returned with
   * [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
   * @param serviceId serviceId or {@code null} for none
   */
  public Privilege setServiceId(java.lang.String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * The name of the service this privilege is for.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceName() {
    return serviceName;
  }

  /**
   * The name of the service this privilege is for.
   * @param serviceName serviceName or {@code null} for none
   */
  public Privilege setServiceName(java.lang.String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  @Override
  public Privilege set(String fieldName, Object value) {
    return (Privilege) super.set(fieldName, value);
  }

  @Override
  public Privilege clone() {
    return (Privilege) super.clone();
  }

}
