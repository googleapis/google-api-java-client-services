/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * `AuthzPolicy` is a resource that allows to forward traffic to a callout backend designed to scan
 * the traffic for security purposes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthzPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Required. Can be one of `ALLOW`, `DENY`, `CUSTOM`. When the action is `CUSTOM`,
   * `customProvider` must be specified. When the action is `ALLOW`, only requests matching the
   * policy will be allowed. When the action is `DENY`, only requests matching the policy will be
   * denied. When a request arrives, the policies are evaluated in the following order: 1. If there
   * is a `CUSTOM` policy that matches the request, the `CUSTOM` policy is evaluated using the
   * custom authorization providers and the request is denied if the provider rejects the request.
   * 2. If there are any `DENY` policies that match the request, the request is denied. 3. If there
   * are no `ALLOW` policies for the resource or if any of the `ALLOW` policies match the request,
   * the request is allowed. 4. Else the request is denied by default if none of the configured
   * AuthzPolicies with `ALLOW` action match the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String action;

  /**
   * Output only. The timestamp when the resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Required if the action is `CUSTOM`. Allows delegating authorization decisions to
   * Cloud IAP or to Service Extensions. One of `cloudIap` or `authzExtension` must be specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthzPolicyCustomProvider customProvider;

  /**
   * Optional. A human-readable description of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. A list of authorization HTTP rules to match against the incoming request. A policy
   * match occurs when at least one HTTP rule matches the request or when no HTTP rules are
   * specified in the policy. At least one HTTP Rule is required for Allow or Deny Action. Limited
   * to 5 rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRule> httpRules;

  /**
   * Optional. Set of labels associated with the `AuthzPolicy` resource. The format must comply with
   * [the following requirements](/compute/docs/labeling-resources#requirements).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Identifier. Name of the `AuthzPolicy` resource in the following format:
   * `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Specifies the set of resources to which this policy should be applied to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthzPolicyTarget target;

  /**
   * Output only. The timestamp when the resource was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. Can be one of `ALLOW`, `DENY`, `CUSTOM`. When the action is `CUSTOM`,
   * `customProvider` must be specified. When the action is `ALLOW`, only requests matching the
   * policy will be allowed. When the action is `DENY`, only requests matching the policy will be
   * denied. When a request arrives, the policies are evaluated in the following order: 1. If there
   * is a `CUSTOM` policy that matches the request, the `CUSTOM` policy is evaluated using the
   * custom authorization providers and the request is denied if the provider rejects the request.
   * 2. If there are any `DENY` policies that match the request, the request is denied. 3. If there
   * are no `ALLOW` policies for the resource or if any of the `ALLOW` policies match the request,
   * the request is allowed. 4. Else the request is denied by default if none of the configured
   * AuthzPolicies with `ALLOW` action match the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getAction() {
    return action;
  }

  /**
   * Required. Can be one of `ALLOW`, `DENY`, `CUSTOM`. When the action is `CUSTOM`,
   * `customProvider` must be specified. When the action is `ALLOW`, only requests matching the
   * policy will be allowed. When the action is `DENY`, only requests matching the policy will be
   * denied. When a request arrives, the policies are evaluated in the following order: 1. If there
   * is a `CUSTOM` policy that matches the request, the `CUSTOM` policy is evaluated using the
   * custom authorization providers and the request is denied if the provider rejects the request.
   * 2. If there are any `DENY` policies that match the request, the request is denied. 3. If there
   * are no `ALLOW` policies for the resource or if any of the `ALLOW` policies match the request,
   * the request is allowed. 4. Else the request is denied by default if none of the configured
   * AuthzPolicies with `ALLOW` action match the request.
   * @param action action or {@code null} for none
   */
  public AuthzPolicy setAction(java.lang.String action) {
    this.action = action;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public AuthzPolicy setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Required if the action is `CUSTOM`. Allows delegating authorization decisions to
   * Cloud IAP or to Service Extensions. One of `cloudIap` or `authzExtension` must be specified.
   * @return value or {@code null} for none
   */
  public AuthzPolicyCustomProvider getCustomProvider() {
    return customProvider;
  }

  /**
   * Optional. Required if the action is `CUSTOM`. Allows delegating authorization decisions to
   * Cloud IAP or to Service Extensions. One of `cloudIap` or `authzExtension` must be specified.
   * @param customProvider customProvider or {@code null} for none
   */
  public AuthzPolicy setCustomProvider(AuthzPolicyCustomProvider customProvider) {
    this.customProvider = customProvider;
    return this;
  }

  /**
   * Optional. A human-readable description of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. A human-readable description of the resource.
   * @param description description or {@code null} for none
   */
  public AuthzPolicy setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. A list of authorization HTTP rules to match against the incoming request. A policy
   * match occurs when at least one HTTP rule matches the request or when no HTTP rules are
   * specified in the policy. At least one HTTP Rule is required for Allow or Deny Action. Limited
   * to 5 rules.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRule> getHttpRules() {
    return httpRules;
  }

  /**
   * Optional. A list of authorization HTTP rules to match against the incoming request. A policy
   * match occurs when at least one HTTP rule matches the request or when no HTTP rules are
   * specified in the policy. At least one HTTP Rule is required for Allow or Deny Action. Limited
   * to 5 rules.
   * @param httpRules httpRules or {@code null} for none
   */
  public AuthzPolicy setHttpRules(java.util.List<AuthzPolicyAuthzRule> httpRules) {
    this.httpRules = httpRules;
    return this;
  }

  /**
   * Optional. Set of labels associated with the `AuthzPolicy` resource. The format must comply with
   * [the following requirements](/compute/docs/labeling-resources#requirements).
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Set of labels associated with the `AuthzPolicy` resource. The format must comply with
   * [the following requirements](/compute/docs/labeling-resources#requirements).
   * @param labels labels or {@code null} for none
   */
  public AuthzPolicy setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Identifier. Name of the `AuthzPolicy` resource in the following format:
   * `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Identifier. Name of the `AuthzPolicy` resource in the following format:
   * `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
   * @param name name or {@code null} for none
   */
  public AuthzPolicy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Specifies the set of resources to which this policy should be applied to.
   * @return value or {@code null} for none
   */
  public AuthzPolicyTarget getTarget() {
    return target;
  }

  /**
   * Required. Specifies the set of resources to which this policy should be applied to.
   * @param target target or {@code null} for none
   */
  public AuthzPolicy setTarget(AuthzPolicyTarget target) {
    this.target = target;
    return this;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the resource was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public AuthzPolicy setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public AuthzPolicy set(String fieldName, Object value) {
    return (AuthzPolicy) super.set(fieldName, value);
  }

  @Override
  public AuthzPolicy clone() {
    return (AuthzPolicy) super.clone();
  }

}
