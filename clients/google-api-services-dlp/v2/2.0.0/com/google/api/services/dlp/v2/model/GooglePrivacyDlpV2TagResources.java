/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * If set, attaches the [tags] (https://cloud.google.com/resource-manager/docs/tags/tags-overview)
 * provided to profiled resources. Tags support [access
 * control](https://cloud.google.com/iam/docs/tags-access-control). You can conditionally grant or
 * deny access to a resource based on whether the resource has a specific tag.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TagResources extends com.google.api.client.json.GenericJson {

  /**
   * Whether applying a tag to a resource should lower the risk of the profile for that resource.
   * For example, in conjunction with an [IAM deny policy](https://cloud.google.com/iam/docs/deny-
   * overview), you can deny all principals a permission if a tag value is present, mitigating the
   * risk of the resource. This also lowers the data risk of resources at the lower levels of the
   * resource hierarchy. For example, reducing the data risk of a table data profile also reduces
   * the data risk of the constituent column data profiles.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lowerDataRiskToLow;

  /**
   * The profile generations for which the tag should be attached to resources. If you attach a tag
   * to only new profiles, then if the sensitivity score of a profile subsequently changes, its tag
   * doesn't change. By default, this field includes only new profiles. To include both new and
   * updated profiles for tagging, this field should explicitly include both
   * `PROFILE_GENERATION_NEW` and `PROFILE_GENERATION_UPDATE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> profileGenerationsToTag;

  /**
   * The tags to associate with different conditions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2TagCondition> tagConditions;

  static {
    // hack to force ProGuard to consider GooglePrivacyDlpV2TagCondition used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GooglePrivacyDlpV2TagCondition.class);
  }

  /**
   * Whether applying a tag to a resource should lower the risk of the profile for that resource.
   * For example, in conjunction with an [IAM deny policy](https://cloud.google.com/iam/docs/deny-
   * overview), you can deny all principals a permission if a tag value is present, mitigating the
   * risk of the resource. This also lowers the data risk of resources at the lower levels of the
   * resource hierarchy. For example, reducing the data risk of a table data profile also reduces
   * the data risk of the constituent column data profiles.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLowerDataRiskToLow() {
    return lowerDataRiskToLow;
  }

  /**
   * Whether applying a tag to a resource should lower the risk of the profile for that resource.
   * For example, in conjunction with an [IAM deny policy](https://cloud.google.com/iam/docs/deny-
   * overview), you can deny all principals a permission if a tag value is present, mitigating the
   * risk of the resource. This also lowers the data risk of resources at the lower levels of the
   * resource hierarchy. For example, reducing the data risk of a table data profile also reduces
   * the data risk of the constituent column data profiles.
   * @param lowerDataRiskToLow lowerDataRiskToLow or {@code null} for none
   */
  public GooglePrivacyDlpV2TagResources setLowerDataRiskToLow(java.lang.Boolean lowerDataRiskToLow) {
    this.lowerDataRiskToLow = lowerDataRiskToLow;
    return this;
  }

  /**
   * The profile generations for which the tag should be attached to resources. If you attach a tag
   * to only new profiles, then if the sensitivity score of a profile subsequently changes, its tag
   * doesn't change. By default, this field includes only new profiles. To include both new and
   * updated profiles for tagging, this field should explicitly include both
   * `PROFILE_GENERATION_NEW` and `PROFILE_GENERATION_UPDATE`.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProfileGenerationsToTag() {
    return profileGenerationsToTag;
  }

  /**
   * The profile generations for which the tag should be attached to resources. If you attach a tag
   * to only new profiles, then if the sensitivity score of a profile subsequently changes, its tag
   * doesn't change. By default, this field includes only new profiles. To include both new and
   * updated profiles for tagging, this field should explicitly include both
   * `PROFILE_GENERATION_NEW` and `PROFILE_GENERATION_UPDATE`.
   * @param profileGenerationsToTag profileGenerationsToTag or {@code null} for none
   */
  public GooglePrivacyDlpV2TagResources setProfileGenerationsToTag(java.util.List<java.lang.String> profileGenerationsToTag) {
    this.profileGenerationsToTag = profileGenerationsToTag;
    return this;
  }

  /**
   * The tags to associate with different conditions.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2TagCondition> getTagConditions() {
    return tagConditions;
  }

  /**
   * The tags to associate with different conditions.
   * @param tagConditions tagConditions or {@code null} for none
   */
  public GooglePrivacyDlpV2TagResources setTagConditions(java.util.List<GooglePrivacyDlpV2TagCondition> tagConditions) {
    this.tagConditions = tagConditions;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TagResources set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TagResources) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TagResources clone() {
    return (GooglePrivacyDlpV2TagResources) super.clone();
  }

}
