/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Extension data for use in Play Games Product Profile. See go/jam-games-profile.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData extends com.google.api.client.json.GenericJson {

  /**
   * User's top achievements that are sorted for example by rarity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement> achievements;

  /**
   * The avatar image to display for the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String avatarImageUrl;

  /**
   * Failure type if there is an error when fetching product profile data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiProductProfileFailure failure;

  /**
   * The gamer tag set by the user. Not set if the user hasn't set a gamer tag yet.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gamerTag;

  /**
   * User's level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer playerLevel;

  /**
   * Specifies the visibility of the player's profile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profileVisibility;

  /**
   * Total number of friends.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long totalFriendsCount;

  /**
   * How many achievements this player has unlocked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long totalUnlockedAchievements;

  /**
   * User's top achievements that are sorted for example by rarity.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement> getAchievements() {
    return achievements;
  }

  /**
   * User's top achievements that are sorted for example by rarity.
   * @param achievements achievements or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setAchievements(java.util.List<AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement> achievements) {
    this.achievements = achievements;
    return this;
  }

  /**
   * The avatar image to display for the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getAvatarImageUrl() {
    return avatarImageUrl;
  }

  /**
   * The avatar image to display for the user.
   * @param avatarImageUrl avatarImageUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setAvatarImageUrl(java.lang.String avatarImageUrl) {
    this.avatarImageUrl = avatarImageUrl;
    return this;
  }

  /**
   * Failure type if there is an error when fetching product profile data.
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiProductProfileFailure getFailure() {
    return failure;
  }

  /**
   * Failure type if there is an error when fetching product profile data.
   * @param failure failure or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setFailure(AppsPeopleOzExternalMergedpeopleapiProductProfileFailure failure) {
    this.failure = failure;
    return this;
  }

  /**
   * The gamer tag set by the user. Not set if the user hasn't set a gamer tag yet.
   * @return value or {@code null} for none
   */
  public java.lang.String getGamerTag() {
    return gamerTag;
  }

  /**
   * The gamer tag set by the user. Not set if the user hasn't set a gamer tag yet.
   * @param gamerTag gamerTag or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setGamerTag(java.lang.String gamerTag) {
    this.gamerTag = gamerTag;
    return this;
  }

  /**
   * User's level.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPlayerLevel() {
    return playerLevel;
  }

  /**
   * User's level.
   * @param playerLevel playerLevel or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setPlayerLevel(java.lang.Integer playerLevel) {
    this.playerLevel = playerLevel;
    return this;
  }

  /**
   * Specifies the visibility of the player's profile.
   * @return value or {@code null} for none
   */
  public java.lang.String getProfileVisibility() {
    return profileVisibility;
  }

  /**
   * Specifies the visibility of the player's profile.
   * @param profileVisibility profileVisibility or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setProfileVisibility(java.lang.String profileVisibility) {
    this.profileVisibility = profileVisibility;
    return this;
  }

  /**
   * Total number of friends.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalFriendsCount() {
    return totalFriendsCount;
  }

  /**
   * Total number of friends.
   * @param totalFriendsCount totalFriendsCount or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setTotalFriendsCount(java.lang.Long totalFriendsCount) {
    this.totalFriendsCount = totalFriendsCount;
    return this;
  }

  /**
   * How many achievements this player has unlocked.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTotalUnlockedAchievements() {
    return totalUnlockedAchievements;
  }

  /**
   * How many achievements this player has unlocked.
   * @param totalUnlockedAchievements totalUnlockedAchievements or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData setTotalUnlockedAchievements(java.lang.Long totalUnlockedAchievements) {
    this.totalUnlockedAchievements = totalUnlockedAchievements;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData clone() {
    return (AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData) super.clone();
  }

}
