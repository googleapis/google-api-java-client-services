/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataform.v1beta1.model;

/**
 * Represents a Dataform Git workspace.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataform API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Workspace extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp of when the workspace was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. A data encryption state of a Git repository if this Workspace is protected by a
   * KMS key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataEncryptionState dataEncryptionState;

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String internalMetadata;

  /**
   * Identifier. The workspace's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The timestamp of when the workspace was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp of when the workspace was created.
   * @param createTime createTime or {@code null} for none
   */
  public Workspace setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. A data encryption state of a Git repository if this Workspace is protected by a
   * KMS key.
   * @return value or {@code null} for none
   */
  public DataEncryptionState getDataEncryptionState() {
    return dataEncryptionState;
  }

  /**
   * Output only. A data encryption state of a Git repository if this Workspace is protected by a
   * KMS key.
   * @param dataEncryptionState dataEncryptionState or {@code null} for none
   */
  public Workspace setDataEncryptionState(DataEncryptionState dataEncryptionState) {
    this.dataEncryptionState = dataEncryptionState;
    return this;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @return value or {@code null} for none
   */
  public java.lang.String getInternalMetadata() {
    return internalMetadata;
  }

  /**
   * Output only. All the metadata information that is used internally to serve the resource. For
   * example: timestamps, flags, status fields, etc. The format of this field is a JSON string.
   * @param internalMetadata internalMetadata or {@code null} for none
   */
  public Workspace setInternalMetadata(java.lang.String internalMetadata) {
    this.internalMetadata = internalMetadata;
    return this;
  }

  /**
   * Identifier. The workspace's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The workspace's name.
   * @param name name or {@code null} for none
   */
  public Workspace setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public Workspace set(String fieldName, Object value) {
    return (Workspace) super.set(fieldName, value);
  }

  @Override
  public Workspace clone() {
    return (Workspace) super.clone();
  }

}
