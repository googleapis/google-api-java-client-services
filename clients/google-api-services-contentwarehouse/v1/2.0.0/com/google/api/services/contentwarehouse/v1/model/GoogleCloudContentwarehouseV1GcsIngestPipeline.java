/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The configuration of the Cloud Storage ingestion pipeline.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1GcsIngestPipeline extends com.google.api.client.json.GenericJson {

  /**
   * The input Cloud Storage folder. All files under this folder will be imported to Document
   * Warehouse. Format: gs:.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inputPath;

  /**
   * The Doc AI processor type name. Only used when the format of ingested files is Doc AI Document
   * proto format. Reference: https://source.corp.google.com/piperdepot/google3/cloud/ai/documentai/
   * core/c/proto/processor.proto;l=21
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String processorType;

  /**
   * The Document Warehouse schema resource name. All documents processed by this pipeline will use
   * this schema. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schemaName;

  /**
   * The input Cloud Storage folder. All files under this folder will be imported to Document
   * Warehouse. Format: gs:.
   * @return value or {@code null} for none
   */
  public java.lang.String getInputPath() {
    return inputPath;
  }

  /**
   * The input Cloud Storage folder. All files under this folder will be imported to Document
   * Warehouse. Format: gs:.
   * @param inputPath inputPath or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1GcsIngestPipeline setInputPath(java.lang.String inputPath) {
    this.inputPath = inputPath;
    return this;
  }

  /**
   * The Doc AI processor type name. Only used when the format of ingested files is Doc AI Document
   * proto format. Reference: https://source.corp.google.com/piperdepot/google3/cloud/ai/documentai/
   * core/c/proto/processor.proto;l=21
   * @return value or {@code null} for none
   */
  public java.lang.String getProcessorType() {
    return processorType;
  }

  /**
   * The Doc AI processor type name. Only used when the format of ingested files is Doc AI Document
   * proto format. Reference: https://source.corp.google.com/piperdepot/google3/cloud/ai/documentai/
   * core/c/proto/processor.proto;l=21
   * @param processorType processorType or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1GcsIngestPipeline setProcessorType(java.lang.String processorType) {
    this.processorType = processorType;
    return this;
  }

  /**
   * The Document Warehouse schema resource name. All documents processed by this pipeline will use
   * this schema. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getSchemaName() {
    return schemaName;
  }

  /**
   * The Document Warehouse schema resource name. All documents processed by this pipeline will use
   * this schema. Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * @param schemaName schemaName or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1GcsIngestPipeline setSchemaName(java.lang.String schemaName) {
    this.schemaName = schemaName;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1GcsIngestPipeline set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1GcsIngestPipeline) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1GcsIngestPipeline clone() {
    return (GoogleCloudContentwarehouseV1GcsIngestPipeline) super.clone();
  }

}
