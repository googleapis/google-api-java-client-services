/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.meet.v2;

/**
 * Service definition for Meet (v2).
 *
 * <p>
 * Create and manage meetings in Google Meet.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/meet/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MeetRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Meet extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Google Meet API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://meet.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://meet.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Meet(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Meet(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the ConferenceRecords collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Meet meet = new Meet(...);}
   *   {@code Meet.ConferenceRecords.List request = meet.conferenceRecords().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ConferenceRecords conferenceRecords() {
    return new ConferenceRecords();
  }

  /**
   * The "conferenceRecords" collection of methods.
   */
  public class ConferenceRecords {

    /**
     * Gets a conference record by conference ID.
     *
     * Create a request for the method "conferenceRecords.get".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name of the conference.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends MeetRequest<com.google.api.services.meet.v2.model.ConferenceRecord> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^conferenceRecords/[^/]+$");

      /**
       * Gets a conference record by conference ID.
       *
       * Create a request for the method "conferenceRecords.get".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name of the conference.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ConferenceRecord.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^conferenceRecords/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Resource name of the conference. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the conference.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Resource name of the conference. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^conferenceRecords/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the conference records. By default, ordered by start time and in descending order.
     *
     * Create a request for the method "conferenceRecords.list".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListConferenceRecordsResponse> {

      private static final String REST_PATH = "v2/conferenceRecords";

      /**
       * Lists the conference records. By default, ordered by start time and in descending order.
       *
       * Create a request for the method "conferenceRecords.list".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListConferenceRecordsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Optional. User specified filtering condition in [EBNF
       * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are
       * the filterable fields: * `space.meeting_code` * `space.name` * `start_time` * `end_time`
       * For example, consider the following filters: * `space.name = "spaces/NAME"` *
       * `space.meeting_code = "abc-mnop-xyz"` * `start_time>="2024-01-01T00:00:00.000Z" AND
       * start_time<="2024-01-02T00:00:00.000Z"` * `end_time IS NULL`
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. User specified filtering condition in [EBNF
     format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the
     filterable fields: * `space.meeting_code` * `space.name` * `start_time` * `end_time` For example,
     consider the following filters: * `space.name = "spaces/NAME"` * `space.meeting_code = "abc-mnop-
     xyz"` * `start_time>="2024-01-01T00:00:00.000Z" AND start_time<="2024-01-02T00:00:00.000Z"` *
     `end_time IS NULL`
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Optional. User specified filtering condition in [EBNF
       * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are
       * the filterable fields: * `space.meeting_code` * `space.name` * `start_time` * `end_time`
       * For example, consider the following filters: * `space.name = "spaces/NAME"` *
       * `space.meeting_code = "abc-mnop-xyz"` * `start_time>="2024-01-01T00:00:00.000Z" AND
       * start_time<="2024-01-02T00:00:00.000Z"` * `end_time IS NULL`
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. Maximum number of conference records to return. The service might return fewer
       * than this value. If unspecified, at most 25 conference records are returned. The maximum
       * value is 100; values above 100 are coerced to 100. Maximum might change in the future.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Optional. Maximum number of conference records to return. The service might return fewer than this
     value. If unspecified, at most 25 conference records are returned. The maximum value is 100; values
     above 100 are coerced to 100. Maximum might change in the future.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Optional. Maximum number of conference records to return. The service might return fewer
       * than this value. If unspecified, at most 25 conference records are returned. The maximum
       * value is 100; values above 100 are coerced to 100. Maximum might change in the future.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** Optional. Page token returned from previous List Call. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. Page token returned from previous List Call.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** Optional. Page token returned from previous List Call. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Participants collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Meet meet = new Meet(...);}
     *   {@code Meet.Participants.List request = meet.participants().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Participants participants() {
      return new Participants();
    }

    /**
     * The "participants" collection of methods.
     */
    public class Participants {

      /**
       * Gets a participant by participant ID.
       *
       * Create a request for the method "participants.get".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the participant.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MeetRequest<com.google.api.services.meet.v2.model.Participant> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/participants/[^/]+$");

        /**
         * Gets a participant by participant ID.
         *
         * Create a request for the method "participants.get".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the participant.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.Participant.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/participants/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the participant. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the participant.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the participant. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/participants/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the participants in a conference record. By default, ordered by join time and in descending
       * order. This API supports `fields` as standard parameters like every other API. However, when the
       * `fields` request parameter is omitted, this API defaults to `'participants, next_page_token'`.
       *
       * Create a request for the method "participants.list".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: `conferenceRecords/{conference_record}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListParticipantsResponse> {

        private static final String REST_PATH = "v2/{+parent}/participants";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+$");

        /**
         * Lists the participants in a conference record. By default, ordered by join time and in
         * descending order. This API supports `fields` as standard parameters like every other API.
         * However, when the `fields` request parameter is omitted, this API defaults to `'participants,
         * next_page_token'`.
         *
         * Create a request for the method "participants.list".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: `conferenceRecords/{conference_record}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListParticipantsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: `conferenceRecords/{conference_record}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. User specified filtering condition in [EBNF
         * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following
         * are the filterable fields: * `earliest_start_time` * `latest_end_time` For example,
         * `latest_end_time IS NULL` returns active participants in the conference.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. User specified filtering condition in [EBNF
       format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the
       filterable fields: * `earliest_start_time` * `latest_end_time` For example, `latest_end_time IS
       NULL` returns active participants in the conference.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. User specified filtering condition in [EBNF
         * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following
         * are the filterable fields: * `earliest_start_time` * `latest_end_time` For example,
         * `latest_end_time IS NULL` returns active participants in the conference.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Maximum number of participants to return. The service might return fewer than this value.
         * If unspecified, at most 100 participants are returned. The maximum value is 250; values
         * above 250 are coerced to 250. Maximum might change in the future.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of participants to return. The service might return fewer than this value. If
       unspecified, at most 100 participants are returned. The maximum value is 250; values above 250 are
       coerced to 250. Maximum might change in the future.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Maximum number of participants to return. The service might return fewer than this value.
         * If unspecified, at most 100 participants are returned. The maximum value is 250; values
         * above 250 are coerced to 250. Maximum might change in the future.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Page token returned from previous List Call. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token returned from previous List Call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Page token returned from previous List Call. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the ParticipantSessions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Meet meet = new Meet(...);}
       *   {@code Meet.ParticipantSessions.List request = meet.participantSessions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ParticipantSessions participantSessions() {
        return new ParticipantSessions();
      }

      /**
       * The "participantSessions" collection of methods.
       */
      public class ParticipantSessions {

        /**
         * Gets a participant session by participant session ID.
         *
         * Create a request for the method "participantSessions.get".
         *
         * This request holds the parameters needed by the meet server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the participant.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends MeetRequest<com.google.api.services.meet.v2.model.ParticipantSession> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/participants/[^/]+/participantSessions/[^/]+$");

          /**
           * Gets a participant session by participant session ID.
           *
           * Create a request for the method "participantSessions.get".
           *
           * This request holds the parameters needed by the the meet server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the participant.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ParticipantSession.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^conferenceRecords/[^/]+/participants/[^/]+/participantSessions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the participant. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the participant.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the participant. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^conferenceRecords/[^/]+/participants/[^/]+/participantSessions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the participant sessions of a participant in a conference record. By default, ordered by
         * join time and in descending order. This API supports `fields` as standard parameters like every
         * other API. However, when the `fields` request parameter is omitted this API defaults to
         * `'participantsessions, next_page_token'`.
         *
         * Create a request for the method "participantSessions.list".
         *
         * This request holds the parameters needed by the meet server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListParticipantSessionsResponse> {

          private static final String REST_PATH = "v2/{+parent}/participantSessions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/participants/[^/]+$");

          /**
           * Lists the participant sessions of a participant in a conference record. By default, ordered by
           * join time and in descending order. This API supports `fields` as standard parameters like every
           * other API. However, when the `fields` request parameter is omitted this API defaults to
           * `'participantsessions, next_page_token'`.
           *
           * Create a request for the method "participantSessions.list".
           *
           * This request holds the parameters needed by the the meet server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListParticipantSessionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^conferenceRecords/[^/]+/participants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Format: `conferenceRecords/{conference_record}/participants/{participant}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^conferenceRecords/[^/]+/participants/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. User specified filtering condition in [EBNF
           * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following
           * are the filterable fields: * `start_time` * `end_time` For example, `end_time IS NULL`
           * returns active participant sessions in the conference record.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. User specified filtering condition in [EBNF
         format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following are the
         filterable fields: * `start_time` * `end_time` For example, `end_time IS NULL` returns active
         participant sessions in the conference record.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. User specified filtering condition in [EBNF
           * format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form). The following
           * are the filterable fields: * `start_time` * `end_time` For example, `end_time IS NULL`
           * returns active participant sessions in the conference record.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Maximum number of participant sessions to return. The service might return
           * fewer than this value. If unspecified, at most 100 participants are returned. The
           * maximum value is 250; values above 250 are coerced to 250. Maximum might change in the
           * future.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number of participant sessions to return. The service might return fewer than
         this value. If unspecified, at most 100 participants are returned. The maximum value is 250; values
         above 250 are coerced to 250. Maximum might change in the future.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number of participant sessions to return. The service might return
           * fewer than this value. If unspecified, at most 100 participants are returned. The
           * maximum value is 250; values above 250 are coerced to 250. Maximum might change in the
           * future.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. Page token returned from previous List Call. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Page token returned from previous List Call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. Page token returned from previous List Call. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Recordings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Meet meet = new Meet(...);}
     *   {@code Meet.Recordings.List request = meet.recordings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Recordings recordings() {
      return new Recordings();
    }

    /**
     * The "recordings" collection of methods.
     */
    public class Recordings {

      /**
       * Gets a recording by recording ID.
       *
       * Create a request for the method "recordings.get".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the recording.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MeetRequest<com.google.api.services.meet.v2.model.Recording> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/recordings/[^/]+$");

        /**
         * Gets a recording by recording ID.
         *
         * Create a request for the method "recordings.get".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the recording.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.Recording.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/recordings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the recording. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the recording.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the recording. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/recordings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the recording resources from the conference record. By default, ordered by start time and
       * in ascending order.
       *
       * Create a request for the method "recordings.list".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: `conferenceRecords/{conference_record}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListRecordingsResponse> {

        private static final String REST_PATH = "v2/{+parent}/recordings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+$");

        /**
         * Lists the recording resources from the conference record. By default, ordered by start time and
         * in ascending order.
         *
         * Create a request for the method "recordings.list".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: `conferenceRecords/{conference_record}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListRecordingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: `conferenceRecords/{conference_record}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Maximum number of recordings to return. The service might return fewer than this value.
         * If unspecified, at most 10 recordings are returned. The maximum value is 100; values
         * above 100 are coerced to 100. Maximum might change in the future.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of recordings to return. The service might return fewer than this value. If
       unspecified, at most 10 recordings are returned. The maximum value is 100; values above 100 are
       coerced to 100. Maximum might change in the future.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Maximum number of recordings to return. The service might return fewer than this value.
         * If unspecified, at most 10 recordings are returned. The maximum value is 100; values
         * above 100 are coerced to 100. Maximum might change in the future.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Page token returned from previous List Call. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token returned from previous List Call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Page token returned from previous List Call. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Transcripts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Meet meet = new Meet(...);}
     *   {@code Meet.Transcripts.List request = meet.transcripts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Transcripts transcripts() {
      return new Transcripts();
    }

    /**
     * The "transcripts" collection of methods.
     */
    public class Transcripts {

      /**
       * Gets a transcript by transcript ID.
       *
       * Create a request for the method "transcripts.get".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the transcript.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MeetRequest<com.google.api.services.meet.v2.model.Transcript> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/transcripts/[^/]+$");

        /**
         * Gets a transcript by transcript ID.
         *
         * Create a request for the method "transcripts.get".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the transcript.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.Transcript.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/transcripts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the transcript. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the transcript.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the transcript. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^conferenceRecords/[^/]+/transcripts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the set of transcripts from the conference record. By default, ordered by start time and in
       * ascending order.
       *
       * Create a request for the method "transcripts.list".
       *
       * This request holds the parameters needed by the meet server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: `conferenceRecords/{conference_record}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListTranscriptsResponse> {

        private static final String REST_PATH = "v2/{+parent}/transcripts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^conferenceRecords/[^/]+$");

        /**
         * Lists the set of transcripts from the conference record. By default, ordered by start time and
         * in ascending order.
         *
         * Create a request for the method "transcripts.list".
         *
         * This request holds the parameters needed by the the meet server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: `conferenceRecords/{conference_record}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListTranscriptsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: `conferenceRecords/{conference_record}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: `conferenceRecords/{conference_record}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^conferenceRecords/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Maximum number of transcripts to return. The service might return fewer than this value.
         * If unspecified, at most 10 transcripts are returned. The maximum value is 100; values
         * above 100 are coerced to 100. Maximum might change in the future.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of transcripts to return. The service might return fewer than this value. If
       unspecified, at most 10 transcripts are returned. The maximum value is 100; values above 100 are
       coerced to 100. Maximum might change in the future.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Maximum number of transcripts to return. The service might return fewer than this value.
         * If unspecified, at most 10 transcripts are returned. The maximum value is 100; values
         * above 100 are coerced to 100. Maximum might change in the future.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Page token returned from previous List Call. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token returned from previous List Call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Page token returned from previous List Call. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Entries collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Meet meet = new Meet(...);}
       *   {@code Meet.Entries.List request = meet.entries().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Entries entries() {
        return new Entries();
      }

      /**
       * The "entries" collection of methods.
       */
      public class Entries {

        /**
         * Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries returned by the
         * Google Meet API might not match the transcription found in the Google Docs transcript file. This
         * can occur when the Google Docs transcript file is modified after generation.
         *
         * Create a request for the method "entries.get".
         *
         * This request holds the parameters needed by the meet server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the `TranscriptEntry`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends MeetRequest<com.google.api.services.meet.v2.model.TranscriptEntry> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/transcripts/[^/]+/entries/[^/]+$");

          /**
           * Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries returned by the
           * Google Meet API might not match the transcription found in the Google Docs transcript file.
           * This can occur when the Google Docs transcript file is modified after generation.
           *
           * Create a request for the method "entries.get".
           *
           * This request holds the parameters needed by the the meet server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the `TranscriptEntry`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.TranscriptEntry.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^conferenceRecords/[^/]+/transcripts/[^/]+/entries/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the `TranscriptEntry`. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the `TranscriptEntry`.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the `TranscriptEntry`. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^conferenceRecords/[^/]+/transcripts/[^/]+/entries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the structured transcript entries per transcript. By default, ordered by start time and in
         * ascending order. Note: The transcript entries returned by the Google Meet API might not match the
         * transcription found in the Google Docs transcript file. This can occur when the Google Docs
         * transcript file is modified after generation.
         *
         * Create a request for the method "entries.list".
         *
         * This request holds the parameters needed by the meet server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends MeetRequest<com.google.api.services.meet.v2.model.ListTranscriptEntriesResponse> {

          private static final String REST_PATH = "v2/{+parent}/entries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^conferenceRecords/[^/]+/transcripts/[^/]+$");

          /**
           * Lists the structured transcript entries per transcript. By default, ordered by start time and
           * in ascending order. Note: The transcript entries returned by the Google Meet API might not
           * match the transcription found in the Google Docs transcript file. This can occur when the
           * Google Docs transcript file is modified after generation.
           *
           * Create a request for the method "entries.list".
           *
           * This request holds the parameters needed by the the meet server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.ListTranscriptEntriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^conferenceRecords/[^/]+/transcripts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^conferenceRecords/[^/]+/transcripts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Maximum number of entries to return. The service might return fewer than this value. If
           * unspecified, at most 10 entries are returned. The maximum value is 100; values above
           * 100 are coerced to 100. Maximum might change in the future.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of entries to return. The service might return fewer than this value. If
         unspecified, at most 10 entries are returned. The maximum value is 100; values above 100 are
         coerced to 100. Maximum might change in the future.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of entries to return. The service might return fewer than this value. If
           * unspecified, at most 10 entries are returned. The maximum value is 100; values above
           * 100 are coerced to 100. Maximum might change in the future.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Page token returned from previous List Call. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token returned from previous List Call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Page token returned from previous List Call. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Spaces collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Meet meet = new Meet(...);}
   *   {@code Meet.Spaces.List request = meet.spaces().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Spaces spaces() {
    return new Spaces();
  }

  /**
   * The "spaces" collection of methods.
   */
  public class Spaces {

    /**
     * Creates a space.
     *
     * Create a request for the method "spaces.create".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.meet.v2.model.Space}
     * @return the request
     */
    public Create create(com.google.api.services.meet.v2.model.Space content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends MeetRequest<com.google.api.services.meet.v2.model.Space> {

      private static final String REST_PATH = "v2/spaces";

      /**
       * Creates a space.
       *
       * Create a request for the method "spaces.create".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.meet.v2.model.Space}
       * @since 1.13
       */
      protected Create(com.google.api.services.meet.v2.model.Space content) {
        super(Meet.this, "POST", REST_PATH, content, com.google.api.services.meet.v2.model.Space.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Ends an active conference (if there's one). For an example, see [End active
     * conference](https://developers.google.com/meet/api/guides/meeting-spaces#end-active-conference).
     *
     * Create a request for the method "spaces.endActiveConference".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link EndActiveConference#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource identifier
     *        for the space. It's a unique, server-generated ID and is case sensitive. For example,
     *        `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     *        space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
     *        space).
     * @param content the {@link com.google.api.services.meet.v2.model.EndActiveConferenceRequest}
     * @return the request
     */
    public EndActiveConference endActiveConference(java.lang.String name, com.google.api.services.meet.v2.model.EndActiveConferenceRequest content) throws java.io.IOException {
      EndActiveConference result = new EndActiveConference(name, content);
      initialize(result);
      return result;
    }

    public class EndActiveConference extends MeetRequest<com.google.api.services.meet.v2.model.Empty> {

      private static final String REST_PATH = "v2/{+name}:endActiveConference";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^spaces/[^/]+$");

      /**
       * Ends an active conference (if there's one). For an example, see [End active
       * conference](https://developers.google.com/meet/api/guides/meeting-spaces#end-active-
       * conference).
       *
       * Create a request for the method "spaces.endActiveConference".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link EndActiveConference#execute()} method to invoke the remote
       * operation. <p> {@link EndActiveConference#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource identifier
     *        for the space. It's a unique, server-generated ID and is case sensitive. For example,
     *        `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     *        space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
     *        space).
       * @param content the {@link com.google.api.services.meet.v2.model.EndActiveConferenceRequest}
       * @since 1.13
       */
      protected EndActiveConference(java.lang.String name, com.google.api.services.meet.v2.model.EndActiveConferenceRequest content) {
        super(Meet.this, "POST", REST_PATH, content, com.google.api.services.meet.v2.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
      }

      @Override
      public EndActiveConference set$Xgafv(java.lang.String $Xgafv) {
        return (EndActiveConference) super.set$Xgafv($Xgafv);
      }

      @Override
      public EndActiveConference setAccessToken(java.lang.String accessToken) {
        return (EndActiveConference) super.setAccessToken(accessToken);
      }

      @Override
      public EndActiveConference setAlt(java.lang.String alt) {
        return (EndActiveConference) super.setAlt(alt);
      }

      @Override
      public EndActiveConference setCallback(java.lang.String callback) {
        return (EndActiveConference) super.setCallback(callback);
      }

      @Override
      public EndActiveConference setFields(java.lang.String fields) {
        return (EndActiveConference) super.setFields(fields);
      }

      @Override
      public EndActiveConference setKey(java.lang.String key) {
        return (EndActiveConference) super.setKey(key);
      }

      @Override
      public EndActiveConference setOauthToken(java.lang.String oauthToken) {
        return (EndActiveConference) super.setOauthToken(oauthToken);
      }

      @Override
      public EndActiveConference setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EndActiveConference) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EndActiveConference setQuotaUser(java.lang.String quotaUser) {
        return (EndActiveConference) super.setQuotaUser(quotaUser);
      }

      @Override
      public EndActiveConference setUploadType(java.lang.String uploadType) {
        return (EndActiveConference) super.setUploadType(uploadType);
      }

      @Override
      public EndActiveConference setUploadProtocol(java.lang.String uploadProtocol) {
        return (EndActiveConference) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
       * identifier for the space. It's a unique, server-generated ID and is case sensitive. For
       * example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
       * space).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
     identifier for the space. It's a unique, server-generated ID and is case sensitive. For example,
     `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
       * identifier for the space. It's a unique, server-generated ID and is case sensitive. For
       * example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
       * space).
       */
      public EndActiveConference setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public EndActiveConference set(String parameterName, Object value) {
        return (EndActiveConference) super.set(parameterName, value);
      }
    }
    /**
     * Gets details about a meeting space. For an example, see [Get a meeting
     * space](https://developers.google.com/meet/api/guides/meeting-spaces#get-meeting-space).
     *
     * Create a request for the method "spaces.get".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`. `{space}`
     *        is the resource identifier for the space. It's a unique, server-generated ID and is case
     *        sensitive. For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a
     *        typeable, unique character string and is non-case sensitive. For example, `abc-mnop-xyz`.
     *        The maximum length is 128 characters. A `meetingCode` shouldn't be stored long term as it
     *        can become dissociated from a meeting space and can be reused for different meeting spaces
     *        in the future. Generally, a `meetingCode` expires 365 days after last use. For more
     *        information, see [Learn about meeting codes in Google
     *        Meet](https://support.google.com/meet/answer/10710509). For more information, see [How
     *        Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-
     *        spaces#identify-meeting-space).
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends MeetRequest<com.google.api.services.meet.v2.model.Space> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^spaces/[^/]+$");

      /**
       * Gets details about a meeting space. For an example, see [Get a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#get-meeting-space).
       *
       * Create a request for the method "spaces.get".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`. `{space}`
     *        is the resource identifier for the space. It's a unique, server-generated ID and is case
     *        sensitive. For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a
     *        typeable, unique character string and is non-case sensitive. For example, `abc-mnop-xyz`.
     *        The maximum length is 128 characters. A `meetingCode` shouldn't be stored long term as it
     *        can become dissociated from a meeting space and can be reused for different meeting spaces
     *        in the future. Generally, a `meetingCode` expires 365 days after last use. For more
     *        information, see [Learn about meeting codes in Google
     *        Meet](https://support.google.com/meet/answer/10710509). For more information, see [How
     *        Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-
     *        spaces#identify-meeting-space).
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Meet.this, "GET", REST_PATH, null, com.google.api.services.meet.v2.model.Space.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`.
       * `{space}` is the resource identifier for the space. It's a unique, server-generated ID and
       * is case sensitive. For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space.
       * It's a typeable, unique character string and is non-case sensitive. For example, `abc-mnop-
       * xyz`. The maximum length is 128 characters. A `meetingCode` shouldn't be stored long term
       * as it can become dissociated from a meeting space and can be reused for different meeting
       * spaces in the future. Generally, a `meetingCode` expires 365 days after last use. For more
       * information, see [Learn about meeting codes in Google
       * Meet](https://support.google.com/meet/answer/10710509). For more information, see [How Meet
       * identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-
       * spaces#identify-meeting-space).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`. `{space}`
     is the resource identifier for the space. It's a unique, server-generated ID and is case sensitive.
     For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a typeable, unique
     character string and is non-case sensitive. For example, `abc-mnop-xyz`. The maximum length is 128
     characters. A `meetingCode` shouldn't be stored long term as it can become dissociated from a
     meeting space and can be reused for different meeting spaces in the future. Generally, a
     `meetingCode` expires 365 days after last use. For more information, see [Learn about meeting codes
     in Google Meet](https://support.google.com/meet/answer/10710509). For more information, see [How
     Meet identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-
     spaces#identify-meeting-space).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name of the space. Format: `spaces/{space}` or `spaces/{meetingCode}`.
       * `{space}` is the resource identifier for the space. It's a unique, server-generated ID and
       * is case sensitive. For example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space.
       * It's a typeable, unique character string and is non-case sensitive. For example, `abc-mnop-
       * xyz`. The maximum length is 128 characters. A `meetingCode` shouldn't be stored long term
       * as it can become dissociated from a meeting space and can be reused for different meeting
       * spaces in the future. Generally, a `meetingCode` expires 365 days after last use. For more
       * information, see [Learn about meeting codes in Google
       * Meet](https://support.google.com/meet/answer/10710509). For more information, see [How Meet
       * identifies a meeting space](https://developers.google.com/meet/api/guides/meeting-
       * spaces#identify-meeting-space).
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates details about a meeting space. For an example, see [Update a meeting
     * space](https://developers.google.com/meet/api/guides/meeting-spaces#update-meeting-space).
     *
     * Create a request for the method "spaces.patch".
     *
     * This request holds the parameters needed by the meet server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
     *        identifier for the space. It's a unique, server-generated ID and is case sensitive. For
     *        example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     *        space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
     *        space).
     * @param content the {@link com.google.api.services.meet.v2.model.Space}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.meet.v2.model.Space content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends MeetRequest<com.google.api.services.meet.v2.model.Space> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^spaces/[^/]+$");

      /**
       * Updates details about a meeting space. For an example, see [Update a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#update-meeting-space).
       *
       * Create a request for the method "spaces.patch".
       *
       * This request holds the parameters needed by the the meet server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
     *        identifier for the space. It's a unique, server-generated ID and is case sensitive. For
     *        example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     *        space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
     *        space).
       * @param content the {@link com.google.api.services.meet.v2.model.Space}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.meet.v2.model.Space content) {
        super(Meet.this, "PATCH", REST_PATH, content, com.google.api.services.meet.v2.model.Space.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
       * identifier for the space. It's a unique, server-generated ID and is case sensitive. For
       * example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
       * space).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
     identifier for the space. It's a unique, server-generated ID and is case sensitive. For example,
     `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
     space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}` is the resource
       * identifier for the space. It's a unique, server-generated ID and is case sensitive. For
       * example, `jQCFfuBOdN5z`. For more information, see [How Meet identifies a meeting
       * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-
       * space).
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^spaces/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. Field mask used to specify the fields to be updated in the space. If update_mask
       * isn't provided, it defaults to '*' and updates all fields provided in the request,
       * including deleting fields not set in the request.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. Field mask used to specify the fields to be updated in the space. If update_mask isn't
     provided, it defaults to '*' and updates all fields provided in the request, including deleting
     fields not set in the request.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Optional. Field mask used to specify the fields to be updated in the space. If update_mask
       * isn't provided, it defaults to '*' and updates all fields provided in the request,
       * including deleting fields not set in the request.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Meet}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Meet}. */
    @Override
    public Meet build() {
      return new Meet(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MeetRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMeetRequestInitializer(
        MeetRequestInitializer meetRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(meetRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
