/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.metastore.v1alpha.model;

/**
 * Represents a federation of multiple backend metastores.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataproc Metastore API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Federation extends com.google.api.client.json.GenericJson {

  /**
   * A map from BackendMetastore rank to BackendMetastores from which the federation service serves
   * metadata at query time. The map key represents the order in which BackendMetastores should be
   * evaluated to resolve database names at query time and should be greater than or equal to zero.
   * A BackendMetastore with a lower number will be evaluated before a BackendMetastore with a
   * higher number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, BackendMetastore> backendMetastores;

  static {
    // hack to force ProGuard to consider BackendMetastore used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(BackendMetastore.class);
  }

  /**
   * Output only. The time when the metastore federation was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The federation endpoint.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String endpointUri;

  /**
   * User-defined labels for the metastore federation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Immutable. The relative resource name of the federation, of the form:
   * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The current state of the federation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Additional information about the current state of the metastore federation, if
   * available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateMessage;

  /**
   * Output only. The globally unique resource identifier of the metastore federation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The time when the metastore federation was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Immutable. The Apache Hive metastore version of the federation. All backend metastore versions
   * must be compatible with the federation version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * A map from BackendMetastore rank to BackendMetastores from which the federation service serves
   * metadata at query time. The map key represents the order in which BackendMetastores should be
   * evaluated to resolve database names at query time and should be greater than or equal to zero.
   * A BackendMetastore with a lower number will be evaluated before a BackendMetastore with a
   * higher number.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, BackendMetastore> getBackendMetastores() {
    return backendMetastores;
  }

  /**
   * A map from BackendMetastore rank to BackendMetastores from which the federation service serves
   * metadata at query time. The map key represents the order in which BackendMetastores should be
   * evaluated to resolve database names at query time and should be greater than or equal to zero.
   * A BackendMetastore with a lower number will be evaluated before a BackendMetastore with a
   * higher number.
   * @param backendMetastores backendMetastores or {@code null} for none
   */
  public Federation setBackendMetastores(java.util.Map<String, BackendMetastore> backendMetastores) {
    this.backendMetastores = backendMetastores;
    return this;
  }

  /**
   * Output only. The time when the metastore federation was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the metastore federation was created.
   * @param createTime createTime or {@code null} for none
   */
  public Federation setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The federation endpoint.
   * @return value or {@code null} for none
   */
  public java.lang.String getEndpointUri() {
    return endpointUri;
  }

  /**
   * Output only. The federation endpoint.
   * @param endpointUri endpointUri or {@code null} for none
   */
  public Federation setEndpointUri(java.lang.String endpointUri) {
    this.endpointUri = endpointUri;
    return this;
  }

  /**
   * User-defined labels for the metastore federation.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * User-defined labels for the metastore federation.
   * @param labels labels or {@code null} for none
   */
  public Federation setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Immutable. The relative resource name of the federation, of the form:
   * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The relative resource name of the federation, of the form:
   * projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
   * @param name name or {@code null} for none
   */
  public Federation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The current state of the federation.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of the federation.
   * @param state state or {@code null} for none
   */
  public Federation setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Additional information about the current state of the metastore federation, if
   * available.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateMessage() {
    return stateMessage;
  }

  /**
   * Output only. Additional information about the current state of the metastore federation, if
   * available.
   * @param stateMessage stateMessage or {@code null} for none
   */
  public Federation setStateMessage(java.lang.String stateMessage) {
    this.stateMessage = stateMessage;
    return this;
  }

  /**
   * Output only. The globally unique resource identifier of the metastore federation.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The globally unique resource identifier of the metastore federation.
   * @param uid uid or {@code null} for none
   */
  public Federation setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The time when the metastore federation was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the metastore federation was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Federation setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Immutable. The Apache Hive metastore version of the federation. All backend metastore versions
   * must be compatible with the federation version.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Immutable. The Apache Hive metastore version of the federation. All backend metastore versions
   * must be compatible with the federation version.
   * @param version version or {@code null} for none
   */
  public Federation setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public Federation set(String fieldName, Object value) {
    return (Federation) super.set(fieldName, value);
  }

  @Override
  public Federation clone() {
    return (Federation) super.clone();
  }

}
