/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.webmasters;

/**
 * Service definition for Webmasters (v3).
 *
 * <p>
 * View Google Search Console data for your verified sites.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/webmaster-tools/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link WebmastersRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Webmasters extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Search Console API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "webmasters/v3/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/webmasters/v3";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Webmasters(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Webmasters(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Searchanalytics collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Webmasters webmasters = new Webmasters(...);}
   *   {@code Webmasters.Searchanalytics.List request = webmasters.searchanalytics().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Searchanalytics searchanalytics() {
    return new Searchanalytics();
  }

  /**
   * The "searchanalytics" collection of methods.
   */
  public class Searchanalytics {

    /**
     * Query your data with filters and parameters that you define. Returns zero or more rows grouped by
     * the row keys that you define. You must define a date range of one or more days.
     *
     * When date is one of the group by values, any days without data are omitted from the result list.
     * If you need to know which days have data, issue a broad date range query grouped by date for any
     * metric, and see which day rows are returned.
     *
     * Create a request for the method "searchanalytics.query".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Query#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param content the {@link com.google.api.services.webmasters.model.SearchAnalyticsQueryRequest}
     * @return the request
     */
    public Query query(java.lang.String siteUrl, com.google.api.services.webmasters.model.SearchAnalyticsQueryRequest content) throws java.io.IOException {
      Query result = new Query(siteUrl, content);
      initialize(result);
      return result;
    }

    public class Query extends WebmastersRequest<com.google.api.services.webmasters.model.SearchAnalyticsQueryResponse> {

      private static final String REST_PATH = "sites/{siteUrl}/searchAnalytics/query";

      /**
       * Query your data with filters and parameters that you define. Returns zero or more rows grouped
       * by the row keys that you define. You must define a date range of one or more days.
       *
       * When date is one of the group by values, any days without data are omitted from the result
       * list. If you need to know which days have data, issue a broad date range query grouped by date
       * for any metric, and see which day rows are returned.
       *
       * Create a request for the method "searchanalytics.query".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       * <p> {@link
       * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param content the {@link com.google.api.services.webmasters.model.SearchAnalyticsQueryRequest}
       * @since 1.13
       */
      protected Query(java.lang.String siteUrl, com.google.api.services.webmasters.model.SearchAnalyticsQueryRequest content) {
        super(Webmasters.this, "POST", REST_PATH, content, com.google.api.services.webmasters.model.SearchAnalyticsQueryResponse.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public Query setAlt(java.lang.String alt) {
        return (Query) super.setAlt(alt);
      }

      @Override
      public Query setFields(java.lang.String fields) {
        return (Query) super.setFields(fields);
      }

      @Override
      public Query setKey(java.lang.String key) {
        return (Query) super.setKey(key);
      }

      @Override
      public Query setOauthToken(java.lang.String oauthToken) {
        return (Query) super.setOauthToken(oauthToken);
      }

      @Override
      public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Query) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Query setQuotaUser(java.lang.String quotaUser) {
        return (Query) super.setQuotaUser(quotaUser);
      }

      @Override
      public Query setUserIp(java.lang.String userIp) {
        return (Query) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Query setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      @Override
      public Query set(String parameterName, Object value) {
        return (Query) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Sitemaps collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Webmasters webmasters = new Webmasters(...);}
   *   {@code Webmasters.Sitemaps.List request = webmasters.sitemaps().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Sitemaps sitemaps() {
    return new Sitemaps();
  }

  /**
   * The "sitemaps" collection of methods.
   */
  public class Sitemaps {

    /**
     * Deletes a sitemap from this site.
     *
     * Create a request for the method "sitemaps.delete".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param feedpath The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
     * @return the request
     */
    public Delete delete(java.lang.String siteUrl, java.lang.String feedpath) throws java.io.IOException {
      Delete result = new Delete(siteUrl, feedpath);
      initialize(result);
      return result;
    }

    public class Delete extends WebmastersRequest<Void> {

      private static final String REST_PATH = "sites/{siteUrl}/sitemaps/{feedpath}";

      /**
       * Deletes a sitemap from this site.
       *
       * Create a request for the method "sitemaps.delete".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param feedpath The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
       * @since 1.13
       */
      protected Delete(java.lang.String siteUrl, java.lang.String feedpath) {
        super(Webmasters.this, "DELETE", REST_PATH, null, Void.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.feedpath = com.google.api.client.util.Preconditions.checkNotNull(feedpath, "Required parameter feedpath must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Delete setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml */
      @com.google.api.client.util.Key
      private java.lang.String feedpath;

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
       */
      public java.lang.String getFeedpath() {
        return feedpath;
      }

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml */
      public Delete setFeedpath(java.lang.String feedpath) {
        this.feedpath = feedpath;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves information about a specific sitemap.
     *
     * Create a request for the method "sitemaps.get".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param feedpath The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
     * @return the request
     */
    public Get get(java.lang.String siteUrl, java.lang.String feedpath) throws java.io.IOException {
      Get result = new Get(siteUrl, feedpath);
      initialize(result);
      return result;
    }

    public class Get extends WebmastersRequest<com.google.api.services.webmasters.model.WmxSitemap> {

      private static final String REST_PATH = "sites/{siteUrl}/sitemaps/{feedpath}";

      /**
       * Retrieves information about a specific sitemap.
       *
       * Create a request for the method "sitemaps.get".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param feedpath The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
       * @since 1.13
       */
      protected Get(java.lang.String siteUrl, java.lang.String feedpath) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.WmxSitemap.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.feedpath = com.google.api.client.util.Preconditions.checkNotNull(feedpath, "Required parameter feedpath must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Get setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml */
      @com.google.api.client.util.Key
      private java.lang.String feedpath;

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
       */
      public java.lang.String getFeedpath() {
        return feedpath;
      }

      /** The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml */
      public Get setFeedpath(java.lang.String feedpath) {
        this.feedpath = feedpath;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if
     * sitemapIndex is specified in the request).
     *
     * Create a request for the method "sitemaps.list".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @return the request
     */
    public List list(java.lang.String siteUrl) throws java.io.IOException {
      List result = new List(siteUrl);
      initialize(result);
      return result;
    }

    public class List extends WebmastersRequest<com.google.api.services.webmasters.model.SitemapsListResponse> {

      private static final String REST_PATH = "sites/{siteUrl}/sitemaps";

      /**
       * Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if
       * sitemapIndex is specified in the request).
       *
       * Create a request for the method "sitemaps.list".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @since 1.13
       */
      protected List(java.lang.String siteUrl) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.SitemapsListResponse.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public List setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /** A URL of a site's sitemap index. For example: http://www.example.com/sitemapindex.xml */
      @com.google.api.client.util.Key
      private java.lang.String sitemapIndex;

      /** A URL of a site's sitemap index. For example: http://www.example.com/sitemapindex.xml
       */
      public java.lang.String getSitemapIndex() {
        return sitemapIndex;
      }

      /** A URL of a site's sitemap index. For example: http://www.example.com/sitemapindex.xml */
      public List setSitemapIndex(java.lang.String sitemapIndex) {
        this.sitemapIndex = sitemapIndex;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Submits a sitemap for a site.
     *
     * Create a request for the method "sitemaps.submit".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Submit#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param feedpath The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml
     * @return the request
     */
    public Submit submit(java.lang.String siteUrl, java.lang.String feedpath) throws java.io.IOException {
      Submit result = new Submit(siteUrl, feedpath);
      initialize(result);
      return result;
    }

    public class Submit extends WebmastersRequest<Void> {

      private static final String REST_PATH = "sites/{siteUrl}/sitemaps/{feedpath}";

      /**
       * Submits a sitemap for a site.
       *
       * Create a request for the method "sitemaps.submit".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Submit#execute()} method to invoke the remote operation.
       * <p> {@link
       * Submit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param feedpath The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml
       * @since 1.13
       */
      protected Submit(java.lang.String siteUrl, java.lang.String feedpath) {
        super(Webmasters.this, "PUT", REST_PATH, null, Void.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.feedpath = com.google.api.client.util.Preconditions.checkNotNull(feedpath, "Required parameter feedpath must be specified.");
      }

      @Override
      public Submit setAlt(java.lang.String alt) {
        return (Submit) super.setAlt(alt);
      }

      @Override
      public Submit setFields(java.lang.String fields) {
        return (Submit) super.setFields(fields);
      }

      @Override
      public Submit setKey(java.lang.String key) {
        return (Submit) super.setKey(key);
      }

      @Override
      public Submit setOauthToken(java.lang.String oauthToken) {
        return (Submit) super.setOauthToken(oauthToken);
      }

      @Override
      public Submit setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Submit) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Submit setQuotaUser(java.lang.String quotaUser) {
        return (Submit) super.setQuotaUser(quotaUser);
      }

      @Override
      public Submit setUserIp(java.lang.String userIp) {
        return (Submit) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Submit setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /** The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml */
      @com.google.api.client.util.Key
      private java.lang.String feedpath;

      /** The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml
       */
      public java.lang.String getFeedpath() {
        return feedpath;
      }

      /** The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml */
      public Submit setFeedpath(java.lang.String feedpath) {
        this.feedpath = feedpath;
        return this;
      }

      @Override
      public Submit set(String parameterName, Object value) {
        return (Submit) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Sites collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Webmasters webmasters = new Webmasters(...);}
   *   {@code Webmasters.Sites.List request = webmasters.sites().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Sites sites() {
    return new Sites();
  }

  /**
   * The "sites" collection of methods.
   */
  public class Sites {

    /**
     * Adds a site to the set of the user's sites in Search Console.
     *
     * Create a request for the method "sites.add".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Add#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The URL of the site to add.
     * @return the request
     */
    public Add add(java.lang.String siteUrl) throws java.io.IOException {
      Add result = new Add(siteUrl);
      initialize(result);
      return result;
    }

    public class Add extends WebmastersRequest<Void> {

      private static final String REST_PATH = "sites/{siteUrl}";

      /**
       * Adds a site to the set of the user's sites in Search Console.
       *
       * Create a request for the method "sites.add".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Add#execute()} method to invoke the remote operation. <p>
       * {@link Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The URL of the site to add.
       * @since 1.13
       */
      protected Add(java.lang.String siteUrl) {
        super(Webmasters.this, "PUT", REST_PATH, null, Void.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public Add setAlt(java.lang.String alt) {
        return (Add) super.setAlt(alt);
      }

      @Override
      public Add setFields(java.lang.String fields) {
        return (Add) super.setFields(fields);
      }

      @Override
      public Add setKey(java.lang.String key) {
        return (Add) super.setKey(key);
      }

      @Override
      public Add setOauthToken(java.lang.String oauthToken) {
        return (Add) super.setOauthToken(oauthToken);
      }

      @Override
      public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Add) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Add setQuotaUser(java.lang.String quotaUser) {
        return (Add) super.setQuotaUser(quotaUser);
      }

      @Override
      public Add setUserIp(java.lang.String userIp) {
        return (Add) super.setUserIp(userIp);
      }

      /** The URL of the site to add. */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The URL of the site to add.
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The URL of the site to add. */
      public Add setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      @Override
      public Add set(String parameterName, Object value) {
        return (Add) super.set(parameterName, value);
      }
    }
    /**
     * Removes a site from the set of the user's Search Console sites.
     *
     * Create a request for the method "sites.delete".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     *        app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is
     *        used in Search Console URLs.
     * @return the request
     */
    public Delete delete(java.lang.String siteUrl) throws java.io.IOException {
      Delete result = new Delete(siteUrl);
      initialize(result);
      return result;
    }

    public class Delete extends WebmastersRequest<Void> {

      private static final String REST_PATH = "sites/{siteUrl}";

      /**
       * Removes a site from the set of the user's Search Console sites.
       *
       * Create a request for the method "sites.delete".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     *        app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is
     *        used in Search Console URLs.
       * @since 1.13
       */
      protected Delete(java.lang.String siteUrl) {
        super(Webmasters.this, "DELETE", REST_PATH, null, Void.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /**
       * The URI of the property as defined in Search Console. Examples: http://www.example.com/ or
       * android-app://com.example/ Note: for property-sets, use the URI that starts with sc-set:
       * which is used in Search Console URLs.
       */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is used in
     Search Console URLs.
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /**
       * The URI of the property as defined in Search Console. Examples: http://www.example.com/ or
       * android-app://com.example/ Note: for property-sets, use the URI that starts with sc-set:
       * which is used in Search Console URLs.
       */
      public Delete setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves information about specific site.
     *
     * Create a request for the method "sites.get".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     *        app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is
     *        used in Search Console URLs.
     * @return the request
     */
    public Get get(java.lang.String siteUrl) throws java.io.IOException {
      Get result = new Get(siteUrl);
      initialize(result);
      return result;
    }

    public class Get extends WebmastersRequest<com.google.api.services.webmasters.model.WmxSite> {

      private static final String REST_PATH = "sites/{siteUrl}";

      /**
       * Retrieves information about specific site.
       *
       * Create a request for the method "sites.get".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     *        app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is
     *        used in Search Console URLs.
       * @since 1.13
       */
      protected Get(java.lang.String siteUrl) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.WmxSite.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /**
       * The URI of the property as defined in Search Console. Examples: http://www.example.com/ or
       * android-app://com.example/ Note: for property-sets, use the URI that starts with sc-set:
       * which is used in Search Console URLs.
       */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-
     app://com.example/ Note: for property-sets, use the URI that starts with sc-set: which is used in
     Search Console URLs.
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /**
       * The URI of the property as defined in Search Console. Examples: http://www.example.com/ or
       * android-app://com.example/ Note: for property-sets, use the URI that starts with sc-set:
       * which is used in Search Console URLs.
       */
      public Get setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the user's Search Console sites.
     *
     * Create a request for the method "sites.list".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends WebmastersRequest<com.google.api.services.webmasters.model.SitesListResponse> {

      private static final String REST_PATH = "sites";

      /**
       * Lists the user's Search Console sites.
       *
       * Create a request for the method "sites.list".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.SitesListResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Urlcrawlerrorscounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Webmasters webmasters = new Webmasters(...);}
   *   {@code Webmasters.Urlcrawlerrorscounts.List request = webmasters.urlcrawlerrorscounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Urlcrawlerrorscounts urlcrawlerrorscounts() {
    return new Urlcrawlerrorscounts();
  }

  /**
   * The "urlcrawlerrorscounts" collection of methods.
   */
  public class Urlcrawlerrorscounts {

    /**
     * Retrieves a time series of the number of URL crawl errors per error category and platform.
     *
     * Create a request for the method "urlcrawlerrorscounts.query".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Query#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @return the request
     */
    public Query query(java.lang.String siteUrl) throws java.io.IOException {
      Query result = new Query(siteUrl);
      initialize(result);
      return result;
    }

    public class Query extends WebmastersRequest<com.google.api.services.webmasters.model.UrlCrawlErrorsCountsQueryResponse> {

      private static final String REST_PATH = "sites/{siteUrl}/urlCrawlErrorsCounts/query";

      /**
       * Retrieves a time series of the number of URL crawl errors per error category and platform.
       *
       * Create a request for the method "urlcrawlerrorscounts.query".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       * <p> {@link
       * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @since 1.13
       */
      protected Query(java.lang.String siteUrl) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.UrlCrawlErrorsCountsQueryResponse.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Query setAlt(java.lang.String alt) {
        return (Query) super.setAlt(alt);
      }

      @Override
      public Query setFields(java.lang.String fields) {
        return (Query) super.setFields(fields);
      }

      @Override
      public Query setKey(java.lang.String key) {
        return (Query) super.setKey(key);
      }

      @Override
      public Query setOauthToken(java.lang.String oauthToken) {
        return (Query) super.setOauthToken(oauthToken);
      }

      @Override
      public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Query) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Query setQuotaUser(java.lang.String quotaUser) {
        return (Query) super.setQuotaUser(quotaUser);
      }

      @Override
      public Query setUserIp(java.lang.String userIp) {
        return (Query) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Query setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /**
       * The crawl error category. For example: serverError. If not specified, returns results for
       * all categories.
       */
      @com.google.api.client.util.Key
      private java.lang.String category;

      /** The crawl error category. For example: serverError. If not specified, returns results for all
     categories.
       */
      public java.lang.String getCategory() {
        return category;
      }

      /**
       * The crawl error category. For example: serverError. If not specified, returns results for
       * all categories.
       */
      public Query setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      /** If true, returns only the latest crawl error counts. */
      @com.google.api.client.util.Key
      private java.lang.Boolean latestCountsOnly;

      /** If true, returns only the latest crawl error counts. [default: true]
       */
      public java.lang.Boolean getLatestCountsOnly() {
        return latestCountsOnly;
      }

      /** If true, returns only the latest crawl error counts. */
      public Query setLatestCountsOnly(java.lang.Boolean latestCountsOnly) {
        this.latestCountsOnly = latestCountsOnly;
        return this;
      }

      /**
       * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
       *
       * <p>
       * Boolean properties can have four possible values:
       * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
       * or {@link Boolean#FALSE}.
       * </p>
       *
       * <p>
       * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
       * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
       * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * </p>
       *
       * <p>
       * If true, returns only the latest crawl error counts.
       * </p>
       */
      public boolean isLatestCountsOnly() {
        if (latestCountsOnly == null || latestCountsOnly == com.google.api.client.util.Data.NULL_BOOLEAN) {
          return true;
        }
        return latestCountsOnly;
      }

      /**
       * The user agent type (platform) that made the request. For example: web. If not specified,
       * returns results for all platforms.
       */
      @com.google.api.client.util.Key
      private java.lang.String platform;

      /** The user agent type (platform) that made the request. For example: web. If not specified, returns
     results for all platforms.
       */
      public java.lang.String getPlatform() {
        return platform;
      }

      /**
       * The user agent type (platform) that made the request. For example: web. If not specified,
       * returns results for all platforms.
       */
      public Query setPlatform(java.lang.String platform) {
        this.platform = platform;
        return this;
      }

      @Override
      public Query set(String parameterName, Object value) {
        return (Query) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Urlcrawlerrorssamples collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Webmasters webmasters = new Webmasters(...);}
   *   {@code Webmasters.Urlcrawlerrorssamples.List request = webmasters.urlcrawlerrorssamples().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Urlcrawlerrorssamples urlcrawlerrorssamples() {
    return new Urlcrawlerrorssamples();
  }

  /**
   * The "urlcrawlerrorssamples" collection of methods.
   */
  public class Urlcrawlerrorssamples {

    /**
     * Retrieves details about crawl errors for a site's sample URL.
     *
     * Create a request for the method "urlcrawlerrorssamples.get".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param url The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     *        list(). For example, for the URL https://www.example.com/pagename on the site
     *        https://www.example.com/, the url value is pagename
     * @param category The crawl error category. For example: authPermissions
     * @param platform The user agent type (platform) that made the request. For example: web
     * @return the request
     */
    public Get get(java.lang.String siteUrl, java.lang.String url, java.lang.String category, java.lang.String platform) throws java.io.IOException {
      Get result = new Get(siteUrl, url, category, platform);
      initialize(result);
      return result;
    }

    public class Get extends WebmastersRequest<com.google.api.services.webmasters.model.UrlCrawlErrorsSample> {

      private static final String REST_PATH = "sites/{siteUrl}/urlCrawlErrorsSamples/{url}";

      /**
       * Retrieves details about crawl errors for a site's sample URL.
       *
       * Create a request for the method "urlcrawlerrorssamples.get".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param url The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     *        list(). For example, for the URL https://www.example.com/pagename on the site
     *        https://www.example.com/, the url value is pagename
       * @param category The crawl error category. For example: authPermissions
       * @param platform The user agent type (platform) that made the request. For example: web
       * @since 1.13
       */
      protected Get(java.lang.String siteUrl, java.lang.String url, java.lang.String category, java.lang.String platform) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.UrlCrawlErrorsSample.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.url = com.google.api.client.util.Preconditions.checkNotNull(url, "Required parameter url must be specified.");
        this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
        this.platform = com.google.api.client.util.Preconditions.checkNotNull(platform, "Required parameter platform must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public Get setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /**
       * The relative path (without the site) of the sample URL. It must be one of the URLs returned
       * by list(). For example, for the URL https://www.example.com/pagename on the site
       * https://www.example.com/, the url value is pagename
       */
      @com.google.api.client.util.Key
      private java.lang.String url;

      /** The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     list(). For example, for the URL https://www.example.com/pagename on the site
     https://www.example.com/, the url value is pagename
       */
      public java.lang.String getUrl() {
        return url;
      }

      /**
       * The relative path (without the site) of the sample URL. It must be one of the URLs returned
       * by list(). For example, for the URL https://www.example.com/pagename on the site
       * https://www.example.com/, the url value is pagename
       */
      public Get setUrl(java.lang.String url) {
        this.url = url;
        return this;
      }

      /** The crawl error category. For example: authPermissions */
      @com.google.api.client.util.Key
      private java.lang.String category;

      /** The crawl error category. For example: authPermissions
       */
      public java.lang.String getCategory() {
        return category;
      }

      /** The crawl error category. For example: authPermissions */
      public Get setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      /** The user agent type (platform) that made the request. For example: web */
      @com.google.api.client.util.Key
      private java.lang.String platform;

      /** The user agent type (platform) that made the request. For example: web
       */
      public java.lang.String getPlatform() {
        return platform;
      }

      /** The user agent type (platform) that made the request. For example: web */
      public Get setPlatform(java.lang.String platform) {
        this.platform = platform;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists a site's sample URLs for the specified crawl error category and platform.
     *
     * Create a request for the method "urlcrawlerrorssamples.list".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param category The crawl error category. For example: authPermissions
     * @param platform The user agent type (platform) that made the request. For example: web
     * @return the request
     */
    public List list(java.lang.String siteUrl, java.lang.String category, java.lang.String platform) throws java.io.IOException {
      List result = new List(siteUrl, category, platform);
      initialize(result);
      return result;
    }

    public class List extends WebmastersRequest<com.google.api.services.webmasters.model.UrlCrawlErrorsSamplesListResponse> {

      private static final String REST_PATH = "sites/{siteUrl}/urlCrawlErrorsSamples";

      /**
       * Lists a site's sample URLs for the specified crawl error category and platform.
       *
       * Create a request for the method "urlcrawlerrorssamples.list".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param category The crawl error category. For example: authPermissions
       * @param platform The user agent type (platform) that made the request. For example: web
       * @since 1.13
       */
      protected List(java.lang.String siteUrl, java.lang.String category, java.lang.String platform) {
        super(Webmasters.this, "GET", REST_PATH, null, com.google.api.services.webmasters.model.UrlCrawlErrorsSamplesListResponse.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
        this.platform = com.google.api.client.util.Preconditions.checkNotNull(platform, "Required parameter platform must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public List setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /** The crawl error category. For example: authPermissions */
      @com.google.api.client.util.Key
      private java.lang.String category;

      /** The crawl error category. For example: authPermissions
       */
      public java.lang.String getCategory() {
        return category;
      }

      /** The crawl error category. For example: authPermissions */
      public List setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      /** The user agent type (platform) that made the request. For example: web */
      @com.google.api.client.util.Key
      private java.lang.String platform;

      /** The user agent type (platform) that made the request. For example: web
       */
      public java.lang.String getPlatform() {
        return platform;
      }

      /** The user agent type (platform) that made the request. For example: web */
      public List setPlatform(java.lang.String platform) {
        this.platform = platform;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Marks the provided site's sample URL as fixed, and removes it from the samples list.
     *
     * Create a request for the method "urlcrawlerrorssamples.markAsFixed".
     *
     * This request holds the parameters needed by the webmasters server.  After setting any optional
     * parameters, call the {@link MarkAsFixed#execute()} method to invoke the remote operation.
     *
     * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
     * @param url The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     *        list(). For example, for the URL https://www.example.com/pagename on the site
     *        https://www.example.com/, the url value is pagename
     * @param category The crawl error category. For example: authPermissions
     * @param platform The user agent type (platform) that made the request. For example: web
     * @return the request
     */
    public MarkAsFixed markAsFixed(java.lang.String siteUrl, java.lang.String url, java.lang.String category, java.lang.String platform) throws java.io.IOException {
      MarkAsFixed result = new MarkAsFixed(siteUrl, url, category, platform);
      initialize(result);
      return result;
    }

    public class MarkAsFixed extends WebmastersRequest<Void> {

      private static final String REST_PATH = "sites/{siteUrl}/urlCrawlErrorsSamples/{url}";

      /**
       * Marks the provided site's sample URL as fixed, and removes it from the samples list.
       *
       * Create a request for the method "urlcrawlerrorssamples.markAsFixed".
       *
       * This request holds the parameters needed by the the webmasters server.  After setting any
       * optional parameters, call the {@link MarkAsFixed#execute()} method to invoke the remote
       * operation. <p> {@link
       * MarkAsFixed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param siteUrl The site's URL, including protocol. For example: http://www.example.com/
       * @param url The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     *        list(). For example, for the URL https://www.example.com/pagename on the site
     *        https://www.example.com/, the url value is pagename
       * @param category The crawl error category. For example: authPermissions
       * @param platform The user agent type (platform) that made the request. For example: web
       * @since 1.13
       */
      protected MarkAsFixed(java.lang.String siteUrl, java.lang.String url, java.lang.String category, java.lang.String platform) {
        super(Webmasters.this, "DELETE", REST_PATH, null, Void.class);
        this.siteUrl = com.google.api.client.util.Preconditions.checkNotNull(siteUrl, "Required parameter siteUrl must be specified.");
        this.url = com.google.api.client.util.Preconditions.checkNotNull(url, "Required parameter url must be specified.");
        this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
        this.platform = com.google.api.client.util.Preconditions.checkNotNull(platform, "Required parameter platform must be specified.");
      }

      @Override
      public MarkAsFixed setAlt(java.lang.String alt) {
        return (MarkAsFixed) super.setAlt(alt);
      }

      @Override
      public MarkAsFixed setFields(java.lang.String fields) {
        return (MarkAsFixed) super.setFields(fields);
      }

      @Override
      public MarkAsFixed setKey(java.lang.String key) {
        return (MarkAsFixed) super.setKey(key);
      }

      @Override
      public MarkAsFixed setOauthToken(java.lang.String oauthToken) {
        return (MarkAsFixed) super.setOauthToken(oauthToken);
      }

      @Override
      public MarkAsFixed setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (MarkAsFixed) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public MarkAsFixed setQuotaUser(java.lang.String quotaUser) {
        return (MarkAsFixed) super.setQuotaUser(quotaUser);
      }

      @Override
      public MarkAsFixed setUserIp(java.lang.String userIp) {
        return (MarkAsFixed) super.setUserIp(userIp);
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      @com.google.api.client.util.Key
      private java.lang.String siteUrl;

      /** The site's URL, including protocol. For example: http://www.example.com/
       */
      public java.lang.String getSiteUrl() {
        return siteUrl;
      }

      /** The site's URL, including protocol. For example: http://www.example.com/ */
      public MarkAsFixed setSiteUrl(java.lang.String siteUrl) {
        this.siteUrl = siteUrl;
        return this;
      }

      /**
       * The relative path (without the site) of the sample URL. It must be one of the URLs returned
       * by list(). For example, for the URL https://www.example.com/pagename on the site
       * https://www.example.com/, the url value is pagename
       */
      @com.google.api.client.util.Key
      private java.lang.String url;

      /** The relative path (without the site) of the sample URL. It must be one of the URLs returned by
     list(). For example, for the URL https://www.example.com/pagename on the site
     https://www.example.com/, the url value is pagename
       */
      public java.lang.String getUrl() {
        return url;
      }

      /**
       * The relative path (without the site) of the sample URL. It must be one of the URLs returned
       * by list(). For example, for the URL https://www.example.com/pagename on the site
       * https://www.example.com/, the url value is pagename
       */
      public MarkAsFixed setUrl(java.lang.String url) {
        this.url = url;
        return this;
      }

      /** The crawl error category. For example: authPermissions */
      @com.google.api.client.util.Key
      private java.lang.String category;

      /** The crawl error category. For example: authPermissions
       */
      public java.lang.String getCategory() {
        return category;
      }

      /** The crawl error category. For example: authPermissions */
      public MarkAsFixed setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      /** The user agent type (platform) that made the request. For example: web */
      @com.google.api.client.util.Key
      private java.lang.String platform;

      /** The user agent type (platform) that made the request. For example: web
       */
      public java.lang.String getPlatform() {
        return platform;
      }

      /** The user agent type (platform) that made the request. For example: web */
      public MarkAsFixed setPlatform(java.lang.String platform) {
        this.platform = platform;
        return this;
      }

      @Override
      public MarkAsFixed set(String parameterName, Object value) {
        return (MarkAsFixed) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Webmasters}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Webmasters}. */
    @Override
    public Webmasters build() {
      return new Webmasters(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link WebmastersRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setWebmastersRequestInitializer(
        WebmastersRequestInitializer webmastersRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(webmastersRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
