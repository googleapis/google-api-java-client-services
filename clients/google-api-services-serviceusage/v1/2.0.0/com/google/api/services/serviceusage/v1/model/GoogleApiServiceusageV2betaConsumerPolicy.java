/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.serviceusage.v1.model;

/**
 * Consumer Policy is a set of rules that define what services or service groups can be used for a
 * cloud resource hierarchy.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Usage API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleApiServiceusageV2betaConsumerPolicy extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Annotations is an unstructured key-value map stored with a policy that may be set by
   * external tools to store and retrieve arbitrary metadata. They are not queryable and should be
   * preserved when modifying objects. [AIP-128](https://google.aip.dev/128#annotations)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. The time the policy was created. For singleton policies, this is the first touch
   * of the policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Enable rules define usable services, groups, and categories. There can currently be at most one
   * `EnableRule`. This restriction will be lifted in later releases.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleApiServiceusageV2betaEnableRule> enableRules;

  /**
   * Output only. An opaque tag indicating the current version of the policy, used for concurrency
   * control.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. The resource name of the policy. Only the `default` policy is supported:
   * `projects/12345/consumerPolicies/default`, `folders/12345/consumerPolicies/default`,
   * `organizations/12345/consumerPolicies/default`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The time the policy was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Annotations is an unstructured key-value map stored with a policy that may be set by
   * external tools to store and retrieve arbitrary metadata. They are not queryable and should be
   * preserved when modifying objects. [AIP-128](https://google.aip.dev/128#annotations)
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Annotations is an unstructured key-value map stored with a policy that may be set by
   * external tools to store and retrieve arbitrary metadata. They are not queryable and should be
   * preserved when modifying objects. [AIP-128](https://google.aip.dev/128#annotations)
   * @param annotations annotations or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. The time the policy was created. For singleton policies, this is the first touch
   * of the policy.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time the policy was created. For singleton policies, this is the first touch
   * of the policy.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Enable rules define usable services, groups, and categories. There can currently be at most one
   * `EnableRule`. This restriction will be lifted in later releases.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleApiServiceusageV2betaEnableRule> getEnableRules() {
    return enableRules;
  }

  /**
   * Enable rules define usable services, groups, and categories. There can currently be at most one
   * `EnableRule`. This restriction will be lifted in later releases.
   * @param enableRules enableRules or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setEnableRules(java.util.List<GoogleApiServiceusageV2betaEnableRule> enableRules) {
    this.enableRules = enableRules;
    return this;
  }

  /**
   * Output only. An opaque tag indicating the current version of the policy, used for concurrency
   * control.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. An opaque tag indicating the current version of the policy, used for concurrency
   * control.
   * @param etag etag or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. The resource name of the policy. Only the `default` policy is supported:
   * `projects/12345/consumerPolicies/default`, `folders/12345/consumerPolicies/default`,
   * `organizations/12345/consumerPolicies/default`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the policy. Only the `default` policy is supported:
   * `projects/12345/consumerPolicies/default`, `folders/12345/consumerPolicies/default`,
   * `organizations/12345/consumerPolicies/default`.
   * @param name name or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The time the policy was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time the policy was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleApiServiceusageV2betaConsumerPolicy setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleApiServiceusageV2betaConsumerPolicy set(String fieldName, Object value) {
    return (GoogleApiServiceusageV2betaConsumerPolicy) super.set(fieldName, value);
  }

  @Override
  public GoogleApiServiceusageV2betaConsumerPolicy clone() {
    return (GoogleApiServiceusageV2betaConsumerPolicy) super.clone();
  }

}
