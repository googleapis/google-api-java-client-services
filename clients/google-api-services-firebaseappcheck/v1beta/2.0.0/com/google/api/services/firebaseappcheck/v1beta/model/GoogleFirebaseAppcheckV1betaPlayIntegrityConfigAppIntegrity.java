/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseappcheck.v1beta.model;

/**
 * A settings object specifying application integrity requirements for Android devices running your
 * app. These settings correspond to requirements on the [**application integrity**
 * field](https://developer.android.com/google/play/integrity/verdicts#application-integrity-field)
 * obtained from the Play Integrity API. See the [default responses
 * table](https://developer.android.com/google/play/integrity/setup#default) for a quick summary.
 * The default values for these settings work for most apps, and are recommended.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase App Check API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity extends com.google.api.client.json.GenericJson {

  /**
   * Specifies whether your running app is allowed to have the `UNRECOGNIZED_VERSION` [app
   * recognition verdict](https://developer.android.com/google/play/integrity/verdicts#application-
   * integrity-field). Note that the app recognition verdict `PLAY_RECOGNIZED` is a strong,
   * comprehensive integrity signal that takes into account various other signals, including
   * conditional and optional device integrity responses that you have opted into. If your app is
   * published off-Play, this field should be set to `true` to allow instances of your app installed
   * from off-Play sources to function. If set to `false`, only `PLAY_RECOGNIZED` verdicts are
   * allowed, and both `UNRECOGNIZED_VERSION` and `UNEVALUATED` will be rejected. If set to `true`,
   * any app recognition verdict is allowed. The default value is `false`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowUnrecognizedVersion;

  /**
   * Specifies whether your running app is allowed to have the `UNRECOGNIZED_VERSION` [app
   * recognition verdict](https://developer.android.com/google/play/integrity/verdicts#application-
   * integrity-field). Note that the app recognition verdict `PLAY_RECOGNIZED` is a strong,
   * comprehensive integrity signal that takes into account various other signals, including
   * conditional and optional device integrity responses that you have opted into. If your app is
   * published off-Play, this field should be set to `true` to allow instances of your app installed
   * from off-Play sources to function. If set to `false`, only `PLAY_RECOGNIZED` verdicts are
   * allowed, and both `UNRECOGNIZED_VERSION` and `UNEVALUATED` will be rejected. If set to `true`,
   * any app recognition verdict is allowed. The default value is `false`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowUnrecognizedVersion() {
    return allowUnrecognizedVersion;
  }

  /**
   * Specifies whether your running app is allowed to have the `UNRECOGNIZED_VERSION` [app
   * recognition verdict](https://developer.android.com/google/play/integrity/verdicts#application-
   * integrity-field). Note that the app recognition verdict `PLAY_RECOGNIZED` is a strong,
   * comprehensive integrity signal that takes into account various other signals, including
   * conditional and optional device integrity responses that you have opted into. If your app is
   * published off-Play, this field should be set to `true` to allow instances of your app installed
   * from off-Play sources to function. If set to `false`, only `PLAY_RECOGNIZED` verdicts are
   * allowed, and both `UNRECOGNIZED_VERSION` and `UNEVALUATED` will be rejected. If set to `true`,
   * any app recognition verdict is allowed. The default value is `false`.
   * @param allowUnrecognizedVersion allowUnrecognizedVersion or {@code null} for none
   */
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity setAllowUnrecognizedVersion(java.lang.Boolean allowUnrecognizedVersion) {
    this.allowUnrecognizedVersion = allowUnrecognizedVersion;
    return this;
  }

  @Override
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity set(String fieldName, Object value) {
    return (GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity) super.set(fieldName, value);
  }

  @Override
  public GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity clone() {
    return (GoogleFirebaseAppcheckV1betaPlayIntegrityConfigAppIntegrity) super.clone();
  }

}
