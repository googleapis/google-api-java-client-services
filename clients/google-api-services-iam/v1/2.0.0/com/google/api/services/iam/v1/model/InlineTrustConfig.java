/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.iam.v1.model;

/**
 * Defines configuration for extending trust to additional trust domains. By establishing trust with
 * another domain, the current domain will recognize and accept certificates issued by entities
 * within the trusted domains. Note that a trust domain automatically trusts itself, eliminating the
 * need for explicit configuration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity and Access Management (IAM) API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InlineTrustConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Maps specific trust domains (e.g., "example.com") to their corresponding TrustStore
   * objects, which contain the trusted root certificates for that domain. There can be a maximum of
   * 10 trust domain entries in this map. Note that a trust domain automatically trusts itself and
   * don't need to be specified here. If however, this WorkloadIdentityPool's trust domain contains
   * any trust anchors in the additional_trust_bundles map, those trust anchors will be *appended
   * to* the Trust Bundle automatically derived from your InlineCertificateIssuanceConfig's
   * ca_pools.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, TrustStore> additionalTrustBundles;

  /**
   * Optional. Maps specific trust domains (e.g., "example.com") to their corresponding TrustStore
   * objects, which contain the trusted root certificates for that domain. There can be a maximum of
   * 10 trust domain entries in this map. Note that a trust domain automatically trusts itself and
   * don't need to be specified here. If however, this WorkloadIdentityPool's trust domain contains
   * any trust anchors in the additional_trust_bundles map, those trust anchors will be *appended
   * to* the Trust Bundle automatically derived from your InlineCertificateIssuanceConfig's
   * ca_pools.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, TrustStore> getAdditionalTrustBundles() {
    return additionalTrustBundles;
  }

  /**
   * Optional. Maps specific trust domains (e.g., "example.com") to their corresponding TrustStore
   * objects, which contain the trusted root certificates for that domain. There can be a maximum of
   * 10 trust domain entries in this map. Note that a trust domain automatically trusts itself and
   * don't need to be specified here. If however, this WorkloadIdentityPool's trust domain contains
   * any trust anchors in the additional_trust_bundles map, those trust anchors will be *appended
   * to* the Trust Bundle automatically derived from your InlineCertificateIssuanceConfig's
   * ca_pools.
   * @param additionalTrustBundles additionalTrustBundles or {@code null} for none
   */
  public InlineTrustConfig setAdditionalTrustBundles(java.util.Map<String, TrustStore> additionalTrustBundles) {
    this.additionalTrustBundles = additionalTrustBundles;
    return this;
  }

  @Override
  public InlineTrustConfig set(String fieldName, Object value) {
    return (InlineTrustConfig) super.set(fieldName, value);
  }

  @Override
  public InlineTrustConfig clone() {
    return (InlineTrustConfig) super.clone();
  }

}
