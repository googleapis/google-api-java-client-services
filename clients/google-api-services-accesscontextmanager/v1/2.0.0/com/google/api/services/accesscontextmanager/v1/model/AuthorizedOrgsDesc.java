/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.accesscontextmanager.v1.model;

/**
 * `AuthorizedOrgsDesc` is a resource that contains a list of organizations for a authorization type
 * and asset type and its authorization direction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Access Context Manager API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthorizedOrgsDesc extends com.google.api.client.json.GenericJson {

  /**
   * The asset type of this authorized orgs desc. e.g. device, credential strength.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assetType;

  /**
   * Authorization direction of this authorization relationship. i.e. Whether to allow specified
   * orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this
   * org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorizationDirection;

  /**
   * The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or
   * logging.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorizationType;

  /**
   * Assigned by the server during creation. The last segment has an arbitrary length and has only
   * URI unreserved characters (as defined by [RFC 3986 Section
   * 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client
   * during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The list of organization ids in this AuthorizedOrgsDesc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> orgs;

  /**
   * The asset type of this authorized orgs desc. e.g. device, credential strength.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssetType() {
    return assetType;
  }

  /**
   * The asset type of this authorized orgs desc. e.g. device, credential strength.
   * @param assetType assetType or {@code null} for none
   */
  public AuthorizedOrgsDesc setAssetType(java.lang.String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * Authorization direction of this authorization relationship. i.e. Whether to allow specified
   * orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this
   * org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorizationDirection() {
    return authorizationDirection;
  }

  /**
   * Authorization direction of this authorization relationship. i.e. Whether to allow specified
   * orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this
   * org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this
   * AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also
   * specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order
   * for this relationship to take effect.
   * @param authorizationDirection authorizationDirection or {@code null} for none
   */
  public AuthorizedOrgsDesc setAuthorizationDirection(java.lang.String authorizationDirection) {
    this.authorizationDirection = authorizationDirection;
    return this;
  }

  /**
   * The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or
   * logging.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorizationType() {
    return authorizationType;
  }

  /**
   * The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or
   * logging.
   * @param authorizationType authorizationType or {@code null} for none
   */
  public AuthorizedOrgsDesc setAuthorizationType(java.lang.String authorizationType) {
    this.authorizationType = authorizationType;
    return this;
  }

  /**
   * Assigned by the server during creation. The last segment has an arbitrary length and has only
   * URI unreserved characters (as defined by [RFC 3986 Section
   * 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client
   * during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Assigned by the server during creation. The last segment has an arbitrary length and has only
   * URI unreserved characters (as defined by [RFC 3986 Section
   * 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client
   * during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
   * @param name name or {@code null} for none
   */
  public AuthorizedOrgsDesc setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The list of organization ids in this AuthorizedOrgsDesc.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOrgs() {
    return orgs;
  }

  /**
   * The list of organization ids in this AuthorizedOrgsDesc.
   * @param orgs orgs or {@code null} for none
   */
  public AuthorizedOrgsDesc setOrgs(java.util.List<java.lang.String> orgs) {
    this.orgs = orgs;
    return this;
  }

  @Override
  public AuthorizedOrgsDesc set(String fieldName, Object value) {
    return (AuthorizedOrgsDesc) super.set(fieldName, value);
  }

  @Override
  public AuthorizedOrgsDesc clone() {
    return (AuthorizedOrgsDesc) super.clone();
  }

}
