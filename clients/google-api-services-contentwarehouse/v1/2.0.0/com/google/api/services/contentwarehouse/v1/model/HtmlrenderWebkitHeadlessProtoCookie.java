/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for HtmlrenderWebkitHeadlessProtoCookie.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HtmlrenderWebkitHeadlessProtoCookie extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String domain;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double expiration;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean httpOnly;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sameSite;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean secure;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDomain() {
    return domain;
  }

  /**
   * @param domain domain or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setDomain(java.lang.String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getExpiration() {
    return expiration;
  }

  /**
   * @param expiration expiration or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setExpiration(java.lang.Double expiration) {
    this.expiration = expiration;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHttpOnly() {
    return httpOnly;
  }

  /**
   * @param httpOnly httpOnly or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setHttpOnly(java.lang.Boolean httpOnly) {
    this.httpOnly = httpOnly;
    return this;
  }

  /**
   * @see #decodeName()
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**

   * @see #getName()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeName() {
    return com.google.api.client.util.Base64.decodeBase64(name);
  }

  /**
   * @see #encodeName()
   * @param name name or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**

   * @see #setName()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public HtmlrenderWebkitHeadlessProtoCookie encodeName(byte[] name) {
    this.name = com.google.api.client.util.Base64.encodeBase64URLSafeString(name);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * @param path path or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSameSite() {
    return sameSite;
  }

  /**
   * @param sameSite sameSite or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setSameSite(java.lang.String sameSite) {
    this.sameSite = sameSite;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSecure() {
    return secure;
  }

  /**
   * @param secure secure or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setSecure(java.lang.Boolean secure) {
    this.secure = secure;
    return this;
  }

  /**
   * @see #decodeValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**

   * @see #getValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeValue() {
    return com.google.api.client.util.Base64.decodeBase64(value);
  }

  /**
   * @see #encodeValue()
   * @param value value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoCookie setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  /**

   * @see #setValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public HtmlrenderWebkitHeadlessProtoCookie encodeValue(byte[] value) {
    this.value = com.google.api.client.util.Base64.encodeBase64URLSafeString(value);
    return this;
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoCookie set(String fieldName, Object value) {
    return (HtmlrenderWebkitHeadlessProtoCookie) super.set(fieldName, value);
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoCookie clone() {
    return (HtmlrenderWebkitHeadlessProtoCookie) super.clone();
  }

}
