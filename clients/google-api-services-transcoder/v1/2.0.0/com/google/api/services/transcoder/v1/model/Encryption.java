/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.transcoder.v1.model;

/**
 * Encryption settings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Transcoder API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Encryption extends com.google.api.client.json.GenericJson {

  /**
   * Configuration for AES-128 encryption.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Aes128Encryption aes128;

  /**
   * Required. DRM system(s) to use; at least one must be specified. If a DRM system is omitted, it
   * is considered disabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrmSystems drmSystems;

  /**
   * Required. Identifier for this set of encryption options.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Configuration for MPEG Common Encryption (MPEG-CENC).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MpegCommonEncryption mpegCenc;

  /**
   * Configuration for SAMPLE-AES encryption.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SampleAesEncryption sampleAes;

  /**
   * Keys are stored in Google Secret Manager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecretManagerSource secretManagerKeySource;

  /**
   * Configuration for AES-128 encryption.
   * @return value or {@code null} for none
   */
  public Aes128Encryption getAes128() {
    return aes128;
  }

  /**
   * Configuration for AES-128 encryption.
   * @param aes128 aes128 or {@code null} for none
   */
  public Encryption setAes128(Aes128Encryption aes128) {
    this.aes128 = aes128;
    return this;
  }

  /**
   * Required. DRM system(s) to use; at least one must be specified. If a DRM system is omitted, it
   * is considered disabled.
   * @return value or {@code null} for none
   */
  public DrmSystems getDrmSystems() {
    return drmSystems;
  }

  /**
   * Required. DRM system(s) to use; at least one must be specified. If a DRM system is omitted, it
   * is considered disabled.
   * @param drmSystems drmSystems or {@code null} for none
   */
  public Encryption setDrmSystems(DrmSystems drmSystems) {
    this.drmSystems = drmSystems;
    return this;
  }

  /**
   * Required. Identifier for this set of encryption options.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Required. Identifier for this set of encryption options.
   * @param id id or {@code null} for none
   */
  public Encryption setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Configuration for MPEG Common Encryption (MPEG-CENC).
   * @return value or {@code null} for none
   */
  public MpegCommonEncryption getMpegCenc() {
    return mpegCenc;
  }

  /**
   * Configuration for MPEG Common Encryption (MPEG-CENC).
   * @param mpegCenc mpegCenc or {@code null} for none
   */
  public Encryption setMpegCenc(MpegCommonEncryption mpegCenc) {
    this.mpegCenc = mpegCenc;
    return this;
  }

  /**
   * Configuration for SAMPLE-AES encryption.
   * @return value or {@code null} for none
   */
  public SampleAesEncryption getSampleAes() {
    return sampleAes;
  }

  /**
   * Configuration for SAMPLE-AES encryption.
   * @param sampleAes sampleAes or {@code null} for none
   */
  public Encryption setSampleAes(SampleAesEncryption sampleAes) {
    this.sampleAes = sampleAes;
    return this;
  }

  /**
   * Keys are stored in Google Secret Manager.
   * @return value or {@code null} for none
   */
  public SecretManagerSource getSecretManagerKeySource() {
    return secretManagerKeySource;
  }

  /**
   * Keys are stored in Google Secret Manager.
   * @param secretManagerKeySource secretManagerKeySource or {@code null} for none
   */
  public Encryption setSecretManagerKeySource(SecretManagerSource secretManagerKeySource) {
    this.secretManagerKeySource = secretManagerKeySource;
    return this;
  }

  @Override
  public Encryption set(String fieldName, Object value) {
    return (Encryption) super.set(fieldName, value);
  }

  @Override
  public Encryption clone() {
    return (Encryption) super.clone();
  }

}
