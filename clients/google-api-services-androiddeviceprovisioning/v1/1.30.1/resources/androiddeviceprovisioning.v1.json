{
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "FindDevicesByDeviceIdentifierRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "description": "Required. The maximum number of devices to show in a page of results. Must\nbe between 1 and 100 inclusive.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. The device identifier to search for."
        },
        "pageToken": {
          "type": "string",
          "description": "A token specifying which result page to return."
        }
      },
      "id": "FindDevicesByDeviceIdentifierRequest",
      "description": "Request to find devices."
    },
    "OperationPerDevice": {
      "type": "object",
      "properties": {
        "unclaim": {
          "$ref": "PartnerUnclaim",
          "description": "A copy of the original device-unclaim request received by the server."
        },
        "result": {
          "description": "The processing result for each device.",
          "$ref": "PerDeviceStatusInBatch"
        },
        "claim": {
          "description": "A copy of the original device-claim request received by the server.",
          "$ref": "PartnerClaim"
        },
        "updateMetadata": {
          "description": "A copy of the original metadata-update request received by the server.",
          "$ref": "UpdateMetadataArguments"
        }
      },
      "id": "OperationPerDevice",
      "description": "A task for each device in the operation. Corresponds to each device\nchange in the request."
    },
    "CustomerListConfigurationsResponse": {
      "description": "Response message of customer's listing configuration.",
      "type": "object",
      "properties": {
        "configurations": {
          "description": "The configurations.",
          "type": "array",
          "items": {
            "$ref": "Configuration"
          }
        }
      },
      "id": "CustomerListConfigurationsResponse"
    },
    "FindDevicesByOwnerResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "description": "The customer's devices.",
          "type": "array",
          "items": {
            "$ref": "Device"
          }
        },
        "nextPageToken": {
          "description": "A token used to access the next page of results.\nOmitted if no further results are available.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "FindDevicesByOwnerResponse",
      "description": "Response containing found devices."
    },
    "CustomerRemoveConfigurationRequest": {
      "id": "CustomerRemoveConfigurationRequest",
      "description": "Request message for customer to remove the configuration from device.",
      "type": "object",
      "properties": {
        "device": {
          "description": "Required. The device to remove the configuration from.",
          "$ref": "DeviceReference"
        }
      }
    },
    "DevicesLongRunningOperationMetadata": {
      "id": "DevicesLongRunningOperationMetadata",
      "description": "Tracks the status of a long-running operation to asynchronously update a\nbatch of reseller metadata attached to devices. To learn more, read\n[Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
      "type": "object",
      "properties": {
        "processingStatus": {
          "description": "The processing status of the operation.",
          "type": "string",
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Pending.",
            "In progress.",
            "Processed.\nThis doesn't mean all items were processed successfully, you should\ncheck the `response` field for the result of every item."
          ],
          "enum": [
            "BATCH_PROCESS_STATUS_UNSPECIFIED",
            "BATCH_PROCESS_PENDING",
            "BATCH_PROCESS_IN_PROGRESS",
            "BATCH_PROCESS_PROCESSED"
          ]
        },
        "progress": {
          "description": "The processing progress of the operation. Measured as a number from 0 to\n100. A value of 10O doesnt always mean the operation completed—check for\nthe inclusion of a `done` field.",
          "format": "int32",
          "type": "integer"
        },
        "devicesCount": {
          "description": "The number of metadata updates in the operation. This might be different\nfrom the number of updates in the request if the API can't parse some of\nthe updates.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ClaimDeviceRequest": {
      "description": "Request message to claim a device on behalf of a customer.",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Required. The ID of the customer for whom the device is being claimed.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Required. The device identifier of the device to claim."
        },
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Optional. The metadata to attach to the device."
        },
        "sectionType": {
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "type": "string"
        }
      },
      "id": "ClaimDeviceRequest"
    },
    "ListVendorsResponse": {
      "id": "ListVendorsResponse",
      "description": "Response message to list vendors of the partner.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results\nare available.",
          "type": "string"
        },
        "totalSize": {
          "type": "integer",
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32"
        },
        "vendors": {
          "description": "List of vendors of the reseller partner. Fields `name`, `companyId` and\n`companyName` are populated to the Company object.",
          "type": "array",
          "items": {
            "$ref": "Company"
          }
        }
      }
    },
    "UpdateDeviceMetadataInBatchRequest": {
      "description": "Request to update device metadata in batch.",
      "type": "object",
      "properties": {
        "updates": {
          "description": "Required. The list of metadata updates.",
          "type": "array",
          "items": {
            "$ref": "UpdateMetadataArguments"
          }
        }
      },
      "id": "UpdateDeviceMetadataInBatchRequest"
    },
    "ListCustomersResponse": {
      "description": "Response message of all customers related to this partner.",
      "type": "object",
      "properties": {
        "customers": {
          "description": "List of customers related to this reseller partner.",
          "type": "array",
          "items": {
            "$ref": "Company"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results\nare available.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ListCustomersResponse"
    },
    "ClaimDeviceResponse": {
      "description": "Response message containing device id of the claim.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The device ID of the claimed device.",
          "format": "int64",
          "type": "string"
        },
        "deviceName": {
          "description": "The resource name of the device in the format\n`partners/[PARTNER_ID]/devices/[DEVICE_ID]`.",
          "type": "string"
        }
      },
      "id": "ClaimDeviceResponse"
    },
    "UpdateMetadataArguments": {
      "description": "Identifies metdata updates to one device.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device ID of the device.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "Device identifier."
        },
        "deviceMetadata": {
          "$ref": "DeviceMetadata",
          "description": "Required. The metadata to update."
        }
      },
      "id": "UpdateMetadataArguments"
    },
    "DeviceReference": {
      "description": "A `DeviceReference` is an API abstraction that lets you supply a _device_\nargument to a method using one of the following identifier types:\n\n* A numeric API resource ID.\n* Real-world hardware IDs, such as IMEI number, belonging to the manufactured\n  device.\n\nMethods that operate on devices take a `DeviceReference` as a parameter type\nbecause it's more flexible for the caller. To learn more about device\nidentifiers, read [Identifiers](/zero-touch/guides/identifiers).",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The ID of the device.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "The hardware IDs of the device.",
          "$ref": "DeviceIdentifier"
        }
      },
      "id": "DeviceReference"
    },
    "Device": {
      "id": "Device",
      "description": "An Android device registered for zero-touch enrollment.",
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "$ref": "DeviceIdentifier",
          "description": "The hardware IDs that identify a manufactured device. To learn more, read\n[Identifiers](/zero-touch/guides/identifiers)."
        },
        "deviceMetadata": {
          "description": "The metadata attached to the device. Structured as key-value pairs. To\nlearn more, read [Device metadata](/zero-touch/guides/metadata).",
          "$ref": "DeviceMetadata"
        },
        "name": {
          "description": "Output only. The API resource name in the format\n`partners/[PARTNER_ID]/devices/[DEVICE_ID]`. Assigned by the server.",
          "type": "string"
        },
        "deviceId": {
          "description": "Output only. The ID of the device. Assigned by the server.",
          "format": "int64",
          "type": "string"
        },
        "configuration": {
          "description": "Not available to resellers.",
          "type": "string"
        },
        "claims": {
          "description": "Output only. The provisioning claims for a device. Devices claimed for\nzero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`.\nCall\n`partners.devices.unclaim`\nor\n`partners.devices.unclaimAsync`\nto remove the device from zero-touch enrollment.",
          "type": "array",
          "items": {
            "$ref": "DeviceClaim"
          }
        }
      }
    },
    "CreateCustomerRequest": {
      "description": "Request message to create a customer.",
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "Company",
          "description": "Required. The company data to populate the new customer. Must contain a\nvalue for `companyName` and at least one `owner_email` that's associated\nwith a Google Account. The values for `companyId` and `name` must be empty."
        }
      },
      "id": "CreateCustomerRequest"
    },
    "ListVendorCustomersResponse": {
      "id": "ListVendorCustomersResponse",
      "description": "Response message to list customers of the vendor.",
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "Company"
          },
          "description": "List of customers of the vendor."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Omitted if no further results\nare available.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Company": {
      "properties": {
        "companyName": {
          "description": "Required. The name of the company. For example _XYZ Corp_. Displayed to the\ncompany's employees in the zero-touch enrollment portal.",
          "type": "string"
        },
        "companyId": {
          "description": "Output only. The ID of the company. Assigned by the server.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The API resource name of the company. The resource name is one\nof the following formats:\n\n* `partners/[PARTNER_ID]/customers/[CUSTOMER_ID]`\n* `partners/[PARTNER_ID]/vendors/[VENDOR_ID]`\n* `partners/[PARTNER_ID]/vendors/[VENDOR_ID]/customers/[CUSTOMER_ID]`\n\nAssigned by the server."
        },
        "adminEmails": {
          "description": "Input only. Optional. Email address of customer's users in the admin role.\nEach email address must be associated with a Google Account.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "termsStatus": {
          "description": "Output only. Whether any user from the company has accepted the latest\nTerms of Service (ToS). See\nTermsStatus.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value should never be set if the enum is present.",
            "None of the company's users have accepted the ToS.",
            "One (or more) of the company's users has accepted the ToS.",
            "None of the company's users has accepted the current ToS but at least one\nuser accepted a previous ToS."
          ],
          "enum": [
            "TERMS_STATUS_UNSPECIFIED",
            "TERMS_STATUS_NOT_ACCEPTED",
            "TERMS_STATUS_ACCEPTED",
            "TERMS_STATUS_STALE"
          ]
        },
        "ownerEmails": {
          "description": "Input only. Email address of customer's users in the owner role. At least\none `owner_email` is required. Each email address must be associated with a\nGoogle Account. Owners share the same access as admins but can also add,\ndelete, and edit your organization's portal users.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Company",
      "description": "A reseller, vendor, or customer in the zero-touch reseller and customer APIs.",
      "type": "object"
    },
    "UpdateDeviceMetadataRequest": {
      "description": "Request to set metadata for a device.",
      "type": "object",
      "properties": {
        "deviceMetadata": {
          "description": "Required. The metdata to attach to the device.",
          "$ref": "DeviceMetadata"
        }
      },
      "id": "UpdateDeviceMetadataRequest"
    },
    "Configuration": {
      "description": "A configuration collects the provisioning options for Android devices. Each\nconfiguration combines the following:\n\n* The EMM device policy controller (DPC) installed on the devices.\n* EMM policies enforced on the devices.\n* Metadata displayed on the device to help users during setup.\n\nCustomers can add as many configurations as they need. However, zero-touch\nenrollment works best when a customer sets a default configuration that's\napplied to any new devices the organization purchases.",
      "type": "object",
      "properties": {
        "contactEmail": {
          "description": "Required. The email address that device users can contact to get help.\nZero-touch enrollment shows this email address to device users before\ndevice provisioning. The value is validated on input.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The API resource name in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by\nthe server.",
          "type": "string"
        },
        "configurationName": {
          "type": "string",
          "description": "Required. A short name that describes the configuration's purpose. For\nexample, _Sales team_ or _Temporary employees_. The zero-touch enrollment\nportal displays this name to IT admins."
        },
        "contactPhone": {
          "description": "Required. The telephone number that device users can call, using another\ndevice, to get help. Zero-touch enrollment shows this number to device\nusers before device provisioning. Accepts numerals, spaces, the plus sign,\nhyphens, and parentheses.",
          "type": "string"
        },
        "companyName": {
          "description": "Required. The name of the organization. Zero-touch enrollment shows this\norganization name to device users during device provisioning.",
          "type": "string"
        },
        "configurationId": {
          "description": "Output only. The ID of the configuration. Assigned by the server.",
          "format": "int64",
          "type": "string"
        },
        "dpcResourcePath": {
          "description": "Required. The resource name of the selected DPC (device policy controller)\nin the format `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs,\ncall\n`customers.dpcs.list`.",
          "type": "string"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Required. Whether this is the default configuration that zero-touch\nenrollment applies to any new devices the organization purchases in the\nfuture. Only one customer configuration can be the default. Setting this\nvalue to `true`, changes the previous default configuration's `isDefault`\nvalue to `false`."
        },
        "dpcExtras": {
          "description": "The JSON-formatted EMM provisioning extras that are passed to the DPC.",
          "type": "string"
        },
        "customMessage": {
          "description": "A message, containing one or two sentences, to help device users get help\nor give them more details about what’s happening to their device.\nZero-touch enrollment shows this message before the device is provisioned.",
          "type": "string"
        }
      },
      "id": "Configuration"
    },
    "PartnerUnclaim": {
      "description": "Identifies one unclaim request.",
      "type": "object",
      "properties": {
        "sectionType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record."
        },
        "vacationModeDays": {
          "description": "The duration of the vacation unlock starting from when the request is\nprocessed. (1 day is treated as 24 hours)",
          "format": "int32",
          "type": "integer"
        },
        "vacationModeExpireTime": {
          "description": "The expiration time of the vacation unlock.",
          "format": "google-datetime",
          "type": "string"
        },
        "deviceId": {
          "description": "Device ID of the device.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "Device identifier of the device.",
          "$ref": "DeviceIdentifier"
        }
      },
      "id": "PartnerUnclaim"
    },
    "CustomerListDpcsResponse": {
      "properties": {
        "dpcs": {
          "description": "The list of DPCs available to the customer that support zero-touch\nenrollment.",
          "type": "array",
          "items": {
            "$ref": "Dpc"
          }
        }
      },
      "id": "CustomerListDpcsResponse",
      "description": "Response message of customer's listing DPCs.",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "FindDevicesByDeviceIdentifierResponse": {
      "description": "Response containing found devices.",
      "type": "object",
      "properties": {
        "devices": {
          "description": "Found devices.",
          "type": "array",
          "items": {
            "$ref": "Device"
          }
        },
        "nextPageToken": {
          "description": "A token used to access the next page of results. Omitted if no further\nresults are available.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total count of items in the list irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "FindDevicesByDeviceIdentifierResponse"
    },
    "PartnerClaim": {
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "description": "Required. Device identifier of the device.",
          "$ref": "DeviceIdentifier"
        },
        "deviceMetadata": {
          "description": "Required. The metadata to attach to the device at claim.",
          "$ref": "DeviceMetadata"
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ]
        },
        "customerId": {
          "description": "Required. The ID of the customer for whom the device is being claimed.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "PartnerClaim",
      "description": "Identifies one claim request."
    },
    "UnclaimDeviceRequest": {
      "description": "Request message to unclaim a device.",
      "type": "object",
      "properties": {
        "deviceIdentifier": {
          "description": "The device identifier you used when you claimed this device.",
          "$ref": "DeviceIdentifier"
        },
        "sectionType": {
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "type": "string"
        },
        "vacationModeDays": {
          "description": "The duration of the vacation unlock starting from when the request is\nprocessed. (1 day is treated as 24 hours)",
          "format": "int32",
          "type": "integer"
        },
        "vacationModeExpireTime": {
          "description": "The expiration time of the vacation unlock.",
          "format": "google-datetime",
          "type": "string"
        },
        "deviceId": {
          "description": "The device ID returned by `ClaimDevice`.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "UnclaimDeviceRequest"
    },
    "DeviceMetadata": {
      "description": "Metadata entries that can be attached to a `Device`. To learn more, read\n[Device metadata](/zero-touch/guides/metadata).",
      "type": "object",
      "properties": {
        "entries": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata entries recorded as key-value pairs.",
          "type": "object"
        }
      },
      "id": "DeviceMetadata"
    },
    "CustomerListCustomersResponse": {
      "description": "Response message for listing my customers.",
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "Company"
          },
          "description": "The customer accounts the calling user is a member of."
        },
        "nextPageToken": {
          "description": "A token used to access the next page of results. Omitted if no further\nresults are available.",
          "type": "string"
        }
      },
      "id": "CustomerListCustomersResponse"
    },
    "CustomerListDevicesResponse": {
      "description": "Response message of customer's liting devices.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token used to access the next page of results. Omitted if no further\nresults are available.",
          "type": "string"
        },
        "devices": {
          "description": "The customer's devices.",
          "type": "array",
          "items": {
            "$ref": "Device"
          }
        }
      },
      "id": "CustomerListDevicesResponse"
    },
    "DevicesLongRunningOperationResponse": {
      "description": "Tracks the status of a long-running operation to claim, unclaim, or attach\nmetadata to devices. To learn more, read\n[Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
      "type": "object",
      "properties": {
        "successCount": {
          "description": "A summary of how many items in the operation the server processed\nsuccessfully. Updated as the operation progresses.",
          "format": "int32",
          "type": "integer"
        },
        "perDeviceStatus": {
          "description": "The processing status for each device in the operation.\nOne `PerDeviceStatus` per device. The list order matches the items in the\noriginal request.",
          "type": "array",
          "items": {
            "$ref": "OperationPerDevice"
          }
        }
      },
      "id": "DevicesLongRunningOperationResponse"
    },
    "DeviceClaim": {
      "description": "A record of a device claimed by a reseller for a customer. Devices claimed\nfor zero-touch enrollment have a claim with the type\n`SECTION_TYPE_ZERO_TOUCH`. To learn more, read\n[Claim devices for customers](/zero-touch/guides/how-it-works#claim).",
      "type": "object",
      "properties": {
        "sectionType": {
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ],
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Output only. The type of claim made on the device.",
          "type": "string"
        },
        "vacationModeStartTime": {
          "type": "string",
          "description": "The timestamp when the device was put into ‘vacation mode’. This value is\npresent iff the device is in 'vacation mode'.",
          "format": "google-datetime"
        },
        "vacationModeExpireTime": {
          "description": "The timestamp when the device will exit ‘vacation mode’. This value is\npresent iff the device is in 'vacation mode'.",
          "format": "google-datetime",
          "type": "string"
        },
        "ownerCompanyId": {
          "description": "The ID of the Customer that purchased the device.",
          "format": "int64",
          "type": "string"
        },
        "resellerId": {
          "description": "The ID of the reseller that claimed the device.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "DeviceClaim"
    },
    "PerDeviceStatusInBatch": {
      "properties": {
        "errorMessage": {
          "description": "If processing fails, a developer message explaining what went wrong.",
          "type": "string"
        },
        "deviceId": {
          "description": "If processing succeeds, the device ID of the device.",
          "format": "int64",
          "type": "string"
        },
        "status": {
          "enum": [
            "SINGLE_DEVICE_STATUS_UNSPECIFIED",
            "SINGLE_DEVICE_STATUS_UNKNOWN_ERROR",
            "SINGLE_DEVICE_STATUS_OTHER_ERROR",
            "SINGLE_DEVICE_STATUS_SUCCESS",
            "SINGLE_DEVICE_STATUS_PERMISSION_DENIED",
            "SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER",
            "SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE",
            "SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS"
          ],
          "description": "The result status of the device after processing.",
          "type": "string",
          "enumDescriptions": [
            "Invalid code. Shouldn't be used.",
            "Unknown error.\nWe don't expect this error to occur here.",
            "Other error.\nWe know/expect this error, but there's no defined error code for the\nerror.",
            "Success.",
            "Permission denied.",
            "Invalid device identifier.",
            "Invalid section type.",
            "This section is claimed by another company."
          ]
        },
        "errorIdentifier": {
          "description": "If processing fails, the error type.",
          "type": "string"
        }
      },
      "id": "PerDeviceStatusInBatch",
      "description": "Captures the processing status for each device in the operation.",
      "type": "object"
    },
    "ClaimDevicesRequest": {
      "description": "Request to claim devices asynchronously in batch. Claiming a device adds the\ndevice to zero-touch enrollment and shows the device in the customer's view\nof the portal.",
      "type": "object",
      "properties": {
        "claims": {
          "type": "array",
          "items": {
            "$ref": "PartnerClaim"
          },
          "description": "Required. A list of device claims."
        }
      },
      "id": "ClaimDevicesRequest"
    },
    "FindDevicesByOwnerRequest": {
      "description": "Request to find devices by customers.",
      "type": "object",
      "properties": {
        "limit": {
          "description": "Required. The maximum number of devices to show in a page of results. Must\nbe between 1 and 100 inclusive.",
          "format": "int64",
          "type": "string"
        },
        "pageToken": {
          "type": "string",
          "description": "A token specifying which result page to return."
        },
        "sectionType": {
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_SIM_LOCK",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "description": "Required. The section type of the device's provisioning record.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified section type.",
            "SIM-lock section type.",
            "Zero-touch enrollment section type."
          ]
        },
        "customerId": {
          "description": "Required. The list of customer IDs to search for.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      },
      "id": "FindDevicesByOwnerRequest"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "This field will always be not set if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`. In this case, error information for each device is set in `response.perDeviceStatus.result.status`.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`."
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "DeviceIdentifier": {
      "properties": {
        "meid": {
          "description": "The device’s MEID number.",
          "type": "string"
        },
        "manufacturer": {
          "description": "The device manufacturer’s name. Matches the device's built-in\nvalue returned from `android.os.Build.MANUFACTURER`. Allowed values are\nlisted in\n[manufacturers](/zero-touch/resources/manufacturer-names#manufacturers-names).",
          "type": "string"
        },
        "serialNumber": {
          "description": "The manufacturer's serial number for the device. This value might not be\nunique across different device models.",
          "type": "string"
        },
        "model": {
          "description": "The device model's name. Matches the device's built-in value returned from\n`android.os.Build.MODEL`. Allowed values are listed in\n[models](/zero-touch/resources/manufacturer-names#model-names).",
          "type": "string"
        },
        "imei": {
          "description": "The device’s IMEI number. Validated on input.",
          "type": "string"
        }
      },
      "id": "DeviceIdentifier",
      "description": "Encapsulates hardware and product IDs to identify a manufactured device.\nTo understand requirements on identifier sets, read\n[Identifiers](/zero-touch/guides/identifiers).",
      "type": "object"
    },
    "Dpc": {
      "description": "An EMM's DPC ([device policy\ncontroller](http://developer.android.com/work/dpc/build-dpc.html)).\nZero-touch enrollment installs a DPC (listed in the `Configuration`) on a\ndevice to maintain the customer's mobile policies. All the DPCs listed by the\nAPI support zero-touch enrollment and are available in Google Play.",
      "type": "object",
      "properties": {
        "dpcName": {
          "description": "Output only. The title of the DPC app in Google Play. For example, _Google\nApps Device Policy_. Useful in an application's user interface.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The API resource name in the format\n`customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by\nthe server. To maintain a reference to a DPC across customer accounts,\npersist and match the last path component (`DPC_ID`).",
          "type": "string"
        },
        "packageName": {
          "type": "string",
          "description": "Output only. The DPC's Android application ID that looks like a Java\npackage name. Zero-touch enrollment installs the DPC app onto a device\nusing this identifier."
        }
      },
      "id": "Dpc"
    },
    "CustomerApplyConfigurationRequest": {
      "description": "Request message for customer to assign a configuration to device.",
      "type": "object",
      "properties": {
        "configuration": {
          "description": "Required. The configuration applied to the device in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.",
          "type": "string"
        },
        "device": {
          "description": "Required. The device the configuration is applied to.",
          "$ref": "DeviceReference"
        }
      },
      "id": "CustomerApplyConfigurationRequest"
    },
    "UnclaimDevicesRequest": {
      "description": "Request to unclaim devices asynchronously in batch.",
      "type": "object",
      "properties": {
        "unclaims": {
          "type": "array",
          "items": {
            "$ref": "PartnerUnclaim"
          },
          "description": "Required. The list of devices to unclaim."
        }
      },
      "id": "UnclaimDevicesRequest"
    },
    "CustomerUnclaimDeviceRequest": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "DeviceReference",
          "description": "Required. The device to unclaim."
        }
      },
      "id": "CustomerUnclaimDeviceRequest",
      "description": "Request message for customer to unclaim a device."
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "Android Provisioning Partner",
  "rootUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "androiddeviceprovisioning",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Android Device Provisioning Partner API",
  "ownerName": "Google",
  "resources": {
    "customers": {
      "methods": {
        "list": {
          "description": "Lists the user's customer accounts.",
          "response": {
            "$ref": "CustomerListCustomersResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of customers to show in a page of results.\nA number between 1 and 100 (inclusive).",
              "format": "int32"
            },
            "pageToken": {
              "location": "query",
              "description": "A token specifying which result page to return.",
              "type": "string"
            }
          },
          "flatPath": "v1/customers",
          "path": "v1/customers",
          "id": "androiddeviceprovisioning.customers.list"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "unclaim": {
              "flatPath": "v1/customers/{customersId}/devices:unclaim",
              "path": "v1/{+parent}/devices:unclaim",
              "id": "androiddeviceprovisioning.customers.devices.unclaim",
              "description": "Unclaims a device from a customer and removes it from zero-touch\nenrollment.\n\nAfter removing a device, a customer must contact their reseller to register\nthe device into zero-touch enrollment again.",
              "request": {
                "$ref": "CustomerUnclaimDeviceRequest"
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The customer managing the device. An API resource name in the\nformat `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              }
            },
            "removeConfiguration": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The customer managing the device in the format\n`customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/customers/{customersId}/devices:removeConfiguration",
              "path": "v1/{+parent}/devices:removeConfiguration",
              "id": "androiddeviceprovisioning.customers.devices.removeConfiguration",
              "request": {
                "$ref": "CustomerRemoveConfigurationRequest"
              },
              "description": "Removes a configuration from device."
            },
            "applyConfiguration": {
              "flatPath": "v1/customers/{customersId}/devices:applyConfiguration",
              "path": "v1/{+parent}/devices:applyConfiguration",
              "id": "androiddeviceprovisioning.customers.devices.applyConfiguration",
              "request": {
                "$ref": "CustomerApplyConfigurationRequest"
              },
              "description": "Applies a Configuration to the device to register the device for zero-touch\nenrollment. After applying a configuration to a device, the device\nautomatically provisions itself on first boot, or next factory reset.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The customer managing the device. An API resource name in the\nformat `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                }
              }
            },
            "list": {
              "flatPath": "v1/customers/{customersId}/devices",
              "path": "v1/{+parent}/devices",
              "id": "androiddeviceprovisioning.customers.devices.list",
              "description": "Lists a customer's devices.",
              "response": {
                "$ref": "CustomerListDevicesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of devices to show in a page of results.\nMust be between 1 and 100 inclusive.",
                  "format": "int64",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The customer managing the devices. An API resource name in the\nformat `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "A token specifying which result page to return.",
                  "type": "string",
                  "location": "query"
                }
              }
            },
            "get": {
              "path": "v1/{+name}",
              "id": "androiddeviceprovisioning.customers.devices.get",
              "description": "Gets the details of a device.",
              "response": {
                "$ref": "Device"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The device to get. An API resource name in the format\n`customers/[CUSTOMER_ID]/devices/[DEVICE_ID]`."
                }
              },
              "flatPath": "v1/customers/{customersId}/devices/{devicesId}"
            }
          }
        },
        "configurations": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The configuration to delete. An API resource name in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. If the\nconfiguration is applied to any devices, the API call fails.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$"
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "id": "androiddeviceprovisioning.customers.configurations.delete",
              "path": "v1/{+name}",
              "description": "Deletes an unused configuration. The API call fails if the customer has\ndevices with the configuration applied."
            },
            "get": {
              "response": {
                "$ref": "Configuration"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "location": "path",
                  "description": "Required. The configuration to get. An API resource name in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`."
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "path": "v1/{+name}",
              "id": "androiddeviceprovisioning.customers.configurations.get",
              "description": "Gets the details of a configuration."
            },
            "patch": {
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Configuration"
              },
              "parameters": {
                "name": {
                  "description": "Output only. The API resource name in the format\n`customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by\nthe server.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/configurations/[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "location": "query",
                  "description": "Required. The field mask applied to the target `Configuration` before\nupdating the fields. To learn more about using field masks, read\n[FieldMask](/protocol-buffers/docs/reference/google.protobuf#fieldmask) in\nthe Protocol Buffers documentation.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations/{configurationsId}",
              "id": "androiddeviceprovisioning.customers.configurations.patch",
              "path": "v1/{+name}",
              "description": "Updates a configuration's field values.",
              "request": {
                "$ref": "Configuration"
              }
            },
            "list": {
              "id": "androiddeviceprovisioning.customers.configurations.list",
              "path": "v1/{+parent}/configurations",
              "description": "Lists a customer's configurations.",
              "httpMethod": "GET",
              "response": {
                "$ref": "CustomerListConfigurationsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The customer that manages the listed configurations. An API\nresource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations"
            },
            "create": {
              "id": "androiddeviceprovisioning.customers.configurations.create",
              "path": "v1/{+parent}/configurations",
              "description": "Creates a new configuration. Once created, a customer can apply the\nconfiguration to devices.",
              "request": {
                "$ref": "Configuration"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Configuration"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The customer that manages the configuration. An API resource name\nin the format `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/customers/{customersId}/configurations"
            }
          }
        },
        "dpcs": {
          "methods": {
            "list": {
              "response": {
                "$ref": "CustomerListDpcsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The customer that can use the DPCs in configurations. An API\nresource name in the format `customers/[CUSTOMER_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "flatPath": "v1/customers/{customersId}/dpcs",
              "path": "v1/{+parent}/dpcs",
              "id": "androiddeviceprovisioning.customers.dpcs.list",
              "description": "Lists the DPCs (device policy controllers) that support zero-touch\nenrollment."
            }
          }
        }
      }
    },
    "partners": {
      "resources": {
        "devices": {
          "methods": {
            "updateMetadataAsync": {
              "request": {
                "$ref": "UpdateDeviceMetadataInBatchRequest"
              },
              "description": "Updates the reseller metadata attached to a batch of devices. This method\nupdates devices asynchronously and returns an `Operation` that can be used\nto track progress. Read [Long‑running batch\noperations](/zero-touch/guides/how-it-works#operations).",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The reseller partner ID.",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:updateMetadataAsync",
              "path": "v1/partners/{+partnerId}/devices:updateMetadataAsync",
              "id": "androiddeviceprovisioning.partners.devices.updateMetadataAsync"
            },
            "get": {
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}",
              "id": "androiddeviceprovisioning.partners.devices.get",
              "path": "v1/{+name}",
              "description": "Gets a device.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Device"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The device API resource name in the format\n`partners/[PARTNER_ID]/devices/[DEVICE_ID]`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^partners/[^/]+/devices/[^/]+$"
                }
              }
            },
            "unclaim": {
              "parameters": {
                "partnerId": {
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:unclaim",
              "id": "androiddeviceprovisioning.partners.devices.unclaim",
              "path": "v1/partners/{+partnerId}/devices:unclaim",
              "request": {
                "$ref": "UnclaimDeviceRequest"
              },
              "description": "Unclaims a device from a customer and removes it from zero-touch\nenrollment.",
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "Empty"
              }
            },
            "findByOwner": {
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "FindDevicesByOwnerResponse"
              },
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:findByOwner",
              "id": "androiddeviceprovisioning.partners.devices.findByOwner",
              "path": "v1/partners/{+partnerId}/devices:findByOwner",
              "description": "Finds devices claimed for customers. The results only contain devices\nregistered to the reseller that's identified by the `partnerId` argument.\nThe customer's devices purchased from other resellers don't appear in the\nresults.",
              "request": {
                "$ref": "FindDevicesByOwnerRequest"
              }
            },
            "claim": {
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "ClaimDeviceResponse"
              },
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:claim",
              "id": "androiddeviceprovisioning.partners.devices.claim",
              "path": "v1/partners/{+partnerId}/devices:claim",
              "description": "Claims a device for a customer and adds it to zero-touch enrollment. If the\ndevice is already claimed by another customer, the call returns an error.",
              "request": {
                "$ref": "ClaimDeviceRequest"
              }
            },
            "claimAsync": {
              "parameters": {
                "partnerId": {
                  "location": "path",
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:claimAsync",
              "path": "v1/partners/{+partnerId}/devices:claimAsync",
              "id": "androiddeviceprovisioning.partners.devices.claimAsync",
              "request": {
                "$ref": "ClaimDevicesRequest"
              },
              "description": "Claims a batch of devices for a customer asynchronously. Adds the devices\nto zero-touch enrollment. To learn more, read [Long‑running batch\noperations](/zero-touch/guides/how-it-works#operations).",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "POST"
            },
            "findByIdentifier": {
              "description": "Finds devices by hardware identifiers, such as IMEI.",
              "request": {
                "$ref": "FindDevicesByDeviceIdentifierRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "partnerId"
              ],
              "response": {
                "$ref": "FindDevicesByDeviceIdentifierResponse"
              },
              "parameters": {
                "partnerId": {
                  "format": "int64",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The ID of the reseller partner.",
                  "pattern": "^[^/]+$"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:findByIdentifier",
              "id": "androiddeviceprovisioning.partners.devices.findByIdentifier",
              "path": "v1/partners/{+partnerId}/devices:findByIdentifier"
            },
            "unclaimAsync": {
              "path": "v1/partners/{+partnerId}/devices:unclaimAsync",
              "id": "androiddeviceprovisioning.partners.devices.unclaimAsync",
              "request": {
                "$ref": "UnclaimDevicesRequest"
              },
              "description": "Unclaims a batch of devices for a customer asynchronously. Removes the\ndevices from zero-touch enrollment. To learn more, read [Long‑running batch\noperations](/zero-touch/guides/how-it-works#operations).",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "partnerId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The reseller partner ID."
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices:unclaimAsync"
            },
            "metadata": {
              "description": "Updates reseller metadata associated with the device.",
              "request": {
                "$ref": "UpdateDeviceMetadataRequest"
              },
              "response": {
                "$ref": "DeviceMetadata"
              },
              "parameterOrder": [
                "metadataOwnerId",
                "deviceId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "metadataOwnerId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The owner of the newly set metadata. Set this to the partner ID."
                },
                "deviceId": {
                  "location": "path",
                  "description": "Required. The ID of the device.",
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/partners/{partnersId}/devices/{devicesId}/metadata",
              "path": "v1/partners/{+metadataOwnerId}/devices/{+deviceId}/metadata",
              "id": "androiddeviceprovisioning.partners.devices.metadata"
            }
          }
        },
        "customers": {
          "methods": {
            "list": {
              "flatPath": "v1/partners/{partnersId}/customers",
              "path": "v1/partners/{+partnerId}/customers",
              "id": "androiddeviceprovisioning.partners.customers.list",
              "description": "Lists the customers that are enrolled to the reseller identified by the\n`partnerId` argument. This list includes customers that the reseller\ncreated and customers that enrolled themselves using the portal.",
              "response": {
                "$ref": "ListCustomersResponse"
              },
              "parameterOrder": [
                "partnerId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results returned by the server.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to be returned. If not specified or 0, all\nthe records are returned.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "partnerId": {
                  "pattern": "^[^/]+$",
                  "format": "int64",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The ID of the reseller partner."
                }
              }
            },
            "create": {
              "path": "v1/{+parent}/customers",
              "id": "androiddeviceprovisioning.partners.customers.create",
              "description": "Creates a customer for zero-touch enrollment. After the method returns\nsuccessfully, admin and owner roles can manage devices and EMM configs\nby calling API methods or using their zero-touch enrollment portal.\nThe customer receives an email that welcomes them to zero-touch enrollment\nand explains how to sign into the portal.",
              "request": {
                "$ref": "CreateCustomerRequest"
              },
              "response": {
                "$ref": "Company"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^partners/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent resource ID in the format `partners/[PARTNER_ID]` that\nidentifies the reseller.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/partners/{partnersId}/customers"
            }
          }
        },
        "vendors": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListVendorsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^partners/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name in the format `partners/[PARTNER_ID]`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "A token identifying a page of results returned by the server.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of results to be returned.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v1/partners/{partnersId}/vendors",
              "path": "v1/{+parent}/vendors",
              "id": "androiddeviceprovisioning.partners.vendors.list",
              "description": "Lists the vendors of the partner."
            }
          },
          "resources": {
            "customers": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of results to be returned.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^partners/[^/]+/vendors/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name in the format\n`partners/[PARTNER_ID]/vendors/[VENDOR_ID]`."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results returned by the server.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/partners/{partnersId}/vendors/{vendorsId}/customers",
                  "id": "androiddeviceprovisioning.partners.vendors.customers.list",
                  "path": "v1/{+parent}/customers",
                  "description": "Lists the customers of the vendor.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListVendorCustomersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "pattern": "^operations/.+$",
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "path": "v1/{+name}",
          "id": "androiddeviceprovisioning.operations.get",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        }
      }
    }
  },
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v1",
  "baseUrl": "https://androiddeviceprovisioning.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Automates Android zero-touch enrollment for device resellers, customers, and EMMs.",
  "servicePath": "",
  "basePath": "",
  "id": "androiddeviceprovisioning:v1",
  "revision": "20190531",
  "documentationLink": "https://developers.google.com/zero-touch/"
}
