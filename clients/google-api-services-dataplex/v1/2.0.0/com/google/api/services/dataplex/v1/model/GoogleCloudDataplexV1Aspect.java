/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataplex.v1.model;

/**
 * An aspect is a single piece of metadata describing an entry.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataplex API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDataplexV1Aspect extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Information related to the source system of the aspect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1AspectSource aspectSource;

  /**
   * Output only. The resource name of the type used to create this Aspect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String aspectType;

  /**
   * Output only. The time when the Aspect was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The content of the aspect, according to its aspect type schema. The maximum size of
   * the field is 120KB (encoded as UTF-8).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> data;

  /**
   * Output only. The path in the entry under which the aspect is attached.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Output only. The time when the Aspect was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Information related to the source system of the aspect.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectSource getAspectSource() {
    return aspectSource;
  }

  /**
   * Optional. Information related to the source system of the aspect.
   * @param aspectSource aspectSource or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setAspectSource(GoogleCloudDataplexV1AspectSource aspectSource) {
    this.aspectSource = aspectSource;
    return this;
  }

  /**
   * Output only. The resource name of the type used to create this Aspect.
   * @return value or {@code null} for none
   */
  public java.lang.String getAspectType() {
    return aspectType;
  }

  /**
   * Output only. The resource name of the type used to create this Aspect.
   * @param aspectType aspectType or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setAspectType(java.lang.String aspectType) {
    this.aspectType = aspectType;
    return this;
  }

  /**
   * Output only. The time when the Aspect was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the Aspect was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The content of the aspect, according to its aspect type schema. The maximum size of
   * the field is 120KB (encoded as UTF-8).
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getData() {
    return data;
  }

  /**
   * Required. The content of the aspect, according to its aspect type schema. The maximum size of
   * the field is 120KB (encoded as UTF-8).
   * @param data data or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setData(java.util.Map<String, java.lang.Object> data) {
    this.data = data;
    return this;
  }

  /**
   * Output only. The path in the entry under which the aspect is attached.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Output only. The path in the entry under which the aspect is attached.
   * @param path path or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Output only. The time when the Aspect was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the Aspect was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudDataplexV1Aspect setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudDataplexV1Aspect set(String fieldName, Object value) {
    return (GoogleCloudDataplexV1Aspect) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDataplexV1Aspect clone() {
    return (GoogleCloudDataplexV1Aspect) super.clone();
  }

}
