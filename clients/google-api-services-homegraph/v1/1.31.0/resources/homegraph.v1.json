{
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "AgentOtherDeviceId": {
      "properties": {
        "agentId": {
          "type": "string",
          "description": "Project ID for your smart home Action."
        },
        "deviceId": {
          "description": "Unique third-party device ID.",
          "type": "string"
        }
      },
      "id": "AgentOtherDeviceId",
      "type": "object",
      "description": "Alternate third-party device ID."
    },
    "RequestSyncDevicesResponse": {
      "description": "Response type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices) call. Intentionally empty upon success. An HTTP response code is returned with more details upon failure.",
      "type": "object",
      "id": "RequestSyncDevicesResponse",
      "properties": {}
    },
    "RequestSyncDevicesRequest": {
      "type": "object",
      "description": "Request type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices) call.",
      "id": "RequestSyncDevicesRequest",
      "properties": {
        "agentUserId": {
          "description": "Required. Third-party user ID.",
          "type": "string"
        },
        "async": {
          "type": "boolean",
          "description": "Optional. If set, the request will be added to a queue and a response will be returned immediately. This enables concurrent requests for the given `agent_user_id`, but the caller will not receive any error responses."
        }
      }
    },
    "DeviceNames": {
      "type": "object",
      "description": "Identifiers used to describe the device.",
      "id": "DeviceNames",
      "properties": {
        "defaultNames": {
          "description": "List of names provided by the manufacturer rather than the user, such as serial numbers, SKUs, etc.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Primary name of the device, generally provided by the user.",
          "type": "string"
        },
        "nicknames": {
          "type": "array",
          "description": "Additional names provided by the user for the device.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Device": {
      "description": "Third-party device definition.",
      "type": "object",
      "id": "Device",
      "properties": {
        "name": {
          "$ref": "DeviceNames",
          "description": "Names given to this device by your smart home Action."
        },
        "willReportState": {
          "type": "boolean",
          "description": "Indicates whether your smart home Action will report state of this device to Google via ReportStateAndNotification."
        },
        "id": {
          "description": "Third-party device ID.",
          "type": "string"
        },
        "structureHint": {
          "description": "Suggested name for the structure where this device is installed. Google attempts to use this value during user setup.",
          "type": "string"
        },
        "notificationSupportedByAgent": {
          "description": "Indicates whether your smart home Action will report notifications to Google for this device via ReportStateAndNotification. If your smart home Action enables users to control device notifications, you should update this field and call RequestSyncDevices.",
          "type": "boolean"
        },
        "roomHint": {
          "type": "string",
          "description": "Suggested name for the room where this device is installed. Google attempts to use this value during user setup."
        },
        "traits": {
          "items": {
            "type": "string"
          },
          "description": "Traits supported by the device. See [device traits](https://developers.google.com/assistant/smarthome/traits).",
          "type": "array"
        },
        "customData": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom device attributes stored in Home Graph and provided to your smart home Action in each [QUERY](https://developers.google.com/assistant/smarthome/reference/intent/query) and [EXECUTE](https://developers.google.com/assistant/smarthome/reference/intent/execute) intent. Data in this object has a few constraints: No sensitive information, including but not limited to Personally Identifiable Information."
        },
        "otherDeviceIds": {
          "type": "array",
          "description": "Alternate IDs associated with this device. This is used to identify cloud synced devices enabled for [local fulfillment](https://developers.google.com/assistant/smarthome/concepts/local).",
          "items": {
            "$ref": "AgentOtherDeviceId"
          }
        },
        "deviceInfo": {
          "description": "Device manufacturer, model, hardware version, and software version.",
          "$ref": "DeviceInfo"
        },
        "type": {
          "type": "string",
          "description": "Hardware type of the device. See [device types](https://developers.google.com/assistant/smarthome/guides)."
        },
        "attributes": {
          "description": "Attributes for the traits supported by the device.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "StateAndNotificationPayload": {
      "type": "object",
      "properties": {
        "devices": {
          "$ref": "ReportStateAndNotificationDevice",
          "description": "The devices for updating state and sending notifications."
        }
      },
      "id": "StateAndNotificationPayload",
      "description": "Payload containing the state and notification information for devices."
    },
    "ReportStateAndNotificationDevice": {
      "description": "The states and notifications specific to a device.",
      "id": "ReportStateAndNotificationDevice",
      "properties": {
        "states": {
          "type": "object",
          "description": "States of devices to update. See the **Device STATES** section of the individual trait [reference guides](https://developers.google.com/assistant/smarthome/traits).",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "notifications": {
          "description": "Notifications metadata for devices. See the **Device NOTIFICATIONS** section of the individual trait [reference guides](https://developers.google.com/assistant/smarthome/traits).",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QueryResponsePayload": {
      "description": "Payload containing device states information.",
      "id": "QueryResponsePayload",
      "type": "object",
      "properties": {
        "devices": {
          "description": "States of the devices. Map of third-party device ID to struct of device states.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object.",
              "type": "any"
            }
          }
        }
      }
    },
    "QueryRequestPayload": {
      "type": "object",
      "properties": {
        "devices": {
          "items": {
            "$ref": "AgentDeviceId"
          },
          "type": "array",
          "description": "Third-party device IDs for which to get the device states."
        }
      },
      "description": "Payload containing device IDs.",
      "id": "QueryRequestPayload"
    },
    "QueryRequestInput": {
      "id": "QueryRequestInput",
      "properties": {
        "payload": {
          "description": "Payload containing third-party device IDs.",
          "$ref": "QueryRequestPayload"
        }
      },
      "description": "Device ID inputs to QueryRequest.",
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "SyncRequest": {
      "description": "Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.",
      "properties": {
        "requestId": {
          "description": "Request ID used for debugging.",
          "type": "string"
        },
        "agentUserId": {
          "type": "string",
          "description": "Required. Third-party user ID."
        }
      },
      "type": "object",
      "id": "SyncRequest"
    },
    "ReportStateAndNotificationRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Request ID used for debugging."
        },
        "agentUserId": {
          "description": "Required. Third-party user ID.",
          "type": "string"
        },
        "eventId": {
          "description": "Unique identifier per event (for example, a doorbell press).",
          "type": "string"
        },
        "payload": {
          "$ref": "StateAndNotificationPayload",
          "description": "Required. State of devices to update and notification metadata for devices."
        },
        "followUpToken": {
          "type": "string",
          "description": "Token to maintain state in the follow up notification response. Deprecated. See the [notifications guide](https://developers.google.com/assistant/smarthome/develop/notifications) for details on implementing follow up notifications."
        }
      },
      "description": "Request type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification) call. It may include states, notifications, or both. States and notifications are defined per `device_id` (for example, \"123\" and \"456\" in the following example). # Example ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\", \"agentUserId\": \"1234\", \"payload\": { \"devices\": { \"states\": { \"123\": { \"on\": true }, \"456\": { \"on\": true, \"brightness\": 10 } }, } } } ```",
      "type": "object",
      "id": "ReportStateAndNotificationRequest"
    },
    "DeviceInfo": {
      "type": "object",
      "properties": {
        "manufacturer": {
          "type": "string",
          "description": "Device manufacturer."
        },
        "hwVersion": {
          "type": "string",
          "description": "Device hardware version."
        },
        "swVersion": {
          "type": "string",
          "description": "Device software version."
        },
        "model": {
          "type": "string",
          "description": "Device model."
        }
      },
      "id": "DeviceInfo",
      "description": "Device information."
    },
    "SyncResponse": {
      "properties": {
        "requestId": {
          "description": "Request ID used for debugging. Copied from the request.",
          "type": "string"
        },
        "payload": {
          "description": "Devices associated with the third-party user.",
          "$ref": "SyncResponsePayload"
        }
      },
      "type": "object",
      "id": "SyncResponse",
      "description": "Response type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call. This should follow the same format as the Google smart home `action.devices.SYNC` [response](https://developers.google.com/assistant/smarthome/reference/intent/sync). # Example ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\", \"payload\": { \"agentUserId\": \"1836.15267389\", \"devices\": [{ \"id\": \"123\", \"type\": \"action.devices.types.OUTLET\", \"traits\": [ \"action.devices.traits.OnOff\" ], \"name\": { \"defaultNames\": [\"My Outlet 1234\"], \"name\": \"Night light\", \"nicknames\": [\"wall plug\"] }, \"willReportState\": false, \"deviceInfo\": { \"manufacturer\": \"lights-out-inc\", \"model\": \"hs1234\", \"hwVersion\": \"3.2\", \"swVersion\": \"11.4\" }, \"customData\": { \"fooValue\": 74, \"barValue\": true, \"bazValue\": \"foo\" } }] } } ```"
    },
    "SyncResponsePayload": {
      "id": "SyncResponsePayload",
      "properties": {
        "devices": {
          "items": {
            "$ref": "Device"
          },
          "description": "Devices associated with the third-party user.",
          "type": "array"
        },
        "agentUserId": {
          "type": "string",
          "description": "Third-party user ID"
        }
      },
      "type": "object",
      "description": "Payload containing device information."
    },
    "QueryResponse": {
      "type": "object",
      "id": "QueryResponse",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Request ID used for debugging. Copied from the request."
        },
        "payload": {
          "description": "Device states for the devices given in the request.",
          "$ref": "QueryResponsePayload"
        }
      },
      "description": "Response type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This should follow the same format as the Google smart home `action.devices.QUERY` [response](https://developers.google.com/assistant/smarthome/reference/intent/query). # Example ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\", \"payload\": { \"devices\": { \"123\": { \"on\": true, \"online\": true }, \"456\": { \"on\": true, \"online\": true, \"brightness\": 80, \"color\": { \"name\": \"cerulean\", \"spectrumRGB\": 31655 } } } } } ```"
    },
    "QueryRequest": {
      "id": "QueryRequest",
      "description": "Request type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Request ID used for debugging."
        },
        "agentUserId": {
          "type": "string",
          "description": "Required. Third-party user ID."
        },
        "inputs": {
          "type": "array",
          "description": "Required. Inputs containing third-party device IDs for which to get the device states.",
          "items": {
            "$ref": "QueryRequestInput"
          }
        }
      }
    },
    "ReportStateAndNotificationResponse": {
      "properties": {
        "requestId": {
          "description": "Request ID copied from ReportStateAndNotificationRequest.",
          "type": "string"
        }
      },
      "id": "ReportStateAndNotificationResponse",
      "description": "Response type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification) call.",
      "type": "object"
    },
    "AgentDeviceId": {
      "properties": {
        "id": {
          "description": "Third-party device ID.",
          "type": "string"
        }
      },
      "id": "AgentDeviceId",
      "type": "object",
      "description": "Third-party device ID for one device."
    }
  },
  "rootUrl": "https://homegraph.googleapis.com/",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "servicePath": "",
  "baseUrl": "https://homegraph.googleapis.com/",
  "kind": "discovery#restDescription",
  "version_module": true,
  "protocol": "rest",
  "canonicalName": "Home Graph Service",
  "name": "homegraph",
  "documentationLink": "https://developers.google.com/actions/smarthome/create-app#request-sync",
  "description": "",
  "basePath": "",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "default": "json"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    }
  },
  "resources": {
    "devices": {
      "methods": {
        "reportStateAndNotification": {
          "parameterOrder": [],
          "request": {
            "$ref": "ReportStateAndNotificationRequest"
          },
          "description": "Reports device state and optionally sends device notifications. Called by your smart home Action when the state of a third-party device changes or you need to send a notification about the device. See [Implement Report State](https://developers.google.com/assistant/smarthome/develop/report-state) for more information. This method updates the device state according to its declared [traits](https://developers.google.com/assistant/smarthome/concepts/devices-traits). Publishing a new state value outside of these traits will result in an `INVALID_ARGUMENT` error response. The third-party user's identity is passed in via the `agent_user_id` (see ReportStateAndNotificationRequest). This request must be authorized using service account credentials from your Actions console project.",
          "scopes": [
            "https://www.googleapis.com/auth/homegraph"
          ],
          "parameters": {},
          "response": {
            "$ref": "ReportStateAndNotificationResponse"
          },
          "id": "homegraph.devices.reportStateAndNotification",
          "httpMethod": "POST",
          "flatPath": "v1/devices:reportStateAndNotification",
          "path": "v1/devices:reportStateAndNotification"
        },
        "requestSync": {
          "scopes": [
            "https://www.googleapis.com/auth/homegraph"
          ],
          "flatPath": "v1/devices:requestSync",
          "response": {
            "$ref": "RequestSyncDevicesResponse"
          },
          "request": {
            "$ref": "RequestSyncDevicesRequest"
          },
          "parameters": {},
          "path": "v1/devices:requestSync",
          "description": "Requests Google to send an `action.devices.SYNC` [intent](https://developers.google.com/assistant/smarthome/reference/intent/sync) to your smart home Action to update device metadata for the given user. The third-party user's identity is passed via the `agent_user_id` (see RequestSyncDevicesRequest). This request must be authorized using service account credentials from your Actions console project.",
          "id": "homegraph.devices.requestSync",
          "httpMethod": "POST",
          "parameterOrder": []
        },
        "query": {
          "response": {
            "$ref": "QueryResponse"
          },
          "description": "Gets the current states in Home Graph for the given set of the third-party user's devices. The third-party user's identity is passed in via the `agent_user_id` (see QueryRequest). This request must be authorized using service account credentials from your Actions console project.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/homegraph"
          ],
          "request": {
            "$ref": "QueryRequest"
          },
          "id": "homegraph.devices.query",
          "flatPath": "v1/devices:query",
          "parameters": {},
          "path": "v1/devices:query"
        },
        "sync": {
          "path": "v1/devices:sync",
          "flatPath": "v1/devices:sync",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "SyncRequest"
          },
          "response": {
            "$ref": "SyncResponse"
          },
          "httpMethod": "POST",
          "description": "Gets all the devices associated with the given third-party user. The third-party user's identity is passed in via the `agent_user_id` (see SyncRequest). This request must be authorized using service account credentials from your Actions console project.",
          "scopes": [
            "https://www.googleapis.com/auth/homegraph"
          ],
          "id": "homegraph.devices.sync"
        }
      }
    },
    "agentUsers": {
      "methods": {
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+agentUserId}",
          "parameters": {
            "agentUserId": {
              "pattern": "^agentUsers/.*$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. Third-party user ID."
            },
            "requestId": {
              "type": "string",
              "location": "query",
              "description": "Request ID used for debugging."
            }
          },
          "parameterOrder": [
            "agentUserId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/homegraph"
          ],
          "httpMethod": "DELETE",
          "description": "Unlinks the given third-party user from your smart home Action. All data related to this user will be deleted. For more details on how users link their accounts, see [fulfillment and authentication](https://developers.google.com/assistant/smarthome/concepts/fulfillment-authentication). The third-party user's identity is passed in via the `agent_user_id` (see DeleteAgentUserRequest). This request must be authorized using service account credentials from your Actions console project.",
          "flatPath": "v1/agentUsers/{agentUsersId}",
          "id": "homegraph.agentUsers.delete"
        }
      }
    }
  },
  "title": "HomeGraph API",
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/homegraph": {
          "description": "New Service: https://www.googleapis.com/auth/homegraph"
        }
      }
    }
  },
  "mtlsRootUrl": "https://homegraph.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "homegraph:v1",
  "revision": "20210115"
}
