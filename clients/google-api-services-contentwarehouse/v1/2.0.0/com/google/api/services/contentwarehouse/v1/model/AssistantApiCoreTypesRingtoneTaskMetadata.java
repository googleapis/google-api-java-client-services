/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Task metadata information describing the ringtone. Next id: 11
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesRingtoneTaskMetadata extends com.google.api.client.json.GenericJson {

  /**
   * The category related with the ringtone. It's used to generate ringtone related with the
   * category if the entity_mid is not be populated. E.g. for instrument, the ringtone may be piano
   * sound.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String category;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataCharacterAlarmMetadata characterAlarmMetadata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String characterTag;

  /**
   * The freebase mid of the entity related to the ringtone. It will be used to generate the
   * ringtone for the alarm or timer (with support for i18n). For instance, for the "cat" mid, the
   * related ringtone will be a cat sound in some language, and for the "Beyonce" mid, the ringtone
   * will be, e.g., a playlist of Beyonce's best hits.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityMid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataFuntimeMetadata funtimeMetadata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataGenMlAlarmMetadata genMlAlarmMetadata;

  /**
   * Gentle wake information for this alarm.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataGentleWakeInfo gentleWakeInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataOnDeviceAlarmMetadata onDeviceAlarmMetadata;

  /**
   * Will be deprecated. Use OnDeviceAlarmMetadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String onDeviceAlarmSound;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesRingtoneTaskMetadataRoutineAlarmMetadata routineAlarmMetadata;

  /**
   * The category related with the ringtone. It's used to generate ringtone related with the
   * category if the entity_mid is not be populated. E.g. for instrument, the ringtone may be piano
   * sound.
   * @return value or {@code null} for none
   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * The category related with the ringtone. It's used to generate ringtone related with the
   * category if the entity_mid is not be populated. E.g. for instrument, the ringtone may be piano
   * sound.
   * @param category category or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setCategory(java.lang.String category) {
    this.category = category;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataCharacterAlarmMetadata getCharacterAlarmMetadata() {
    return characterAlarmMetadata;
  }

  /**
   * @param characterAlarmMetadata characterAlarmMetadata or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setCharacterAlarmMetadata(AssistantApiCoreTypesRingtoneTaskMetadataCharacterAlarmMetadata characterAlarmMetadata) {
    this.characterAlarmMetadata = characterAlarmMetadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCharacterTag() {
    return characterTag;
  }

  /**
   * @param characterTag characterTag or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setCharacterTag(java.lang.String characterTag) {
    this.characterTag = characterTag;
    return this;
  }

  /**
   * The freebase mid of the entity related to the ringtone. It will be used to generate the
   * ringtone for the alarm or timer (with support for i18n). For instance, for the "cat" mid, the
   * related ringtone will be a cat sound in some language, and for the "Beyonce" mid, the ringtone
   * will be, e.g., a playlist of Beyonce's best hits.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityMid() {
    return entityMid;
  }

  /**
   * The freebase mid of the entity related to the ringtone. It will be used to generate the
   * ringtone for the alarm or timer (with support for i18n). For instance, for the "cat" mid, the
   * related ringtone will be a cat sound in some language, and for the "Beyonce" mid, the ringtone
   * will be, e.g., a playlist of Beyonce's best hits.
   * @param entityMid entityMid or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setEntityMid(java.lang.String entityMid) {
    this.entityMid = entityMid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataFuntimeMetadata getFuntimeMetadata() {
    return funtimeMetadata;
  }

  /**
   * @param funtimeMetadata funtimeMetadata or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setFuntimeMetadata(AssistantApiCoreTypesRingtoneTaskMetadataFuntimeMetadata funtimeMetadata) {
    this.funtimeMetadata = funtimeMetadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataGenMlAlarmMetadata getGenMlAlarmMetadata() {
    return genMlAlarmMetadata;
  }

  /**
   * @param genMlAlarmMetadata genMlAlarmMetadata or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setGenMlAlarmMetadata(AssistantApiCoreTypesRingtoneTaskMetadataGenMlAlarmMetadata genMlAlarmMetadata) {
    this.genMlAlarmMetadata = genMlAlarmMetadata;
    return this;
  }

  /**
   * Gentle wake information for this alarm.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataGentleWakeInfo getGentleWakeInfo() {
    return gentleWakeInfo;
  }

  /**
   * Gentle wake information for this alarm.
   * @param gentleWakeInfo gentleWakeInfo or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setGentleWakeInfo(AssistantApiCoreTypesRingtoneTaskMetadataGentleWakeInfo gentleWakeInfo) {
    this.gentleWakeInfo = gentleWakeInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataOnDeviceAlarmMetadata getOnDeviceAlarmMetadata() {
    return onDeviceAlarmMetadata;
  }

  /**
   * @param onDeviceAlarmMetadata onDeviceAlarmMetadata or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setOnDeviceAlarmMetadata(AssistantApiCoreTypesRingtoneTaskMetadataOnDeviceAlarmMetadata onDeviceAlarmMetadata) {
    this.onDeviceAlarmMetadata = onDeviceAlarmMetadata;
    return this;
  }

  /**
   * Will be deprecated. Use OnDeviceAlarmMetadata.
   * @return value or {@code null} for none
   */
  public java.lang.String getOnDeviceAlarmSound() {
    return onDeviceAlarmSound;
  }

  /**
   * Will be deprecated. Use OnDeviceAlarmMetadata.
   * @param onDeviceAlarmSound onDeviceAlarmSound or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setOnDeviceAlarmSound(java.lang.String onDeviceAlarmSound) {
    this.onDeviceAlarmSound = onDeviceAlarmSound;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadataRoutineAlarmMetadata getRoutineAlarmMetadata() {
    return routineAlarmMetadata;
  }

  /**
   * @param routineAlarmMetadata routineAlarmMetadata or {@code null} for none
   */
  public AssistantApiCoreTypesRingtoneTaskMetadata setRoutineAlarmMetadata(AssistantApiCoreTypesRingtoneTaskMetadataRoutineAlarmMetadata routineAlarmMetadata) {
    this.routineAlarmMetadata = routineAlarmMetadata;
    return this;
  }

  @Override
  public AssistantApiCoreTypesRingtoneTaskMetadata set(String fieldName, Object value) {
    return (AssistantApiCoreTypesRingtoneTaskMetadata) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesRingtoneTaskMetadata clone() {
    return (AssistantApiCoreTypesRingtoneTaskMetadata) super.clone();
  }

}
