{
  "ownerDomain": "google.com",
  "protocol": "rest",
  "mtlsRootUrl": "https://cloudkms.mtls.googleapis.com/",
  "baseUrl": "https://cloudkms.googleapis.com/",
  "id": "cloudkms:v1",
  "basePath": "",
  "servicePath": "",
  "name": "cloudkms",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://cloud.google.com/kms/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "keyRings": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "cloudkms.projects.locations.keyRings.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns metadata for a given KeyRing.",
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the KeyRing to get.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$"
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. Optional limit on the number of KeyRings to include in the\nresponse.  Further KeyRings can subsequently be obtained by\nincluding the ListKeyRingsResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default."
                    },
                    "filter": {
                      "description": "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order.  For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Optional pagination token, returned earlier via\nListKeyRingsResponse.next_page_token."
                    }
                  },
                  "response": {
                    "$ref": "ListKeyRingsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/keyRings",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "id": "cloudkms.projects.locations.keyRings.list",
                  "description": "Lists KeyRings."
                },
                "testIamPermissions": {
                  "id": "cloudkms.projects.locations.keyRings.testIamPermissions",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "cloudkms.projects.locations.keyRings.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST"
                },
                "getIamPolicy": {
                  "id": "cloudkms.projects.locations.keyRings.getIamPolicy",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "create": {
                  "parameters": {
                    "keyRingId": {
                      "description": "Required. It must be unique within a location and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "KeyRing"
                  },
                  "path": "v1/{+parent}/keyRings",
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "description": "Create a new KeyRing in a given Project and Location.",
                  "id": "cloudkms.projects.locations.keyRings.create",
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "cryptoKeys": {
                  "methods": {
                    "decrypt": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:decrypt",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "Required. The resource name of the CryptoKey to use for decryption.\nThe server will choose the appropriate version.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}:decrypt",
                      "description": "Decrypts data that was protected by Encrypt. The CryptoKey.purpose\nmust be ENCRYPT_DECRYPT.",
                      "response": {
                        "$ref": "DecryptResponse"
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
                      "request": {
                        "$ref": "DecryptRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Optional pagination token, returned earlier via\nListCryptoKeysResponse.next_page_token.",
                          "location": "query"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering)."
                        },
                        "parent": {
                          "description": "Required. The resource name of the KeyRing to list, in the format\n`projects/*/locations/*/keyRings/*`.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$"
                        },
                        "versionView": {
                          "description": "The fields of the primary version to include in the response.",
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED",
                            "FULL"
                          ]
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Optional. Optional limit on the number of CryptoKeys to include in the\nresponse.  Further CryptoKeys can subsequently be obtained by\nincluding the ListCryptoKeysResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering)."
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListCryptoKeysResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "description": "Lists CryptoKeys.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/cryptoKeys"
                    },
                    "testIamPermissions": {
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "path": "v1/{+parent}/cryptoKeys",
                      "httpMethod": "POST",
                      "description": "Create a new CryptoKey within a KeyRing.\n\nCryptoKey.purpose and\nCryptoKey.version_template.algorithm\nare required.",
                      "parameters": {
                        "skipInitialVersionCreation": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set to true, the request will create a CryptoKey without any\nCryptoKeyVersions. You must manually call\nCreateCryptoKeyVersion or\nImportCryptoKeyVersion\nbefore you can use this CryptoKey."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "description": "Required. The name of the KeyRing associated with the\nCryptoKeys.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "cryptoKeyId": {
                          "type": "string",
                          "description": "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.create"
                    },
                    "getIamPolicy": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:getIamPolicy",
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ]
                    },
                    "updatePrimaryVersion": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the CryptoKey to update.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}:updatePrimaryVersion",
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "description": "Update the version of a CryptoKey that will be used in Encrypt.\n\nReturns an error if called on an asymmetric key.",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "UpdateCryptoKeyPrimaryVersionRequest"
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:updatePrimaryVersion",
                      "httpMethod": "POST"
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.patch",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "description": "Update a CryptoKey.",
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Required. List of fields to be updated in this request.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "required": true,
                          "description": "Output only. The resource name for this CryptoKey in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                          "type": "string",
                          "location": "path"
                        }
                      }
                    },
                    "encrypt": {
                      "request": {
                        "$ref": "EncryptRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the CryptoKey or CryptoKeyVersion\nto use for encryption.\n\nIf a CryptoKey is specified, the server will use its\nprimary version.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/.*$",
                          "location": "path"
                        }
                      },
                      "description": "Encrypts data, so that it can only be recovered by a call to Decrypt.\nThe CryptoKey.purpose must be\nENCRYPT_DECRYPT.",
                      "path": "v1/{+name}:encrypt",
                      "response": {
                        "$ref": "EncryptResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:encrypt",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt"
                    },
                    "setIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$"
                        }
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "get": {
                      "description": "Returns metadata for a given CryptoKey, as well as its\nprimary CryptoKeyVersion.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "Required. The name of the CryptoKey to get."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "path": "v1/{+name}"
                    }
                  },
                  "resources": {
                    "cryptoKeyVersions": {
                      "methods": {
                        "list": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "response": {
                            "$ref": "ListCryptoKeyVersionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists CryptoKeyVersions.",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
                          "path": "v1/{+parent}/cryptoKeyVersions",
                          "httpMethod": "GET",
                          "parameters": {
                            "view": {
                              "type": "string",
                              "location": "query",
                              "description": "The fields to include in the response.",
                              "enum": [
                                "CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED",
                                "FULL"
                              ]
                            },
                            "filter": {
                              "location": "query",
                              "description": "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                              "type": "string"
                            },
                            "orderBy": {
                              "type": "string",
                              "description": "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                              "location": "query"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "Required. The resource name of the CryptoKey to list, in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Optional pagination token, returned earlier via\nListCryptoKeyVersionsResponse.next_page_token."
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "description": "Optional. Optional limit on the number of CryptoKeyVersions to\ninclude in the response. Further CryptoKeyVersions can\nsubsequently be obtained by including the\nListCryptoKeyVersionsResponse.next_page_token in a subsequent request.\nIf unspecified, the server will pick an appropriate default.",
                              "format": "int32"
                            }
                          }
                        },
                        "getPublicKey": {
                          "response": {
                            "$ref": "PublicKey"
                          },
                          "httpMethod": "GET",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
                          "path": "v1/{+name}/publicKey",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "description": "Required. The name of the CryptoKeyVersion public key to\nget.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "description": "Returns the public key for the given CryptoKeyVersion. The\nCryptoKey.purpose must be\nASYMMETRIC_SIGN or\nASYMMETRIC_DECRYPT.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}/publicKey",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "import": {
                          "description": "Imports a new CryptoKeyVersion into an existing CryptoKey using the\nwrapped key material provided in the request.\n\nThe version ID will be assigned the next sequential id within the\nCryptoKey.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions:import",
                          "request": {
                            "$ref": "ImportCryptoKeyVersionRequest"
                          },
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "parameters": {
                            "parent": {
                              "description": "Required. The name of the CryptoKey to\nbe imported into.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1/{+parent}/cryptoKeyVersions:import",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import"
                        },
                        "restore": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:restore",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "path": "v1/{+name}:restore",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
                          "request": {
                            "$ref": "RestoreCryptoKeyVersionRequest"
                          },
                          "description": "Restore a CryptoKeyVersion in the\nDESTROY_SCHEDULED\nstate.\n\nUpon restoration of the CryptoKeyVersion, state\nwill be set to DISABLED,\nand destroy_time will be cleared.",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "Required. The resource name of the CryptoKeyVersion to restore.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "destroy": {
                          "description": "Schedule a CryptoKeyVersion for destruction.\n\nUpon calling this method, CryptoKeyVersion.state will be set to\nDESTROY_SCHEDULED\nand destroy_time will be set to a time 24\nhours in the future, at which point the state\nwill be changed to\nDESTROYED, and the key\nmaterial will be irrevocably destroyed.\n\nBefore the destroy_time is reached,\nRestoreCryptoKeyVersion may be called to reverse the process.",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "DestroyCryptoKeyVersionRequest"
                          },
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "description": "Required. The resource name of the CryptoKeyVersion to destroy.",
                              "location": "path",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:destroy",
                          "httpMethod": "POST",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
                          "path": "v1/{+name}:destroy",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          }
                        },
                        "patch": {
                          "httpMethod": "PATCH",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Update a CryptoKeyVersion's metadata.\n\nstate may be changed between\nENABLED and\nDISABLED using this\nmethod. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to\nmove between other states.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "parameters": {
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query",
                              "description": "Required. List of fields to be updated in this request."
                            },
                            "name": {
                              "description": "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "path": "v1/{+name}",
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          }
                        },
                        "asymmetricDecrypt": {
                          "httpMethod": "POST",
                          "path": "v1/{+name}:asymmetricDecrypt",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "AsymmetricDecryptRequest"
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricDecrypt",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "type": "string",
                              "description": "Required. The resource name of the CryptoKeyVersion to use for\ndecryption."
                            }
                          },
                          "description": "Decrypts data that was encrypted with a public key retrieved from\nGetPublicKey corresponding to a CryptoKeyVersion with\nCryptoKey.purpose ASYMMETRIC_DECRYPT.",
                          "response": {
                            "$ref": "AsymmetricDecryptResponse"
                          }
                        },
                        "asymmetricSign": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "Required. The resource name of the CryptoKeyVersion to use for signing."
                            }
                          },
                          "request": {
                            "$ref": "AsymmetricSignRequest"
                          },
                          "response": {
                            "$ref": "AsymmetricSignResponse"
                          },
                          "path": "v1/{+name}:asymmetricSign",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricSign",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
                          "description": "Signs data using a CryptoKeyVersion with CryptoKey.purpose\nASYMMETRIC_SIGN, producing a signature that can be verified with the public\nkey retrieved from GetPublicKey."
                        },
                        "create": {
                          "parameters": {
                            "parent": {
                              "description": "Required. The name of the CryptoKey associated with\nthe CryptoKeyVersions.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "httpMethod": "POST",
                          "description": "Create a new CryptoKeyVersion in a CryptoKey.\n\nThe server will assign the next sequential id. If unset,\nstate will be set to\nENABLED.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "path": "v1/{+parent}/cryptoKeyVersions",
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "description": "Returns metadata for a given CryptoKeyVersion.",
                          "path": "v1/{+name}",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the CryptoKeyVersion to get.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "importJobs": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "ImportJob"
                      },
                      "id": "cloudkms.projects.locations.keyRings.importJobs.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "description": "Returns metadata for a given ImportJob.",
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the ImportJob to get."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "orderBy": {
                          "description": "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. Optional limit on the number of ImportJobs to include in the\nresponse. Further ImportJobs can subsequently be obtained by\nincluding the ListImportJobsResponse.next_page_token in a subsequent\nrequest. If unspecified, the server will pick an appropriate default.",
                          "type": "integer"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the KeyRing to list, in the format\n`projects/*/locations/*/keyRings/*`."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Optional pagination token, returned earlier via\nListImportJobsResponse.next_page_token."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs",
                      "response": {
                        "$ref": "ListImportJobsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists ImportJobs.",
                      "id": "cloudkms.projects.locations.keyRings.importJobs.list",
                      "path": "v1/{+parent}/importJobs",
                      "httpMethod": "GET"
                    },
                    "setIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "id": "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "POST"
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "id": "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "ImportJob"
                      },
                      "request": {
                        "$ref": "ImportJob"
                      },
                      "id": "cloudkms.projects.locations.keyRings.importJobs.create",
                      "path": "v1/{+parent}/importJobs",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs",
                      "description": "Create a new ImportJob within a KeyRing.\n\nImportJob.import_method is required.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the KeyRing associated with the\nImportJobs.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$"
                        },
                        "importJobId": {
                          "type": "string",
                          "description": "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "getIamPolicy": {
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "httpMethod": "GET",
                      "path": "v1/{+resource}:getIamPolicy",
                      "id": "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "cloudkms.projects.locations.get",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloudkms"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "description": "Gets information about a location."
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloudkms"
              ],
              "id": "cloudkms.projects.locations.list",
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://cloudkms.googleapis.com/",
  "title": "Cloud Key Management Service (KMS) API",
  "description": "Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications.\n",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "batchPath": "batch",
  "revision": "20200609",
  "schemas": {
    "KeyOperationAttestation": {
      "type": "object",
      "id": "KeyOperationAttestation",
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Output only. The attestation data provided by the HSM when the key\noperation was performed."
        },
        "format": {
          "enumDescriptions": [
            "Not specified.",
            "Cavium HSM attestation compressed with gzip. Note that this format is\ndefined by Cavium and subject to change at any time.",
            "Cavium HSM attestation V2 compressed with gzip. This is a new format\nintroduced in Cavium's version 3.2-08."
          ],
          "enum": [
            "ATTESTATION_FORMAT_UNSPECIFIED",
            "CAVIUM_V1_COMPRESSED",
            "CAVIUM_V2_COMPRESSED"
          ],
          "description": "Output only. The format of the attestation data.",
          "type": "string"
        }
      },
      "description": "Contains an HSM-generated attestation about a key operation. For more\ninformation, see [Verifying attestations]\n(https://cloud.google.com/kms/docs/attest-key)."
    },
    "ListCryptoKeysResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeysRequest.page_token to retrieve the next page of results."
        },
        "cryptoKeys": {
          "description": "The list of CryptoKeys.",
          "type": "array",
          "items": {
            "$ref": "CryptoKey"
          }
        },
        "totalSize": {
          "description": "The total number of CryptoKeys that matched the query.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Response message for KeyManagementService.ListCryptoKeys.",
      "id": "ListCryptoKeysResponse",
      "type": "object"
    },
    "AsymmetricSignRequest": {
      "description": "Request message for KeyManagementService.AsymmetricSign.",
      "id": "AsymmetricSignRequest",
      "properties": {
        "digest": {
          "description": "Required. The digest of the data to sign. The digest must be produced with\nthe same digest algorithm as specified by the key version's\nalgorithm.",
          "$ref": "Digest"
        },
        "digestCrc32c": {
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the AsymmetricSignRequest.digest. If\nspecified, KeyManagementService will verify the integrity of the\nreceived AsymmetricSignRequest.digest using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(AsymmetricSignRequest.digest) is equal to\nAsymmetricSignRequest.digest_crc32c, and if so, perform a limited\nnumber of retries. A persistent mismatch may indicate an issue in your\ncomputation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExternalProtectionLevelOptions": {
      "id": "ExternalProtectionLevelOptions",
      "properties": {
        "externalKeyUri": {
          "type": "string",
          "description": "The URI for an external resource that this CryptoKeyVersion represents."
        }
      },
      "type": "object",
      "description": "ExternalProtectionLevelOptions stores a group of additional fields for\nconfiguring a CryptoKeyVersion that are specific to the\nEXTERNAL protection level."
    },
    "Expr": {
      "id": "Expr",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language\nsyntax."
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information."
    },
    "Location": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "CryptoKeyVersionTemplate": {
      "properties": {
        "protectionLevel": {
          "description": "ProtectionLevel to use when creating a CryptoKeyVersion based on\nthis template. Immutable. Defaults to SOFTWARE.",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "type": "string"
        },
        "algorithm": {
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "description": "Required. Algorithm to use\nwhen creating a CryptoKeyVersion based on this template.\n\nFor backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both\nthis field is omitted and CryptoKey.purpose is\nENCRYPT_DECRYPT.",
          "type": "string"
        }
      },
      "id": "CryptoKeyVersionTemplate",
      "type": "object",
      "description": "A CryptoKeyVersionTemplate specifies the properties to use when creating\na new CryptoKeyVersion, either manually with\nCreateCryptoKeyVersion or\nautomatically as a result of auto-rotation."
    },
    "AsymmetricSignResponse": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the CryptoKeyVersion used for signing. Check\nthis field to verify that the intended resource was used for signing.\n\nNOTE: This field is in Beta."
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "The created signature."
        },
        "verifiedDigestCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether\nAsymmetricSignRequest.digest_crc32c was received by\nKeyManagementService and used for the integrity verification of the\ndigest. A false value of this field\nindicates either that AsymmetricSignRequest.digest_crc32c was left\nunset or that it was not delivered to KeyManagementService. If you've\nset AsymmetricSignRequest.digest_crc32c but this field is still false,\ndiscard the response and perform a limited number of retries.\n\nNOTE: This field is in Beta."
        },
        "signatureCrc32c": {
          "format": "int64",
          "type": "string",
          "description": "Integrity verification field. A CRC32C checksum of the returned\nAsymmetricSignResponse.signature. An integrity check of\nAsymmetricSignResponse.signature can be performed by computing the\nCRC32C checksum of AsymmetricSignResponse.signature and comparing your\nresults to this field. Discard the response in case of non-matching\nchecksum values, and perform a limited number of retries. A persistent\nmismatch may indicate an issue in your computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta."
        }
      },
      "type": "object",
      "id": "AsymmetricSignResponse",
      "description": "Response message for KeyManagementService.AsymmetricSign."
    },
    "CryptoKeyVersion": {
      "id": "CryptoKeyVersion",
      "description": "A CryptoKeyVersion represents an individual cryptographic key, and the\nassociated key material.\n\nAn ENABLED version can be\nused for cryptographic operations.\n\nFor security reasons, the raw cryptographic key material represented by a\nCryptoKeyVersion can never be viewed or exported. It can only be used to\nencrypt, decrypt, or sign data when an authorized user or application invokes\nCloud KMS.",
      "properties": {
        "destroyEventTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this CryptoKeyVersion's key material was\ndestroyed. Only present if state is\nDESTROYED."
        },
        "algorithm": {
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "description": "Output only. The CryptoKeyVersionAlgorithm that this\nCryptoKeyVersion supports.",
          "type": "string"
        },
        "importFailureReason": {
          "description": "Output only. The root cause of an import failure. Only present if\nstate is\nIMPORT_FAILED.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the CryptoKeyVersion.",
          "enumDescriptions": [
            "Not specified.",
            "This version is still being generated. It may not be used, enabled,\ndisabled, or destroyed yet. Cloud KMS will automatically mark this\nversion ENABLED as soon as the version is ready.",
            "This version may be used for cryptographic operations.",
            "This version may not be used, but the key material is still available,\nand the version can be placed back into the ENABLED state.",
            "This version is destroyed, and the key material is no longer stored.\nA version may not leave this state once entered.",
            "This version is scheduled for destruction, and will be destroyed soon.\nCall\nRestoreCryptoKeyVersion\nto put it back into the DISABLED state.",
            "This version is still being imported. It may not be used, enabled,\ndisabled, or destroyed yet. Cloud KMS will automatically mark this\nversion ENABLED as soon as the version is ready.",
            "This version was not imported successfully. It may not be used, enabled,\ndisabled, or destroyed. The submitted key material has been discarded.\nAdditional details can be found in\nCryptoKeyVersion.import_failure_reason."
          ],
          "enum": [
            "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED",
            "PENDING_GENERATION",
            "ENABLED",
            "DISABLED",
            "DESTROYED",
            "DESTROY_SCHEDULED",
            "PENDING_IMPORT",
            "IMPORT_FAILED"
          ],
          "type": "string"
        },
        "importTime": {
          "description": "Output only. The time at which this CryptoKeyVersion's key material\nwas imported.",
          "type": "string",
          "format": "google-datetime"
        },
        "importJob": {
          "description": "Output only. The name of the ImportJob used to import this\nCryptoKeyVersion. Only present if the underlying key material was\nimported.",
          "type": "string"
        },
        "protectionLevel": {
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "description": "Output only. The ProtectionLevel describing how crypto operations are\nperformed with this CryptoKeyVersion.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
          "type": "string"
        },
        "externalProtectionLevelOptions": {
          "$ref": "ExternalProtectionLevelOptions",
          "description": "ExternalProtectionLevelOptions stores a group of additional fields for\nconfiguring a CryptoKeyVersion that are specific to the\nEXTERNAL protection level."
        },
        "destroyTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this CryptoKeyVersion's key material is scheduled\nfor destruction. Only present if state is\nDESTROY_SCHEDULED."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this CryptoKeyVersion was created."
        },
        "attestation": {
          "description": "Output only. Statement that was generated and signed by the HSM at key\ncreation time. Use this statement to verify attributes of the key as stored\non the HSM, independently of Google. Only provided for key versions with\nprotection_level HSM.",
          "$ref": "KeyOperationAttestation"
        },
        "generateTime": {
          "format": "google-datetime",
          "description": "Output only. The time this CryptoKeyVersion's key material was\ngenerated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicKey": {
      "type": "object",
      "id": "PublicKey",
      "properties": {
        "pem": {
          "type": "string",
          "description": "The public key, encoded in PEM format. For more information, see the\n[RFC 7468](https://tools.ietf.org/html/rfc7468) sections for\n[General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and\n[Textual Encoding of Subject Public Key Info]\n(https://tools.ietf.org/html/rfc7468#section-13)."
        },
        "algorithm": {
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "description": "The Algorithm associated\nwith this key.",
          "type": "string"
        },
        "name": {
          "description": "The name of the CryptoKeyVersion public key.\nProvided here for verification.\n\nNOTE: This field is in Beta.",
          "type": "string"
        },
        "pemCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned\nPublicKey.pem. An integrity check of PublicKey.pem can be performed\nby computing the CRC32C checksum of PublicKey.pem and\ncomparing your results to this field. Discard the response in case of\nnon-matching checksum values, and perform a limited number of retries. A\npersistent mismatch may indicate an issue in your computation of the CRC32C\nchecksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta."
        }
      },
      "description": "The public key for a given CryptoKeyVersion. Obtained via\nGetPublicKey."
    },
    "KeyRing": {
      "id": "KeyRing",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this KeyRing was created.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for the KeyRing in the format\n`projects/*/locations/*/keyRings/*`."
        }
      },
      "description": "A KeyRing is a toplevel logical grouping of CryptoKeys.",
      "type": "object"
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\"\n            },\n            {\n              \"log_type\": \"ADMIN_READ\"\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\"\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array"
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "id": "AuditConfig"
    },
    "Digest": {
      "properties": {
        "sha384": {
          "format": "byte",
          "type": "string",
          "description": "A message digest produced with the SHA-384 algorithm."
        },
        "sha512": {
          "type": "string",
          "description": "A message digest produced with the SHA-512 algorithm.",
          "format": "byte"
        },
        "sha256": {
          "format": "byte",
          "type": "string",
          "description": "A message digest produced with the SHA-256 algorithm."
        }
      },
      "id": "Digest",
      "description": "A Digest holds a cryptographic message digest.",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest"
    },
    "DecryptRequest": {
      "description": "Request message for KeyManagementService.Decrypt.",
      "properties": {
        "ciphertext": {
          "description": "Required. The encrypted data originally returned in\nEncryptResponse.ciphertext.",
          "format": "byte",
          "type": "string"
        },
        "ciphertextCrc32c": {
          "type": "string",
          "description": "Optional. An optional CRC32C checksum of the DecryptRequest.ciphertext. If\nspecified, KeyManagementService will verify the integrity of the\nreceived DecryptRequest.ciphertext using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(DecryptRequest.ciphertext) is equal to\nDecryptRequest.ciphertext_crc32c, and if so, perform a limited number\nof retries. A persistent mismatch may indicate an issue in your computation\nof the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "format": "int64"
        },
        "additionalAuthenticatedData": {
          "type": "string",
          "description": "Optional. Optional data that must match the data originally supplied in\nEncryptRequest.additional_authenticated_data.",
          "format": "byte"
        },
        "additionalAuthenticatedDataCrc32c": {
          "description": "Optional. An optional CRC32C checksum of the\nDecryptRequest.additional_authenticated_data. If specified,\nKeyManagementService will verify the integrity of the received\nDecryptRequest.additional_authenticated_data using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(DecryptRequest.additional_authenticated_data) is equal to\nDecryptRequest.additional_authenticated_data_crc32c, and if so, perform\na limited number of retries. A persistent mismatch may indicate an issue in\nyour computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "DecryptRequest"
    },
    "ListCryptoKeyVersionsResponse": {
      "type": "object",
      "properties": {
        "cryptoKeyVersions": {
          "items": {
            "$ref": "CryptoKeyVersion"
          },
          "type": "array",
          "description": "The list of CryptoKeyVersions."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeyVersionsRequest.page_token to retrieve the next page of\nresults."
        },
        "totalSize": {
          "type": "integer",
          "description": "The total number of CryptoKeyVersions that matched the\nquery.",
          "format": "int32"
        }
      },
      "id": "ListCryptoKeyVersionsResponse",
      "description": "Response message for KeyManagementService.ListCryptoKeyVersions."
    },
    "ImportCryptoKeyVersionRequest": {
      "properties": {
        "importJob": {
          "description": "Required. The name of the ImportJob that was used to\nwrap this key material.",
          "type": "string"
        },
        "rsaAesWrappedKey": {
          "description": "Wrapped key material produced with\nRSA_OAEP_3072_SHA1_AES_256\nor\nRSA_OAEP_4096_SHA1_AES_256.\n\nThis field contains the concatenation of two wrapped keys:\n\u003col\u003e\n  \u003cli\u003eAn ephemeral AES-256 wrapping key wrapped with the\n      public_key using RSAES-OAEP with SHA-1,\n      MGF1 with SHA-1, and an empty label.\n  \u003c/li\u003e\n  \u003cli\u003eThe key to be imported, wrapped with the ephemeral AES-256 key\n      using AES-KWP (RFC 5649).\n  \u003c/li\u003e\n\u003c/ol\u003e\n\nIf importing symmetric key material, it is expected that the unwrapped\nkey contains plain bytes. If importing asymmetric key material, it is\nexpected that the unwrapped key is in PKCS#8-encoded DER format (the\nPrivateKeyInfo structure from RFC 5208).\n\nThis format is the same as the format produced by PKCS#11 mechanism\nCKM_RSA_AES_KEY_WRAP.",
          "type": "string",
          "format": "byte"
        },
        "algorithm": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "description": "Required. The algorithm of\nthe key being imported. This does not need to match the\nversion_template of the CryptoKey this\nversion imports into."
        }
      },
      "description": "Request message for KeyManagementService.ImportCryptoKeyVersion.",
      "id": "ImportCryptoKeyVersionRequest",
      "type": "object"
    },
    "ListImportJobsResponse": {
      "type": "object",
      "description": "Response message for KeyManagementService.ListImportJobs.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in\nListImportJobsRequest.page_token to retrieve the next page of results."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of ImportJobs that matched the query."
        },
        "importJobs": {
          "type": "array",
          "items": {
            "$ref": "ImportJob"
          },
          "description": "The list of ImportJobs."
        }
      },
      "id": "ListImportJobsResponse"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy",
      "properties": {
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        }
      }
    },
    "EncryptRequest": {
      "properties": {
        "plaintext": {
          "type": "string",
          "description": "Required. The data to encrypt. Must be no larger than 64KiB.\n\nThe maximum size depends on the key version's\nprotection_level. For\nSOFTWARE keys, the plaintext must be no larger\nthan 64KiB. For HSM keys, the combined length of the\nplaintext and additional_authenticated_data fields must be no larger than\n8KiB.",
          "format": "byte"
        },
        "additionalAuthenticatedDataCrc32c": {
          "description": "Optional. An optional CRC32C checksum of the\nEncryptRequest.additional_authenticated_data. If specified,\nKeyManagementService will verify the integrity of the received\nEncryptRequest.additional_authenticated_data using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(EncryptRequest.additional_authenticated_data) is equal to\nEncryptRequest.additional_authenticated_data_crc32c, and if so, perform\na limited number of retries. A persistent mismatch may indicate an issue in\nyour computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "format": "int64",
          "type": "string"
        },
        "additionalAuthenticatedData": {
          "description": "Optional. Optional data that, if specified, must also be provided during decryption\nthrough DecryptRequest.additional_authenticated_data.\n\nThe maximum size depends on the key version's\nprotection_level. For\nSOFTWARE keys, the AAD must be no larger than\n64KiB. For HSM keys, the combined length of the\nplaintext and additional_authenticated_data fields must be no larger than\n8KiB.",
          "format": "byte",
          "type": "string"
        },
        "plaintextCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the EncryptRequest.plaintext. If\nspecified, KeyManagementService will verify the integrity of the\nreceived EncryptRequest.plaintext using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(EncryptRequest.plaintext) is equal to\nEncryptRequest.plaintext_crc32c, and if so, perform a limited number of\nretries. A persistent mismatch may indicate an issue in your computation of\nthe CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta."
        }
      },
      "type": "object",
      "description": "Request message for KeyManagementService.Encrypt.",
      "id": "EncryptRequest"
    },
    "WrappingPublicKey": {
      "description": "The public key component of the wrapping key. For details of the type of\nkey this public key corresponds to, see the ImportMethod.",
      "type": "object",
      "id": "WrappingPublicKey",
      "properties": {
        "pem": {
          "type": "string",
          "description": "The public key, encoded in PEM format. For more information, see the [RFC\n7468](https://tools.ietf.org/html/rfc7468) sections for [General\nConsiderations](https://tools.ietf.org/html/rfc7468#section-2) and\n[Textual Encoding of Subject Public Key Info]\n(https://tools.ietf.org/html/rfc7468#section-13)."
        }
      }
    },
    "EncryptResponse": {
      "properties": {
        "verifiedPlaintextCrc32c": {
          "description": "Integrity verification field. A flag indicating whether\nEncryptRequest.plaintext_crc32c was received by\nKeyManagementService and used for the integrity verification of the\nplaintext. A false value of this field\nindicates either that EncryptRequest.plaintext_crc32c was left unset or\nthat it was not delivered to KeyManagementService. If you've set\nEncryptRequest.plaintext_crc32c but this field is still false, discard\nthe response and perform a limited number of retries.\n\nNOTE: This field is in Beta.",
          "type": "boolean"
        },
        "verifiedAdditionalAuthenticatedDataCrc32c": {
          "description": "Integrity verification field. A flag indicating whether\nEncryptRequest.additional_authenticated_data_crc32c was received by\nKeyManagementService and used for the integrity verification of the\nAAD. A false value of this\nfield indicates either that\nEncryptRequest.additional_authenticated_data_crc32c was left unset or\nthat it was not delivered to KeyManagementService. If you've set\nEncryptRequest.additional_authenticated_data_crc32c but this field is\nstill false, discard the response and perform a limited number of retries.\n\nNOTE: This field is in Beta.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the CryptoKeyVersion used in encryption. Check\nthis field to verify that the intended resource was used for encryption."
        },
        "ciphertextCrc32c": {
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned\nEncryptResponse.ciphertext. An integrity check of\nEncryptResponse.ciphertext can be performed by computing the CRC32C\nchecksum of EncryptResponse.ciphertext and comparing your results to\nthis field. Discard the response in case of non-matching checksum values,\nand perform a limited number of retries. A persistent mismatch may indicate\nan issue in your computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "type": "string"
        },
        "ciphertext": {
          "description": "The encrypted data.",
          "type": "string",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "Response message for KeyManagementService.Encrypt.",
      "id": "EncryptResponse"
    },
    "AsymmetricDecryptRequest": {
      "description": "Request message for KeyManagementService.AsymmetricDecrypt.",
      "type": "object",
      "properties": {
        "ciphertextCrc32c": {
          "description": "Optional. An optional CRC32C checksum of the AsymmetricDecryptRequest.ciphertext.\nIf specified, KeyManagementService will verify the integrity of the\nreceived AsymmetricDecryptRequest.ciphertext using this checksum.\nKeyManagementService will report an error if the checksum verification\nfails. If you receive a checksum error, your client should verify that\nCRC32C(AsymmetricDecryptRequest.ciphertext) is equal to\nAsymmetricDecryptRequest.ciphertext_crc32c, and if so, perform a\nlimited number of retries. A persistent mismatch may indicate an issue in\nyour computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "type": "string",
          "format": "int64"
        },
        "ciphertext": {
          "type": "string",
          "description": "Required. The data encrypted with the named CryptoKeyVersion's public\nkey using OAEP.",
          "format": "byte"
        }
      },
      "id": "AsymmetricDecryptRequest"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "AsymmetricDecryptResponse": {
      "properties": {
        "plaintextCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned\nAsymmetricDecryptResponse.plaintext. An integrity check of\nAsymmetricDecryptResponse.plaintext can be performed by computing the\nCRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing\nyour results to this field. Discard the response in case of non-matching\nchecksum values, and perform a limited number of retries. A persistent\nmismatch may indicate an issue in your computation of the CRC32C checksum.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta."
        },
        "plaintext": {
          "type": "string",
          "description": "The decrypted data originally encrypted with the matching public key.",
          "format": "byte"
        },
        "verifiedCiphertextCrc32c": {
          "description": "Integrity verification field. A flag indicating whether\nAsymmetricDecryptRequest.ciphertext_crc32c was received by\nKeyManagementService and used for the integrity verification of the\nciphertext. A false value of this\nfield indicates either that AsymmetricDecryptRequest.ciphertext_crc32c\nwas left unset or that it was not delivered to KeyManagementService. If\nyou've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is\nstill false, discard the response and perform a limited number of retries.\n\nNOTE: This field is in Beta.",
          "type": "boolean"
        }
      },
      "description": "Response message for KeyManagementService.AsymmetricDecrypt.",
      "id": "AsymmetricDecryptResponse",
      "type": "object"
    },
    "LocationMetadata": {
      "description": "Cloud KMS metadata for the given google.cloud.location.Location.",
      "id": "LocationMetadata",
      "type": "object",
      "properties": {
        "hsmAvailable": {
          "type": "boolean",
          "description": "Indicates whether CryptoKeys with\nprotection_level\nHSM can be created in this location."
        },
        "ekmAvailable": {
          "description": "Indicates whether CryptoKeys with\nprotection_level\nEXTERNAL can be created in this location.",
          "type": "boolean"
        }
      }
    },
    "DecryptResponse": {
      "id": "DecryptResponse",
      "description": "Response message for KeyManagementService.Decrypt.",
      "type": "object",
      "properties": {
        "plaintextCrc32c": {
          "description": "Integrity verification field. A CRC32C checksum of the returned\nDecryptResponse.plaintext. An integrity check of\nDecryptResponse.plaintext can be performed by computing the CRC32C\nchecksum of DecryptResponse.plaintext and comparing your results to\nthis field. Discard the response in case of non-matching checksum values,\nand perform a limited number of retries. A persistent mismatch may indicate\nan issue in your computation of the CRC32C checksum. Note: receiving this\nresponse message indicates that KeyManagementService is able to\nsuccessfully decrypt the ciphertext.\nNote: This field is defined as int64 for reasons of compatibility across\ndifferent languages. However, it is a non-negative integer, which will\nnever exceed 2^32-1, and can be safely downconverted to uint32 in languages\nthat support this type.\n\nNOTE: This field is in Beta.",
          "format": "int64",
          "type": "string"
        },
        "plaintext": {
          "description": "The decrypted data originally supplied in EncryptRequest.plaintext.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "RestoreCryptoKeyVersionRequest": {
      "description": "Request message for KeyManagementService.RestoreCryptoKeyVersion.",
      "type": "object",
      "id": "RestoreCryptoKeyVersionRequest",
      "properties": {}
    },
    "Binding": {
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object"
    },
    "ListKeyRingsResponse": {
      "id": "ListKeyRingsResponse",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of KeyRings that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in\nListKeyRingsRequest.page_token to retrieve the next page of results."
        },
        "keyRings": {
          "items": {
            "$ref": "KeyRing"
          },
          "description": "The list of KeyRings.",
          "type": "array"
        }
      },
      "description": "Response message for KeyManagementService.ListKeyRings.",
      "type": "object"
    },
    "UpdateCryptoKeyPrimaryVersionRequest": {
      "type": "object",
      "properties": {
        "cryptoKeyVersionId": {
          "description": "Required. The id of the child CryptoKeyVersion to use as primary.",
          "type": "string"
        }
      },
      "description": "Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.",
      "id": "UpdateCryptoKeyPrimaryVersionRequest"
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "description": "The log type that this config enables."
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members."
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\"\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging."
    },
    "CryptoKey": {
      "id": "CryptoKey",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name for this CryptoKey in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`."
        },
        "primary": {
          "description": "Output only. A copy of the \"primary\" CryptoKeyVersion that will be used\nby Encrypt when this CryptoKey is given\nin EncryptRequest.name.\n\nThe CryptoKey's primary version can be updated via\nUpdateCryptoKeyPrimaryVersion.\n\nKeys with purpose\nENCRYPT_DECRYPT may have a\nprimary. For other keys, this field will be omitted.",
          "$ref": "CryptoKeyVersion"
        },
        "nextRotationTime": {
          "description": "At next_rotation_time, the Key Management Service will automatically:\n\n1. Create a new version of this CryptoKey.\n2. Mark the new version as primary.\n\nKey rotations performed manually via\nCreateCryptoKeyVersion and\nUpdateCryptoKeyPrimaryVersion\ndo not affect next_rotation_time.\n\nKeys with purpose\nENCRYPT_DECRYPT support\nautomatic rotation. For other keys, this field must be omitted.",
          "type": "string",
          "format": "google-datetime"
        },
        "versionTemplate": {
          "$ref": "CryptoKeyVersionTemplate",
          "description": "A template describing settings for new CryptoKeyVersion instances.\nThe properties of new CryptoKeyVersion instances created by either\nCreateCryptoKeyVersion or\nauto-rotation are controlled by this template."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this CryptoKey was created.",
          "type": "string"
        },
        "purpose": {
          "enum": [
            "CRYPTO_KEY_PURPOSE_UNSPECIFIED",
            "ENCRYPT_DECRYPT",
            "ASYMMETRIC_SIGN",
            "ASYMMETRIC_DECRYPT"
          ],
          "description": "Immutable. The immutable purpose of this CryptoKey.",
          "enumDescriptions": [
            "Not specified.",
            "CryptoKeys with this purpose may be used with\nEncrypt and\nDecrypt.",
            "CryptoKeys with this purpose may be used with\nAsymmetricSign and\nGetPublicKey.",
            "CryptoKeys with this purpose may be used with\nAsymmetricDecrypt and\nGetPublicKey."
          ],
          "type": "string"
        },
        "labels": {
          "description": "Labels with user-defined metadata. For more information, see\n[Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "rotationPeriod": {
          "format": "google-duration",
          "type": "string",
          "description": "next_rotation_time will be advanced by this period when the service\nautomatically rotates a key. Must be at least 24 hours and at most\n876,000 hours.\n\nIf rotation_period is set, next_rotation_time must also be set.\n\nKeys with purpose\nENCRYPT_DECRYPT support\nautomatic rotation. For other keys, this field must be omitted."
        }
      },
      "type": "object",
      "description": "A CryptoKey represents a logical key that can be used for cryptographic\noperations.\n\nA CryptoKey is made up of zero or more versions,\nwhich represent the actual key material used in cryptographic operations."
    },
    "DestroyCryptoKeyVersionRequest": {
      "description": "Request message for KeyManagementService.DestroyCryptoKeyVersion.",
      "type": "object",
      "id": "DestroyCryptoKeyVersionRequest",
      "properties": {}
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        }
      }
    },
    "ImportJob": {
      "id": "ImportJob",
      "properties": {
        "generateTime": {
          "type": "string",
          "description": "Output only. The time this ImportJob's key material was generated.",
          "format": "google-datetime"
        },
        "protectionLevel": {
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "description": "Required. Immutable. The protection level of the ImportJob. This must match the\nprotection_level of the\nversion_template on the CryptoKey you\nattempt to import into.",
          "type": "string",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ]
        },
        "publicKey": {
          "$ref": "WrappingPublicKey",
          "description": "Output only. The public key with which to wrap key material prior to\nimport. Only returned if state is\nACTIVE."
        },
        "state": {
          "enumDescriptions": [
            "Not specified.",
            "The wrapping key for this job is still being generated. It may not be\nused. Cloud KMS will automatically mark this job as\nACTIVE as soon as the wrapping key is generated.",
            "This job may be used in\nCreateCryptoKey and\nCreateCryptoKeyVersion\nrequests.",
            "This job can no longer be used and may not leave this state once entered."
          ],
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "PENDING_GENERATION",
            "ACTIVE",
            "EXPIRED"
          ],
          "type": "string",
          "description": "Output only. The current state of the ImportJob, indicating if it can\nbe used."
        },
        "expireEventTime": {
          "type": "string",
          "description": "Output only. The time this ImportJob expired. Only present if\nstate is EXPIRED.",
          "format": "google-datetime"
        },
        "expireTime": {
          "type": "string",
          "description": "Output only. The time at which this ImportJob is scheduled for\nexpiration and can no longer be used to import key material.",
          "format": "google-datetime"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this ImportJob was created."
        },
        "attestation": {
          "$ref": "KeyOperationAttestation",
          "description": "Output only. Statement that was generated and signed by the key creator\n(for example, an HSM) at key creation time. Use this statement to verify\nattributes of the key as stored on the HSM, independently of Google.\nOnly present if the chosen ImportMethod is one with a protection\nlevel of HSM."
        },
        "importMethod": {
          "enum": [
            "IMPORT_METHOD_UNSPECIFIED",
            "RSA_OAEP_3072_SHA1_AES_256",
            "RSA_OAEP_4096_SHA1_AES_256"
          ],
          "description": "Required. Immutable. The wrapping method to be used for incoming key material.",
          "enumDescriptions": [
            "Not specified.",
            "This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping\nscheme defined in the PKCS #11 standard. In summary, this involves\nwrapping the raw key with an ephemeral AES key, and wrapping the\nephemeral AES key with a 3072 bit RSA key. For more details, see\n[RSA AES key wrap\nmechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).",
            "This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping\nscheme defined in the PKCS #11 standard. In summary, this involves\nwrapping the raw key with an ephemeral AES key, and wrapping the\nephemeral AES key with a 4096 bit RSA key. For more details, see\n[RSA AES key wrap\nmechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908)."
          ],
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name for this ImportJob in the format\n`projects/*/locations/*/keyRings/*/importJobs/*`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An ImportJob can be used to create CryptoKeys and\nCryptoKeyVersions using pre-existing key material,\ngenerated outside of Cloud KMS.\n\nWhen an ImportJob is created, Cloud KMS will generate a \"wrapping key\",\nwhich is a public/private key pair. You use the wrapping key to encrypt (also\nknown as wrap) the pre-existing key material to protect it during the import\nprocess. The nature of the wrapping key depends on the choice of\nimport_method. When the wrapping key generation\nis complete, the state will be set to\nACTIVE and the public_key\ncan be fetched. The fetched public key can then be used to wrap your\npre-existing key material.\n\nOnce the key material is wrapped, it can be imported into a new\nCryptoKeyVersion in an existing CryptoKey by calling\nImportCryptoKeyVersion.\nMultiple CryptoKeyVersions can be imported with a single\nImportJob. Cloud KMS uses the private key portion of the wrapping key to\nunwrap the key material. Only Cloud KMS has access to the private key.\n\nAn ImportJob expires 3 days after it is created. Once expired, Cloud KMS\nwill no longer be able to import or unwrap any key material that was wrapped\nwith the ImportJob's public key.\n\nFor more information, see\n[Importing a key](https://cloud.google.com/kms/docs/importing-a-key)."
    }
  },
  "canonicalName": "Cloud KMS",
  "version_module": true,
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "location": "query",
      "description": "Data format for response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloudkms": {
          "description": "View and manage your keys and secrets stored in Cloud Key Management Service"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
