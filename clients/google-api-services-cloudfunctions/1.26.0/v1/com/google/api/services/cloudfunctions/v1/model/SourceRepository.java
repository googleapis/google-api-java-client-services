/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudfunctions.v1.model;

/**
 * Describes SourceRepository, used to represent parameters related to source repository where a
 * function is hosted.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Functions API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SourceRepository extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The URL pointing to the hosted repository where the function were defined at the
   * time of deployment. It always points to a specific commit in the format described above.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployedUrl;

  /**
   * The URL pointing to the hosted repository where the function is defined. There are supported
   * Cloud Source Repository URLs in the following formats:
   *
   * To refer to a specific commit:
   * `https://source.developers.google.com/projects/repos/revisions/paths` To refer to a moveable
   * alias (branch): `https://source.developers.google.com/projects/repos/moveable-aliases/paths` In
   * particular, to refer to HEAD use `master` moveable alias. To refer to a specific fixed alias
   * (tag): `https://source.developers.google.com/projects/repos/fixed-aliases/paths`
   *
   * You may omit `paths` if you want to use the main directory.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Output only. The URL pointing to the hosted repository where the function were defined at the
   * time of deployment. It always points to a specific commit in the format described above.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployedUrl() {
    return deployedUrl;
  }

  /**
   * Output only. The URL pointing to the hosted repository where the function were defined at the
   * time of deployment. It always points to a specific commit in the format described above.
   * @param deployedUrl deployedUrl or {@code null} for none
   */
  public SourceRepository setDeployedUrl(java.lang.String deployedUrl) {
    this.deployedUrl = deployedUrl;
    return this;
  }

  /**
   * The URL pointing to the hosted repository where the function is defined. There are supported
   * Cloud Source Repository URLs in the following formats:
   *
   * To refer to a specific commit:
   * `https://source.developers.google.com/projects/repos/revisions/paths` To refer to a moveable
   * alias (branch): `https://source.developers.google.com/projects/repos/moveable-aliases/paths` In
   * particular, to refer to HEAD use `master` moveable alias. To refer to a specific fixed alias
   * (tag): `https://source.developers.google.com/projects/repos/fixed-aliases/paths`
   *
   * You may omit `paths` if you want to use the main directory.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * The URL pointing to the hosted repository where the function is defined. There are supported
   * Cloud Source Repository URLs in the following formats:
   *
   * To refer to a specific commit:
   * `https://source.developers.google.com/projects/repos/revisions/paths` To refer to a moveable
   * alias (branch): `https://source.developers.google.com/projects/repos/moveable-aliases/paths` In
   * particular, to refer to HEAD use `master` moveable alias. To refer to a specific fixed alias
   * (tag): `https://source.developers.google.com/projects/repos/fixed-aliases/paths`
   *
   * You may omit `paths` if you want to use the main directory.
   * @param url url or {@code null} for none
   */
  public SourceRepository setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public SourceRepository set(String fieldName, Object value) {
    return (SourceRepository) super.set(fieldName, value);
  }

  @Override
  public SourceRepository clone() {
    return (SourceRepository) super.clone();
  }

}
