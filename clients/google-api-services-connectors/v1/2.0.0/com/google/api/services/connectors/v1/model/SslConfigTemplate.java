/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * Ssl config details of a connector version
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SslConfigTemplate extends com.google.api.client.json.GenericJson {

  /**
   * Any additional fields that need to be rendered
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ConfigVariableTemplate> additionalVariables;

  static {
    // hack to force ProGuard to consider ConfigVariableTemplate used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ConfigVariableTemplate.class);
  }

  /**
   * List of supported Client Cert Types
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> clientCertType;

  /**
   * Boolean for determining if the connector version mandates TLS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isTlsMandatory;

  /**
   * List of supported Server Cert Types
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> serverCertType;

  /**
   * Controls the ssl type for the given connector version
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sslType;

  /**
   * Any additional fields that need to be rendered
   * @return value or {@code null} for none
   */
  public java.util.List<ConfigVariableTemplate> getAdditionalVariables() {
    return additionalVariables;
  }

  /**
   * Any additional fields that need to be rendered
   * @param additionalVariables additionalVariables or {@code null} for none
   */
  public SslConfigTemplate setAdditionalVariables(java.util.List<ConfigVariableTemplate> additionalVariables) {
    this.additionalVariables = additionalVariables;
    return this;
  }

  /**
   * List of supported Client Cert Types
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getClientCertType() {
    return clientCertType;
  }

  /**
   * List of supported Client Cert Types
   * @param clientCertType clientCertType or {@code null} for none
   */
  public SslConfigTemplate setClientCertType(java.util.List<java.lang.String> clientCertType) {
    this.clientCertType = clientCertType;
    return this;
  }

  /**
   * Boolean for determining if the connector version mandates TLS.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsTlsMandatory() {
    return isTlsMandatory;
  }

  /**
   * Boolean for determining if the connector version mandates TLS.
   * @param isTlsMandatory isTlsMandatory or {@code null} for none
   */
  public SslConfigTemplate setIsTlsMandatory(java.lang.Boolean isTlsMandatory) {
    this.isTlsMandatory = isTlsMandatory;
    return this;
  }

  /**
   * List of supported Server Cert Types
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getServerCertType() {
    return serverCertType;
  }

  /**
   * List of supported Server Cert Types
   * @param serverCertType serverCertType or {@code null} for none
   */
  public SslConfigTemplate setServerCertType(java.util.List<java.lang.String> serverCertType) {
    this.serverCertType = serverCertType;
    return this;
  }

  /**
   * Controls the ssl type for the given connector version
   * @return value or {@code null} for none
   */
  public java.lang.String getSslType() {
    return sslType;
  }

  /**
   * Controls the ssl type for the given connector version
   * @param sslType sslType or {@code null} for none
   */
  public SslConfigTemplate setSslType(java.lang.String sslType) {
    this.sslType = sslType;
    return this;
  }

  @Override
  public SslConfigTemplate set(String fieldName, Object value) {
    return (SslConfigTemplate) super.set(fieldName, value);
  }

  @Override
  public SslConfigTemplate clone() {
    return (SslConfigTemplate) super.clone();
  }

}
