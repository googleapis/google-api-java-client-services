/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.sqladmin.model;

/**
 * QueryResult contains the result of executing a single SQL statement.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud SQL Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QueryResult extends com.google.api.client.json.GenericJson {

  /**
   * List of columns included in the result. This also includes the data type of the column.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Column> columns;

  static {
    // hack to force ProGuard to consider Column used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Column.class);
  }

  /**
   * Message related to the SQL execution result.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String message;

  /**
   * Set to true if the SQL execution's result is truncated due to size limits.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean partialResult;

  /**
   * Rows returned by the SQL statement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Row> rows;

  /**
   * List of columns included in the result. This also includes the data type of the column.
   * @return value or {@code null} for none
   */
  public java.util.List<Column> getColumns() {
    return columns;
  }

  /**
   * List of columns included in the result. This also includes the data type of the column.
   * @param columns columns or {@code null} for none
   */
  public QueryResult setColumns(java.util.List<Column> columns) {
    this.columns = columns;
    return this;
  }

  /**
   * Message related to the SQL execution result.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Message related to the SQL execution result.
   * @param message message or {@code null} for none
   */
  public QueryResult setMessage(java.lang.String message) {
    this.message = message;
    return this;
  }

  /**
   * Set to true if the SQL execution's result is truncated due to size limits.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPartialResult() {
    return partialResult;
  }

  /**
   * Set to true if the SQL execution's result is truncated due to size limits.
   * @param partialResult partialResult or {@code null} for none
   */
  public QueryResult setPartialResult(java.lang.Boolean partialResult) {
    this.partialResult = partialResult;
    return this;
  }

  /**
   * Rows returned by the SQL statement.
   * @return value or {@code null} for none
   */
  public java.util.List<Row> getRows() {
    return rows;
  }

  /**
   * Rows returned by the SQL statement.
   * @param rows rows or {@code null} for none
   */
  public QueryResult setRows(java.util.List<Row> rows) {
    this.rows = rows;
    return this;
  }

  @Override
  public QueryResult set(String fieldName, Object value) {
    return (QueryResult) super.set(fieldName, value);
  }

  @Override
  public QueryResult clone() {
    return (QueryResult) super.clone();
  }

}
