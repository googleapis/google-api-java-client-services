/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * For debugging only.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRepositoryS3LangIdDebuggingInfo extends com.google.api.client.json.GenericJson {

  /**
   * Audio input processing cap.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String audioInputCap;

  /**
   * Number of failed segments. Successful segments are stored in `langid_signals_for_segment`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer failedSegments;

  /**
   * Number of processed segments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer processedSegments;

  /**
   * Duration of each segment (except for the last one if capped).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String segmentDuration;

  /**
   * If >1, every N segment is processed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer segmentStride;

  /**
   * Wave header of the audio input.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SpeechWaveHeader waveHeader;

  /**
   * Audio input processing cap.
   * @return value or {@code null} for none
   */
  public String getAudioInputCap() {
    return audioInputCap;
  }

  /**
   * Audio input processing cap.
   * @param audioInputCap audioInputCap or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setAudioInputCap(String audioInputCap) {
    this.audioInputCap = audioInputCap;
    return this;
  }

  /**
   * Number of failed segments. Successful segments are stored in `langid_signals_for_segment`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFailedSegments() {
    return failedSegments;
  }

  /**
   * Number of failed segments. Successful segments are stored in `langid_signals_for_segment`.
   * @param failedSegments failedSegments or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setFailedSegments(java.lang.Integer failedSegments) {
    this.failedSegments = failedSegments;
    return this;
  }

  /**
   * Number of processed segments.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getProcessedSegments() {
    return processedSegments;
  }

  /**
   * Number of processed segments.
   * @param processedSegments processedSegments or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setProcessedSegments(java.lang.Integer processedSegments) {
    this.processedSegments = processedSegments;
    return this;
  }

  /**
   * Duration of each segment (except for the last one if capped).
   * @return value or {@code null} for none
   */
  public String getSegmentDuration() {
    return segmentDuration;
  }

  /**
   * Duration of each segment (except for the last one if capped).
   * @param segmentDuration segmentDuration or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setSegmentDuration(String segmentDuration) {
    this.segmentDuration = segmentDuration;
    return this;
  }

  /**
   * If >1, every N segment is processed.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSegmentStride() {
    return segmentStride;
  }

  /**
   * If >1, every N segment is processed.
   * @param segmentStride segmentStride or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setSegmentStride(java.lang.Integer segmentStride) {
    this.segmentStride = segmentStride;
    return this;
  }

  /**
   * Wave header of the audio input.
   * @return value or {@code null} for none
   */
  public SpeechWaveHeader getWaveHeader() {
    return waveHeader;
  }

  /**
   * Wave header of the audio input.
   * @param waveHeader waveHeader or {@code null} for none
   */
  public ImageRepositoryS3LangIdDebuggingInfo setWaveHeader(SpeechWaveHeader waveHeader) {
    this.waveHeader = waveHeader;
    return this;
  }

  @Override
  public ImageRepositoryS3LangIdDebuggingInfo set(String fieldName, Object value) {
    return (ImageRepositoryS3LangIdDebuggingInfo) super.set(fieldName, value);
  }

  @Override
  public ImageRepositoryS3LangIdDebuggingInfo clone() {
    return (ImageRepositoryS3LangIdDebuggingInfo) super.clone();
  }

}
