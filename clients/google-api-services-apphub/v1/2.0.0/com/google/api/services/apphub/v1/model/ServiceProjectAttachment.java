/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apphub.v1.model;

/**
 * ServiceProjectAttachment represents an attachment from a service project to a host project.
 * Service projects contain the underlying cloud infrastructure resources, and expose these
 * resources to the host project through a ServiceProjectAttachment. With the attachments, the host
 * project can provide an aggregated view of resources across all service projects.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the App Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServiceProjectAttachment extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Create time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Identifier. The resource name of a ServiceProjectAttachment. Format: `"projects/{host-project-
   * id}/locations/global/serviceProjectAttachments/{service-project-id}."`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Immutable. Service project name in the format: `"projects/abc"` or `"projects/123"`.
   * As input, project name with either project id or number are accepted. As output, this field
   * will contain project number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceProject;

  /**
   * Output only. ServiceProjectAttachment state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Create time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create time.
   * @param createTime createTime or {@code null} for none
   */
  public ServiceProjectAttachment setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Identifier. The resource name of a ServiceProjectAttachment. Format: `"projects/{host-project-
   * id}/locations/global/serviceProjectAttachments/{service-project-id}."`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of a ServiceProjectAttachment. Format: `"projects/{host-project-
   * id}/locations/global/serviceProjectAttachments/{service-project-id}."`
   * @param name name or {@code null} for none
   */
  public ServiceProjectAttachment setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Immutable. Service project name in the format: `"projects/abc"` or `"projects/123"`.
   * As input, project name with either project id or number are accepted. As output, this field
   * will contain project number.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceProject() {
    return serviceProject;
  }

  /**
   * Required. Immutable. Service project name in the format: `"projects/abc"` or `"projects/123"`.
   * As input, project name with either project id or number are accepted. As output, this field
   * will contain project number.
   * @param serviceProject serviceProject or {@code null} for none
   */
  public ServiceProjectAttachment setServiceProject(java.lang.String serviceProject) {
    this.serviceProject = serviceProject;
    return this;
  }

  /**
   * Output only. ServiceProjectAttachment state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. ServiceProjectAttachment state.
   * @param state state or {@code null} for none
   */
  public ServiceProjectAttachment setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
   * @param uid uid or {@code null} for none
   */
  public ServiceProjectAttachment setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  @Override
  public ServiceProjectAttachment set(String fieldName, Object value) {
    return (ServiceProjectAttachment) super.set(fieldName, value);
  }

  @Override
  public ServiceProjectAttachment clone() {
    return (ServiceProjectAttachment) super.clone();
  }

}
