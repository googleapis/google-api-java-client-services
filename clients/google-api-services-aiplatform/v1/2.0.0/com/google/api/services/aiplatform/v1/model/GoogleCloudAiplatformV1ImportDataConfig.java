/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Describes the location from where we import data into a Dataset, together with the labels that
 * will be applied to the DataItems and the Annotations.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1ImportDataConfig extends com.google.api.client.json.GenericJson {

  /**
   * Labels that will be applied to newly imported Annotations. If two Annotations are identical,
   * one of them will be deduped. Two Annotations are considered identical if their payload,
   * payload_schema_uri and all of their labels are the same. These labels will be overridden by
   * Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotationLabels;

  /**
   * Labels that will be applied to newly imported DataItems. If an identical DataItem as one being
   * imported already exists in the Dataset, then these labels will be appended to these of the
   * already existing one, and if labels with identical key is imported before, the old label value
   * will be overwritten. If two DataItems are identical in the same import data operation, the
   * labels will be combined and if key collision happens in this case, one of the values will be
   * picked randomly. Two DataItems are considered identical if their content bytes are identical
   * (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified
   * inside index file referenced by import_schema_uri, e.g. jsonl file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> dataItemLabels;

  /**
   * The Google Cloud Storage location for the input content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1GcsSource gcsSource;

  /**
   * Required. Points to a YAML file stored on Google Cloud Storage describing the import format.
   * Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String importSchemaUri;

  /**
   * Labels that will be applied to newly imported Annotations. If two Annotations are identical,
   * one of them will be deduped. Two Annotations are considered identical if their payload,
   * payload_schema_uri and all of their labels are the same. These labels will be overridden by
   * Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotationLabels() {
    return annotationLabels;
  }

  /**
   * Labels that will be applied to newly imported Annotations. If two Annotations are identical,
   * one of them will be deduped. Two Annotations are considered identical if their payload,
   * payload_schema_uri and all of their labels are the same. These labels will be overridden by
   * Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
   * @param annotationLabels annotationLabels or {@code null} for none
   */
  public GoogleCloudAiplatformV1ImportDataConfig setAnnotationLabels(java.util.Map<String, java.lang.String> annotationLabels) {
    this.annotationLabels = annotationLabels;
    return this;
  }

  /**
   * Labels that will be applied to newly imported DataItems. If an identical DataItem as one being
   * imported already exists in the Dataset, then these labels will be appended to these of the
   * already existing one, and if labels with identical key is imported before, the old label value
   * will be overwritten. If two DataItems are identical in the same import data operation, the
   * labels will be combined and if key collision happens in this case, one of the values will be
   * picked randomly. Two DataItems are considered identical if their content bytes are identical
   * (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified
   * inside index file referenced by import_schema_uri, e.g. jsonl file.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getDataItemLabels() {
    return dataItemLabels;
  }

  /**
   * Labels that will be applied to newly imported DataItems. If an identical DataItem as one being
   * imported already exists in the Dataset, then these labels will be appended to these of the
   * already existing one, and if labels with identical key is imported before, the old label value
   * will be overwritten. If two DataItems are identical in the same import data operation, the
   * labels will be combined and if key collision happens in this case, one of the values will be
   * picked randomly. Two DataItems are considered identical if their content bytes are identical
   * (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified
   * inside index file referenced by import_schema_uri, e.g. jsonl file.
   * @param dataItemLabels dataItemLabels or {@code null} for none
   */
  public GoogleCloudAiplatformV1ImportDataConfig setDataItemLabels(java.util.Map<String, java.lang.String> dataItemLabels) {
    this.dataItemLabels = dataItemLabels;
    return this;
  }

  /**
   * The Google Cloud Storage location for the input content.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1GcsSource getGcsSource() {
    return gcsSource;
  }

  /**
   * The Google Cloud Storage location for the input content.
   * @param gcsSource gcsSource or {@code null} for none
   */
  public GoogleCloudAiplatformV1ImportDataConfig setGcsSource(GoogleCloudAiplatformV1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Required. Points to a YAML file stored on Google Cloud Storage describing the import format.
   * Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * @return value or {@code null} for none
   */
  public java.lang.String getImportSchemaUri() {
    return importSchemaUri;
  }

  /**
   * Required. Points to a YAML file stored on Google Cloud Storage describing the import format.
   * Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * @param importSchemaUri importSchemaUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1ImportDataConfig setImportSchemaUri(java.lang.String importSchemaUri) {
    this.importSchemaUri = importSchemaUri;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1ImportDataConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1ImportDataConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1ImportDataConfig clone() {
    return (GoogleCloudAiplatformV1ImportDataConfig) super.clone();
  }

}
