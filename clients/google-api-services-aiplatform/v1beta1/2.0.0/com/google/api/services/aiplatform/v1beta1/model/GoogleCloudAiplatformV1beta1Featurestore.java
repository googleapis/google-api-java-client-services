/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML
 * features. The Featurestore is a top-level container for your features and their values.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1Featurestore extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this Featurestore was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Customer-managed encryption key spec for data storage. If set, both of the online and
   * offline data storage will be secured by this key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec;

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite"
   * update happens.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one Featurestore(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Name of the Featurestore. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Config for online storage resources. The field should not co-exist with the field of
   * `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the
   * feature store will not have an online store and cannot be used for online serving.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig onlineServingConfig;

  /**
   * Optional. TTL in days for feature values that will be stored in online serving storage. The
   * Feature Store online storage periodically removes obsolete feature values older than
   * `online_storage_ttl_days` since the feature generation time. Note that
   * `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each
   * EntityType under a featurestore. If not set, default to 4000 days
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer onlineStorageTtlDays;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzi;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. State of the featurestore.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Timestamp when this Featurestore was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Timestamp when this Featurestore was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this Featurestore was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Customer-managed encryption key spec for data storage. If set, both of the online and
   * offline data storage will be secured by this key.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  /**
   * Optional. Customer-managed encryption key spec for data storage. If set, both of the online and
   * offline data storage will be secured by this key.
   * @param encryptionSpec encryptionSpec or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setEncryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite"
   * update happens.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite"
   * update happens.
   * @param etag etag or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one Featurestore(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and
   * values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase
   * letters, numeric characters, underscores and dashes. International characters are allowed. See
   * https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user
   * labels can be associated with one Featurestore(System labels are excluded)." System reserved
   * label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Name of the Featurestore. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the Featurestore. Format:
   * `projects/{project}/locations/{location}/featurestores/{featurestore}`
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Config for online storage resources. The field should not co-exist with the field of
   * `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the
   * feature store will not have an online store and cannot be used for online serving.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig getOnlineServingConfig() {
    return onlineServingConfig;
  }

  /**
   * Optional. Config for online storage resources. The field should not co-exist with the field of
   * `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the
   * feature store will not have an online store and cannot be used for online serving.
   * @param onlineServingConfig onlineServingConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setOnlineServingConfig(GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig onlineServingConfig) {
    this.onlineServingConfig = onlineServingConfig;
    return this;
  }

  /**
   * Optional. TTL in days for feature values that will be stored in online serving storage. The
   * Feature Store online storage periodically removes obsolete feature values older than
   * `online_storage_ttl_days` since the feature generation time. Note that
   * `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each
   * EntityType under a featurestore. If not set, default to 4000 days
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOnlineStorageTtlDays() {
    return onlineStorageTtlDays;
  }

  /**
   * Optional. TTL in days for feature values that will be stored in online serving storage. The
   * Feature Store online storage periodically removes obsolete feature values older than
   * `online_storage_ttl_days` since the feature generation time. Note that
   * `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each
   * EntityType under a featurestore. If not set, default to 4000 days
   * @param onlineStorageTtlDays onlineStorageTtlDays or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setOnlineStorageTtlDays(java.lang.Integer onlineStorageTtlDays) {
    this.onlineStorageTtlDays = onlineStorageTtlDays;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzi satisfiesPzi or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setSatisfiesPzi(java.lang.Boolean satisfiesPzi) {
    this.satisfiesPzi = satisfiesPzi;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. State of the featurestore.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the featurestore.
   * @param state state or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Timestamp when this Featurestore was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this Featurestore was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Featurestore setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1Featurestore set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1Featurestore) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1Featurestore clone() {
    return (GoogleCloudAiplatformV1beta1Featurestore) super.clone();
  }

}
