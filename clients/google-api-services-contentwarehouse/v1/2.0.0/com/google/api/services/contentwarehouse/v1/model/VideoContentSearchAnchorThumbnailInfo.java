/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for VideoContentSearchAnchorThumbnailInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchAnchorThumbnailInfo extends com.google.api.client.json.GenericJson {

  /**
   * Entropy of the clustered color distribution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float colorEntropy;

  /**
   * Thumbnail image data for SafeSearch classification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageData imageData;

  /**
   * Convenience field that consolidates signals for whether this thumbnail is safe.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isUnsafe;

  /**
   * 64d float vector of starburst v4 embedings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DrishtiDenseFeatureData starburstV4Embedding;

  /**
   * The raw data for a thumbnail.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String thumbnailBytes;

  /**
   * Entropy of the clustered color distribution.
   * @return value or {@code null} for none
   */
  public java.lang.Float getColorEntropy() {
    return colorEntropy;
  }

  /**
   * Entropy of the clustered color distribution.
   * @param colorEntropy colorEntropy or {@code null} for none
   */
  public VideoContentSearchAnchorThumbnailInfo setColorEntropy(java.lang.Float colorEntropy) {
    this.colorEntropy = colorEntropy;
    return this;
  }

  /**
   * Thumbnail image data for SafeSearch classification.
   * @return value or {@code null} for none
   */
  public ImageData getImageData() {
    return imageData;
  }

  /**
   * Thumbnail image data for SafeSearch classification.
   * @param imageData imageData or {@code null} for none
   */
  public VideoContentSearchAnchorThumbnailInfo setImageData(ImageData imageData) {
    this.imageData = imageData;
    return this;
  }

  /**
   * Convenience field that consolidates signals for whether this thumbnail is safe.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsUnsafe() {
    return isUnsafe;
  }

  /**
   * Convenience field that consolidates signals for whether this thumbnail is safe.
   * @param isUnsafe isUnsafe or {@code null} for none
   */
  public VideoContentSearchAnchorThumbnailInfo setIsUnsafe(java.lang.Boolean isUnsafe) {
    this.isUnsafe = isUnsafe;
    return this;
  }

  /**
   * 64d float vector of starburst v4 embedings.
   * @return value or {@code null} for none
   */
  public DrishtiDenseFeatureData getStarburstV4Embedding() {
    return starburstV4Embedding;
  }

  /**
   * 64d float vector of starburst v4 embedings.
   * @param starburstV4Embedding starburstV4Embedding or {@code null} for none
   */
  public VideoContentSearchAnchorThumbnailInfo setStarburstV4Embedding(DrishtiDenseFeatureData starburstV4Embedding) {
    this.starburstV4Embedding = starburstV4Embedding;
    return this;
  }

  /**
   * The raw data for a thumbnail.
   * @see #decodeThumbnailBytes()
   * @return value or {@code null} for none
   */
  public java.lang.String getThumbnailBytes() {
    return thumbnailBytes;
  }

  /**
   * The raw data for a thumbnail.
   * @see #getThumbnailBytes()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeThumbnailBytes() {
    return com.google.api.client.util.Base64.decodeBase64(thumbnailBytes);
  }

  /**
   * The raw data for a thumbnail.
   * @see #encodeThumbnailBytes()
   * @param thumbnailBytes thumbnailBytes or {@code null} for none
   */
  public VideoContentSearchAnchorThumbnailInfo setThumbnailBytes(java.lang.String thumbnailBytes) {
    this.thumbnailBytes = thumbnailBytes;
    return this;
  }

  /**
   * The raw data for a thumbnail.
   * @see #setThumbnailBytes()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public VideoContentSearchAnchorThumbnailInfo encodeThumbnailBytes(byte[] thumbnailBytes) {
    this.thumbnailBytes = com.google.api.client.util.Base64.encodeBase64URLSafeString(thumbnailBytes);
    return this;
  }

  @Override
  public VideoContentSearchAnchorThumbnailInfo set(String fieldName, Object value) {
    return (VideoContentSearchAnchorThumbnailInfo) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchAnchorThumbnailInfo clone() {
    return (VideoContentSearchAnchorThumbnailInfo) super.clone();
  }

}
