/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Cloud SQL connection properties.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2CloudSqlProperties extends com.google.api.client.json.GenericJson {

  /**
   * Built-in IAM authentication (must be configured in Cloud SQL).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2CloudSqlIamCredential cloudSqlIam;

  /**
   * Optional. Immutable. The Cloud SQL instance for which the connection is defined. Only one
   * connection per instance is allowed. This can only be set at creation time, and cannot be
   * updated. It is an error to use a connection_name from different project or region than the one
   * that holds the connection. For example, a Connection resource for Cloud SQL connection_name
   * `project-id:us-central1:sql-instance` must be created under the parent `projects/project-
   * id/locations/us-central1`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionName;

  /**
   * Required. The database engine used by the Cloud SQL instance that this connection configures.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseEngine;

  /**
   * Required. The DLP API will limit its connections to max_connections. Must be 2 or greater.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxConnections;

  /**
   * A username and password stored in Secret Manager.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2SecretManagerCredential usernamePassword;

  /**
   * Built-in IAM authentication (must be configured in Cloud SQL).
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlIamCredential getCloudSqlIam() {
    return cloudSqlIam;
  }

  /**
   * Built-in IAM authentication (must be configured in Cloud SQL).
   * @param cloudSqlIam cloudSqlIam or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlProperties setCloudSqlIam(GooglePrivacyDlpV2CloudSqlIamCredential cloudSqlIam) {
    this.cloudSqlIam = cloudSqlIam;
    return this;
  }

  /**
   * Optional. Immutable. The Cloud SQL instance for which the connection is defined. Only one
   * connection per instance is allowed. This can only be set at creation time, and cannot be
   * updated. It is an error to use a connection_name from different project or region than the one
   * that holds the connection. For example, a Connection resource for Cloud SQL connection_name
   * `project-id:us-central1:sql-instance` must be created under the parent `projects/project-
   * id/locations/us-central1`
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionName() {
    return connectionName;
  }

  /**
   * Optional. Immutable. The Cloud SQL instance for which the connection is defined. Only one
   * connection per instance is allowed. This can only be set at creation time, and cannot be
   * updated. It is an error to use a connection_name from different project or region than the one
   * that holds the connection. For example, a Connection resource for Cloud SQL connection_name
   * `project-id:us-central1:sql-instance` must be created under the parent `projects/project-
   * id/locations/us-central1`
   * @param connectionName connectionName or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlProperties setConnectionName(java.lang.String connectionName) {
    this.connectionName = connectionName;
    return this;
  }

  /**
   * Required. The database engine used by the Cloud SQL instance that this connection configures.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseEngine() {
    return databaseEngine;
  }

  /**
   * Required. The database engine used by the Cloud SQL instance that this connection configures.
   * @param databaseEngine databaseEngine or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlProperties setDatabaseEngine(java.lang.String databaseEngine) {
    this.databaseEngine = databaseEngine;
    return this;
  }

  /**
   * Required. The DLP API will limit its connections to max_connections. Must be 2 or greater.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxConnections() {
    return maxConnections;
  }

  /**
   * Required. The DLP API will limit its connections to max_connections. Must be 2 or greater.
   * @param maxConnections maxConnections or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlProperties setMaxConnections(java.lang.Integer maxConnections) {
    this.maxConnections = maxConnections;
    return this;
  }

  /**
   * A username and password stored in Secret Manager.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2SecretManagerCredential getUsernamePassword() {
    return usernamePassword;
  }

  /**
   * A username and password stored in Secret Manager.
   * @param usernamePassword usernamePassword or {@code null} for none
   */
  public GooglePrivacyDlpV2CloudSqlProperties setUsernamePassword(GooglePrivacyDlpV2SecretManagerCredential usernamePassword) {
    this.usernamePassword = usernamePassword;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2CloudSqlProperties set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2CloudSqlProperties) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2CloudSqlProperties clone() {
    return (GooglePrivacyDlpV2CloudSqlProperties) super.clone();
  }

}
