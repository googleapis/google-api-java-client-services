/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * A message representing a Trial. A Trial contains a unique set of Parameters that has been or will
 * be evaluated, along with the objective metrics got by running the Trial.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1Trial extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The identifier of the client that originally requested this Trial. Each client is
   * identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will
   * assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex
   * AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the
   * same Trial will be returned. Multiple clients with different client_ids can ask for suggestions
   * simultaneously, each of them will get their own Trial.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's
   * Trial.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customJob;

  /**
   * Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. The final measurement containing the objective value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1Measurement finalMeasurement;

  /**
   * Output only. The identifier of the Trial assigned by the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Output only. A human readable string describing why the Trial is infeasible. This is set only
   * if Trial state is `INFEASIBLE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String infeasibleReason;

  /**
   * Output only. A list of measurements that are strictly lexicographically ordered by their
   * induced tuples (steps, elapsed_duration). These are used for early stopping computations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1Measurement> measurements;

  static {
    // hack to force ProGuard to consider GoogleCloudAiplatformV1Measurement used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudAiplatformV1Measurement.class);
  }

  /**
   * Output only. Resource name of the Trial assigned by the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The parameters of the Trial.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1TrialParameter> parameters;

  /**
   * Output only. Time when the Trial was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. The detailed state of the Trial.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-
   * ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only
   * available if this trial is part of a HyperparameterTuningJob and the job's
   * trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the
   * trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in
   * the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The
   * values are the URIs for each node's interactive shell.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> webAccessUris;

  /**
   * Output only. The identifier of the client that originally requested this Trial. Each client is
   * identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will
   * assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex
   * AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the
   * same Trial will be returned. Multiple clients with different client_ids can ask for suggestions
   * simultaneously, each of them will get their own Trial.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * Output only. The identifier of the client that originally requested this Trial. Each client is
   * identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will
   * assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex
   * AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the
   * same Trial will be returned. Multiple clients with different client_ids can ask for suggestions
   * simultaneously, each of them will get their own Trial.
   * @param clientId clientId or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's
   * Trial.
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomJob() {
    return customJob;
  }

  /**
   * Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's
   * Trial.
   * @param customJob customJob or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setCustomJob(java.lang.String customJob) {
    this.customJob = customJob;
    return this;
  }

  /**
   * Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
   * @param endTime endTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. The final measurement containing the objective value.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1Measurement getFinalMeasurement() {
    return finalMeasurement;
  }

  /**
   * Output only. The final measurement containing the objective value.
   * @param finalMeasurement finalMeasurement or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setFinalMeasurement(GoogleCloudAiplatformV1Measurement finalMeasurement) {
    this.finalMeasurement = finalMeasurement;
    return this;
  }

  /**
   * Output only. The identifier of the Trial assigned by the service.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Output only. The identifier of the Trial assigned by the service.
   * @param id id or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. A human readable string describing why the Trial is infeasible. This is set only
   * if Trial state is `INFEASIBLE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getInfeasibleReason() {
    return infeasibleReason;
  }

  /**
   * Output only. A human readable string describing why the Trial is infeasible. This is set only
   * if Trial state is `INFEASIBLE`.
   * @param infeasibleReason infeasibleReason or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setInfeasibleReason(java.lang.String infeasibleReason) {
    this.infeasibleReason = infeasibleReason;
    return this;
  }

  /**
   * Output only. A list of measurements that are strictly lexicographically ordered by their
   * induced tuples (steps, elapsed_duration). These are used for early stopping computations.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1Measurement> getMeasurements() {
    return measurements;
  }

  /**
   * Output only. A list of measurements that are strictly lexicographically ordered by their
   * induced tuples (steps, elapsed_duration). These are used for early stopping computations.
   * @param measurements measurements or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setMeasurements(java.util.List<GoogleCloudAiplatformV1Measurement> measurements) {
    this.measurements = measurements;
    return this;
  }

  /**
   * Output only. Resource name of the Trial assigned by the service.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Resource name of the Trial assigned by the service.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The parameters of the Trial.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1TrialParameter> getParameters() {
    return parameters;
  }

  /**
   * Output only. The parameters of the Trial.
   * @param parameters parameters or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setParameters(java.util.List<GoogleCloudAiplatformV1TrialParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Output only. Time when the Trial was started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. Time when the Trial was started.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. The detailed state of the Trial.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The detailed state of the Trial.
   * @param state state or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-
   * ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only
   * available if this trial is part of a HyperparameterTuningJob and the job's
   * trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the
   * trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in
   * the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The
   * values are the URIs for each node's interactive shell.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getWebAccessUris() {
    return webAccessUris;
  }

  /**
   * Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-
   * ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only
   * available if this trial is part of a HyperparameterTuningJob and the job's
   * trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the
   * trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in
   * the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The
   * values are the URIs for each node's interactive shell.
   * @param webAccessUris webAccessUris or {@code null} for none
   */
  public GoogleCloudAiplatformV1Trial setWebAccessUris(java.util.Map<String, java.lang.String> webAccessUris) {
    this.webAccessUris = webAccessUris;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1Trial set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1Trial) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1Trial clone() {
    return (GoogleCloudAiplatformV1Trial) super.clone();
  }

}
