/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securesourcemanager.v1.model;

/**
 * The comment on a code line.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secure Source Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Code extends com.google.api.client.json.GenericJson {

  /**
   * Required. The comment body.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * Output only. The effective commit sha this code comment is pointing to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String effectiveCommitSha;

  /**
   * Output only. The root comment of the conversation, derived from the reply field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String effectiveRootComment;

  /**
   * Optional. The position of the comment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Position position;

  /**
   * Optional. Input only. The PullRequestComment resource name that this comment is replying to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reply;

  /**
   * Output only. Boolean indicator if the comment is resolved.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean resolved;

  /**
   * Required. The comment body.
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * Required. The comment body.
   * @param body body or {@code null} for none
   */
  public Code setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * Output only. The effective commit sha this code comment is pointing to.
   * @return value or {@code null} for none
   */
  public java.lang.String getEffectiveCommitSha() {
    return effectiveCommitSha;
  }

  /**
   * Output only. The effective commit sha this code comment is pointing to.
   * @param effectiveCommitSha effectiveCommitSha or {@code null} for none
   */
  public Code setEffectiveCommitSha(java.lang.String effectiveCommitSha) {
    this.effectiveCommitSha = effectiveCommitSha;
    return this;
  }

  /**
   * Output only. The root comment of the conversation, derived from the reply field.
   * @return value or {@code null} for none
   */
  public java.lang.String getEffectiveRootComment() {
    return effectiveRootComment;
  }

  /**
   * Output only. The root comment of the conversation, derived from the reply field.
   * @param effectiveRootComment effectiveRootComment or {@code null} for none
   */
  public Code setEffectiveRootComment(java.lang.String effectiveRootComment) {
    this.effectiveRootComment = effectiveRootComment;
    return this;
  }

  /**
   * Optional. The position of the comment.
   * @return value or {@code null} for none
   */
  public Position getPosition() {
    return position;
  }

  /**
   * Optional. The position of the comment.
   * @param position position or {@code null} for none
   */
  public Code setPosition(Position position) {
    this.position = position;
    return this;
  }

  /**
   * Optional. Input only. The PullRequestComment resource name that this comment is replying to.
   * @return value or {@code null} for none
   */
  public java.lang.String getReply() {
    return reply;
  }

  /**
   * Optional. Input only. The PullRequestComment resource name that this comment is replying to.
   * @param reply reply or {@code null} for none
   */
  public Code setReply(java.lang.String reply) {
    this.reply = reply;
    return this;
  }

  /**
   * Output only. Boolean indicator if the comment is resolved.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getResolved() {
    return resolved;
  }

  /**
   * Output only. Boolean indicator if the comment is resolved.
   * @param resolved resolved or {@code null} for none
   */
  public Code setResolved(java.lang.Boolean resolved) {
    this.resolved = resolved;
    return this;
  }

  @Override
  public Code set(String fieldName, Object value) {
    return (Code) super.set(fieldName, value);
  }

  @Override
  public Code clone() {
    return (Code) super.clone();
  }

}
