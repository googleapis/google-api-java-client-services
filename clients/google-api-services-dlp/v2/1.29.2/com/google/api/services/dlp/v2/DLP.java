/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2;

/**
 * Service definition for DLP (v2).
 *
 * <p>
 * Provides methods for detection, risk analysis, and de-identification of privacy-sensitive fragments in text, images, and Google Cloud Platform storage repositories.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/dlp/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DLPRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DLP extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Cloud Data Loss Prevention (DLP) API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://dlp.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DLP(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DLP(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the InfoTypes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DLP dlp = new DLP(...);}
   *   {@code DLP.InfoTypes.List request = dlp.infoTypes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public InfoTypes infoTypes() {
    return new InfoTypes();
  }

  /**
   * The "infoTypes" collection of methods.
   */
  public class InfoTypes {

    /**
     * Returns a list of the sensitive information types that the DLP API supports. See
     * https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
     *
     * Create a request for the method "infoTypes.list".
     *
     * This request holds the parameters needed by the dlp server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInfoTypesResponse> {

      private static final String REST_PATH = "v2/infoTypes";

      /**
       * Returns a list of the sensitive information types that the DLP API supports. See
       * https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
       *
       * Create a request for the method "infoTypes.list".
       *
       * This request holds the parameters needed by the the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInfoTypesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Optional filter to only return infoTypes supported by certain parts of the API. Defaults to
       * supported_by=INSPECT.
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional filter to only return infoTypes supported by certain parts of the API. Defaults to
     supported_by=INSPECT.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Optional filter to only return infoTypes supported by certain parts of the API. Defaults to
       * supported_by=INSPECT.
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional BCP-47 language code for localized infoType friendly names. If omitted, or if
       * localized strings are not available, en-US strings will be returned.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional BCP-47 language code for localized infoType friendly names. If omitted, or if localized
     strings are not available, en-US strings will be returned.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional BCP-47 language code for localized infoType friendly names. If omitted, or if
       * localized strings are not available, en-US strings will be returned.
       */
      public List setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DLP dlp = new DLP(...);}
   *   {@code DLP.Organizations.List request = dlp.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the DeidentifyTemplates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.DeidentifyTemplates.List request = dlp.deidentifyTemplates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DeidentifyTemplates deidentifyTemplates() {
      return new DeidentifyTemplates();
    }

    /**
     * The "deidentifyTemplates" collection of methods.
     */
    public class DeidentifyTemplates {

      /**
       * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying
       * content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+parent}/deidentifyTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying
         * content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and deidentify template to be deleted,
      for example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and deidentify template to be deleted,
      for example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and deidentify template to be deleted, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and deidentify template to be deleted, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and deidentify template to be deleted, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
       * more.
       *
       * Create a request for the method "deidentifyTemplates.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and deidentify template to be read, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and deidentify template to be read, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and deidentify template to be read, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and deidentify template to be read, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and deidentify template to be read, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
       * more.
       *
       * Create a request for the method "deidentifyTemplates.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDeidentifyTemplatesResponse> {

        private static final String REST_PATH = "v2/{+parent}/deidentifyTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDeidentifyTemplatesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc,update_time, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the template was created. - `update_time`: corresponds to time
       the template was last updated. - `name`: corresponds to template's name. - `display_name`:
       corresponds to template's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListDeidentifyTemplates`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListDeidentifyTemplates`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and deidentify template to be updated, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid
         * to learn more.
         *
         * Create a request for the method "deidentifyTemplates.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and deidentify template to be updated, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and deidentify template to be updated, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and deidentify template to be updated, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and deidentify template to be updated, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the InspectTemplates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.InspectTemplates.List request = dlp.inspectTemplates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InspectTemplates inspectTemplates() {
      return new InspectTemplates();
    }

    /**
     * The "inspectTemplates" collection of methods.
     */
    public class InspectTemplates {

      /**
       * Creates an InspectTemplate for re-using frequently used configuration for inspecting content,
       * images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+parent}/inspectTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an InspectTemplate for re-using frequently used configuration for inspecting content,
         * images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
         *
         * Create a request for the method "inspectTemplates.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
       * more.
       *
       * Create a request for the method "inspectTemplates.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and inspectTemplate to be deleted, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and inspectTemplate to be deleted, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and inspectTemplate to be deleted, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and inspectTemplate to be deleted, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and inspectTemplate to be deleted, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and inspectTemplate to be read, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and inspectTemplate to be read, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and inspectTemplate to be read, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and inspectTemplate to be read, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and inspectTemplate to be read, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInspectTemplatesResponse> {

        private static final String REST_PATH = "v2/{+parent}/inspectTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
         *
         * Create a request for the method "inspectTemplates.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInspectTemplatesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc,update_time, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the template was created. - `update_time`: corresponds to time
       the template was last updated. - `name`: corresponds to template's name. - `display_name`:
       corresponds to template's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListInspectTemplates`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListInspectTemplates`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListInspectTemplates`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
       * more.
       *
       * Create a request for the method "inspectTemplates.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and inspectTemplate to be updated, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and inspectTemplate to be updated, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and inspectTemplate to be updated, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and inspectTemplate to be updated, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and inspectTemplate to be updated, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the StoredInfoTypes collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.StoredInfoTypes.List request = dlp.storedInfoTypes().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public StoredInfoTypes storedInfoTypes() {
      return new StoredInfoTypes();
    }

    /**
     * The "storedInfoTypes" collection of methods.
     */
    public class StoredInfoTypes {

      /**
       * Creates a pre-built stored infoType to be used for inspection. See
       * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
       *
       * Create a request for the method "storedInfoTypes.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+parent}/storedInfoTypes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a pre-built stored infoType to be used for inspection. See
         * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
         *
         * Create a request for the method "storedInfoTypes.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
       * learn more.
       *
       * Create a request for the method "storedInfoTypes.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and storedInfoType to be deleted, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and storedInfoType to be deleted, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and storedInfoType to be deleted, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and storedInfoType to be deleted, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and storedInfoType to be deleted, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn
       * more.
       *
       * Create a request for the method "storedInfoTypes.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and storedInfoType to be read, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and storedInfoType to be read, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and storedInfoType to be read, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and storedInfoType to be read, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and storedInfoType to be read, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn
       * more.
       *
       * Create a request for the method "storedInfoTypes.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListStoredInfoTypesResponse> {

        private static final String REST_PATH = "v2/{+parent}/storedInfoTypes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListStoredInfoTypesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, display_name, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the most recent version of the resource was created.
         * - `state`: corresponds to the state of the resource. - `name`: corresponds to resource
         * name. - `display_name`: corresponds to info type's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc, display_name, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the most recent version of the resource was created. -
       `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. -
       `display_name`: corresponds to info type's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, display_name, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the most recent version of the resource was created.
         * - `state`: corresponds to the state of the resource. - `name`: corresponds to resource
         * name. - `display_name`: corresponds to info type's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListStoredInfoTypes`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListStoredInfoTypes`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the stored infoType by creating a new version. The existing version will continue to be
       * used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-
       * infotypes to learn more.
       *
       * Create a request for the method "storedInfoTypes.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and storedInfoType to be updated, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Updates the stored infoType by creating a new version. The existing version will continue to be
         * used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-
         * infotypes to learn more.
         *
         * Create a request for the method "storedInfoTypes.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and storedInfoType to be updated, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and storedInfoType to be updated, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and storedInfoType to be updated, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and storedInfoType to be updated, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DLP dlp = new DLP(...);}
   *   {@code DLP.Projects.List request = dlp.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Content collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.Content.List request = dlp.content().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Content content() {
      return new Content();
    }

    /**
     * The "content" collection of methods.
     */
    public class Content {

      /**
       * De-identifies potentially sensitive info from a ContentItem. This method has limits on input size
       * and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn more.
       *
       * When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically
       * choose what detectors to run. By default this may be all types, but may change over time as
       * detectors are updated.
       *
       * Create a request for the method "content.deidentify".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentRequest}
       * @return the request
       */
      public Deidentify deidentify(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentRequest content) throws java.io.IOException {
        Deidentify result = new Deidentify(parent, content);
        initialize(result);
        return result;
      }

      public class Deidentify extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentResponse> {

        private static final String REST_PATH = "v2/{+parent}/content:deidentify";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * De-identifies potentially sensitive info from a ContentItem. This method has limits on input
         * size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn
         * more.
         *
         * When no InfoTypes or CustomInfoTypes are specified in this request, the system will
         * automatically choose what detectors to run. By default this may be all types, but may change
         * over time as detectors are updated.
         *
         * Create a request for the method "content.deidentify".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation. <p>
         * {@link
         * Deidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentRequest}
         * @since 1.13
         */
        protected Deidentify(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyContentResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Deidentify set$Xgafv(java.lang.String $Xgafv) {
          return (Deidentify) super.set$Xgafv($Xgafv);
        }

        @Override
        public Deidentify setAccessToken(java.lang.String accessToken) {
          return (Deidentify) super.setAccessToken(accessToken);
        }

        @Override
        public Deidentify setAlt(java.lang.String alt) {
          return (Deidentify) super.setAlt(alt);
        }

        @Override
        public Deidentify setCallback(java.lang.String callback) {
          return (Deidentify) super.setCallback(callback);
        }

        @Override
        public Deidentify setFields(java.lang.String fields) {
          return (Deidentify) super.setFields(fields);
        }

        @Override
        public Deidentify setKey(java.lang.String key) {
          return (Deidentify) super.setKey(key);
        }

        @Override
        public Deidentify setOauthToken(java.lang.String oauthToken) {
          return (Deidentify) super.setOauthToken(oauthToken);
        }

        @Override
        public Deidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Deidentify) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Deidentify setQuotaUser(java.lang.String quotaUser) {
          return (Deidentify) super.setQuotaUser(quotaUser);
        }

        @Override
        public Deidentify setUploadType(java.lang.String uploadType) {
          return (Deidentify) super.setUploadType(uploadType);
        }

        @Override
        public Deidentify setUploadProtocol(java.lang.String uploadProtocol) {
          return (Deidentify) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public Deidentify setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Deidentify set(String parameterName, Object value) {
          return (Deidentify) super.set(parameterName, value);
        }
      }
      /**
       * Finds potentially sensitive info in content. This method has limits on input size, processing
       * time, and output size.
       *
       * When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically
       * choose what detectors to run. By default this may be all types, but may change over time as
       * detectors are updated.
       *
       * For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and
       * https://cloud.google.com/dlp/docs/inspecting-text,
       *
       * Create a request for the method "content.inspect".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Inspect#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentRequest}
       * @return the request
       */
      public Inspect inspect(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentRequest content) throws java.io.IOException {
        Inspect result = new Inspect(parent, content);
        initialize(result);
        return result;
      }

      public class Inspect extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentResponse> {

        private static final String REST_PATH = "v2/{+parent}/content:inspect";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Finds potentially sensitive info in content. This method has limits on input size, processing
         * time, and output size.
         *
         * When no InfoTypes or CustomInfoTypes are specified in this request, the system will
         * automatically choose what detectors to run. By default this may be all types, but may change
         * over time as detectors are updated.
         *
         * For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and
         * https://cloud.google.com/dlp/docs/inspecting-text,
         *
         * Create a request for the method "content.inspect".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Inspect#execute()} method to invoke the remote operation. <p>
         * {@link
         * Inspect#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentRequest}
         * @since 1.13
         */
        protected Inspect(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectContentResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Inspect set$Xgafv(java.lang.String $Xgafv) {
          return (Inspect) super.set$Xgafv($Xgafv);
        }

        @Override
        public Inspect setAccessToken(java.lang.String accessToken) {
          return (Inspect) super.setAccessToken(accessToken);
        }

        @Override
        public Inspect setAlt(java.lang.String alt) {
          return (Inspect) super.setAlt(alt);
        }

        @Override
        public Inspect setCallback(java.lang.String callback) {
          return (Inspect) super.setCallback(callback);
        }

        @Override
        public Inspect setFields(java.lang.String fields) {
          return (Inspect) super.setFields(fields);
        }

        @Override
        public Inspect setKey(java.lang.String key) {
          return (Inspect) super.setKey(key);
        }

        @Override
        public Inspect setOauthToken(java.lang.String oauthToken) {
          return (Inspect) super.setOauthToken(oauthToken);
        }

        @Override
        public Inspect setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Inspect) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Inspect setQuotaUser(java.lang.String quotaUser) {
          return (Inspect) super.setQuotaUser(quotaUser);
        }

        @Override
        public Inspect setUploadType(java.lang.String uploadType) {
          return (Inspect) super.setUploadType(uploadType);
        }

        @Override
        public Inspect setUploadProtocol(java.lang.String uploadProtocol) {
          return (Inspect) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public Inspect setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Inspect set(String parameterName, Object value) {
          return (Inspect) super.set(parameterName, value);
        }
      }
      /**
       * Re-identifies content that has been de-identified. See
       * https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to
       * learn more.
       *
       * Create a request for the method "content.reidentify".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Reidentify#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentRequest}
       * @return the request
       */
      public Reidentify reidentify(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentRequest content) throws java.io.IOException {
        Reidentify result = new Reidentify(parent, content);
        initialize(result);
        return result;
      }

      public class Reidentify extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentResponse> {

        private static final String REST_PATH = "v2/{+parent}/content:reidentify";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Re-identifies content that has been de-identified. See
         * https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example
         * to learn more.
         *
         * Create a request for the method "content.reidentify".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Reidentify#execute()} method to invoke the remote operation. <p>
         * {@link
         * Reidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentRequest}
         * @since 1.13
         */
        protected Reidentify(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ReidentifyContentResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Reidentify set$Xgafv(java.lang.String $Xgafv) {
          return (Reidentify) super.set$Xgafv($Xgafv);
        }

        @Override
        public Reidentify setAccessToken(java.lang.String accessToken) {
          return (Reidentify) super.setAccessToken(accessToken);
        }

        @Override
        public Reidentify setAlt(java.lang.String alt) {
          return (Reidentify) super.setAlt(alt);
        }

        @Override
        public Reidentify setCallback(java.lang.String callback) {
          return (Reidentify) super.setCallback(callback);
        }

        @Override
        public Reidentify setFields(java.lang.String fields) {
          return (Reidentify) super.setFields(fields);
        }

        @Override
        public Reidentify setKey(java.lang.String key) {
          return (Reidentify) super.setKey(key);
        }

        @Override
        public Reidentify setOauthToken(java.lang.String oauthToken) {
          return (Reidentify) super.setOauthToken(oauthToken);
        }

        @Override
        public Reidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Reidentify) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Reidentify setQuotaUser(java.lang.String quotaUser) {
          return (Reidentify) super.setQuotaUser(quotaUser);
        }

        @Override
        public Reidentify setUploadType(java.lang.String uploadType) {
          return (Reidentify) super.setUploadType(uploadType);
        }

        @Override
        public Reidentify setUploadProtocol(java.lang.String uploadProtocol) {
          return (Reidentify) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name. */
        public Reidentify setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Reidentify set(String parameterName, Object value) {
          return (Reidentify) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the DeidentifyTemplates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.DeidentifyTemplates.List request = dlp.deidentifyTemplates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DeidentifyTemplates deidentifyTemplates() {
      return new DeidentifyTemplates();
    }

    /**
     * The "deidentifyTemplates" collection of methods.
     */
    public class DeidentifyTemplates {

      /**
       * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying
       * content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+parent}/deidentifyTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying
         * content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDeidentifyTemplateRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and deidentify template to be deleted,
      for example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and deidentify template to be deleted,
      for example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and deidentify template to be deleted, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and deidentify template to be deleted, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and deidentify template to be deleted, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
       * more.
       *
       * Create a request for the method "deidentifyTemplates.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and deidentify template to be read, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and deidentify template to be read, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and deidentify template to be read, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and deidentify template to be read, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and deidentify template to be read, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
       * more.
       *
       * Create a request for the method "deidentifyTemplates.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDeidentifyTemplatesResponse> {

        private static final String REST_PATH = "v2/{+parent}/deidentifyTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to
         * learn more.
         *
         * Create a request for the method "deidentifyTemplates.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDeidentifyTemplatesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc,update_time, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the template was created. - `update_time`: corresponds to time
       the template was last updated. - `name`: corresponds to template's name. - `display_name`:
       corresponds to template's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListDeidentifyTemplates`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListDeidentifyTemplates`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListDeidentifyTemplates`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to
       * learn more.
       *
       * Create a request for the method "deidentifyTemplates.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and deidentify template to be updated, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/deidentifyTemplates/[^/]+$");

        /**
         * Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid
         * to learn more.
         *
         * Create a request for the method "deidentifyTemplates.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and deidentify template to be updated, for
      example
       *        `organizations/433245324/deidentifyTemplates/432452342` or
      projects/project-
       *        id/deidentifyTemplates/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DeidentifyTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and deidentify template to be updated, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and deidentify template to be updated, for example
       `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
       id/deidentifyTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and deidentify template to be updated, for example
         * `organizations/433245324/deidentifyTemplates/432452342` or projects/project-
         * id/deidentifyTemplates/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/deidentifyTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the DlpJobs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.DlpJobs.List request = dlp.dlpJobs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DlpJobs dlpJobs() {
      return new DlpJobs();
    }

    /**
     * The "dlpJobs" collection of methods.
     */
    public class DlpJobs {

      /**
       * Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to
       * cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs
       * /inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
       *
       * Create a request for the method "dlpJobs.cancel".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the DlpJob resource to be cancelled.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CancelDlpJobRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CancelDlpJobRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/dlpJobs/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to
         * cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs
         * /inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
         *
         * Create a request for the method "dlpJobs.cancel".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the DlpJob resource to be cancelled.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CancelDlpJobRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CancelDlpJobRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the DlpJob resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the DlpJob resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the DlpJob resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Creates a new job to inspect storage or calculate risk metrics. See
       * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs
       * /compute-risk-analysis to learn more.
       *
       * When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically
       * choose what detectors to run. By default this may be all types, but may change over time as
       * detectors are updated.
       *
       * Create a request for the method "dlpJobs.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDlpJobRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDlpJobRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob> {

        private static final String REST_PATH = "v2/{+parent}/dlpJobs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a new job to inspect storage or calculate risk metrics. See
         * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs
         * /compute-risk-analysis to learn more.
         *
         * When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will
         * automatically choose what detectors to run. By default this may be all types, but may change
         * over time as detectors are updated.
         *
         * Create a request for the method "dlpJobs.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDlpJobRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateDlpJobRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a long-running DlpJob. This method indicates that the client is no longer interested in
       * the DlpJob result. The job will be cancelled if possible. See https://cloud.google.com/dlp/docs
       * /inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
       *
       * Create a request for the method "dlpJobs.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the DlpJob resource to be deleted.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/dlpJobs/[^/]+$");

        /**
         * Deletes a long-running DlpJob. This method indicates that the client is no longer interested in
         * the DlpJob result. The job will be cancelled if possible. See https://cloud.google.com/dlp/docs
         * /inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
         *
         * Create a request for the method "dlpJobs.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the DlpJob resource to be deleted.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the DlpJob resource to be deleted. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the DlpJob resource to be deleted.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the DlpJob resource to be deleted. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs/inspecting-
       * storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
       *
       * Create a request for the method "dlpJobs.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the DlpJob resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/dlpJobs/[^/]+$");

        /**
         * Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs
         * /inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
         *
         * Create a request for the method "dlpJobs.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the DlpJob resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the DlpJob resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the DlpJob resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the DlpJob resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/dlpJobs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists DlpJobs that match the specified filter in the request. See
       * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs
       * /compute-risk-analysis to learn more.
       *
       * Create a request for the method "dlpJobs.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDlpJobsResponse> {

        private static final String REST_PATH = "v2/{+parent}/dlpJobs";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists DlpJobs that match the specified filter in the request. See
         * https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs
         * /compute-risk-analysis to learn more.
         *
         * Create a request for the method "dlpJobs.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListDlpJobsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Allows filtering.
         *
         * Supported syntax:
         *
         * * Filter expressions are made up of one or more restrictions. * Restrictions can be
         * combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses
         * `AND`. * A restriction has the form of `  `. * Supported fields/values for inspect jobs:
         * - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` -
         * DATASTORE|CLOUD_STORAGE|BIGQUERY - `trigger_name` - The resource name of the trigger that
         * created job. - 'end_time` - Corresponds to time the job finished. - 'start_time` -
         * Corresponds to time the job finished. * Supported fields for risk analysis jobs: -
         * `state` - RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to time the job
         * finished. - 'start_time` - Corresponds to time the job finished. * The operator must be
         * `=` or `!=`.
         *
         * Examples:
         *
         * * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage
         * OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = done OR
         * state = canceled) * end_time > \"2017-12-12T00:00:00+00:00\"
         *
         * The length of this field should be no more than 500 characters.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. Allows filtering.

       Supported syntax:

       * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by
       `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction
       has the form of `  `. * Supported fields/values for inspect jobs: - `state` -
       PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY -
       `trigger_name` - The resource name of the trigger that created job. - 'end_time` - Corresponds to
       time the job finished. - 'start_time` - Corresponds to time the job finished. * Supported fields
       for risk analysis jobs: - `state` - RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to
       time the job finished. - 'start_time` - Corresponds to time the job finished. * The operator must
       be `=` or `!=`.

       Examples:

       * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage OR
       inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = done OR state =
       canceled) * end_time > \"2017-12-12T00:00:00+00:00\"

       The length of this field should be no more than 500 characters.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. Allows filtering.
         *
         * Supported syntax:
         *
         * * Filter expressions are made up of one or more restrictions. * Restrictions can be
         * combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses
         * `AND`. * A restriction has the form of `  `. * Supported fields/values for inspect jobs:
         * - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` -
         * DATASTORE|CLOUD_STORAGE|BIGQUERY - `trigger_name` - The resource name of the trigger that
         * created job. - 'end_time` - Corresponds to time the job finished. - 'start_time` -
         * Corresponds to time the job finished. * Supported fields for risk analysis jobs: -
         * `state` - RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to time the job
         * finished. - 'start_time` - Corresponds to time the job finished. * The operator must be
         * `=` or `!=`.
         *
         * Examples:
         *
         * * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage
         * OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = done OR
         * state = canceled) * end_time > \"2017-12-12T00:00:00+00:00\"
         *
         * The length of this field should be no more than 500 characters.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, end_time asc, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the job was created. - `end_time`: corresponds to
         * time the job ended. - `name`: corresponds to job's name. - `state`: corresponds to
         * `state`
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc, end_time asc, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the job was created. - `end_time`: corresponds to time the job
       ended. - `name`: corresponds to job's name. - `state`: corresponds to `state`
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, end_time asc, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the job was created. - `end_time`: corresponds to
         * time the job ended. - `name`: corresponds to job's name. - `state`: corresponds to
         * `state`
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** The type of job. Defaults to `DlpJobType.INSPECT` */
        @com.google.api.client.util.Key
        private java.lang.String type;

        /** The type of job. Defaults to `DlpJobType.INSPECT`
         */
        public java.lang.String getType() {
          return type;
        }

        /** The type of job. Defaults to `DlpJobType.INSPECT` */
        public List setType(java.lang.String type) {
          this.type = type;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Image collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.Image.List request = dlp.image().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Image image() {
      return new Image();
    }

    /**
     * The "image" collection of methods.
     */
    public class Image {

      /**
       * Redacts potentially sensitive info from an image. This method has limits on input size,
       * processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-data-
       * images to learn more.
       *
       * When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically
       * choose what detectors to run. By default this may be all types, but may change over time as
       * detectors are updated.
       *
       * Create a request for the method "image.redact".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Redact#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageRequest}
       * @return the request
       */
      public Redact redact(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageRequest content) throws java.io.IOException {
        Redact result = new Redact(parent, content);
        initialize(result);
        return result;
      }

      public class Redact extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageResponse> {

        private static final String REST_PATH = "v2/{+parent}/image:redact";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Redacts potentially sensitive info from an image. This method has limits on input size,
         * processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-
         * data-images to learn more.
         *
         * When no InfoTypes or CustomInfoTypes are specified in this request, the system will
         * automatically choose what detectors to run. By default this may be all types, but may change
         * over time as detectors are updated.
         *
         * Create a request for the method "image.redact".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Redact#execute()} method to invoke the remote operation. <p> {@link
         * Redact#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageRequest}
         * @since 1.13
         */
        protected Redact(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2RedactImageResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Redact set$Xgafv(java.lang.String $Xgafv) {
          return (Redact) super.set$Xgafv($Xgafv);
        }

        @Override
        public Redact setAccessToken(java.lang.String accessToken) {
          return (Redact) super.setAccessToken(accessToken);
        }

        @Override
        public Redact setAlt(java.lang.String alt) {
          return (Redact) super.setAlt(alt);
        }

        @Override
        public Redact setCallback(java.lang.String callback) {
          return (Redact) super.setCallback(callback);
        }

        @Override
        public Redact setFields(java.lang.String fields) {
          return (Redact) super.setFields(fields);
        }

        @Override
        public Redact setKey(java.lang.String key) {
          return (Redact) super.setKey(key);
        }

        @Override
        public Redact setOauthToken(java.lang.String oauthToken) {
          return (Redact) super.setOauthToken(oauthToken);
        }

        @Override
        public Redact setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Redact) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Redact setQuotaUser(java.lang.String quotaUser) {
          return (Redact) super.setQuotaUser(quotaUser);
        }

        @Override
        public Redact setUploadType(java.lang.String uploadType) {
          return (Redact) super.setUploadType(uploadType);
        }

        @Override
        public Redact setUploadProtocol(java.lang.String uploadProtocol) {
          return (Redact) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public Redact setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Redact set(String parameterName, Object value) {
          return (Redact) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the InspectTemplates collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.InspectTemplates.List request = dlp.inspectTemplates().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InspectTemplates inspectTemplates() {
      return new InspectTemplates();
    }

    /**
     * The "inspectTemplates" collection of methods.
     */
    public class InspectTemplates {

      /**
       * Creates an InspectTemplate for re-using frequently used configuration for inspecting content,
       * images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+parent}/inspectTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates an InspectTemplate for re-using frequently used configuration for inspecting content,
         * images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
         *
         * Create a request for the method "inspectTemplates.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateInspectTemplateRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
       * more.
       *
       * Create a request for the method "inspectTemplates.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and inspectTemplate to be deleted, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and inspectTemplate to be deleted, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and inspectTemplate to be deleted, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and inspectTemplate to be deleted, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and inspectTemplate to be deleted, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and inspectTemplate to be read, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and inspectTemplate to be read, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and inspectTemplate to be read, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and inspectTemplate to be read, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and inspectTemplate to be read, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
       *
       * Create a request for the method "inspectTemplates.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInspectTemplatesResponse> {

        private static final String REST_PATH = "v2/{+parent}/inspectTemplates";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
         *
         * Create a request for the method "inspectTemplates.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListInspectTemplatesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc,update_time, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the template was created. - `update_time`: corresponds to time
       the template was last updated. - `name`: corresponds to template's name. - `display_name`:
       corresponds to template's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the template was created. - `update_time`:
         * corresponds to time the template was last updated. - `name`: corresponds to template's
         * name. - `display_name`: corresponds to template's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListInspectTemplates`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListInspectTemplates`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListInspectTemplates`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
       * more.
       *
       * Create a request for the method "inspectTemplates.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and inspectTemplate to be updated, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/inspectTemplates/[^/]+$");

        /**
         * Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn
         * more.
         *
         * Create a request for the method "inspectTemplates.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and inspectTemplate to be updated, for
      example
       *        `organizations/433245324/inspectTemplates/432452342` or
      projects/project-
       *        id/inspectTemplates/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateInspectTemplateRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2InspectTemplate.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and inspectTemplate to be updated, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and inspectTemplate to be updated, for example
       `organizations/433245324/inspectTemplates/432452342` or projects/project-
       id/inspectTemplates/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and inspectTemplate to be updated, for example
         * `organizations/433245324/inspectTemplates/432452342` or projects/project-
         * id/inspectTemplates/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/inspectTemplates/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the JobTriggers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.JobTriggers.List request = dlp.jobTriggers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public JobTriggers jobTriggers() {
      return new JobTriggers();
    }

    /**
     * The "jobTriggers" collection of methods.
     */
    public class JobTriggers {

      /**
       * Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the
       * trigger event to occur.
       *
       * Create a request for the method "jobTriggers.activate".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Activate#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the trigger to activate, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ActivateJobTriggerRequest}
       * @return the request
       */
      public Activate activate(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ActivateJobTriggerRequest content) throws java.io.IOException {
        Activate result = new Activate(name, content);
        initialize(result);
        return result;
      }

      public class Activate extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob> {

        private static final String REST_PATH = "v2/{+name}:activate";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/jobTriggers/[^/]+$");

        /**
         * Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the
         * trigger event to occur.
         *
         * Create a request for the method "jobTriggers.activate".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Activate#execute()} method to invoke the remote operation. <p>
         * {@link
         * Activate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the trigger to activate, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ActivateJobTriggerRequest}
         * @since 1.13
         */
        protected Activate(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ActivateJobTriggerRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2DlpJob.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
        }

        @Override
        public Activate set$Xgafv(java.lang.String $Xgafv) {
          return (Activate) super.set$Xgafv($Xgafv);
        }

        @Override
        public Activate setAccessToken(java.lang.String accessToken) {
          return (Activate) super.setAccessToken(accessToken);
        }

        @Override
        public Activate setAlt(java.lang.String alt) {
          return (Activate) super.setAlt(alt);
        }

        @Override
        public Activate setCallback(java.lang.String callback) {
          return (Activate) super.setCallback(callback);
        }

        @Override
        public Activate setFields(java.lang.String fields) {
          return (Activate) super.setFields(fields);
        }

        @Override
        public Activate setKey(java.lang.String key) {
          return (Activate) super.setKey(key);
        }

        @Override
        public Activate setOauthToken(java.lang.String oauthToken) {
          return (Activate) super.setOauthToken(oauthToken);
        }

        @Override
        public Activate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Activate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Activate setQuotaUser(java.lang.String quotaUser) {
          return (Activate) super.setQuotaUser(quotaUser);
        }

        @Override
        public Activate setUploadType(java.lang.String uploadType) {
          return (Activate) super.setUploadType(uploadType);
        }

        @Override
        public Activate setUploadProtocol(java.lang.String uploadProtocol) {
          return (Activate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the trigger to activate, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the trigger to activate, for example `projects/dlp-test-
       project/jobTriggers/53234423`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the trigger to activate, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        public Activate setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Activate set(String parameterName, Object value) {
          return (Activate) super.set(parameterName, value);
        }
      }
      /**
       * Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a
       * set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
       *
       * Create a request for the method "jobTriggers.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateJobTriggerRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateJobTriggerRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger> {

        private static final String REST_PATH = "v2/{+parent}/jobTriggers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a job trigger to run DLP actions such as scanning storage for sensitive information on
         * a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
         *
         * Create a request for the method "jobTriggers.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateJobTriggerRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateJobTriggerRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example projects/my-project-id. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example projects/my-project-id. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
       *
       * Create a request for the method "jobTriggers.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/jobTriggers/[^/]+$");

        /**
         * Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn
         * more.
         *
         * Create a request for the method "jobTriggers.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the project and the triggeredJob, for example `projects/dlp-test-
       project/jobTriggers/53234423`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
       *
       * Create a request for the method "jobTriggers.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/jobTriggers/[^/]+$");

        /**
         * Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
         *
         * Create a request for the method "jobTriggers.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the project and the triggeredJob, for example `projects/dlp-test-
       project/jobTriggers/53234423`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
       *
       * Create a request for the method "jobTriggers.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example `projects/my-project-id`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListJobTriggersResponse> {

        private static final String REST_PATH = "v2/{+parent}/jobTriggers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
         *
         * Create a request for the method "jobTriggers.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example `projects/my-project-id`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListJobTriggersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name, for example `projects/my-project-id`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example `projects/my-project-id`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name, for example `projects/my-project-id`. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Allows filtering.
         *
         * Supported syntax:
         *
         * * Filter expressions are made up of one or more restrictions. * Restrictions can be
         * combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses
         * `AND`. * A restriction has the form of `  `. * Supported fields/values for inspect jobs:
         * - `status` - HEALTHY|PAUSED|CANCELLED - `inspected_storage` -
         * DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time` - RFC 3339 formatted timestamp,
         * surrounded by quotation marks. Nanoseconds are ignored. - 'error_count' - Number of
         * errors that have occurred while running. * The operator must be `=` or `!=` for status
         * and inspected_storage.
         *
         * Examples:
         *
         * * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage =
         * cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND
         * (state = PAUSED OR state = HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\"
         *
         * The length of this field should be no more than 500 characters.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. Allows filtering.

       Supported syntax:

       * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by
       `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction
       has the form of `  `. * Supported fields/values for inspect jobs: - `status` -
       HEALTHY|PAUSED|CANCELLED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time`
       - RFC 3339 formatted timestamp, surrounded by quotation marks. Nanoseconds are ignored. -
       'error_count' - Number of errors that have occurred while running. * The operator must be `=` or
       `!=` for status and inspected_storage.

       Examples:

       * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage = cloud_storage OR
       inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = PAUSED OR state =
       HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\"

       The length of this field should be no more than 500 characters.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. Allows filtering.
         *
         * Supported syntax:
         *
         * * Filter expressions are made up of one or more restrictions. * Restrictions can be
         * combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses
         * `AND`. * A restriction has the form of `  `. * Supported fields/values for inspect jobs:
         * - `status` - HEALTHY|PAUSED|CANCELLED - `inspected_storage` -
         * DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time` - RFC 3339 formatted timestamp,
         * surrounded by quotation marks. Nanoseconds are ignored. - 'error_count' - Number of
         * errors that have occurred while running. * The operator must be `=` or `!=` for status
         * and inspected_storage.
         *
         * Examples:
         *
         * * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage =
         * cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND
         * (state = PAUSED OR state = HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\"
         *
         * The length of this field should be no more than 500 characters.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional comma separated list of triggeredJob fields to order by, followed by `asc` or
         * `desc` postfix. This list is case-insensitive, default sorting order is ascending,
         * redundant space characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the JobTrigger was created. - `update_time`:
         * corresponds to time the JobTrigger was last updated. - `last_run_time`: corresponds to
         * the last time the JobTrigger ran. - `name`: corresponds to JobTrigger's name. -
         * `display_name`: corresponds to JobTrigger's display name. - `status`: corresponds to
         * JobTrigger's status.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of triggeredJob fields to order by, followed by `asc` or `desc`
       postfix. This list is case-insensitive, default sorting order is ascending, redundant space
       characters are insignificant.

       Example: `name asc,update_time, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the JobTrigger was created. - `update_time`: corresponds to
       time the JobTrigger was last updated. - `last_run_time`: corresponds to the last time the
       JobTrigger ran. - `name`: corresponds to JobTrigger's name. - `display_name`: corresponds to
       JobTrigger's display name. - `status`: corresponds to JobTrigger's status.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of triggeredJob fields to order by, followed by `asc` or
         * `desc` postfix. This list is case-insensitive, default sorting order is ascending,
         * redundant space characters are insignificant.
         *
         * Example: `name asc,update_time, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the JobTrigger was created. - `update_time`:
         * corresponds to time the JobTrigger was last updated. - `last_run_time`: corresponds to
         * the last time the JobTrigger ran. - `name`: corresponds to JobTrigger's name. -
         * `display_name`: corresponds to JobTrigger's display name. - `status`: corresponds to
         * JobTrigger's status.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /** Optional size of the page, can be limited by a server. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by a server.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Optional size of the page, can be limited by a server. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to ListJobTriggers.
         * `order_by` field must not change for subsequent calls.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to ListJobTriggers. `order_by`
       field must not change for subsequent calls.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to ListJobTriggers.
         * `order_by` field must not change for subsequent calls.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
       *
       * Create a request for the method "jobTriggers.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateJobTriggerRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateJobTriggerRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/jobTriggers/[^/]+$");

        /**
         * Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn
         * more.
         *
         * Create a request for the method "jobTriggers.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the project and the triggeredJob, for example
      `projects/dlp-test-
       *        project/jobTriggers/53234423`.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateJobTriggerRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateJobTriggerRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2JobTrigger.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the project and the triggeredJob, for example `projects/dlp-test-
       project/jobTriggers/53234423`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the project and the triggeredJob, for example `projects/dlp-test-
         * project/jobTriggers/53234423`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/jobTriggers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the StoredInfoTypes collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DLP dlp = new DLP(...);}
     *   {@code DLP.StoredInfoTypes.List request = dlp.storedInfoTypes().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public StoredInfoTypes storedInfoTypes() {
      return new StoredInfoTypes();
    }

    /**
     * The "storedInfoTypes" collection of methods.
     */
    public class StoredInfoTypes {

      /**
       * Creates a pre-built stored infoType to be used for inspection. See
       * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
       *
       * Create a request for the method "storedInfoTypes.create".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+parent}/storedInfoTypes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Creates a pre-built stored infoType to be used for inspection. See
         * https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
         *
         * Create a request for the method "storedInfoTypes.create".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2CreateStoredInfoTypeRequest content) {
          super(DLP.this, "POST", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
       * learn more.
       *
       * Create a request for the method "storedInfoTypes.delete".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and storedInfoType to be deleted, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends DLPRequest<com.google.api.services.dlp.v2.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.delete".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and storedInfoType to be deleted, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(DLP.this, "DELETE", REST_PATH, null, com.google.api.services.dlp.v2.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and storedInfoType to be deleted, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and storedInfoType to be deleted, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and storedInfoType to be deleted, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn
       * more.
       *
       * Create a request for the method "storedInfoTypes.get".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of the organization and storedInfoType to be read, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.get".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of the organization and storedInfoType to be read, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of the organization and storedInfoType to be read, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of the organization and storedInfoType to be read, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of the organization and storedInfoType to be read, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn
       * more.
       *
       * Create a request for the method "storedInfoTypes.list".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListStoredInfoTypesResponse> {

        private static final String REST_PATH = "v2/{+parent}/storedInfoTypes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
         * learn more.
         *
         * Create a request for the method "storedInfoTypes.list".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name, for example projects/my-project-id or
      organizations/my-org-id.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(DLP.this, "GET", REST_PATH, null, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2ListStoredInfoTypesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource name, for example projects/my-project-id or organizations/my-org-id.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, display_name, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the most recent version of the resource was created.
         * - `state`: corresponds to the state of the resource. - `name`: corresponds to resource
         * name. - `display_name`: corresponds to info type's display name.
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list
       is case-insensitive, default sorting order is ascending, redundant space characters are
       insignificant.

       Example: `name asc, display_name, create_time desc`

       Supported fields are:

       - `create_time`: corresponds to time the most recent version of the resource was created. -
       `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. -
       `display_name`: corresponds to info type's display name.
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional comma separated list of fields to order by, followed by `asc` or `desc` postfix.
         * This list is case-insensitive, default sorting order is ascending, redundant space
         * characters are insignificant.
         *
         * Example: `name asc, display_name, create_time desc`
         *
         * Supported fields are:
         *
         * - `create_time`: corresponds to time the most recent version of the resource was created.
         * - `state`: corresponds to the state of the resource. - `name`: corresponds to resource
         * name. - `display_name`: corresponds to info type's display name.
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional size of the page, can be limited by server. If zero server returns a page of max size 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional size of the page, can be limited by server. If zero server returns a page of max
         * size 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListStoredInfoTypes`.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional page token to continue retrieval. Comes from previous call to `ListStoredInfoTypes`.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional page token to continue retrieval. Comes from previous call to
         * `ListStoredInfoTypes`.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the stored infoType by creating a new version. The existing version will continue to be
       * used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-
       * infotypes to learn more.
       *
       * Create a request for the method "storedInfoTypes.patch".
       *
       * This request holds the parameters needed by the dlp server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Resource name of organization and storedInfoType to be updated, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
       * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends DLPRequest<com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/storedInfoTypes/[^/]+$");

        /**
         * Updates the stored infoType by creating a new version. The existing version will continue to be
         * used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-
         * infotypes to learn more.
         *
         * Create a request for the method "storedInfoTypes.patch".
         *
         * This request holds the parameters needed by the the dlp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name of organization and storedInfoType to be updated, for
      example
       *        `organizations/433245324/storedInfoTypes/432452342` or
      projects/project-
       *        id/storedInfoTypes/432452342.
         * @param content the {@link com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2UpdateStoredInfoTypeRequest content) {
          super(DLP.this, "PATCH", REST_PATH, content, com.google.api.services.dlp.v2.model.GooglePrivacyDlpV2StoredInfoType.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Resource name of organization and storedInfoType to be updated, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name of organization and storedInfoType to be updated, for example
       `organizations/433245324/storedInfoTypes/432452342` or projects/project-
       id/storedInfoTypes/432452342.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Resource name of organization and storedInfoType to be updated, for example
         * `organizations/433245324/storedInfoTypes/432452342` or projects/project-
         * id/storedInfoTypes/432452342.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/storedInfoTypes/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link DLP}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DLP}. */
    @Override
    public DLP build() {
      return new DLP(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DLPRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDLPRequestInitializer(
        DLPRequestInitializer dlpRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dlpRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
