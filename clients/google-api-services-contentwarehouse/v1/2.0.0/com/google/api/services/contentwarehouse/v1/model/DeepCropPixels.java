/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for DeepCropPixels.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DeepCropPixels extends com.google.api.client.json.GenericJson {

  /**
   * Pixels version of the DeepCropIndexing bytes, this corresponds to the crop box for a given
   * image (based input image size and desired aspect ratio).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long x0;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long x1;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long y0;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long y1;

  /**
   * Pixels version of the DeepCropIndexing bytes, this corresponds to the crop box for a given
   * image (based input image size and desired aspect ratio).
   * @return value or {@code null} for none
   */
  public java.lang.Long getX0() {
    return x0;
  }

  /**
   * Pixels version of the DeepCropIndexing bytes, this corresponds to the crop box for a given
   * image (based input image size and desired aspect ratio).
   * @param x0 x0 or {@code null} for none
   */
  public DeepCropPixels setX0(java.lang.Long x0) {
    this.x0 = x0;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getX1() {
    return x1;
  }

  /**
   * @param x1 x1 or {@code null} for none
   */
  public DeepCropPixels setX1(java.lang.Long x1) {
    this.x1 = x1;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getY0() {
    return y0;
  }

  /**
   * @param y0 y0 or {@code null} for none
   */
  public DeepCropPixels setY0(java.lang.Long y0) {
    this.y0 = y0;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getY1() {
    return y1;
  }

  /**
   * @param y1 y1 or {@code null} for none
   */
  public DeepCropPixels setY1(java.lang.Long y1) {
    this.y1 = y1;
    return this;
  }

  @Override
  public DeepCropPixels set(String fieldName, Object value) {
    return (DeepCropPixels) super.set(fieldName, value);
  }

  @Override
  public DeepCropPixels clone() {
    return (DeepCropPixels) super.clone();
  }

}
