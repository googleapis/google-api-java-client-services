{
  "name": "books",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "schemas": {
    "ReadingPosition": {
      "type": "object",
      "id": "ReadingPosition",
      "properties": {
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        }
      }
    },
    "RequestAccessData": {
      "type": "object",
      "id": "RequestAccessData",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        }
      }
    },
    "DownloadAccessRestriction": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "downloadsAcquired": {
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "type": "integer"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "maxDownloadDevices": {
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "If restricted, whether access is granted for this (user, device, volume)."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS"
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        }
      },
      "id": "DownloadAccessRestriction"
    },
    "Volume2": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Volume2"
    },
    "GeoAnnotationdata": {
      "type": "object",
      "id": "GeoAnnotationdata",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        }
      }
    },
    "Usersettings": {
      "type": "object",
      "properties": {
        "notification": {
          "properties": {
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "notesExport": {
          "type": "object",
          "description": "User settings in sub-objects, each for different purposes.",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Usersettings"
    },
    "Seriesmembership": {
      "id": "Seriesmembership",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      }
    },
    "BooksCloudloadingResource": {
      "properties": {
        "author": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource",
      "type": "object"
    },
    "ConcurrentAccessRestriction": {
      "properties": {
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32",
          "type": "integer"
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "maxConcurrentDevices": {
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume.",
          "type": "integer"
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        }
      },
      "id": "ConcurrentAccessRestriction",
      "type": "object"
    },
    "Layersummary": {
      "type": "object",
      "properties": {
        "annotationCount": {
          "format": "int32",
          "description": "The number of annotations for this layer.",
          "type": "integer"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "format": "int32",
          "type": "integer"
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
        },
        "updated": {
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        }
      },
      "id": "Layersummary"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "id": "BooksVolumesRecommendedRateResponse",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      }
    },
    "Metadata": {
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of offline dictionary metadata.",
          "items": {
            "properties": {
              "download_url": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Metadata"
    },
    "Review": {
      "properties": {
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "source": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Name of the source."
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            }
          },
          "description": "Information regarding the source of this review, when the review is not from a Google Books user."
        },
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        },
        "date": {
          "type": "string",
          "description": "Date of this review."
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "author": {
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "description": "Author of this review.",
          "type": "object"
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        }
      },
      "id": "Review",
      "type": "object"
    },
    "Geolayerdata": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "geo": {
          "type": "object",
          "properties": {
            "longitude": {
              "type": "number",
              "description": "The longitude of the location.",
              "format": "double"
            },
            "latitude": {
              "description": "The latitude of the location.",
              "format": "double",
              "type": "number"
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            },
            "zoom": {
              "type": "integer",
              "format": "int32",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            },
            "boundary": {
              "type": "array",
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "items": {
                "type": "string"
              }
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "viewport": {
              "properties": {
                "hi": {
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "properties": {
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle."
            },
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            }
          }
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "snippetUrl": {
              "type": "string",
              "description": "The URL for information for this location. Ex: wikipedia link."
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            },
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "id": "Geolayerdata",
      "type": "object"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of layer summaries found.",
          "type": "integer"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isComplete": {
                "type": "boolean"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    }
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "properties": {
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseTime": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Series"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "properties": {
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        }
      },
      "id": "DictionaryAnnotationdata"
    },
    "Volumeseriesinfo": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        },
        "volumeSeries": {
          "type": "array",
          "items": {
            "properties": {
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "issue": {
                "type": "array",
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                }
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "type": "integer",
                "format": "int32"
              }
            },
            "type": "object"
          }
        }
      },
      "id": "Volumeseriesinfo"
    },
    "Category": {
      "id": "Category",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "description": "A list of onboarding categories.",
          "items": {
            "type": "object",
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Annotationsdata": {
      "type": "object",
      "id": "Annotationsdata",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "description": "A list of Annotation Data.",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        }
      }
    },
    "BooksAnnotationsRange": {
      "properties": {
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        },
        "endPosition": {
          "description": "The ending position for the range.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        }
      },
      "type": "object",
      "id": "BooksAnnotationsRange"
    },
    "AnnotationsSummary": {
      "id": "AnnotationsSummary",
      "type": "object",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "properties": {
              "limitType": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "updated": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Dictlayerdata": {
      "type": "object",
      "id": "Dictlayerdata",
      "properties": {
        "common": {
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for this entity on Google search.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "dict": {
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "properties": {
                  "source": {
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "type": "object"
                  },
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "pronunciation": {
                          "type": "string"
                        },
                        "definitions": {
                          "items": {
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "source": {
                                      "type": "object",
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  },
                                  "attribution": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "source": {
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object",
              "description": "The source, url and attribution for this dictionary data."
            }
          },
          "type": "object"
        }
      }
    },
    "Volumeannotations": {
      "id": "Volumeannotations",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "version": {
          "type": "string",
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book)."
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "description": "A list of volume annotations.",
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array"
        }
      }
    },
    "Volume": {
      "properties": {
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        },
        "saleInfo": {
          "properties": {
            "offers": {
              "description": "Offers available for this volume (sales and rentals).",
              "items": {
                "type": "object",
                "properties": {
                  "retailPrice": {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros"
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "rentalDuration": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object",
                    "description": "The rental duration (for rental offers only)."
                  },
                  "finskyOfferType": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  }
                }
              },
              "type": "array"
            },
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
            },
            "retailPrice": {
              "type": "object",
              "properties": {
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            }
          },
          "type": "object",
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries)."
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)",
          "type": "string"
        },
        "volumeInfo": {
          "description": "General volume information.",
          "type": "object",
          "properties": {
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "ratingsCount": {
              "description": "The number of review ratings for this volume.",
              "format": "int32",
              "type": "integer"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                }
              },
              "description": "Physical dimensions of this volume."
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            },
            "publishedDate": {
              "description": "Date of publication. (In LITE projection.)",
              "type": "string"
            },
            "printedPageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation."
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)"
            },
            "authors": {
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "properties": {
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "readingModes": {
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "description": "The reading modes available for this volume.",
              "type": "object"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "type": "integer",
              "format": "int32"
            },
            "pageCount": {
              "description": "Total number of pages as per publisher metadata.",
              "format": "int32",
              "type": "integer"
            },
            "industryIdentifiers": {
              "items": {
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  }
                },
                "type": "object"
              },
              "description": "Industry standard identifiers for this volume.",
              "type": "array"
            },
            "maturityRating": {
              "type": "string"
            },
            "imageLinks": {
              "properties": {
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "averageRating": {
              "type": "number",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "format": "double"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc."
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            }
          }
        },
        "recommendedInfo": {
          "type": "object",
          "properties": {
            "explanation": {
              "type": "string",
              "description": "A text explaining why this volume is recommended."
            }
          },
          "description": "Recommendation related information for this volume."
        },
        "searchInfo": {
          "type": "object",
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "userInfo": {
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "properties": {
            "isFamilySharedFromUser": {
              "type": "boolean",
              "description": "Whether or not the user shared this volume with the family."
            },
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "acquisitionType": {
              "format": "int32",
              "description": "How this volume was acquired.",
              "type": "integer"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "isPurchased": {
              "type": "boolean",
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"
            },
            "entitlementType": {
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer",
              "format": "int32"
            },
            "rentalState": {
              "description": "Whether this book is an active or an expired rental.",
              "type": "string"
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "updated": {
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).",
              "type": "string"
            },
            "copy": {
              "type": "object",
              "properties": {
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "limitType": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "description": "Copy/Paste accounting information."
            },
            "familySharing": {
              "description": "Information on the ability to share with the family.",
              "properties": {
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "properties": {
                "endUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "startUtcSec": {
                  "format": "int64",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            }
          },
          "type": "object"
        },
        "accessInfo": {
          "properties": {
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                }
              }
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "pdf": {
              "type": "object",
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                }
              }
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "accessViewStatus": {
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)",
              "type": "string"
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.",
              "type": "string"
            },
            "downloadAccess": {
              "$ref": "DownloadAccessRestriction",
              "description": "Information about a volume's download license access restrictions."
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "quoteSharingAllowed": {
              "type": "boolean",
              "description": "Whether quote sharing is allowed for this volume."
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
            }
          },
          "type": "object",
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.)."
        },
        "layerInfo": {
          "description": "What layers exist in this volume and high level information about them.",
          "type": "object",
          "properties": {
            "layers": {
              "items": {
                "type": "object",
                "properties": {
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  },
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
                    "type": "string"
                  }
                }
              },
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "type": "array"
            }
          }
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Volume"
    },
    "FamilyInfo": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "membership": {
          "properties": {
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "ageGroup": {
              "description": "The age group of the user.",
              "type": "string"
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            }
          },
          "description": "Family membership info of the user that made the request.",
          "type": "object"
        }
      },
      "id": "FamilyInfo",
      "type": "object"
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "clusters": {
          "items": {
            "properties": {
              "subTitle": {
                "type": "string"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "uid": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "banner_with_content_container": {
                "type": "object",
                "properties": {
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      },
      "id": "Discoveryclusters"
    },
    "Annotation": {
      "id": "Annotation",
      "properties": {
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "layerSummary": {
          "properties": {
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            },
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32",
              "type": "integer"
            },
            "allowedCharacterCount": {
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "currentVersionRanges": {
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            }
          },
          "type": "object"
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "type": "object",
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The layer this annotation is for."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "afterSelectedText": {
          "type": "string",
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of this annotation, in the form of a GUID."
        }
      },
      "type": "object"
    },
    "Bookshelves": {
      "id": "Bookshelves",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Bookshelf"
          },
          "description": "A list of bookshelves."
        }
      }
    },
    "Annotations": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "description": "A list of annotations.",
          "type": "array",
          "items": {
            "$ref": "Annotation"
          }
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Annotations"
    },
    "Offers": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "items": {
                "items": {
                  "properties": {
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "artUrl": {
                "type": "string"
              },
              "gservicesKey": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of offers."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Offers",
      "type": "object"
    },
    "DownloadAccesses": {
      "properties": {
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "DownloadAccesses"
    },
    "Volumes": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated."
        },
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "id": "Volumes",
      "type": "object"
    },
    "Notification": {
      "properties": {
        "iconUrl": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "crmExperimentIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The list of crm experiment ids."
        },
        "reason": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      },
      "id": "Notification",
      "type": "object"
    },
    "Volumeannotation": {
      "properties": {
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "pageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Pages the annotation spans."
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "The content ranges to identify the selected text."
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        }
      },
      "id": "Volumeannotation",
      "type": "object"
    },
    "Bookshelf": {
      "properties": {
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "id": {
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "volumeCount": {
          "description": "Number of volumes in this bookshelf.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        }
      },
      "id": "Bookshelf",
      "type": "object"
    }
  },
  "discoveryVersion": "v1",
  "rootUrl": "https://www.googleapis.com/",
  "protocol": "rest",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "version": "v1",
  "ownerName": "Google",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "kind": "discovery#restDescription",
  "baseUrl": "https://www.googleapis.com/",
  "basePath": "",
  "revision": "20200717",
  "title": "Books API",
  "ownerDomain": "google.com",
  "id": "books:v1",
  "version_module": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "resources": {
    "cloudloading": {
      "methods": {
        "updateBook": {
          "path": "books/v1/cloudloading/updateBook",
          "parameters": {},
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "id": "books.cloudloading.updateBook",
          "description": "Updates a user-upload volume.",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "flatPath": "books/v1/cloudloading/updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "addBook": {
          "parameters": {
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            },
            "upload_client_token": {
              "description": "Scotty upload token.",
              "location": "query",
              "type": "string"
            },
            "drive_document_id": {
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query"
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/addBook",
          "id": "books.cloudloading.addBook",
          "description": "Add a user-upload volume and triggers processing.",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "httpMethod": "POST",
          "path": "books/v1/cloudloading/addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "deleteBook": {
          "path": "books/v1/cloudloading/deleteBook",
          "description": "Remove the book and its contents",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "volumeId": {
              "description": "The id of the book to be removed.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "books/v1/cloudloading/deleteBook",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "id": "books.cloudloading.deleteBook"
        }
      }
    },
    "layers": {
      "resources": {
        "annotationData": {
          "methods": {
            "list": {
              "id": "books.layers.annotationData.list",
              "description": "Gets the annotation data for a volume and layer.",
              "response": {
                "$ref": "Annotationsdata"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "layerId": {
                  "required": true,
                  "type": "string",
                  "description": "The ID for the layer to get the annotation data.",
                  "location": "path"
                },
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The volume to retrieve annotation data for."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "type": "string"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "h": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided."
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "location": "query",
                  "format": "uint32"
                },
                "annotationDataId": {
                  "repeated": true,
                  "location": "query",
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set."
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "scale": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The requested scale for the image."
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data"
            },
            "get": {
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "parameters": {
                "h": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "w": {
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32",
                  "location": "query"
                },
                "allowWebDefinitions": {
                  "type": "boolean",
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "location": "query"
                },
                "layerId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the layer to get the annotations."
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the volume you are trying to retrieve."
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "annotationDataId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The ID of the annotation data to retrieve."
                }
              },
              "description": "Gets the annotation data.",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.annotationData.get"
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Volumeannotation"
              },
              "description": "Gets the volume annotation.",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameters": {
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "annotationId": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "id": "books.layers.volumeAnnotations.get"
            },
            "list": {
              "response": {
                "$ref": "Volumeannotations"
              },
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "id": "books.layers.volumeAnnotations.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "description": "Gets the volume annotations for a volume and layer.",
              "parameters": {
                "endPosition": {
                  "location": "query",
                  "description": "The end position to end retrieving data from.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The volume to retrieve annotations for."
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "format": "uint32"
                },
                "startOffset": {
                  "description": "The start offset to start retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "volumeAnnotationsVersion": {
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting.",
                  "location": "query"
                },
                "startPosition": {
                  "location": "query",
                  "type": "string",
                  "description": "The start position to start retrieving data from."
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "type": "boolean"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "endOffset": {
                  "location": "query",
                  "description": "The end offset to end retrieving data from.",
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "location": "query",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "response": {
            "$ref": "Layersummary"
          },
          "parameters": {
            "volumeId": {
              "required": true,
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string"
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "summaryId": {
              "location": "path",
              "type": "string",
              "description": "The ID for the layer to get the summary for.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "id": "books.layers.get",
          "description": "Gets the layer summary for a volume."
        },
        "list": {
          "id": "books.layers.list",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return",
              "location": "query",
              "type": "integer"
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The volume to retrieve layers for."
            }
          },
          "description": "List the layer summaries for a volume.",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "response": {
            "$ref": "Layersummaries"
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "myconfig": {
      "methods": {
        "releaseDownloadAccess": {
          "httpMethod": "POST",
          "id": "books.myconfig.releaseDownloadAccess",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "volumeIds": {
              "type": "string",
              "description": "The volume(s) to release restrictions for.",
              "repeated": true,
              "location": "query"
            },
            "cpksver": {
              "description": "The device/version ID from which to release the restriction.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "description": "Release downloaded content access restriction.",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          }
        },
        "updateUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "id": "books.myconfig.updateUserSettings",
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "request": {
            "$ref": "Usersettings"
          },
          "parameters": {},
          "path": "books/v1/myconfig/updateUserSettings",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "syncVolumeLicenses": {
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to release the restriction."
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false."
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "nonce": {
              "description": "The client nonce value.",
              "location": "query",
              "type": "string"
            },
            "features": {
              "type": "string",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'"
            },
            "volumeIds": {
              "type": "string",
              "description": "The volume(s) to request download restrictions for.",
              "repeated": true,
              "location": "query"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean"
            }
          },
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "id": "books.myconfig.syncVolumeLicenses",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volumes"
          },
          "httpMethod": "POST"
        },
        "getUserSettings": {
          "id": "books.myconfig.getUserSettings",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET",
          "parameters": {
            "country": {
              "type": "string",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "location": "query"
            }
          },
          "path": "books/v1/myconfig/getUserSettings",
          "description": "Gets the current settings for the user."
        },
        "requestAccess": {
          "httpMethod": "POST",
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to request the restrictions."
            },
            "volumeId": {
              "type": "string",
              "description": "The volume to request concurrent/download restrictions for.",
              "location": "query"
            },
            "licenseTypes": {
              "location": "query",
              "type": "string",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ]
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "nonce": {
              "description": "The client nonce value.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "RequestAccessData"
          },
          "flatPath": "books/v1/myconfig/requestAccess",
          "id": "books.myconfig.requestAccess",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Request concurrent and download access restrictions.",
          "path": "books/v1/myconfig/requestAccess"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "readingpositions": {
          "methods": {
            "setPosition": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "volumeId": {
                  "location": "path",
                  "description": "ID of volume for which to update the reading position.",
                  "required": true,
                  "type": "string"
                },
                "deviceCookie": {
                  "type": "string",
                  "description": "Random persistent device cookie optional on set position.",
                  "location": "query"
                },
                "action": {
                  "description": "Action that caused this reading position to be set.",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ]
                },
                "position": {
                  "location": "query",
                  "description": "Position string for the new volume reading position.",
                  "type": "string"
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position applies.",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "description": "Sets my reading position information for a volume.",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "httpMethod": "POST",
              "id": "books.mylibrary.readingpositions.setPosition",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "volumeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position is requested.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "location": "path",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ReadingPosition"
              },
              "id": "books.mylibrary.readingpositions.get",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "httpMethod": "GET",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "parameterOrder": [
                "volumeId"
              ]
            }
          }
        },
        "annotations": {
          "methods": {
            "summary": {
              "httpMethod": "POST",
              "description": "Gets the summary of specified layers.",
              "parameterOrder": [],
              "id": "books.mylibrary.annotations.summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "Volume id to get the summary for.",
                  "type": "string"
                },
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "repeated": true,
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "path": "books/v1/mylibrary/annotations/summary"
            },
            "insert": {
              "parameterOrder": [],
              "response": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "request": {
                "$ref": "Annotation"
              },
              "description": "Inserts a new annotation.",
              "id": "books.mylibrary.annotations.insert",
              "path": "books/v1/mylibrary/annotations",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "location": "query",
                  "type": "boolean"
                },
                "annotationId": {
                  "description": "The ID for the annotation to insert.",
                  "location": "query",
                  "type": "string"
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "update": {
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "annotationId": {
                  "type": "string",
                  "required": true,
                  "description": "The ID for the annotation to update.",
                  "location": "path"
                }
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Annotation"
              },
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Updates an existing annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.update",
              "parameterOrder": [
                "annotationId"
              ]
            },
            "list": {
              "parameterOrder": [],
              "description": "Retrieves a list of annotations, possibly filtered.",
              "id": "books.mylibrary.annotations.list",
              "path": "books/v1/mylibrary/annotations",
              "parameters": {
                "layerId": {
                  "type": "string",
                  "description": "The layer ID to limit annotation by.",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "maxResults": {
                  "format": "uint32",
                  "description": "Maximum number of results to return",
                  "location": "query",
                  "type": "integer"
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string"
                },
                "layerIds": {
                  "description": "The layer ID(s) to limit annotation by.",
                  "location": "query",
                  "type": "string",
                  "repeated": true
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "The volume to restrict annotations to."
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Annotations"
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "delete": {
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Deletes an annotation.",
              "httpMethod": "DELETE",
              "parameters": {
                "annotationId": {
                  "required": true,
                  "description": "The ID for the annotation to delete.",
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "id": "books.mylibrary.annotations.delete",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ]
            }
          }
        },
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "httpMethod": "GET",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameters": {
                    "showPreorders": {
                      "location": "query",
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "type": "boolean"
                    },
                    "country": {
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "location": "query",
                      "type": "string"
                    },
                    "projection": {
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "location": "query",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "description": "Restrict information returned to a set of selected fields.",
                      "type": "string"
                    },
                    "maxResults": {
                      "format": "uint32",
                      "location": "query",
                      "description": "Maximum number of results to return",
                      "type": "integer"
                    },
                    "source": {
                      "location": "query",
                      "description": "String to identify the originator of this request.",
                      "type": "string"
                    },
                    "startIndex": {
                      "format": "uint32",
                      "type": "integer",
                      "description": "Index of the first element to return (starts at 0)",
                      "location": "query"
                    },
                    "q": {
                      "type": "string",
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf."
                    },
                    "shelf": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The bookshelf ID or name retrieve volumes for."
                    }
                  },
                  "parameterOrder": [
                    "shelf"
                  ],
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes"
                }
              }
            }
          },
          "methods": {
            "removeVolume": {
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "shelf": {
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "location": "path",
                  "type": "string"
                },
                "reason": {
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is removed from the library."
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to remove."
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "description": "Removes a volume from a bookshelf.",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              }
            },
            "moveVolume": {
              "id": "books.mylibrary.bookshelves.moveVolume",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "parameters": {
                "volumePosition": {
                  "type": "integer",
                  "location": "query",
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "format": "int32"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf with the volume.",
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of volume to move.",
                  "location": "query"
                }
              },
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Moves a volume within a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume"
            },
            "clearVolumes": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "parameterOrder": [
                "shelf"
              ],
              "parameters": {
                "shelf": {
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Clears all volumes from a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "httpMethod": "POST"
            },
            "list": {
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Bookshelves"
              },
              "id": "books.mylibrary.bookshelves.list",
              "httpMethod": "GET",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "path": "books/v1/mylibrary/bookshelves",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves",
              "parameterOrder": []
            },
            "get": {
              "id": "books.mylibrary.bookshelves.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameterOrder": [
                "shelf"
              ],
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Bookshelf"
              },
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf to retrieve.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "addVolume": {
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "description": "ID of bookshelf to which to add a volume.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "location": "query",
                  "description": "The reason for which the book is added to the library.",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ]
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of volume to add."
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameterOrder": [
                "shelf"
              ],
              "id": "books.mylibrary.bookshelves.addVolume",
              "description": "Adds a volume to a bookshelf.",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "id": "books.personalizedstream.get",
          "httpMethod": "GET",
          "parameterOrder": [],
          "parameters": {
            "maxAllowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ]
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/personalizedstream/get",
          "response": {
            "$ref": "Discoveryclusters"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Returns a stream of personalized book clusters",
          "path": "books/v1/personalizedstream/get"
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "description": "Performs a book search.",
          "flatPath": "books/v1/volumes",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "maxAllowedMaturityRating": {
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "startIndex": {
              "format": "uint32",
              "description": "Index of the first result to return (starts at 0)",
              "type": "integer",
              "location": "query"
            },
            "download": {
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability.",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "type": "string"
            },
            "projection": {
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "location": "query",
              "description": "Restrict information returned to a set of selected fields.",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "orderBy": {
              "type": "string",
              "description": "Sort search results.",
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ]
            },
            "partner": {
              "type": "string",
              "description": "Restrict and brand results for partner ID.",
              "location": "query"
            },
            "langRestrict": {
              "type": "string",
              "location": "query",
              "description": "Restrict results to books with this language code."
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "libraryRestrict": {
              "location": "query",
              "description": "Restrict search to this user's library.",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "type": "string"
            },
            "q": {
              "description": "Full-text search query string.",
              "location": "query",
              "type": "string"
            },
            "showPreorders": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false."
            },
            "printType": {
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "description": "Restrict to books or magazines.",
              "type": "string",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "location": "query"
            },
            "filter": {
              "description": "Filter search results.",
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "type": "string",
              "location": "query"
            }
          },
          "path": "books/v1/volumes",
          "id": "books.volumes.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "Volumes"
          }
        },
        "get": {
          "id": "books.volumes.get",
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "response": {
            "$ref": "Volume"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "source": {
              "description": "string to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "projection": {
              "location": "query",
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ]
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Brand results for partner ID."
            },
            "country": {
              "location": "query",
              "description": "ISO-3166-1 code to override the IP-based location.",
              "type": "string"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ID of volume to retrieve."
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false."
            }
          },
          "path": "books/v1/volumes/{volumeId}"
        }
      },
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query"
                },
                "association": {
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "description": "Association type."
                },
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "description": "ID of the source volume.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/associated",
              "description": "Return a list of associated books.",
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "id": "books.volumes.associated.list",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [
                "volumeId"
              ],
              "httpMethod": "GET"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "id": "books.volumes.useruploaded.list",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/useruploaded",
              "description": "Return a list of books uploaded by the current user.",
              "httpMethod": "GET",
              "path": "books/v1/volumes/useruploaded",
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "processingState": {
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "The processing state of the user uploaded volumes to be returned."
                },
                "volumeId": {
                  "repeated": true,
                  "type": "string",
                  "location": "query",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned."
                },
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "description": "Maximum number of results to return.",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "startIndex": {
                  "location": "query",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                }
              }
            }
          }
        },
        "recommended": {
          "methods": {
            "rate": {
              "flatPath": "books/v1/volumes/recommended/rate",
              "httpMethod": "POST",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "description": "Rate a recommended book for the current user.",
              "parameters": {
                "rating": {
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "location": "query",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "type": "string",
                  "description": "Rating to be given to the volume."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of the source volume.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "books.volumes.recommended.rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "path": "books/v1/volumes/recommended/rate"
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "id": "books.volumes.recommended.list",
              "parameterOrder": [],
              "path": "books/v1/volumes/recommended",
              "flatPath": "books/v1/volumes/recommended",
              "description": "Return a list of recommended books for the current user."
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "description": "Return a list of books in My Library.",
              "flatPath": "books/v1/volumes/mybooks",
              "parameters": {
                "processingState": {
                  "type": "string",
                  "repeated": true,
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "location": "query"
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "acquireMethod": {
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "description": "How the book was acquired",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "startIndex": {
                  "location": "query",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "format": "uint32"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                }
              },
              "id": "books.volumes.mybooks.list",
              "path": "books/v1/volumes/mybooks",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameterOrder": []
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategories": {
          "flatPath": "books/v1/onboarding/listCategories",
          "id": "books.onboarding.listCategories",
          "parameterOrder": [],
          "httpMethod": "GET",
          "description": "List categories for onboarding experience.",
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "path": "books/v1/onboarding/listCategories",
          "response": {
            "$ref": "Category"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "listCategoryVolumes": {
          "description": "List available volumes under categories for onboarding experience.",
          "response": {
            "$ref": "Volume2"
          },
          "id": "books.onboarding.listCategoryVolumes",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "httpMethod": "GET",
          "parameters": {
            "maxAllowedMaturityRating": {
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out."
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "pageSize": {
              "format": "uint32",
              "description": "Number of maximum results per page to be included in the response.",
              "location": "query",
              "type": "integer"
            },
            "categoryId": {
              "repeated": true,
              "type": "string",
              "description": "List of category ids requested.",
              "location": "query"
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "parameterOrder": []
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "flatPath": "books/v1/familysharing/unshare",
          "path": "books/v1/familysharing/unshare",
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "id": "books.familysharing.unshare",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "docId": {
              "type": "string",
              "description": "The docid to unshare.",
              "location": "query"
            },
            "volumeId": {
              "location": "query",
              "type": "string",
              "description": "The volume to unshare."
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "httpMethod": "POST"
        },
        "share": {
          "path": "books/v1/familysharing/share",
          "id": "books.familysharing.share",
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "The volume to share.",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "docId": {
              "description": "The docid to share.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/familysharing/share",
          "httpMethod": "POST"
        },
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "description": "Gets information regarding the family that the user is part of.",
          "parameterOrder": [],
          "httpMethod": "GET",
          "path": "books/v1/familysharing/getFamilyInfo",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.getFamilyInfo",
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/familysharing/getFamilyInfo"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameters": {
                "maxResults": {
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "location": "query",
                  "format": "uint32"
                },
                "showPreorders": {
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "userId": {
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)",
                  "type": "integer",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Volumes"
              },
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "httpMethod": "GET",
              "id": "books.bookshelves.volumes.list"
            }
          }
        }
      },
      "methods": {
        "get": {
          "id": "books.bookshelves.get",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "userId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves."
            },
            "shelf": {
              "description": "ID of bookshelf to retrieve.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Bookshelf"
          }
        },
        "list": {
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "userId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves."
            }
          },
          "id": "books.bookshelves.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "parameterOrder": [
            "userId"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "path": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          },
          "httpMethod": "GET"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "id": "books.notification.get",
          "flatPath": "books/v1/notification/get",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "type": "string"
            },
            "notification_id": {
              "location": "query",
              "description": "String to identify the notification.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Notification"
          },
          "description": "Returns notification details for a given notification id.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "path": "books/v1/notification/get",
          "parameterOrder": []
        }
      }
    },
    "promooffer": {
      "methods": {
        "accept": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "id": "books.promooffer.accept",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "description": "Accepts the promo offer.",
          "parameters": {
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "volumeId": {
              "location": "query",
              "description": "Volume id to exercise the offer",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "device": {
              "location": "query",
              "type": "string",
              "description": "device device"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            }
          },
          "flatPath": "books/v1/promooffer/accept",
          "path": "books/v1/promooffer/accept"
        },
        "get": {
          "parameterOrder": [],
          "parameters": {
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "model": {
              "type": "string",
              "description": "device model",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Offers"
          },
          "path": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.get",
          "flatPath": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user"
        },
        "dismiss": {
          "flatPath": "books/v1/promooffer/dismiss",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "description": "Marks the promo offer as dismissed.",
          "parameters": {
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "description": "Offer to dimiss",
              "type": "string"
            },
            "device": {
              "location": "query",
              "type": "string",
              "description": "device device"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "serial": {
              "location": "query",
              "description": "device serial",
              "type": "string"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            }
          },
          "parameterOrder": [],
          "path": "books/v1/promooffer/dismiss",
          "id": "books.promooffer.dismiss"
        }
      }
    },
    "series": {
      "methods": {
        "get": {
          "parameters": {
            "series_id": {
              "location": "query",
              "description": "String that identifies the series",
              "type": "string",
              "repeated": true
            }
          },
          "httpMethod": "GET",
          "description": "Returns Series metadata for the given series ids.",
          "path": "books/v1/series/get",
          "flatPath": "books/v1/series/get",
          "id": "books.series.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "Series"
          }
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "id": "books.series.membership.get",
              "response": {
                "$ref": "Seriesmembership"
              },
              "flatPath": "books/v1/series/membership/get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/series/membership/get",
              "description": "Returns Series membership data given the series id.",
              "parameters": {
                "page_token": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "series_id": {
                  "type": "string",
                  "location": "query",
                  "description": "String that identifies the series"
                },
                "page_size": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Number of maximum results per page to be included in the response."
                }
              },
              "parameterOrder": [],
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "parameterOrder": [],
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "books/v1/dictionary/listOfflineMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "response": {
            "$ref": "Metadata"
          },
          "description": "Returns a list of offline dictionary metadata available",
          "id": "books.dictionary.listOfflineMetadata",
          "httpMethod": "GET"
        }
      }
    }
  },
  "batchPath": "batch/books/v1"
}
