/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudasset.v1p7beta1;

/**
 * Service definition for CloudAsset (v1p7beta1).
 *
 * <p>
 * The cloud asset API manages the history and inventory of cloud resources.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/asset-inventory/docs/quickstart" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudAssetRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudAsset extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Cloud Asset API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudasset.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://cloudasset.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudAsset(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudAsset(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AssetUpdates collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudAsset cloudasset = new CloudAsset(...);}
   *   {@code CloudAsset.AssetUpdates.List request = cloudasset.assetUpdates().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AssetUpdates assetUpdates() {
    return new AssetUpdates();
  }

  /**
   * The "assetUpdates" collection of methods.
   */
  public class AssetUpdates {

    /**
     * Lists asset updates within a time window and returns paged results in response.
     *
     * Create a request for the method "assetUpdates.list".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Name of the organization or project the assets belong to. Format: "organizations
     *        /[organization-number]" (such as "organizations/123"), "projects/[project-number]" (such
     *        as "projects/my-project-id"), or "projects/[project-id]" (such as "projects/12345").
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ListAssetUpdatesResponse> {

      private static final String REST_PATH = "v1p7beta1/{+parent}/assetUpdates";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Lists asset updates within a time window and returns paged results in response.
       *
       * Create a request for the method "assetUpdates.list".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Name of the organization or project the assets belong to. Format: "organizations
     *        /[organization-number]" (such as "organizations/123"), "projects/[project-number]" (such
     *        as "projects/my-project-id"), or "projects/[project-id]" (such as "projects/12345").
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ListAssetUpdatesResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the organization or project the assets belong to. Format: "organizations
       * /[organization-number]" (such as "organizations/123"), "projects/[project-number]" (such as
       * "projects/my-project-id"), or "projects/[project-id]" (such as "projects/12345").
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the organization or project the assets belong to. Format: "organizations
     /[organization-number]" (such as "organizations/123"), "projects/[project-number]" (such as
     "projects/my-project-id"), or "projects/[project-id]" (such as "projects/12345").
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the organization or project the assets belong to. Format: "organizations
       * /[organization-number]" (such as "organizations/123"), "projects/[project-number]" (such as
       * "projects/my-project-id"), or "projects/[project-id]" (such as "projects/12345").
       */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /**
       * A list of the full names of the assets to list the updates for. See:
       * https://cloud.google.com/asset-inventory/docs/resource-name-format Example:
       * `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. If
       * specified, only assets in the list will be returned. At most one of asset_types and
       * asset_names should be specified. If neither is specified, all assets under the parent will
       * be returned.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> assetNames;

      /** A list of the full names of the assets to list the updates for. See: https://cloud.google.com
     /asset-inventory/docs/resource-name-format Example:
     `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. If specified,
     only assets in the list will be returned. At most one of asset_types and asset_names should be
     specified. If neither is specified, all assets under the parent will be returned.
       */
      public java.util.List<java.lang.String> getAssetNames() {
        return assetNames;
      }

      /**
       * A list of the full names of the assets to list the updates for. See:
       * https://cloud.google.com/asset-inventory/docs/resource-name-format Example:
       * `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. If
       * specified, only assets in the list will be returned. At most one of asset_types and
       * asset_names should be specified. If neither is specified, all assets under the parent will
       * be returned.
       */
      public List setAssetNames(java.util.List<java.lang.String> assetNames) {
        this.assetNames = assetNames;
        return this;
      }

      /**
       * A list of asset types to list the updates for. For example: "compute.googleapis.com/Disk".
       * Regular expression is also supported. For example: * "compute.googleapis.com.*" snapshots
       * resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots
       * resources whose asset type ends with "Instance". * ".*Instance.*" snapshots resources whose
       * asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for
       * all supported regular expression syntax. If the regular expression does not match any
       * supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only
       * matching assets will be returned. At most one of asset_types and asset_names should be
       * specified. If neither is specified, all assets under the parent will be returned.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> assetTypes;

      /** A list of asset types to list the updates for. For example: "compute.googleapis.com/Disk". Regular
     expression is also supported. For example: * "compute.googleapis.com.*" snapshots resources whose
     asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset
     type ends with "Instance". * ".*Instance.*" snapshots resources whose asset type contains
     "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular
     expression syntax. If the regular expression does not match any supported asset type, an
     INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned. At
     most one of asset_types and asset_names should be specified. If neither is specified, all assets
     under the parent will be returned.
       */
      public java.util.List<java.lang.String> getAssetTypes() {
        return assetTypes;
      }

      /**
       * A list of asset types to list the updates for. For example: "compute.googleapis.com/Disk".
       * Regular expression is also supported. For example: * "compute.googleapis.com.*" snapshots
       * resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots
       * resources whose asset type ends with "Instance". * ".*Instance.*" snapshots resources whose
       * asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for
       * all supported regular expression syntax. If the regular expression does not match any
       * supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only
       * matching assets will be returned. At most one of asset_types and asset_names should be
       * specified. If neither is specified, all assets under the parent will be returned.
       */
      public List setAssetTypes(java.util.List<java.lang.String> assetTypes) {
        this.assetTypes = assetTypes;
        return this;
      }

      /** Asset content type. If not specified, no content but the asset name will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String contentType;

      /** Asset content type. If not specified, no content but the asset name will be returned.
       */
      public java.lang.String getContentType() {
        return contentType;
      }

      /** Asset content type. If not specified, no content but the asset name will be returned. */
      public List setContentType(java.lang.String contentType) {
        this.contentType = contentType;
        return this;
      }

      /**
       * The maximum number of assets to be returned in a single response. Default is 100, minimum
       * is 1, and maximum is 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of assets to be returned in a single response. Default is 100, minimum is 1, and
     maximum is 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of assets to be returned in a single response. Default is 100, minimum
       * is 1, and maximum is 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * The `next_page_token` returned from the previous `ListAssetsResponse`, or unspecified for
       * the first `ListAssetsRequest`. It is a continuation of a prior `ListAssets` call, and the
       * API should return the next page of assets.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The `next_page_token` returned from the previous `ListAssetsResponse`, or unspecified for the first
     `ListAssetsRequest`. It is a continuation of a prior `ListAssets` call, and the API should return
     the next page of assets.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * The `next_page_token` returned from the previous `ListAssetsResponse`, or unspecified for
       * the first `ListAssetsRequest`. It is a continuation of a prior `ListAssets` call, and the
       * API should return the next page of assets.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * End time of the time window (inclusive). If not specified, the current timestamp is used
       * instead.
       */
      @com.google.api.client.util.Key("updateTimeWindow.timeWindow.endTime")
      private String updateTimeWindowTimeWindowEndTime;

      /** End time of the time window (inclusive). If not specified, the current timestamp is used instead.
       */
      public String getUpdateTimeWindowTimeWindowEndTime() {
        return updateTimeWindowTimeWindowEndTime;
      }

      /**
       * End time of the time window (inclusive). If not specified, the current timestamp is used
       * instead.
       */
      public List setUpdateTimeWindowTimeWindowEndTime(String updateTimeWindowTimeWindowEndTime) {
        this.updateTimeWindowTimeWindowEndTime = updateTimeWindowTimeWindowEndTime;
        return this;
      }

      /** Start time of the time window (exclusive). */
      @com.google.api.client.util.Key("updateTimeWindow.timeWindow.startTime")
      private String updateTimeWindowTimeWindowStartTime;

      /** Start time of the time window (exclusive).
       */
      public String getUpdateTimeWindowTimeWindowStartTime() {
        return updateTimeWindowTimeWindowStartTime;
      }

      /** Start time of the time window (exclusive). */
      public List setUpdateTimeWindowTimeWindowStartTime(String updateTimeWindowTimeWindowStartTime) {
        this.updateTimeWindowTimeWindowStartTime = updateTimeWindowTimeWindowStartTime;
        return this;
      }

      /** The type of the time in time_window. */
      @com.google.api.client.util.Key("updateTimeWindow.type")
      private java.lang.String updateTimeWindowType;

      /** The type of the time in time_window.
       */
      public java.lang.String getUpdateTimeWindowType() {
        return updateTimeWindowType;
      }

      /** The type of the time in time_window. */
      public List setUpdateTimeWindowType(java.lang.String updateTimeWindowType) {
        this.updateTimeWindowType = updateTimeWindowType;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudAsset cloudasset = new CloudAsset(...);}
   *   {@code CloudAsset.Folders.List request = cloudasset.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * Gets details about an inventory setting.
     *
     * Create a request for the method "folders.getInventorySettings".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link GetInventorySettings#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
     * @return the request
     */
    public GetInventorySettings getInventorySettings(java.lang.String name) throws java.io.IOException {
      GetInventorySettings result = new GetInventorySettings(name);
      initialize(result);
      return result;
    }

    public class GetInventorySettings extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings> {

      private static final String REST_PATH = "v1p7beta1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings$");

      /**
       * Gets details about an inventory setting.
       *
       * Create a request for the method "folders.getInventorySettings".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link GetInventorySettings#execute()} method to invoke the
       * remote operation. <p> {@link GetInventorySettings#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
       * @since 1.13
       */
      protected GetInventorySettings(java.lang.String name) {
        super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+/inventorySettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetInventorySettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetInventorySettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetInventorySettings setAccessToken(java.lang.String accessToken) {
        return (GetInventorySettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetInventorySettings setAlt(java.lang.String alt) {
        return (GetInventorySettings) super.setAlt(alt);
      }

      @Override
      public GetInventorySettings setCallback(java.lang.String callback) {
        return (GetInventorySettings) super.setCallback(callback);
      }

      @Override
      public GetInventorySettings setFields(java.lang.String fields) {
        return (GetInventorySettings) super.setFields(fields);
      }

      @Override
      public GetInventorySettings setKey(java.lang.String key) {
        return (GetInventorySettings) super.setKey(key);
      }

      @Override
      public GetInventorySettings setOauthToken(java.lang.String oauthToken) {
        return (GetInventorySettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetInventorySettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetInventorySettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetInventorySettings setQuotaUser(java.lang.String quotaUser) {
        return (GetInventorySettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetInventorySettings setUploadType(java.lang.String uploadType) {
        return (GetInventorySettings) super.setUploadType(uploadType);
      }

      @Override
      public GetInventorySettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetInventorySettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the [InventorySettings] which has the format of:
     projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public GetInventorySettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+/inventorySettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetInventorySettings set(String parameterName, Object value) {
        return (GetInventorySettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the InventorySettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudAsset cloudasset = new CloudAsset(...);}
     *   {@code CloudAsset.InventorySettings.List request = cloudasset.inventorySettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InventorySettings inventorySettings() {
      return new InventorySettings();
    }

    /**
     * The "inventorySettings" collection of methods.
     */
    public class InventorySettings {

      /**
       * An accessor for creating requests from the ExportSettings collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudAsset cloudasset = new CloudAsset(...);}
       *   {@code CloudAsset.ExportSettings.List request = cloudasset.exportSettings().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ExportSettings exportSettings() {
        return new ExportSettings();
      }

      /**
       * The "exportSettings" collection of methods.
       */
      public class ExportSettings {

        /**
         * Creates an export setting.
         *
         * Create a request for the method "exportSettings.create".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings$");

          /**
           * Creates an export setting.
           *
           * Create a request for the method "exportSettings.create".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) {
            super(CloudAsset.this, "POST", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the inventory settings where this export setting should be created in. The format
         will be: projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
         organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export setting can
         be created under each [InventorySettings].
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an export setting.
         *
         * Create a request for the method "exportSettings.delete".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.Empty> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Deletes an export setting.
           *
           * Create a request for the method "exportSettings.delete".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudAsset.this, "DELETE", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the export setting and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about an export setting.
         *
         * Create a request for the method "exportSettings.get".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Gets details about an export setting.
           *
           * Create a request for the method "exportSettings.get".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the [ExportSetting] and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all export settings under a [InventorySettings].
         *
         * Create a request for the method "exportSettings.list".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings$");

          /**
           * Lists all export settings under a [InventorySettings].
           *
           * Create a request for the method "exportSettings.list".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent [InventorySettings] whose export settings are to be listed.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of export settings to return. The service may return fewer than this value. If
         unspecified, at most 100 export settings will be returned. The maximum value is 100, as currently
         only a maximum of 100 export settings can be created under each parent.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListExportSettings` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListExportSettings` must match
         the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an export setting.
         *
         * Create a request for the method "exportSettings.patch".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Updates an export setting.
           *
           * Create a request for the method "exportSettings.patch".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) {
            super(CloudAsset.this, "PATCH", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The format will be:
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^folders/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Only updates the `export_setting` fields indicated by this mask. The field mask must not
         be empty, and it must not contain fields that are immutable or only set by the server.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudAsset cloudasset = new CloudAsset(...);}
   *   {@code CloudAsset.Organizations.List request = cloudasset.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * Gets details about an inventory setting.
     *
     * Create a request for the method "organizations.getInventorySettings".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link GetInventorySettings#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
     * @return the request
     */
    public GetInventorySettings getInventorySettings(java.lang.String name) throws java.io.IOException {
      GetInventorySettings result = new GetInventorySettings(name);
      initialize(result);
      return result;
    }

    public class GetInventorySettings extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings> {

      private static final String REST_PATH = "v1p7beta1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings$");

      /**
       * Gets details about an inventory setting.
       *
       * Create a request for the method "organizations.getInventorySettings".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link GetInventorySettings#execute()} method to invoke the
       * remote operation. <p> {@link GetInventorySettings#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
       * @since 1.13
       */
      protected GetInventorySettings(java.lang.String name) {
        super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/inventorySettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetInventorySettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetInventorySettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetInventorySettings setAccessToken(java.lang.String accessToken) {
        return (GetInventorySettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetInventorySettings setAlt(java.lang.String alt) {
        return (GetInventorySettings) super.setAlt(alt);
      }

      @Override
      public GetInventorySettings setCallback(java.lang.String callback) {
        return (GetInventorySettings) super.setCallback(callback);
      }

      @Override
      public GetInventorySettings setFields(java.lang.String fields) {
        return (GetInventorySettings) super.setFields(fields);
      }

      @Override
      public GetInventorySettings setKey(java.lang.String key) {
        return (GetInventorySettings) super.setKey(key);
      }

      @Override
      public GetInventorySettings setOauthToken(java.lang.String oauthToken) {
        return (GetInventorySettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetInventorySettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetInventorySettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetInventorySettings setQuotaUser(java.lang.String quotaUser) {
        return (GetInventorySettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetInventorySettings setUploadType(java.lang.String uploadType) {
        return (GetInventorySettings) super.setUploadType(uploadType);
      }

      @Override
      public GetInventorySettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetInventorySettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the [InventorySettings] which has the format of:
     projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public GetInventorySettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/inventorySettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetInventorySettings set(String parameterName, Object value) {
        return (GetInventorySettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the InventorySettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudAsset cloudasset = new CloudAsset(...);}
     *   {@code CloudAsset.InventorySettings.List request = cloudasset.inventorySettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InventorySettings inventorySettings() {
      return new InventorySettings();
    }

    /**
     * The "inventorySettings" collection of methods.
     */
    public class InventorySettings {

      /**
       * An accessor for creating requests from the ExportSettings collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudAsset cloudasset = new CloudAsset(...);}
       *   {@code CloudAsset.ExportSettings.List request = cloudasset.exportSettings().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ExportSettings exportSettings() {
        return new ExportSettings();
      }

      /**
       * The "exportSettings" collection of methods.
       */
      public class ExportSettings {

        /**
         * Creates an export setting.
         *
         * Create a request for the method "exportSettings.create".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings$");

          /**
           * Creates an export setting.
           *
           * Create a request for the method "exportSettings.create".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) {
            super(CloudAsset.this, "POST", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the inventory settings where this export setting should be created in. The format
         will be: projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
         organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export setting can
         be created under each [InventorySettings].
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an export setting.
         *
         * Create a request for the method "exportSettings.delete".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.Empty> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Deletes an export setting.
           *
           * Create a request for the method "exportSettings.delete".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudAsset.this, "DELETE", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the export setting and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about an export setting.
         *
         * Create a request for the method "exportSettings.get".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Gets details about an export setting.
           *
           * Create a request for the method "exportSettings.get".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the [ExportSetting] and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all export settings under a [InventorySettings].
         *
         * Create a request for the method "exportSettings.list".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings$");

          /**
           * Lists all export settings under a [InventorySettings].
           *
           * Create a request for the method "exportSettings.list".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent [InventorySettings] whose export settings are to be listed.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of export settings to return. The service may return fewer than this value. If
         unspecified, at most 100 export settings will be returned. The maximum value is 100, as currently
         only a maximum of 100 export settings can be created under each parent.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListExportSettings` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListExportSettings` must match
         the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an export setting.
         *
         * Create a request for the method "exportSettings.patch".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Updates an export setting.
           *
           * Create a request for the method "exportSettings.patch".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) {
            super(CloudAsset.this, "PATCH", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The format will be:
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Only updates the `export_setting` fields indicated by this mask. The field mask must not
         be empty, and it must not contain fields that are immutable or only set by the server.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudAsset cloudasset = new CloudAsset(...);}
   *   {@code CloudAsset.Projects.List request = cloudasset.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Gets details about an inventory setting.
     *
     * Create a request for the method "projects.getInventorySettings".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link GetInventorySettings#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
     * @return the request
     */
    public GetInventorySettings getInventorySettings(java.lang.String name) throws java.io.IOException {
      GetInventorySettings result = new GetInventorySettings(name);
      initialize(result);
      return result;
    }

    public class GetInventorySettings extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings> {

      private static final String REST_PATH = "v1p7beta1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings$");

      /**
       * Gets details about an inventory setting.
       *
       * Create a request for the method "projects.getInventorySettings".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link GetInventorySettings#execute()} method to invoke the
       * remote operation. <p> {@link GetInventorySettings#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the [InventorySettings] which has the format of:
     *        projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     *        organizations/{ORGANIZATION_NUMBER}/inventorySettings
       * @since 1.13
       */
      protected GetInventorySettings(java.lang.String name) {
        super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.InventorySettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/inventorySettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetInventorySettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetInventorySettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetInventorySettings setAccessToken(java.lang.String accessToken) {
        return (GetInventorySettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetInventorySettings setAlt(java.lang.String alt) {
        return (GetInventorySettings) super.setAlt(alt);
      }

      @Override
      public GetInventorySettings setCallback(java.lang.String callback) {
        return (GetInventorySettings) super.setCallback(callback);
      }

      @Override
      public GetInventorySettings setFields(java.lang.String fields) {
        return (GetInventorySettings) super.setFields(fields);
      }

      @Override
      public GetInventorySettings setKey(java.lang.String key) {
        return (GetInventorySettings) super.setKey(key);
      }

      @Override
      public GetInventorySettings setOauthToken(java.lang.String oauthToken) {
        return (GetInventorySettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetInventorySettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetInventorySettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetInventorySettings setQuotaUser(java.lang.String quotaUser) {
        return (GetInventorySettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetInventorySettings setUploadType(java.lang.String uploadType) {
        return (GetInventorySettings) super.setUploadType(uploadType);
      }

      @Override
      public GetInventorySettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetInventorySettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the [InventorySettings] which has the format of:
     projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
     organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the [InventorySettings] which has the format of:
       * projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
       * organizations/{ORGANIZATION_NUMBER}/inventorySettings
       */
      public GetInventorySettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^projects/[^/]+/inventorySettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetInventorySettings set(String parameterName, Object value) {
        return (GetInventorySettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the InventorySettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudAsset cloudasset = new CloudAsset(...);}
     *   {@code CloudAsset.InventorySettings.List request = cloudasset.inventorySettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public InventorySettings inventorySettings() {
      return new InventorySettings();
    }

    /**
     * The "inventorySettings" collection of methods.
     */
    public class InventorySettings {

      /**
       * An accessor for creating requests from the ExportSettings collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudAsset cloudasset = new CloudAsset(...);}
       *   {@code CloudAsset.ExportSettings.List request = cloudasset.exportSettings().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ExportSettings exportSettings() {
        return new ExportSettings();
      }

      /**
       * The "exportSettings" collection of methods.
       */
      public class ExportSettings {

        /**
         * Creates an export setting.
         *
         * Create a request for the method "exportSettings.create".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings$");

          /**
           * Creates an export setting.
           *
           * Create a request for the method "exportSettings.create".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the inventory settings where this export setting should be created in. The format
         *        will be: projects/{PROJECT_NUMBER}/inventorySettings
         *        folders/{FOLDER_NUMBER}/inventorySettings
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
         *        setting can be created under each [InventorySettings].
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.CreateExportSettingRequest content) {
            super(CloudAsset.this, "POST", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the inventory settings where this export setting should be created in. The format
         will be: projects/{PROJECT_NUMBER}/inventorySettings folders/{FOLDER_NUMBER}/inventorySettings
         organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export setting can
         be created under each [InventorySettings].
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the inventory settings where this export setting should be created
           * in. The format will be: projects/{PROJECT_NUMBER}/inventorySettings
           * folders/{FOLDER_NUMBER}/inventorySettings
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings Currently a maximum of 100 export
           * setting can be created under each [InventorySettings].
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an export setting.
         *
         * Create a request for the method "exportSettings.delete".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.Empty> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Deletes an export setting.
           *
           * Create a request for the method "exportSettings.delete".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the export setting and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudAsset.this, "DELETE", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the export setting and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the export setting and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details about an export setting.
         *
         * Create a request for the method "exportSettings.get".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Gets details about an export setting.
           *
           * Create a request for the method "exportSettings.get".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the [ExportSetting] and it must be in the format of:
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the [ExportSetting] and it must be in the format of:
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the [ExportSetting] and it must be in the format of:
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID} organizati
           * ons/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{EXPORT_SETTING_ID}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all export settings under a [InventorySettings].
         *
         * Create a request for the method "exportSettings.list".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse> {

          private static final String REST_PATH = "v1p7beta1/{+parent}/exportSettings";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings$");

          /**
           * Lists all export settings under a [InventorySettings].
           *
           * Create a request for the method "exportSettings.list".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent [InventorySettings] whose export settings are to be listed.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudAsset.this, "GET", REST_PATH, null, com.google.api.services.cloudasset.v1p7beta1.model.ListExportSettingsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent [InventorySettings] whose export settings are to be listed.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent [InventorySettings] whose export settings are to be listed. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of export settings to return. The service may return fewer than this value. If
         unspecified, at most 100 export settings will be returned. The maximum value is 100, as currently
         only a maximum of 100 export settings can be created under each parent.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of export settings to return. The service may return fewer than this
           * value. If unspecified, at most 100 export settings will be returned. The maximum value
           * is 100, as currently only a maximum of 100 export settings can be created under each
           * parent.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListExportSettings` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListExportSettings` must match
         the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListExportSettings` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListExportSettings` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an export setting.
         *
         * Create a request for the method "exportSettings.patch".
         *
         * This request holds the parameters needed by the cloudasset server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
         * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting> {

          private static final String REST_PATH = "v1p7beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");

          /**
           * Updates an export setting.
           *
           * Create a request for the method "exportSettings.patch".
           *
           * This request holds the parameters needed by the the cloudasset server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The format will be:
         *        organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         *        projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting content) {
            super(CloudAsset.this, "PATCH", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.ExportSetting.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The format will be:
         organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
         projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The format will be:
           * organizations/{ORGANIZATION_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * folders/{FOLDER_NUMBER}/inventorySettings/exportSettings/{exportSetting} or
           * projects/{PROJECT_NUMBER}/inventorySettings/exportSettings/{exportSetting}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/inventorySettings/exportSettings/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Only updates the `export_setting` fields indicated by this mask. The field mask must not
         be empty, and it must not contain fields that are immutable or only set by the server.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Only updates the `export_setting` fields indicated by this mask. The field
           * mask must not be empty, and it must not contain fields that are immutable or only set
           * by the server.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the V1p7beta1 collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudAsset cloudasset = new CloudAsset(...);}
   *   {@code CloudAsset.V1p7beta1.List request = cloudasset.v1p7beta1().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public V1p7beta1 v1p7beta1() {
    return new V1p7beta1();
  }

  /**
   * The "v1p7beta1" collection of methods.
   */
  public class V1p7beta1 {

    /**
     * Exports asset updates within a time window to a given Cloud Storage location/BigQuery table. For
     * Cloud Storage location destinations, the output format is newline-delimited JSON. Each line
     * represents a google.cloud.asset.v1p7beta1.Asset in the JSON format; for BigQuery table
     * destinations, the output table stores the fields in asset proto as columns. This API implements
     * the google.longrunning.Operation API , which allows you to keep track of the export. We recommend
     * intervals of at least 2 seconds with exponential retry to poll the export operation result. For
     * regular-size resource parent, the export operation usually finishes within 5 minutes.
     *
     * Create a request for the method "v1p7beta1.exportAssetUpdates".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link ExportAssetUpdates#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The relative name of the root asset. This can only be an organization number (such as
     *        "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number
     *        (such as "projects/12345"), or a folder number (such as "folders/123").
     * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetUpdatesRequest}
     * @return the request
     */
    public ExportAssetUpdates exportAssetUpdates(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetUpdatesRequest content) throws java.io.IOException {
      ExportAssetUpdates result = new ExportAssetUpdates(parent, content);
      initialize(result);
      return result;
    }

    public class ExportAssetUpdates extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.Operation> {

      private static final String REST_PATH = "v1p7beta1/{+parent}:exportAssetUpdates";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Exports asset updates within a time window to a given Cloud Storage location/BigQuery table.
       * For Cloud Storage location destinations, the output format is newline-delimited JSON. Each line
       * represents a google.cloud.asset.v1p7beta1.Asset in the JSON format; for BigQuery table
       * destinations, the output table stores the fields in asset proto as columns. This API implements
       * the google.longrunning.Operation API , which allows you to keep track of the export. We
       * recommend intervals of at least 2 seconds with exponential retry to poll the export operation
       * result. For regular-size resource parent, the export operation usually finishes within 5
       * minutes.
       *
       * Create a request for the method "v1p7beta1.exportAssetUpdates".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link ExportAssetUpdates#execute()} method to invoke the remote
       * operation. <p> {@link ExportAssetUpdates#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param parent Required. The relative name of the root asset. This can only be an organization number (such as
     *        "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number
     *        (such as "projects/12345"), or a folder number (such as "folders/123").
       * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetUpdatesRequest}
       * @since 1.13
       */
      protected ExportAssetUpdates(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetUpdatesRequest content) {
        super(CloudAsset.this, "POST", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public ExportAssetUpdates set$Xgafv(java.lang.String $Xgafv) {
        return (ExportAssetUpdates) super.set$Xgafv($Xgafv);
      }

      @Override
      public ExportAssetUpdates setAccessToken(java.lang.String accessToken) {
        return (ExportAssetUpdates) super.setAccessToken(accessToken);
      }

      @Override
      public ExportAssetUpdates setAlt(java.lang.String alt) {
        return (ExportAssetUpdates) super.setAlt(alt);
      }

      @Override
      public ExportAssetUpdates setCallback(java.lang.String callback) {
        return (ExportAssetUpdates) super.setCallback(callback);
      }

      @Override
      public ExportAssetUpdates setFields(java.lang.String fields) {
        return (ExportAssetUpdates) super.setFields(fields);
      }

      @Override
      public ExportAssetUpdates setKey(java.lang.String key) {
        return (ExportAssetUpdates) super.setKey(key);
      }

      @Override
      public ExportAssetUpdates setOauthToken(java.lang.String oauthToken) {
        return (ExportAssetUpdates) super.setOauthToken(oauthToken);
      }

      @Override
      public ExportAssetUpdates setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ExportAssetUpdates) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ExportAssetUpdates setQuotaUser(java.lang.String quotaUser) {
        return (ExportAssetUpdates) super.setQuotaUser(quotaUser);
      }

      @Override
      public ExportAssetUpdates setUploadType(java.lang.String uploadType) {
        return (ExportAssetUpdates) super.setUploadType(uploadType);
      }

      @Override
      public ExportAssetUpdates setUploadProtocol(java.lang.String uploadProtocol) {
        return (ExportAssetUpdates) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The relative name of the root asset. This can only be an organization number
       * (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
       * project number (such as "projects/12345"), or a folder number (such as "folders/123").
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The relative name of the root asset. This can only be an organization number (such as
     "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number (such as
     "projects/12345"), or a folder number (such as "folders/123").
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The relative name of the root asset. This can only be an organization number
       * (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
       * project number (such as "projects/12345"), or a folder number (such as "folders/123").
       */
      public ExportAssetUpdates setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public ExportAssetUpdates set(String parameterName, Object value) {
        return (ExportAssetUpdates) super.set(parameterName, value);
      }
    }
    /**
     * Exports assets with time and resource types to a given Cloud Storage location/BigQuery table. For
     * Cloud Storage location destinations, the output format is newline-delimited JSON. Each line
     * represents a google.cloud.asset.v1p7beta1.Asset in the JSON format; for BigQuery table
     * destinations, the output table stores the fields in asset proto as columns. This API implements
     * the google.longrunning.Operation API , which allows you to keep track of the export. We recommend
     * intervals of at least 2 seconds with exponential retry to poll the export operation result. For
     * regular-size resource parent, the export operation usually finishes within 5 minutes.
     *
     * Create a request for the method "v1p7beta1.exportAssets".
     *
     * This request holds the parameters needed by the cloudasset server.  After setting any optional
     * parameters, call the {@link ExportAssets#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The relative name of the root asset. This can only be an organization number (such as
     *        "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number
     *        (such as "projects/12345"), or a folder number (such as "folders/123").
     * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetsRequest}
     * @return the request
     */
    public ExportAssets exportAssets(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetsRequest content) throws java.io.IOException {
      ExportAssets result = new ExportAssets(parent, content);
      initialize(result);
      return result;
    }

    public class ExportAssets extends CloudAssetRequest<com.google.api.services.cloudasset.v1p7beta1.model.Operation> {

      private static final String REST_PATH = "v1p7beta1/{+parent}:exportAssets";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Exports assets with time and resource types to a given Cloud Storage location/BigQuery table.
       * For Cloud Storage location destinations, the output format is newline-delimited JSON. Each line
       * represents a google.cloud.asset.v1p7beta1.Asset in the JSON format; for BigQuery table
       * destinations, the output table stores the fields in asset proto as columns. This API implements
       * the google.longrunning.Operation API , which allows you to keep track of the export. We
       * recommend intervals of at least 2 seconds with exponential retry to poll the export operation
       * result. For regular-size resource parent, the export operation usually finishes within 5
       * minutes.
       *
       * Create a request for the method "v1p7beta1.exportAssets".
       *
       * This request holds the parameters needed by the the cloudasset server.  After setting any
       * optional parameters, call the {@link ExportAssets#execute()} method to invoke the remote
       * operation. <p> {@link
       * ExportAssets#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. The relative name of the root asset. This can only be an organization number (such as
     *        "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number
     *        (such as "projects/12345"), or a folder number (such as "folders/123").
       * @param content the {@link com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetsRequest}
       * @since 1.13
       */
      protected ExportAssets(java.lang.String parent, com.google.api.services.cloudasset.v1p7beta1.model.ExportAssetsRequest content) {
        super(CloudAsset.this, "POST", REST_PATH, content, com.google.api.services.cloudasset.v1p7beta1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public ExportAssets set$Xgafv(java.lang.String $Xgafv) {
        return (ExportAssets) super.set$Xgafv($Xgafv);
      }

      @Override
      public ExportAssets setAccessToken(java.lang.String accessToken) {
        return (ExportAssets) super.setAccessToken(accessToken);
      }

      @Override
      public ExportAssets setAlt(java.lang.String alt) {
        return (ExportAssets) super.setAlt(alt);
      }

      @Override
      public ExportAssets setCallback(java.lang.String callback) {
        return (ExportAssets) super.setCallback(callback);
      }

      @Override
      public ExportAssets setFields(java.lang.String fields) {
        return (ExportAssets) super.setFields(fields);
      }

      @Override
      public ExportAssets setKey(java.lang.String key) {
        return (ExportAssets) super.setKey(key);
      }

      @Override
      public ExportAssets setOauthToken(java.lang.String oauthToken) {
        return (ExportAssets) super.setOauthToken(oauthToken);
      }

      @Override
      public ExportAssets setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ExportAssets) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ExportAssets setQuotaUser(java.lang.String quotaUser) {
        return (ExportAssets) super.setQuotaUser(quotaUser);
      }

      @Override
      public ExportAssets setUploadType(java.lang.String uploadType) {
        return (ExportAssets) super.setUploadType(uploadType);
      }

      @Override
      public ExportAssets setUploadProtocol(java.lang.String uploadProtocol) {
        return (ExportAssets) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The relative name of the root asset. This can only be an organization number
       * (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
       * project number (such as "projects/12345"), or a folder number (such as "folders/123").
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The relative name of the root asset. This can only be an organization number (such as
     "organizations/123"), a project ID (such as "projects/my-project-id"), or a project number (such as
     "projects/12345"), or a folder number (such as "folders/123").
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The relative name of the root asset. This can only be an organization number
       * (such as "organizations/123"), a project ID (such as "projects/my-project-id"), or a
       * project number (such as "projects/12345"), or a folder number (such as "folders/123").
       */
      public ExportAssets setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public ExportAssets set(String parameterName, Object value) {
        return (ExportAssets) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link CloudAsset}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudAsset}. */
    @Override
    public CloudAsset build() {
      return new CloudAsset(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudAssetRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudAssetRequestInitializer(
        CloudAssetRequestInitializer cloudassetRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudassetRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
