/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Widget contains a single dashboard component and configuration of how to present the component in
 * the dashboard.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Widget extends com.google.api.client.json.GenericJson {

  /**
   * A chart of alert policy data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AlertChart alertChart;

  /**
   * A blank space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Empty blank;

  /**
   * A widget that groups the other widgets. All widgets that are within the area spanned by the
   * grouping widget are considered member widgets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CollapsibleGroup collapsibleGroup;

  /**
   * A widget that displays a list of error groups.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ErrorReportingPanel errorReportingPanel;

  /**
   * Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget
   * ids are optional.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * A widget that shows list of incidents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IncidentList incidentList;

  /**
   * A widget that shows a stream of logs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LogsPanel logsPanel;

  /**
   * A widget that displays timeseries data as a pie chart.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PieChart pieChart;

  /**
   * A scorecard summarizing time series data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Scorecard scorecard;

  /**
   * A widget that defines a section header for easier navigation of the dashboard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SectionHeader sectionHeader;

  /**
   * A widget that groups the other widgets by using a dropdown menu.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SingleViewGroup singleViewGroup;

  /**
   * A raw string or markdown displaying textual content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Text text;

  /**
   * A widget that displays time series data in a tabular format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeSeriesTable timeSeriesTable;

  /**
   * Optional. The title of the widget.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Optional. If set, this widget is rendered only when the condition is evaluated to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VisibilityCondition visibilityCondition;

  /**
   * A chart of time series data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XyChart xyChart;

  /**
   * A chart of alert policy data.
   * @return value or {@code null} for none
   */
  public AlertChart getAlertChart() {
    return alertChart;
  }

  /**
   * A chart of alert policy data.
   * @param alertChart alertChart or {@code null} for none
   */
  public Widget setAlertChart(AlertChart alertChart) {
    this.alertChart = alertChart;
    return this;
  }

  /**
   * A blank space.
   * @return value or {@code null} for none
   */
  public Empty getBlank() {
    return blank;
  }

  /**
   * A blank space.
   * @param blank blank or {@code null} for none
   */
  public Widget setBlank(Empty blank) {
    this.blank = blank;
    return this;
  }

  /**
   * A widget that groups the other widgets. All widgets that are within the area spanned by the
   * grouping widget are considered member widgets.
   * @return value or {@code null} for none
   */
  public CollapsibleGroup getCollapsibleGroup() {
    return collapsibleGroup;
  }

  /**
   * A widget that groups the other widgets. All widgets that are within the area spanned by the
   * grouping widget are considered member widgets.
   * @param collapsibleGroup collapsibleGroup or {@code null} for none
   */
  public Widget setCollapsibleGroup(CollapsibleGroup collapsibleGroup) {
    this.collapsibleGroup = collapsibleGroup;
    return this;
  }

  /**
   * A widget that displays a list of error groups.
   * @return value or {@code null} for none
   */
  public ErrorReportingPanel getErrorReportingPanel() {
    return errorReportingPanel;
  }

  /**
   * A widget that displays a list of error groups.
   * @param errorReportingPanel errorReportingPanel or {@code null} for none
   */
  public Widget setErrorReportingPanel(ErrorReportingPanel errorReportingPanel) {
    this.errorReportingPanel = errorReportingPanel;
    return this;
  }

  /**
   * Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget
   * ids are optional.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget
   * ids are optional.
   * @param id id or {@code null} for none
   */
  public Widget setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * A widget that shows list of incidents.
   * @return value or {@code null} for none
   */
  public IncidentList getIncidentList() {
    return incidentList;
  }

  /**
   * A widget that shows list of incidents.
   * @param incidentList incidentList or {@code null} for none
   */
  public Widget setIncidentList(IncidentList incidentList) {
    this.incidentList = incidentList;
    return this;
  }

  /**
   * A widget that shows a stream of logs.
   * @return value or {@code null} for none
   */
  public LogsPanel getLogsPanel() {
    return logsPanel;
  }

  /**
   * A widget that shows a stream of logs.
   * @param logsPanel logsPanel or {@code null} for none
   */
  public Widget setLogsPanel(LogsPanel logsPanel) {
    this.logsPanel = logsPanel;
    return this;
  }

  /**
   * A widget that displays timeseries data as a pie chart.
   * @return value or {@code null} for none
   */
  public PieChart getPieChart() {
    return pieChart;
  }

  /**
   * A widget that displays timeseries data as a pie chart.
   * @param pieChart pieChart or {@code null} for none
   */
  public Widget setPieChart(PieChart pieChart) {
    this.pieChart = pieChart;
    return this;
  }

  /**
   * A scorecard summarizing time series data.
   * @return value or {@code null} for none
   */
  public Scorecard getScorecard() {
    return scorecard;
  }

  /**
   * A scorecard summarizing time series data.
   * @param scorecard scorecard or {@code null} for none
   */
  public Widget setScorecard(Scorecard scorecard) {
    this.scorecard = scorecard;
    return this;
  }

  /**
   * A widget that defines a section header for easier navigation of the dashboard.
   * @return value or {@code null} for none
   */
  public SectionHeader getSectionHeader() {
    return sectionHeader;
  }

  /**
   * A widget that defines a section header for easier navigation of the dashboard.
   * @param sectionHeader sectionHeader or {@code null} for none
   */
  public Widget setSectionHeader(SectionHeader sectionHeader) {
    this.sectionHeader = sectionHeader;
    return this;
  }

  /**
   * A widget that groups the other widgets by using a dropdown menu.
   * @return value or {@code null} for none
   */
  public SingleViewGroup getSingleViewGroup() {
    return singleViewGroup;
  }

  /**
   * A widget that groups the other widgets by using a dropdown menu.
   * @param singleViewGroup singleViewGroup or {@code null} for none
   */
  public Widget setSingleViewGroup(SingleViewGroup singleViewGroup) {
    this.singleViewGroup = singleViewGroup;
    return this;
  }

  /**
   * A raw string or markdown displaying textual content.
   * @return value or {@code null} for none
   */
  public Text getText() {
    return text;
  }

  /**
   * A raw string or markdown displaying textual content.
   * @param text text or {@code null} for none
   */
  public Widget setText(Text text) {
    this.text = text;
    return this;
  }

  /**
   * A widget that displays time series data in a tabular format.
   * @return value or {@code null} for none
   */
  public TimeSeriesTable getTimeSeriesTable() {
    return timeSeriesTable;
  }

  /**
   * A widget that displays time series data in a tabular format.
   * @param timeSeriesTable timeSeriesTable or {@code null} for none
   */
  public Widget setTimeSeriesTable(TimeSeriesTable timeSeriesTable) {
    this.timeSeriesTable = timeSeriesTable;
    return this;
  }

  /**
   * Optional. The title of the widget.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Optional. The title of the widget.
   * @param title title or {@code null} for none
   */
  public Widget setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Optional. If set, this widget is rendered only when the condition is evaluated to true.
   * @return value or {@code null} for none
   */
  public VisibilityCondition getVisibilityCondition() {
    return visibilityCondition;
  }

  /**
   * Optional. If set, this widget is rendered only when the condition is evaluated to true.
   * @param visibilityCondition visibilityCondition or {@code null} for none
   */
  public Widget setVisibilityCondition(VisibilityCondition visibilityCondition) {
    this.visibilityCondition = visibilityCondition;
    return this;
  }

  /**
   * A chart of time series data.
   * @return value or {@code null} for none
   */
  public XyChart getXyChart() {
    return xyChart;
  }

  /**
   * A chart of time series data.
   * @param xyChart xyChart or {@code null} for none
   */
  public Widget setXyChart(XyChart xyChart) {
    this.xyChart = xyChart;
    return this;
  }

  @Override
  public Widget set(String fieldName, Object value) {
    return (Widget) super.set(fieldName, value);
  }

  @Override
  public Widget clone() {
    return (Widget) super.clone();
  }

}
