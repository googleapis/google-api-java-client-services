/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.content;

/**
 * Service definition for ShoppingContent (v2sandbox).
 *
 * <p>
 * Manages product items, inventory, and Merchant Center accounts for Google Shopping.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/shopping-content" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ShoppingContentRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ShoppingContent extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.26.0-SNAPSHOT of the Content API for Shopping library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "content/v2sandbox/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/content/v2sandbox";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ShoppingContent(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ShoppingContent(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Orderinvoices collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Orderinvoices.List request = content.orderinvoices().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Orderinvoices orderinvoices() {
    return new Orderinvoices();
  }

  /**
   * The "orderinvoices" collection of methods.
   */
  public class Orderinvoices {

    /**
     * Creates a charge invoice for a shipment group, and triggers a charge capture for non-facilitated
     * payment orders.
     *
     * Create a request for the method "orderinvoices.createchargeinvoice".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Createchargeinvoice#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrderinvoicesCreateChargeInvoiceRequest}
     * @return the request
     */
    public Createchargeinvoice createchargeinvoice(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderinvoicesCreateChargeInvoiceRequest content) throws java.io.IOException {
      Createchargeinvoice result = new Createchargeinvoice(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Createchargeinvoice extends ShoppingContentRequest<com.google.content.model.OrderinvoicesCreateChargeInvoiceResponse> {

      private static final String REST_PATH = "{merchantId}/orderinvoices/{orderId}/createChargeInvoice";

      /**
       * Creates a charge invoice for a shipment group, and triggers a charge capture for non-
       * facilitated payment orders.
       *
       * Create a request for the method "orderinvoices.createchargeinvoice".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Createchargeinvoice#execute()} method to invoke the remote
       * operation. <p> {@link Createchargeinvoice#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrderinvoicesCreateChargeInvoiceRequest}
       * @since 1.13
       */
      protected Createchargeinvoice(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderinvoicesCreateChargeInvoiceRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderinvoicesCreateChargeInvoiceResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Createchargeinvoice setAlt(java.lang.String alt) {
        return (Createchargeinvoice) super.setAlt(alt);
      }

      @Override
      public Createchargeinvoice setFields(java.lang.String fields) {
        return (Createchargeinvoice) super.setFields(fields);
      }

      @Override
      public Createchargeinvoice setKey(java.lang.String key) {
        return (Createchargeinvoice) super.setKey(key);
      }

      @Override
      public Createchargeinvoice setOauthToken(java.lang.String oauthToken) {
        return (Createchargeinvoice) super.setOauthToken(oauthToken);
      }

      @Override
      public Createchargeinvoice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Createchargeinvoice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Createchargeinvoice setQuotaUser(java.lang.String quotaUser) {
        return (Createchargeinvoice) super.setQuotaUser(quotaUser);
      }

      @Override
      public Createchargeinvoice setUserIp(java.lang.String userIp) {
        return (Createchargeinvoice) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Createchargeinvoice setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Createchargeinvoice setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Createchargeinvoice set(String parameterName, Object value) {
        return (Createchargeinvoice) super.set(parameterName, value);
      }
    }
    /**
     * Creates a refund invoice for one or more shipment groups, and triggers a refund for non-
     * facilitated payment orders. This can only be used for line items that have previously been
     * charged using createChargeInvoice. All amounts (except for the summary) are incremental with
     * respect to the previous invoice.
     *
     * Create a request for the method "orderinvoices.createrefundinvoice".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Createrefundinvoice#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrderinvoicesCreateRefundInvoiceRequest}
     * @return the request
     */
    public Createrefundinvoice createrefundinvoice(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderinvoicesCreateRefundInvoiceRequest content) throws java.io.IOException {
      Createrefundinvoice result = new Createrefundinvoice(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Createrefundinvoice extends ShoppingContentRequest<com.google.content.model.OrderinvoicesCreateRefundInvoiceResponse> {

      private static final String REST_PATH = "{merchantId}/orderinvoices/{orderId}/createRefundInvoice";

      /**
       * Creates a refund invoice for one or more shipment groups, and triggers a refund for non-
       * facilitated payment orders. This can only be used for line items that have previously been
       * charged using createChargeInvoice. All amounts (except for the summary) are incremental with
       * respect to the previous invoice.
       *
       * Create a request for the method "orderinvoices.createrefundinvoice".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Createrefundinvoice#execute()} method to invoke the remote
       * operation. <p> {@link Createrefundinvoice#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrderinvoicesCreateRefundInvoiceRequest}
       * @since 1.13
       */
      protected Createrefundinvoice(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderinvoicesCreateRefundInvoiceRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderinvoicesCreateRefundInvoiceResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Createrefundinvoice setAlt(java.lang.String alt) {
        return (Createrefundinvoice) super.setAlt(alt);
      }

      @Override
      public Createrefundinvoice setFields(java.lang.String fields) {
        return (Createrefundinvoice) super.setFields(fields);
      }

      @Override
      public Createrefundinvoice setKey(java.lang.String key) {
        return (Createrefundinvoice) super.setKey(key);
      }

      @Override
      public Createrefundinvoice setOauthToken(java.lang.String oauthToken) {
        return (Createrefundinvoice) super.setOauthToken(oauthToken);
      }

      @Override
      public Createrefundinvoice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Createrefundinvoice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Createrefundinvoice setQuotaUser(java.lang.String quotaUser) {
        return (Createrefundinvoice) super.setQuotaUser(quotaUser);
      }

      @Override
      public Createrefundinvoice setUserIp(java.lang.String userIp) {
        return (Createrefundinvoice) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Createrefundinvoice setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Createrefundinvoice setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Createrefundinvoice set(String parameterName, Object value) {
        return (Createrefundinvoice) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Orderpayments collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Orderpayments.List request = content.orderpayments().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Orderpayments orderpayments() {
    return new Orderpayments();
  }

  /**
   * The "orderpayments" collection of methods.
   */
  public class Orderpayments {

    /**
     * Notify about successfully authorizing user's payment method for a given amount.
     *
     * Create a request for the method "orderpayments.notifyauthapproved".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Notifyauthapproved#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order for for which payment authorization is happening.
     * @param content the {@link com.google.content.model.OrderpaymentsNotifyAuthApprovedRequest}
     * @return the request
     */
    public Notifyauthapproved notifyauthapproved(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyAuthApprovedRequest content) throws java.io.IOException {
      Notifyauthapproved result = new Notifyauthapproved(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Notifyauthapproved extends ShoppingContentRequest<com.google.content.model.OrderpaymentsNotifyAuthApprovedResponse> {

      private static final String REST_PATH = "{merchantId}/orderpayments/{orderId}/notifyAuthApproved";

      /**
       * Notify about successfully authorizing user's payment method for a given amount.
       *
       * Create a request for the method "orderpayments.notifyauthapproved".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Notifyauthapproved#execute()} method to invoke the remote
       * operation. <p> {@link Notifyauthapproved#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order for for which payment authorization is happening.
       * @param content the {@link com.google.content.model.OrderpaymentsNotifyAuthApprovedRequest}
       * @since 1.13
       */
      protected Notifyauthapproved(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyAuthApprovedRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderpaymentsNotifyAuthApprovedResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Notifyauthapproved setAlt(java.lang.String alt) {
        return (Notifyauthapproved) super.setAlt(alt);
      }

      @Override
      public Notifyauthapproved setFields(java.lang.String fields) {
        return (Notifyauthapproved) super.setFields(fields);
      }

      @Override
      public Notifyauthapproved setKey(java.lang.String key) {
        return (Notifyauthapproved) super.setKey(key);
      }

      @Override
      public Notifyauthapproved setOauthToken(java.lang.String oauthToken) {
        return (Notifyauthapproved) super.setOauthToken(oauthToken);
      }

      @Override
      public Notifyauthapproved setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Notifyauthapproved) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Notifyauthapproved setQuotaUser(java.lang.String quotaUser) {
        return (Notifyauthapproved) super.setQuotaUser(quotaUser);
      }

      @Override
      public Notifyauthapproved setUserIp(java.lang.String userIp) {
        return (Notifyauthapproved) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Notifyauthapproved setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order for for which payment authorization is happening. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order for for which payment authorization is happening.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order for for which payment authorization is happening. */
      public Notifyauthapproved setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Notifyauthapproved set(String parameterName, Object value) {
        return (Notifyauthapproved) super.set(parameterName, value);
      }
    }
    /**
     * Notify about failure to authorize user's payment method.
     *
     * Create a request for the method "orderpayments.notifyauthdeclined".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Notifyauthdeclined#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order for which payment authorization was declined.
     * @param content the {@link com.google.content.model.OrderpaymentsNotifyAuthDeclinedRequest}
     * @return the request
     */
    public Notifyauthdeclined notifyauthdeclined(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyAuthDeclinedRequest content) throws java.io.IOException {
      Notifyauthdeclined result = new Notifyauthdeclined(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Notifyauthdeclined extends ShoppingContentRequest<com.google.content.model.OrderpaymentsNotifyAuthDeclinedResponse> {

      private static final String REST_PATH = "{merchantId}/orderpayments/{orderId}/notifyAuthDeclined";

      /**
       * Notify about failure to authorize user's payment method.
       *
       * Create a request for the method "orderpayments.notifyauthdeclined".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Notifyauthdeclined#execute()} method to invoke the remote
       * operation. <p> {@link Notifyauthdeclined#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order for which payment authorization was declined.
       * @param content the {@link com.google.content.model.OrderpaymentsNotifyAuthDeclinedRequest}
       * @since 1.13
       */
      protected Notifyauthdeclined(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyAuthDeclinedRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderpaymentsNotifyAuthDeclinedResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Notifyauthdeclined setAlt(java.lang.String alt) {
        return (Notifyauthdeclined) super.setAlt(alt);
      }

      @Override
      public Notifyauthdeclined setFields(java.lang.String fields) {
        return (Notifyauthdeclined) super.setFields(fields);
      }

      @Override
      public Notifyauthdeclined setKey(java.lang.String key) {
        return (Notifyauthdeclined) super.setKey(key);
      }

      @Override
      public Notifyauthdeclined setOauthToken(java.lang.String oauthToken) {
        return (Notifyauthdeclined) super.setOauthToken(oauthToken);
      }

      @Override
      public Notifyauthdeclined setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Notifyauthdeclined) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Notifyauthdeclined setQuotaUser(java.lang.String quotaUser) {
        return (Notifyauthdeclined) super.setQuotaUser(quotaUser);
      }

      @Override
      public Notifyauthdeclined setUserIp(java.lang.String userIp) {
        return (Notifyauthdeclined) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Notifyauthdeclined setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order for which payment authorization was declined. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order for which payment authorization was declined.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order for which payment authorization was declined. */
      public Notifyauthdeclined setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Notifyauthdeclined set(String parameterName, Object value) {
        return (Notifyauthdeclined) super.set(parameterName, value);
      }
    }
    /**
     * Notify about charge on user's selected payments method.
     *
     * Create a request for the method "orderpayments.notifycharge".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Notifycharge#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order for which charge is happening.
     * @param content the {@link com.google.content.model.OrderpaymentsNotifyChargeRequest}
     * @return the request
     */
    public Notifycharge notifycharge(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyChargeRequest content) throws java.io.IOException {
      Notifycharge result = new Notifycharge(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Notifycharge extends ShoppingContentRequest<com.google.content.model.OrderpaymentsNotifyChargeResponse> {

      private static final String REST_PATH = "{merchantId}/orderpayments/{orderId}/notifyCharge";

      /**
       * Notify about charge on user's selected payments method.
       *
       * Create a request for the method "orderpayments.notifycharge".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Notifycharge#execute()} method to invoke the remote operation. <p>
       * {@link
       * Notifycharge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order for which charge is happening.
       * @param content the {@link com.google.content.model.OrderpaymentsNotifyChargeRequest}
       * @since 1.13
       */
      protected Notifycharge(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyChargeRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderpaymentsNotifyChargeResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Notifycharge setAlt(java.lang.String alt) {
        return (Notifycharge) super.setAlt(alt);
      }

      @Override
      public Notifycharge setFields(java.lang.String fields) {
        return (Notifycharge) super.setFields(fields);
      }

      @Override
      public Notifycharge setKey(java.lang.String key) {
        return (Notifycharge) super.setKey(key);
      }

      @Override
      public Notifycharge setOauthToken(java.lang.String oauthToken) {
        return (Notifycharge) super.setOauthToken(oauthToken);
      }

      @Override
      public Notifycharge setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Notifycharge) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Notifycharge setQuotaUser(java.lang.String quotaUser) {
        return (Notifycharge) super.setQuotaUser(quotaUser);
      }

      @Override
      public Notifycharge setUserIp(java.lang.String userIp) {
        return (Notifycharge) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Notifycharge setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order for which charge is happening. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order for which charge is happening.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order for which charge is happening. */
      public Notifycharge setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Notifycharge set(String parameterName, Object value) {
        return (Notifycharge) super.set(parameterName, value);
      }
    }
    /**
     * Notify about refund on user's selected payments method.
     *
     * Create a request for the method "orderpayments.notifyrefund".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Notifyrefund#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order for which charge is happening.
     * @param content the {@link com.google.content.model.OrderpaymentsNotifyRefundRequest}
     * @return the request
     */
    public Notifyrefund notifyrefund(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyRefundRequest content) throws java.io.IOException {
      Notifyrefund result = new Notifyrefund(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Notifyrefund extends ShoppingContentRequest<com.google.content.model.OrderpaymentsNotifyRefundResponse> {

      private static final String REST_PATH = "{merchantId}/orderpayments/{orderId}/notifyRefund";

      /**
       * Notify about refund on user's selected payments method.
       *
       * Create a request for the method "orderpayments.notifyrefund".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Notifyrefund#execute()} method to invoke the remote operation. <p>
       * {@link
       * Notifyrefund#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order for which charge is happening.
       * @param content the {@link com.google.content.model.OrderpaymentsNotifyRefundRequest}
       * @since 1.13
       */
      protected Notifyrefund(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrderpaymentsNotifyRefundRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrderpaymentsNotifyRefundResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Notifyrefund setAlt(java.lang.String alt) {
        return (Notifyrefund) super.setAlt(alt);
      }

      @Override
      public Notifyrefund setFields(java.lang.String fields) {
        return (Notifyrefund) super.setFields(fields);
      }

      @Override
      public Notifyrefund setKey(java.lang.String key) {
        return (Notifyrefund) super.setKey(key);
      }

      @Override
      public Notifyrefund setOauthToken(java.lang.String oauthToken) {
        return (Notifyrefund) super.setOauthToken(oauthToken);
      }

      @Override
      public Notifyrefund setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Notifyrefund) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Notifyrefund setQuotaUser(java.lang.String quotaUser) {
        return (Notifyrefund) super.setQuotaUser(quotaUser);
      }

      @Override
      public Notifyrefund setUserIp(java.lang.String userIp) {
        return (Notifyrefund) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Notifyrefund setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order for which charge is happening. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order for which charge is happening.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order for which charge is happening. */
      public Notifyrefund setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Notifyrefund set(String parameterName, Object value) {
        return (Notifyrefund) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Orderreturns collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Orderreturns.List request = content.orderreturns().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Orderreturns orderreturns() {
    return new Orderreturns();
  }

  /**
   * The "orderreturns" collection of methods.
   */
  public class Orderreturns {

    /**
     * Retrieves an order return from your Merchant Center account.
     *
     * Create a request for the method "orderreturns.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param returnId Merchant order return ID generated by Google.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String returnId) throws java.io.IOException {
      Get result = new Get(merchantId, returnId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.content.model.MerchantOrderReturn> {

      private static final String REST_PATH = "{merchantId}/orderreturns/{returnId}";

      /**
       * Retrieves an order return from your Merchant Center account.
       *
       * Create a request for the method "orderreturns.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param returnId Merchant order return ID generated by Google.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String returnId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.MerchantOrderReturn.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnId = com.google.api.client.util.Preconditions.checkNotNull(returnId, "Required parameter returnId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Merchant order return ID generated by Google. */
      @com.google.api.client.util.Key
      private java.lang.String returnId;

      /** Merchant order return ID generated by Google.
       */
      public java.lang.String getReturnId() {
        return returnId;
      }

      /** Merchant order return ID generated by Google. */
      public Get setReturnId(java.lang.String returnId) {
        this.returnId = returnId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists order returns in your Merchant Center account.
     *
     * Create a request for the method "orderreturns.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.content.model.OrderreturnsListResponse> {

      private static final String REST_PATH = "{merchantId}/orderreturns";

      /**
       * Lists order returns in your Merchant Center account.
       *
       * Create a request for the method "orderreturns.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.OrderreturnsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Obtains order returns created before this date (inclusively), in ISO 8601 format. */
      @com.google.api.client.util.Key
      private java.lang.String createdEndDate;

      /** Obtains order returns created before this date (inclusively), in ISO 8601 format.
       */
      public java.lang.String getCreatedEndDate() {
        return createdEndDate;
      }

      /** Obtains order returns created before this date (inclusively), in ISO 8601 format. */
      public List setCreatedEndDate(java.lang.String createdEndDate) {
        this.createdEndDate = createdEndDate;
        return this;
      }

      /** Obtains order returns created after this date (inclusively), in ISO 8601 format. */
      @com.google.api.client.util.Key
      private java.lang.String createdStartDate;

      /** Obtains order returns created after this date (inclusively), in ISO 8601 format.
       */
      public java.lang.String getCreatedStartDate() {
        return createdStartDate;
      }

      /** Obtains order returns created after this date (inclusively), in ISO 8601 format. */
      public List setCreatedStartDate(java.lang.String createdStartDate) {
        this.createdStartDate = createdStartDate;
        return this;
      }

      /**
       * The maximum number of order returns to return in the response, used for paging. The default
       * value is 25 returns per page, and the maximum allowed value is 250 returns per page.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of order returns to return in the response, used for paging. The default value
     is 25 returns per page, and the maximum allowed value is 250 returns per page.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of order returns to return in the response, used for paging. The default
       * value is 25 returns per page, and the maximum allowed value is 250 returns per page.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** Return the results in the specified order. */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** Return the results in the specified order.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /** Return the results in the specified order. */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Orders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Orders.List request = content.orders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Orders orders() {
    return new Orders();
  }

  /**
   * The "orders" collection of methods.
   */
  public class Orders {

    /**
     * Marks an order as acknowledged.
     *
     * Create a request for the method "orders.acknowledge".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Acknowledge#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersAcknowledgeRequest}
     * @return the request
     */
    public Acknowledge acknowledge(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersAcknowledgeRequest content) throws java.io.IOException {
      Acknowledge result = new Acknowledge(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Acknowledge extends ShoppingContentRequest<com.google.content.model.OrdersAcknowledgeResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/acknowledge";

      /**
       * Marks an order as acknowledged.
       *
       * Create a request for the method "orders.acknowledge".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Acknowledge#execute()} method to invoke the remote operation. <p>
       * {@link
       * Acknowledge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersAcknowledgeRequest}
       * @since 1.13
       */
      protected Acknowledge(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersAcknowledgeRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersAcknowledgeResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Acknowledge setAlt(java.lang.String alt) {
        return (Acknowledge) super.setAlt(alt);
      }

      @Override
      public Acknowledge setFields(java.lang.String fields) {
        return (Acknowledge) super.setFields(fields);
      }

      @Override
      public Acknowledge setKey(java.lang.String key) {
        return (Acknowledge) super.setKey(key);
      }

      @Override
      public Acknowledge setOauthToken(java.lang.String oauthToken) {
        return (Acknowledge) super.setOauthToken(oauthToken);
      }

      @Override
      public Acknowledge setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Acknowledge) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Acknowledge setQuotaUser(java.lang.String quotaUser) {
        return (Acknowledge) super.setQuotaUser(quotaUser);
      }

      @Override
      public Acknowledge setUserIp(java.lang.String userIp) {
        return (Acknowledge) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Acknowledge setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Acknowledge setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Acknowledge set(String parameterName, Object value) {
        return (Acknowledge) super.set(parameterName, value);
      }
    }
    /**
     * Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment".
     *
     * Create a request for the method "orders.advancetestorder".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Advancetestorder#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the test order to modify.
     * @return the request
     */
    public Advancetestorder advancetestorder(java.math.BigInteger merchantId, java.lang.String orderId) throws java.io.IOException {
      Advancetestorder result = new Advancetestorder(merchantId, orderId);
      initialize(result);
      return result;
    }

    public class Advancetestorder extends ShoppingContentRequest<com.google.content.model.OrdersAdvanceTestOrderResponse> {

      private static final String REST_PATH = "{merchantId}/testorders/{orderId}/advance";

      /**
       * Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment".
       *
       * Create a request for the method "orders.advancetestorder".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Advancetestorder#execute()} method to invoke the remote operation.
       * <p> {@link Advancetestorder#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the test order to modify.
       * @since 1.13
       */
      protected Advancetestorder(java.math.BigInteger merchantId, java.lang.String orderId) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.content.model.OrdersAdvanceTestOrderResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Advancetestorder setAlt(java.lang.String alt) {
        return (Advancetestorder) super.setAlt(alt);
      }

      @Override
      public Advancetestorder setFields(java.lang.String fields) {
        return (Advancetestorder) super.setFields(fields);
      }

      @Override
      public Advancetestorder setKey(java.lang.String key) {
        return (Advancetestorder) super.setKey(key);
      }

      @Override
      public Advancetestorder setOauthToken(java.lang.String oauthToken) {
        return (Advancetestorder) super.setOauthToken(oauthToken);
      }

      @Override
      public Advancetestorder setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Advancetestorder) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Advancetestorder setQuotaUser(java.lang.String quotaUser) {
        return (Advancetestorder) super.setQuotaUser(quotaUser);
      }

      @Override
      public Advancetestorder setUserIp(java.lang.String userIp) {
        return (Advancetestorder) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Advancetestorder setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the test order to modify. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the test order to modify.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the test order to modify. */
      public Advancetestorder setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Advancetestorder set(String parameterName, Object value) {
        return (Advancetestorder) super.set(parameterName, value);
      }
    }
    /**
     * Cancels all line items in an order, making a full refund.
     *
     * Create a request for the method "orders.cancel".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order to cancel.
     * @param content the {@link com.google.content.model.OrdersCancelRequest}
     * @return the request
     */
    public Cancel cancel(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelRequest content) throws java.io.IOException {
      Cancel result = new Cancel(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Cancel extends ShoppingContentRequest<com.google.content.model.OrdersCancelResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/cancel";

      /**
       * Cancels all line items in an order, making a full refund.
       *
       * Create a request for the method "orders.cancel".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order to cancel.
       * @param content the {@link com.google.content.model.OrdersCancelRequest}
       * @since 1.13
       */
      protected Cancel(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCancelResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUserIp(java.lang.String userIp) {
        return (Cancel) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Cancel setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order to cancel. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order to cancel.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order to cancel. */
      public Cancel setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Cancels a line item, making a full refund.
     *
     * Create a request for the method "orders.cancellineitem".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Cancellineitem#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersCancelLineItemRequest}
     * @return the request
     */
    public Cancellineitem cancellineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelLineItemRequest content) throws java.io.IOException {
      Cancellineitem result = new Cancellineitem(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Cancellineitem extends ShoppingContentRequest<com.google.content.model.OrdersCancelLineItemResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/cancelLineItem";

      /**
       * Cancels a line item, making a full refund.
       *
       * Create a request for the method "orders.cancellineitem".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Cancellineitem#execute()} method to invoke the remote operation.
       * <p> {@link Cancellineitem#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersCancelLineItemRequest}
       * @since 1.13
       */
      protected Cancellineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelLineItemRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCancelLineItemResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Cancellineitem setAlt(java.lang.String alt) {
        return (Cancellineitem) super.setAlt(alt);
      }

      @Override
      public Cancellineitem setFields(java.lang.String fields) {
        return (Cancellineitem) super.setFields(fields);
      }

      @Override
      public Cancellineitem setKey(java.lang.String key) {
        return (Cancellineitem) super.setKey(key);
      }

      @Override
      public Cancellineitem setOauthToken(java.lang.String oauthToken) {
        return (Cancellineitem) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancellineitem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancellineitem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancellineitem setQuotaUser(java.lang.String quotaUser) {
        return (Cancellineitem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancellineitem setUserIp(java.lang.String userIp) {
        return (Cancellineitem) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Cancellineitem setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Cancellineitem setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Cancellineitem set(String parameterName, Object value) {
        return (Cancellineitem) super.set(parameterName, value);
      }
    }
    /**
     * Sandbox only. Cancels a test order for customer-initiated cancellation.
     *
     * Create a request for the method "orders.canceltestorderbycustomer".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Canceltestorderbycustomer#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the test order to cancel.
     * @param content the {@link com.google.content.model.OrdersCancelTestOrderByCustomerRequest}
     * @return the request
     */
    public Canceltestorderbycustomer canceltestorderbycustomer(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelTestOrderByCustomerRequest content) throws java.io.IOException {
      Canceltestorderbycustomer result = new Canceltestorderbycustomer(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Canceltestorderbycustomer extends ShoppingContentRequest<com.google.content.model.OrdersCancelTestOrderByCustomerResponse> {

      private static final String REST_PATH = "{merchantId}/testorders/{orderId}/cancelByCustomer";

      /**
       * Sandbox only. Cancels a test order for customer-initiated cancellation.
       *
       * Create a request for the method "orders.canceltestorderbycustomer".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Canceltestorderbycustomer#execute()} method to invoke the remote
       * operation. <p> {@link Canceltestorderbycustomer#initialize(com.google.api.client.googleapis.ser
       * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the test order to cancel.
       * @param content the {@link com.google.content.model.OrdersCancelTestOrderByCustomerRequest}
       * @since 1.13
       */
      protected Canceltestorderbycustomer(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCancelTestOrderByCustomerRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCancelTestOrderByCustomerResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Canceltestorderbycustomer setAlt(java.lang.String alt) {
        return (Canceltestorderbycustomer) super.setAlt(alt);
      }

      @Override
      public Canceltestorderbycustomer setFields(java.lang.String fields) {
        return (Canceltestorderbycustomer) super.setFields(fields);
      }

      @Override
      public Canceltestorderbycustomer setKey(java.lang.String key) {
        return (Canceltestorderbycustomer) super.setKey(key);
      }

      @Override
      public Canceltestorderbycustomer setOauthToken(java.lang.String oauthToken) {
        return (Canceltestorderbycustomer) super.setOauthToken(oauthToken);
      }

      @Override
      public Canceltestorderbycustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Canceltestorderbycustomer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Canceltestorderbycustomer setQuotaUser(java.lang.String quotaUser) {
        return (Canceltestorderbycustomer) super.setQuotaUser(quotaUser);
      }

      @Override
      public Canceltestorderbycustomer setUserIp(java.lang.String userIp) {
        return (Canceltestorderbycustomer) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Canceltestorderbycustomer setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the test order to cancel. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the test order to cancel.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the test order to cancel. */
      public Canceltestorderbycustomer setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Canceltestorderbycustomer set(String parameterName, Object value) {
        return (Canceltestorderbycustomer) super.set(parameterName, value);
      }
    }
    /**
     * Sandbox only. Creates a test order.
     *
     * Create a request for the method "orders.createtestorder".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Createtestorder#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that should manage the order. This cannot be a multi-client account.
     * @param content the {@link com.google.content.model.OrdersCreateTestOrderRequest}
     * @return the request
     */
    public Createtestorder createtestorder(java.math.BigInteger merchantId, com.google.content.model.OrdersCreateTestOrderRequest content) throws java.io.IOException {
      Createtestorder result = new Createtestorder(merchantId, content);
      initialize(result);
      return result;
    }

    public class Createtestorder extends ShoppingContentRequest<com.google.content.model.OrdersCreateTestOrderResponse> {

      private static final String REST_PATH = "{merchantId}/testorders";

      /**
       * Sandbox only. Creates a test order.
       *
       * Create a request for the method "orders.createtestorder".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Createtestorder#execute()} method to invoke the remote operation.
       * <p> {@link Createtestorder#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that should manage the order. This cannot be a multi-client account.
       * @param content the {@link com.google.content.model.OrdersCreateTestOrderRequest}
       * @since 1.13
       */
      protected Createtestorder(java.math.BigInteger merchantId, com.google.content.model.OrdersCreateTestOrderRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCreateTestOrderResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Createtestorder setAlt(java.lang.String alt) {
        return (Createtestorder) super.setAlt(alt);
      }

      @Override
      public Createtestorder setFields(java.lang.String fields) {
        return (Createtestorder) super.setFields(fields);
      }

      @Override
      public Createtestorder setKey(java.lang.String key) {
        return (Createtestorder) super.setKey(key);
      }

      @Override
      public Createtestorder setOauthToken(java.lang.String oauthToken) {
        return (Createtestorder) super.setOauthToken(oauthToken);
      }

      @Override
      public Createtestorder setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Createtestorder) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Createtestorder setQuotaUser(java.lang.String quotaUser) {
        return (Createtestorder) super.setQuotaUser(quotaUser);
      }

      @Override
      public Createtestorder setUserIp(java.lang.String userIp) {
        return (Createtestorder) super.setUserIp(userIp);
      }

      /**
       * The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      public Createtestorder setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Createtestorder set(String parameterName, Object value) {
        return (Createtestorder) super.set(parameterName, value);
      }
    }
    /**
     * Sandbox only. Creates a test return.
     *
     * Create a request for the method "orders.createtestreturn".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Createtestreturn#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersCreateTestReturnRequest}
     * @return the request
     */
    public Createtestreturn createtestreturn(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCreateTestReturnRequest content) throws java.io.IOException {
      Createtestreturn result = new Createtestreturn(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Createtestreturn extends ShoppingContentRequest<com.google.content.model.OrdersCreateTestReturnResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/testreturn";

      /**
       * Sandbox only. Creates a test return.
       *
       * Create a request for the method "orders.createtestreturn".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Createtestreturn#execute()} method to invoke the remote operation.
       * <p> {@link Createtestreturn#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersCreateTestReturnRequest}
       * @since 1.13
       */
      protected Createtestreturn(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersCreateTestReturnRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCreateTestReturnResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Createtestreturn setAlt(java.lang.String alt) {
        return (Createtestreturn) super.setAlt(alt);
      }

      @Override
      public Createtestreturn setFields(java.lang.String fields) {
        return (Createtestreturn) super.setFields(fields);
      }

      @Override
      public Createtestreturn setKey(java.lang.String key) {
        return (Createtestreturn) super.setKey(key);
      }

      @Override
      public Createtestreturn setOauthToken(java.lang.String oauthToken) {
        return (Createtestreturn) super.setOauthToken(oauthToken);
      }

      @Override
      public Createtestreturn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Createtestreturn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Createtestreturn setQuotaUser(java.lang.String quotaUser) {
        return (Createtestreturn) super.setQuotaUser(quotaUser);
      }

      @Override
      public Createtestreturn setUserIp(java.lang.String userIp) {
        return (Createtestreturn) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Createtestreturn setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Createtestreturn setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Createtestreturn set(String parameterName, Object value) {
        return (Createtestreturn) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves or modifies multiple orders in a single request.
     *
     * Create a request for the method "orders.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.content.model.OrdersCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.content.model.OrdersCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.content.model.OrdersCustomBatchResponse> {

      private static final String REST_PATH = "orders/batch";

      /**
       * Retrieves or modifies multiple orders in a single request.
       *
       * Create a request for the method "orders.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.content.model.OrdersCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.content.model.OrdersCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersCustomBatchResponse.class);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUserIp(java.lang.String userIp) {
        return (Custombatch) super.setUserIp(userIp);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an order from your Merchant Center account.
     *
     * Create a request for the method "orders.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String orderId) throws java.io.IOException {
      Get result = new Get(merchantId, orderId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.content.model.Order> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}";

      /**
       * Retrieves an order from your Merchant Center account.
       *
       * Create a request for the method "orders.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String orderId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.Order.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Get setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves an order using merchant order id.
     *
     * Create a request for the method "orders.getbymerchantorderid".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Getbymerchantorderid#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param merchantOrderId The merchant order id to be looked for.
     * @return the request
     */
    public Getbymerchantorderid getbymerchantorderid(java.math.BigInteger merchantId, java.lang.String merchantOrderId) throws java.io.IOException {
      Getbymerchantorderid result = new Getbymerchantorderid(merchantId, merchantOrderId);
      initialize(result);
      return result;
    }

    public class Getbymerchantorderid extends ShoppingContentRequest<com.google.content.model.OrdersGetByMerchantOrderIdResponse> {

      private static final String REST_PATH = "{merchantId}/ordersbymerchantid/{merchantOrderId}";

      /**
       * Retrieves an order using merchant order id.
       *
       * Create a request for the method "orders.getbymerchantorderid".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Getbymerchantorderid#execute()} method to invoke the remote
       * operation. <p> {@link Getbymerchantorderid#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param merchantOrderId The merchant order id to be looked for.
       * @since 1.13
       */
      protected Getbymerchantorderid(java.math.BigInteger merchantId, java.lang.String merchantOrderId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.OrdersGetByMerchantOrderIdResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.merchantOrderId = com.google.api.client.util.Preconditions.checkNotNull(merchantOrderId, "Required parameter merchantOrderId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getbymerchantorderid setAlt(java.lang.String alt) {
        return (Getbymerchantorderid) super.setAlt(alt);
      }

      @Override
      public Getbymerchantorderid setFields(java.lang.String fields) {
        return (Getbymerchantorderid) super.setFields(fields);
      }

      @Override
      public Getbymerchantorderid setKey(java.lang.String key) {
        return (Getbymerchantorderid) super.setKey(key);
      }

      @Override
      public Getbymerchantorderid setOauthToken(java.lang.String oauthToken) {
        return (Getbymerchantorderid) super.setOauthToken(oauthToken);
      }

      @Override
      public Getbymerchantorderid setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getbymerchantorderid) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getbymerchantorderid setQuotaUser(java.lang.String quotaUser) {
        return (Getbymerchantorderid) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getbymerchantorderid setUserIp(java.lang.String userIp) {
        return (Getbymerchantorderid) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Getbymerchantorderid setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The merchant order id to be looked for. */
      @com.google.api.client.util.Key
      private java.lang.String merchantOrderId;

      /** The merchant order id to be looked for.
       */
      public java.lang.String getMerchantOrderId() {
        return merchantOrderId;
      }

      /** The merchant order id to be looked for. */
      public Getbymerchantorderid setMerchantOrderId(java.lang.String merchantOrderId) {
        this.merchantOrderId = merchantOrderId;
        return this;
      }

      @Override
      public Getbymerchantorderid set(String parameterName, Object value) {
        return (Getbymerchantorderid) super.set(parameterName, value);
      }
    }
    /**
     * Sandbox only. Retrieves an order template that can be used to quickly create a new order in
     * sandbox.
     *
     * Create a request for the method "orders.gettestordertemplate".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Gettestordertemplate#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that should manage the order. This cannot be a multi-client account.
     * @param templateName The name of the template to retrieve.
     * @return the request
     */
    public Gettestordertemplate gettestordertemplate(java.math.BigInteger merchantId, java.lang.String templateName) throws java.io.IOException {
      Gettestordertemplate result = new Gettestordertemplate(merchantId, templateName);
      initialize(result);
      return result;
    }

    public class Gettestordertemplate extends ShoppingContentRequest<com.google.content.model.OrdersGetTestOrderTemplateResponse> {

      private static final String REST_PATH = "{merchantId}/testordertemplates/{templateName}";

      /**
       * Sandbox only. Retrieves an order template that can be used to quickly create a new order in
       * sandbox.
       *
       * Create a request for the method "orders.gettestordertemplate".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Gettestordertemplate#execute()} method to invoke the remote
       * operation. <p> {@link Gettestordertemplate#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that should manage the order. This cannot be a multi-client account.
       * @param templateName The name of the template to retrieve.
       * @since 1.13
       */
      protected Gettestordertemplate(java.math.BigInteger merchantId, java.lang.String templateName) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.OrdersGetTestOrderTemplateResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.templateName = com.google.api.client.util.Preconditions.checkNotNull(templateName, "Required parameter templateName must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Gettestordertemplate setAlt(java.lang.String alt) {
        return (Gettestordertemplate) super.setAlt(alt);
      }

      @Override
      public Gettestordertemplate setFields(java.lang.String fields) {
        return (Gettestordertemplate) super.setFields(fields);
      }

      @Override
      public Gettestordertemplate setKey(java.lang.String key) {
        return (Gettestordertemplate) super.setKey(key);
      }

      @Override
      public Gettestordertemplate setOauthToken(java.lang.String oauthToken) {
        return (Gettestordertemplate) super.setOauthToken(oauthToken);
      }

      @Override
      public Gettestordertemplate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Gettestordertemplate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Gettestordertemplate setQuotaUser(java.lang.String quotaUser) {
        return (Gettestordertemplate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Gettestordertemplate setUserIp(java.lang.String userIp) {
        return (Gettestordertemplate) super.setUserIp(userIp);
      }

      /**
       * The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that should manage the order. This cannot be a multi-client account.
       */
      public Gettestordertemplate setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The name of the template to retrieve. */
      @com.google.api.client.util.Key
      private java.lang.String templateName;

      /** The name of the template to retrieve.
       */
      public java.lang.String getTemplateName() {
        return templateName;
      }

      /** The name of the template to retrieve. */
      public Gettestordertemplate setTemplateName(java.lang.String templateName) {
        this.templateName = templateName;
        return this;
      }

      /** The country of the template to retrieve. Defaults to US. */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** The country of the template to retrieve. Defaults to US.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /** The country of the template to retrieve. Defaults to US. */
      public Gettestordertemplate setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      @Override
      public Gettestordertemplate set(String parameterName, Object value) {
        return (Gettestordertemplate) super.set(parameterName, value);
      }
    }
    /**
     * Notifies that item return and refund was handled directly by merchant outside of Google payments
     * processing (e.g. cash refund done in store).
     *
     * Create a request for the method "orders.instorerefundlineitem".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Instorerefundlineitem#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersInStoreRefundLineItemRequest}
     * @return the request
     */
    public Instorerefundlineitem instorerefundlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersInStoreRefundLineItemRequest content) throws java.io.IOException {
      Instorerefundlineitem result = new Instorerefundlineitem(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Instorerefundlineitem extends ShoppingContentRequest<com.google.content.model.OrdersInStoreRefundLineItemResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/inStoreRefundLineItem";

      /**
       * Notifies that item return and refund was handled directly by merchant outside of Google
       * payments processing (e.g. cash refund done in store).
       *
       * Create a request for the method "orders.instorerefundlineitem".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Instorerefundlineitem#execute()} method to invoke the remote
       * operation. <p> {@link Instorerefundlineitem#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersInStoreRefundLineItemRequest}
       * @since 1.13
       */
      protected Instorerefundlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersInStoreRefundLineItemRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersInStoreRefundLineItemResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Instorerefundlineitem setAlt(java.lang.String alt) {
        return (Instorerefundlineitem) super.setAlt(alt);
      }

      @Override
      public Instorerefundlineitem setFields(java.lang.String fields) {
        return (Instorerefundlineitem) super.setFields(fields);
      }

      @Override
      public Instorerefundlineitem setKey(java.lang.String key) {
        return (Instorerefundlineitem) super.setKey(key);
      }

      @Override
      public Instorerefundlineitem setOauthToken(java.lang.String oauthToken) {
        return (Instorerefundlineitem) super.setOauthToken(oauthToken);
      }

      @Override
      public Instorerefundlineitem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Instorerefundlineitem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Instorerefundlineitem setQuotaUser(java.lang.String quotaUser) {
        return (Instorerefundlineitem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Instorerefundlineitem setUserIp(java.lang.String userIp) {
        return (Instorerefundlineitem) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Instorerefundlineitem setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Instorerefundlineitem setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Instorerefundlineitem set(String parameterName, Object value) {
        return (Instorerefundlineitem) super.set(parameterName, value);
      }
    }
    /**
     * Lists the orders in your Merchant Center account.
     *
     * Create a request for the method "orders.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.content.model.OrdersListResponse> {

      private static final String REST_PATH = "{merchantId}/orders";

      /**
       * Lists the orders in your Merchant Center account.
       *
       * Create a request for the method "orders.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.content.model.OrdersListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Obtains orders that match the acknowledgement status. When set to true, obtains orders that
       * have been acknowledged. When false, obtains orders that have not been acknowledged. We
       * recommend using this filter set to false, in conjunction with the acknowledge call, such
       * that only un-acknowledged orders are returned.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean acknowledged;

      /** Obtains orders that match the acknowledgement status. When set to true, obtains orders that have
     been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using
     this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged
     orders are returned.
       */
      public java.lang.Boolean getAcknowledged() {
        return acknowledged;
      }

      /**
       * Obtains orders that match the acknowledgement status. When set to true, obtains orders that
       * have been acknowledged. When false, obtains orders that have not been acknowledged. We
       * recommend using this filter set to false, in conjunction with the acknowledge call, such
       * that only un-acknowledged orders are returned.
       */
      public List setAcknowledged(java.lang.Boolean acknowledged) {
        this.acknowledged = acknowledged;
        return this;
      }

      /**
       * The maximum number of orders to return in the response, used for paging. The default value
       * is 25 orders per page, and the maximum allowed value is 250 orders per page. Known issue:
       * All List calls will return all Orders without limit regardless of the value of this field.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of orders to return in the response, used for paging. The default value is 25
     orders per page, and the maximum allowed value is 250 orders per page. Known issue: All List calls
     will return all Orders without limit regardless of the value of this field.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of orders to return in the response, used for paging. The default value
       * is 25 orders per page, and the maximum allowed value is 250 orders per page. Known issue:
       * All List calls will return all Orders without limit regardless of the value of this field.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * The ordering of the returned list. The only supported value are placedDate desc and
       * placedDate asc for now, which returns orders sorted by placement date. "placedDate desc"
       * stands for listing orders by placement date, from oldest to most recent. "placedDate asc"
       * stands for listing orders by placement date, from most recent to oldest. In future releases
       * we'll support other sorting criteria.
       */
      @com.google.api.client.util.Key
      private java.lang.String orderBy;

      /** The ordering of the returned list. The only supported value are placedDate desc and placedDate asc
     for now, which returns orders sorted by placement date. "placedDate desc" stands for listing orders
     by placement date, from oldest to most recent. "placedDate asc" stands for listing orders by
     placement date, from most recent to oldest. In future releases we'll support other sorting
     criteria.
       */
      public java.lang.String getOrderBy() {
        return orderBy;
      }

      /**
       * The ordering of the returned list. The only supported value are placedDate desc and
       * placedDate asc for now, which returns orders sorted by placement date. "placedDate desc"
       * stands for listing orders by placement date, from oldest to most recent. "placedDate asc"
       * stands for listing orders by placement date, from most recent to oldest. In future releases
       * we'll support other sorting criteria.
       */
      public List setOrderBy(java.lang.String orderBy) {
        this.orderBy = orderBy;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /** Obtains orders placed before this date (exclusively), in ISO 8601 format. */
      @com.google.api.client.util.Key
      private java.lang.String placedDateEnd;

      /** Obtains orders placed before this date (exclusively), in ISO 8601 format.
       */
      public java.lang.String getPlacedDateEnd() {
        return placedDateEnd;
      }

      /** Obtains orders placed before this date (exclusively), in ISO 8601 format. */
      public List setPlacedDateEnd(java.lang.String placedDateEnd) {
        this.placedDateEnd = placedDateEnd;
        return this;
      }

      /** Obtains orders placed after this date (inclusively), in ISO 8601 format. */
      @com.google.api.client.util.Key
      private java.lang.String placedDateStart;

      /** Obtains orders placed after this date (inclusively), in ISO 8601 format.
       */
      public java.lang.String getPlacedDateStart() {
        return placedDateStart;
      }

      /** Obtains orders placed after this date (inclusively), in ISO 8601 format. */
      public List setPlacedDateStart(java.lang.String placedDateStart) {
        this.placedDateStart = placedDateStart;
        return this;
      }

      /**
       * Obtains orders that match any of the specified statuses. Multiple values can be specified
       * with comma separation. Additionally, please note that active is a shortcut for
       * pendingShipment and partiallyShipped, and completed is a shortcut for shipped ,
       * partiallyDelivered, delivered, partiallyReturned, returned, and canceled.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> statuses;

      /** Obtains orders that match any of the specified statuses. Multiple values can be specified with
     comma separation. Additionally, please note that active is a shortcut for pendingShipment and
     partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered,
     partiallyReturned, returned, and canceled.
       */
      public java.util.List<java.lang.String> getStatuses() {
        return statuses;
      }

      /**
       * Obtains orders that match any of the specified statuses. Multiple values can be specified
       * with comma separation. Additionally, please note that active is a shortcut for
       * pendingShipment and partiallyShipped, and completed is a shortcut for shipped ,
       * partiallyDelivered, delivered, partiallyReturned, returned, and canceled.
       */
      public List setStatuses(java.util.List<java.lang.String> statuses) {
        this.statuses = statuses;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Deprecated, please use returnRefundLineItem instead.
     *
     * Create a request for the method "orders.refund".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Refund#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order to refund.
     * @param content the {@link com.google.content.model.OrdersRefundRequest}
     * @return the request
     */
    public Refund refund(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersRefundRequest content) throws java.io.IOException {
      Refund result = new Refund(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Refund extends ShoppingContentRequest<com.google.content.model.OrdersRefundResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/refund";

      /**
       * Deprecated, please use returnRefundLineItem instead.
       *
       * Create a request for the method "orders.refund".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Refund#execute()} method to invoke the remote operation. <p> {@link
       * Refund#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order to refund.
       * @param content the {@link com.google.content.model.OrdersRefundRequest}
       * @since 1.13
       */
      protected Refund(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersRefundRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersRefundResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Refund setAlt(java.lang.String alt) {
        return (Refund) super.setAlt(alt);
      }

      @Override
      public Refund setFields(java.lang.String fields) {
        return (Refund) super.setFields(fields);
      }

      @Override
      public Refund setKey(java.lang.String key) {
        return (Refund) super.setKey(key);
      }

      @Override
      public Refund setOauthToken(java.lang.String oauthToken) {
        return (Refund) super.setOauthToken(oauthToken);
      }

      @Override
      public Refund setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Refund) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Refund setQuotaUser(java.lang.String quotaUser) {
        return (Refund) super.setQuotaUser(quotaUser);
      }

      @Override
      public Refund setUserIp(java.lang.String userIp) {
        return (Refund) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Refund setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order to refund. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order to refund.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order to refund. */
      public Refund setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Refund set(String parameterName, Object value) {
        return (Refund) super.set(parameterName, value);
      }
    }
    /**
     * Rejects return on an line item.
     *
     * Create a request for the method "orders.rejectreturnlineitem".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Rejectreturnlineitem#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersRejectReturnLineItemRequest}
     * @return the request
     */
    public Rejectreturnlineitem rejectreturnlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersRejectReturnLineItemRequest content) throws java.io.IOException {
      Rejectreturnlineitem result = new Rejectreturnlineitem(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Rejectreturnlineitem extends ShoppingContentRequest<com.google.content.model.OrdersRejectReturnLineItemResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/rejectReturnLineItem";

      /**
       * Rejects return on an line item.
       *
       * Create a request for the method "orders.rejectreturnlineitem".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Rejectreturnlineitem#execute()} method to invoke the remote
       * operation. <p> {@link Rejectreturnlineitem#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersRejectReturnLineItemRequest}
       * @since 1.13
       */
      protected Rejectreturnlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersRejectReturnLineItemRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersRejectReturnLineItemResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Rejectreturnlineitem setAlt(java.lang.String alt) {
        return (Rejectreturnlineitem) super.setAlt(alt);
      }

      @Override
      public Rejectreturnlineitem setFields(java.lang.String fields) {
        return (Rejectreturnlineitem) super.setFields(fields);
      }

      @Override
      public Rejectreturnlineitem setKey(java.lang.String key) {
        return (Rejectreturnlineitem) super.setKey(key);
      }

      @Override
      public Rejectreturnlineitem setOauthToken(java.lang.String oauthToken) {
        return (Rejectreturnlineitem) super.setOauthToken(oauthToken);
      }

      @Override
      public Rejectreturnlineitem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Rejectreturnlineitem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Rejectreturnlineitem setQuotaUser(java.lang.String quotaUser) {
        return (Rejectreturnlineitem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Rejectreturnlineitem setUserIp(java.lang.String userIp) {
        return (Rejectreturnlineitem) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Rejectreturnlineitem setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Rejectreturnlineitem setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Rejectreturnlineitem set(String parameterName, Object value) {
        return (Rejectreturnlineitem) super.set(parameterName, value);
      }
    }
    /**
     * Returns a line item.
     *
     * Create a request for the method "orders.returnlineitem".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Returnlineitem#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersReturnLineItemRequest}
     * @return the request
     */
    public Returnlineitem returnlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersReturnLineItemRequest content) throws java.io.IOException {
      Returnlineitem result = new Returnlineitem(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Returnlineitem extends ShoppingContentRequest<com.google.content.model.OrdersReturnLineItemResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/returnLineItem";

      /**
       * Returns a line item.
       *
       * Create a request for the method "orders.returnlineitem".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Returnlineitem#execute()} method to invoke the remote operation.
       * <p> {@link Returnlineitem#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersReturnLineItemRequest}
       * @since 1.13
       */
      protected Returnlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersReturnLineItemRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersReturnLineItemResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Returnlineitem setAlt(java.lang.String alt) {
        return (Returnlineitem) super.setAlt(alt);
      }

      @Override
      public Returnlineitem setFields(java.lang.String fields) {
        return (Returnlineitem) super.setFields(fields);
      }

      @Override
      public Returnlineitem setKey(java.lang.String key) {
        return (Returnlineitem) super.setKey(key);
      }

      @Override
      public Returnlineitem setOauthToken(java.lang.String oauthToken) {
        return (Returnlineitem) super.setOauthToken(oauthToken);
      }

      @Override
      public Returnlineitem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Returnlineitem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Returnlineitem setQuotaUser(java.lang.String quotaUser) {
        return (Returnlineitem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Returnlineitem setUserIp(java.lang.String userIp) {
        return (Returnlineitem) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Returnlineitem setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Returnlineitem setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Returnlineitem set(String parameterName, Object value) {
        return (Returnlineitem) super.set(parameterName, value);
      }
    }
    /**
     * Returns and refunds a line item. Note that this method can only be called on fully shipped
     * orders.
     *
     * Create a request for the method "orders.returnrefundlineitem".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Returnrefundlineitem#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersReturnRefundLineItemRequest}
     * @return the request
     */
    public Returnrefundlineitem returnrefundlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersReturnRefundLineItemRequest content) throws java.io.IOException {
      Returnrefundlineitem result = new Returnrefundlineitem(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Returnrefundlineitem extends ShoppingContentRequest<com.google.content.model.OrdersReturnRefundLineItemResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/returnRefundLineItem";

      /**
       * Returns and refunds a line item. Note that this method can only be called on fully shipped
       * orders.
       *
       * Create a request for the method "orders.returnrefundlineitem".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Returnrefundlineitem#execute()} method to invoke the remote
       * operation. <p> {@link Returnrefundlineitem#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersReturnRefundLineItemRequest}
       * @since 1.13
       */
      protected Returnrefundlineitem(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersReturnRefundLineItemRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersReturnRefundLineItemResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Returnrefundlineitem setAlt(java.lang.String alt) {
        return (Returnrefundlineitem) super.setAlt(alt);
      }

      @Override
      public Returnrefundlineitem setFields(java.lang.String fields) {
        return (Returnrefundlineitem) super.setFields(fields);
      }

      @Override
      public Returnrefundlineitem setKey(java.lang.String key) {
        return (Returnrefundlineitem) super.setKey(key);
      }

      @Override
      public Returnrefundlineitem setOauthToken(java.lang.String oauthToken) {
        return (Returnrefundlineitem) super.setOauthToken(oauthToken);
      }

      @Override
      public Returnrefundlineitem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Returnrefundlineitem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Returnrefundlineitem setQuotaUser(java.lang.String quotaUser) {
        return (Returnrefundlineitem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Returnrefundlineitem setUserIp(java.lang.String userIp) {
        return (Returnrefundlineitem) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Returnrefundlineitem setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Returnrefundlineitem setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Returnrefundlineitem set(String parameterName, Object value) {
        return (Returnrefundlineitem) super.set(parameterName, value);
      }
    }
    /**
     * Sets (overrides) merchant provided annotations on the line item.
     *
     * Create a request for the method "orders.setlineitemmetadata".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Setlineitemmetadata#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersSetLineItemMetadataRequest}
     * @return the request
     */
    public Setlineitemmetadata setlineitemmetadata(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersSetLineItemMetadataRequest content) throws java.io.IOException {
      Setlineitemmetadata result = new Setlineitemmetadata(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Setlineitemmetadata extends ShoppingContentRequest<com.google.content.model.OrdersSetLineItemMetadataResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/setLineItemMetadata";

      /**
       * Sets (overrides) merchant provided annotations on the line item.
       *
       * Create a request for the method "orders.setlineitemmetadata".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Setlineitemmetadata#execute()} method to invoke the remote
       * operation. <p> {@link Setlineitemmetadata#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersSetLineItemMetadataRequest}
       * @since 1.13
       */
      protected Setlineitemmetadata(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersSetLineItemMetadataRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersSetLineItemMetadataResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Setlineitemmetadata setAlt(java.lang.String alt) {
        return (Setlineitemmetadata) super.setAlt(alt);
      }

      @Override
      public Setlineitemmetadata setFields(java.lang.String fields) {
        return (Setlineitemmetadata) super.setFields(fields);
      }

      @Override
      public Setlineitemmetadata setKey(java.lang.String key) {
        return (Setlineitemmetadata) super.setKey(key);
      }

      @Override
      public Setlineitemmetadata setOauthToken(java.lang.String oauthToken) {
        return (Setlineitemmetadata) super.setOauthToken(oauthToken);
      }

      @Override
      public Setlineitemmetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Setlineitemmetadata) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Setlineitemmetadata setQuotaUser(java.lang.String quotaUser) {
        return (Setlineitemmetadata) super.setQuotaUser(quotaUser);
      }

      @Override
      public Setlineitemmetadata setUserIp(java.lang.String userIp) {
        return (Setlineitemmetadata) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Setlineitemmetadata setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Setlineitemmetadata setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Setlineitemmetadata set(String parameterName, Object value) {
        return (Setlineitemmetadata) super.set(parameterName, value);
      }
    }
    /**
     * Marks line item(s) as shipped.
     *
     * Create a request for the method "orders.shiplineitems".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Shiplineitems#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersShipLineItemsRequest}
     * @return the request
     */
    public Shiplineitems shiplineitems(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersShipLineItemsRequest content) throws java.io.IOException {
      Shiplineitems result = new Shiplineitems(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Shiplineitems extends ShoppingContentRequest<com.google.content.model.OrdersShipLineItemsResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/shipLineItems";

      /**
       * Marks line item(s) as shipped.
       *
       * Create a request for the method "orders.shiplineitems".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Shiplineitems#execute()} method to invoke the remote operation. <p>
       * {@link Shiplineitems#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersShipLineItemsRequest}
       * @since 1.13
       */
      protected Shiplineitems(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersShipLineItemsRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersShipLineItemsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Shiplineitems setAlt(java.lang.String alt) {
        return (Shiplineitems) super.setAlt(alt);
      }

      @Override
      public Shiplineitems setFields(java.lang.String fields) {
        return (Shiplineitems) super.setFields(fields);
      }

      @Override
      public Shiplineitems setKey(java.lang.String key) {
        return (Shiplineitems) super.setKey(key);
      }

      @Override
      public Shiplineitems setOauthToken(java.lang.String oauthToken) {
        return (Shiplineitems) super.setOauthToken(oauthToken);
      }

      @Override
      public Shiplineitems setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Shiplineitems) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Shiplineitems setQuotaUser(java.lang.String quotaUser) {
        return (Shiplineitems) super.setQuotaUser(quotaUser);
      }

      @Override
      public Shiplineitems setUserIp(java.lang.String userIp) {
        return (Shiplineitems) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Shiplineitems setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Shiplineitems setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Shiplineitems set(String parameterName, Object value) {
        return (Shiplineitems) super.set(parameterName, value);
      }
    }
    /**
     * Updates ship by and delivery by dates for a line item.
     *
     * Create a request for the method "orders.updatelineitemshippingdetails".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Updatelineitemshippingdetails#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersUpdateLineItemShippingDetailsRequest}
     * @return the request
     */
    public Updatelineitemshippingdetails updatelineitemshippingdetails(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateLineItemShippingDetailsRequest content) throws java.io.IOException {
      Updatelineitemshippingdetails result = new Updatelineitemshippingdetails(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Updatelineitemshippingdetails extends ShoppingContentRequest<com.google.content.model.OrdersUpdateLineItemShippingDetailsResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/updateLineItemShippingDetails";

      /**
       * Updates ship by and delivery by dates for a line item.
       *
       * Create a request for the method "orders.updatelineitemshippingdetails".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Updatelineitemshippingdetails#execute()} method to invoke the
       * remote operation. <p> {@link Updatelineitemshippingdetails#initialize(com.google.api.client.goo
       * gleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersUpdateLineItemShippingDetailsRequest}
       * @since 1.13
       */
      protected Updatelineitemshippingdetails(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateLineItemShippingDetailsRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersUpdateLineItemShippingDetailsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Updatelineitemshippingdetails setAlt(java.lang.String alt) {
        return (Updatelineitemshippingdetails) super.setAlt(alt);
      }

      @Override
      public Updatelineitemshippingdetails setFields(java.lang.String fields) {
        return (Updatelineitemshippingdetails) super.setFields(fields);
      }

      @Override
      public Updatelineitemshippingdetails setKey(java.lang.String key) {
        return (Updatelineitemshippingdetails) super.setKey(key);
      }

      @Override
      public Updatelineitemshippingdetails setOauthToken(java.lang.String oauthToken) {
        return (Updatelineitemshippingdetails) super.setOauthToken(oauthToken);
      }

      @Override
      public Updatelineitemshippingdetails setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Updatelineitemshippingdetails) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Updatelineitemshippingdetails setQuotaUser(java.lang.String quotaUser) {
        return (Updatelineitemshippingdetails) super.setQuotaUser(quotaUser);
      }

      @Override
      public Updatelineitemshippingdetails setUserIp(java.lang.String userIp) {
        return (Updatelineitemshippingdetails) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Updatelineitemshippingdetails setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Updatelineitemshippingdetails setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Updatelineitemshippingdetails set(String parameterName, Object value) {
        return (Updatelineitemshippingdetails) super.set(parameterName, value);
      }
    }
    /**
     * Updates the merchant order ID for a given order.
     *
     * Create a request for the method "orders.updatemerchantorderid".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Updatemerchantorderid#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersUpdateMerchantOrderIdRequest}
     * @return the request
     */
    public Updatemerchantorderid updatemerchantorderid(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateMerchantOrderIdRequest content) throws java.io.IOException {
      Updatemerchantorderid result = new Updatemerchantorderid(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Updatemerchantorderid extends ShoppingContentRequest<com.google.content.model.OrdersUpdateMerchantOrderIdResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/updateMerchantOrderId";

      /**
       * Updates the merchant order ID for a given order.
       *
       * Create a request for the method "orders.updatemerchantorderid".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Updatemerchantorderid#execute()} method to invoke the remote
       * operation. <p> {@link Updatemerchantorderid#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersUpdateMerchantOrderIdRequest}
       * @since 1.13
       */
      protected Updatemerchantorderid(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateMerchantOrderIdRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersUpdateMerchantOrderIdResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Updatemerchantorderid setAlt(java.lang.String alt) {
        return (Updatemerchantorderid) super.setAlt(alt);
      }

      @Override
      public Updatemerchantorderid setFields(java.lang.String fields) {
        return (Updatemerchantorderid) super.setFields(fields);
      }

      @Override
      public Updatemerchantorderid setKey(java.lang.String key) {
        return (Updatemerchantorderid) super.setKey(key);
      }

      @Override
      public Updatemerchantorderid setOauthToken(java.lang.String oauthToken) {
        return (Updatemerchantorderid) super.setOauthToken(oauthToken);
      }

      @Override
      public Updatemerchantorderid setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Updatemerchantorderid) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Updatemerchantorderid setQuotaUser(java.lang.String quotaUser) {
        return (Updatemerchantorderid) super.setQuotaUser(quotaUser);
      }

      @Override
      public Updatemerchantorderid setUserIp(java.lang.String userIp) {
        return (Updatemerchantorderid) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Updatemerchantorderid setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Updatemerchantorderid setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Updatemerchantorderid set(String parameterName, Object value) {
        return (Updatemerchantorderid) super.set(parameterName, value);
      }
    }
    /**
     * Updates a shipment's status, carrier, and/or tracking ID.
     *
     * Create a request for the method "orders.updateshipment".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Updateshipment#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param orderId The ID of the order.
     * @param content the {@link com.google.content.model.OrdersUpdateShipmentRequest}
     * @return the request
     */
    public Updateshipment updateshipment(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateShipmentRequest content) throws java.io.IOException {
      Updateshipment result = new Updateshipment(merchantId, orderId, content);
      initialize(result);
      return result;
    }

    public class Updateshipment extends ShoppingContentRequest<com.google.content.model.OrdersUpdateShipmentResponse> {

      private static final String REST_PATH = "{merchantId}/orders/{orderId}/updateShipment";

      /**
       * Updates a shipment's status, carrier, and/or tracking ID.
       *
       * Create a request for the method "orders.updateshipment".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Updateshipment#execute()} method to invoke the remote operation.
       * <p> {@link Updateshipment#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
       * ientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param orderId The ID of the order.
       * @param content the {@link com.google.content.model.OrdersUpdateShipmentRequest}
       * @since 1.13
       */
      protected Updateshipment(java.math.BigInteger merchantId, java.lang.String orderId, com.google.content.model.OrdersUpdateShipmentRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.content.model.OrdersUpdateShipmentResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.orderId = com.google.api.client.util.Preconditions.checkNotNull(orderId, "Required parameter orderId must be specified.");
      }

      @Override
      public Updateshipment setAlt(java.lang.String alt) {
        return (Updateshipment) super.setAlt(alt);
      }

      @Override
      public Updateshipment setFields(java.lang.String fields) {
        return (Updateshipment) super.setFields(fields);
      }

      @Override
      public Updateshipment setKey(java.lang.String key) {
        return (Updateshipment) super.setKey(key);
      }

      @Override
      public Updateshipment setOauthToken(java.lang.String oauthToken) {
        return (Updateshipment) super.setOauthToken(oauthToken);
      }

      @Override
      public Updateshipment setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Updateshipment) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Updateshipment setQuotaUser(java.lang.String quotaUser) {
        return (Updateshipment) super.setQuotaUser(quotaUser);
      }

      @Override
      public Updateshipment setUserIp(java.lang.String userIp) {
        return (Updateshipment) super.setUserIp(userIp);
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Updateshipment setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the order. */
      @com.google.api.client.util.Key
      private java.lang.String orderId;

      /** The ID of the order.
       */
      public java.lang.String getOrderId() {
        return orderId;
      }

      /** The ID of the order. */
      public Updateshipment setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
        return this;
      }

      @Override
      public Updateshipment set(String parameterName, Object value) {
        return (Updateshipment) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link ShoppingContent}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ShoppingContent}. */
    @Override
    public ShoppingContent build() {
      return new ShoppingContent(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ShoppingContentRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setShoppingContentRequestInitializer(
        ShoppingContentRequestInitializer shoppingcontentRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(shoppingcontentRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
