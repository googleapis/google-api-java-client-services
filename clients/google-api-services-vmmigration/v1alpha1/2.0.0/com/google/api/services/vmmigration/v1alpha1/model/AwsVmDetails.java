/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1alpha1.model;

/**
 * AwsVmDetails describes a VM in AWS.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migrate to Virtual Machines API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AwsVmDetails extends com.google.api.client.json.GenericJson {

  /**
   * The VM Boot Option.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bootOption;

  /**
   * The total size of the storage allocated to the VM in MB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long committedStorageMb;

  /**
   * The number of cpus the VM has.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer cpuCount;

  /**
   * The number of disks the VM has.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer diskCount;

  /**
   * The display name of the VM. Note that this value is not necessarily unique.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The instance type of the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceType;

  /**
   * The memory size of the VM in MB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memoryMb;

  /**
   * The VM's OS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String osDescription;

  /**
   * Output only. The power state of the VM at the moment list was taken.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String powerState;

  /**
   * The security groups the VM belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AwsSecurityGroup> securityGroups;

  static {
    // hack to force ProGuard to consider AwsSecurityGroup used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AwsSecurityGroup.class);
  }

  /**
   * The descriptive name of the AWS's source this VM is connected to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceDescription;

  /**
   * The id of the AWS's source this VM is connected to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceId;

  /**
   * The tags of the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> tags;

  /**
   * The VM ID in AWS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmId;

  /**
   * The VPC ID the VM belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vpcId;

  /**
   * The AWS zone of the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String zone;

  /**
   * The VM Boot Option.
   * @return value or {@code null} for none
   */
  public java.lang.String getBootOption() {
    return bootOption;
  }

  /**
   * The VM Boot Option.
   * @param bootOption bootOption or {@code null} for none
   */
  public AwsVmDetails setBootOption(java.lang.String bootOption) {
    this.bootOption = bootOption;
    return this;
  }

  /**
   * The total size of the storage allocated to the VM in MB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCommittedStorageMb() {
    return committedStorageMb;
  }

  /**
   * The total size of the storage allocated to the VM in MB.
   * @param committedStorageMb committedStorageMb or {@code null} for none
   */
  public AwsVmDetails setCommittedStorageMb(java.lang.Long committedStorageMb) {
    this.committedStorageMb = committedStorageMb;
    return this;
  }

  /**
   * The number of cpus the VM has.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCpuCount() {
    return cpuCount;
  }

  /**
   * The number of cpus the VM has.
   * @param cpuCount cpuCount or {@code null} for none
   */
  public AwsVmDetails setCpuCount(java.lang.Integer cpuCount) {
    this.cpuCount = cpuCount;
    return this;
  }

  /**
   * The number of disks the VM has.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDiskCount() {
    return diskCount;
  }

  /**
   * The number of disks the VM has.
   * @param diskCount diskCount or {@code null} for none
   */
  public AwsVmDetails setDiskCount(java.lang.Integer diskCount) {
    this.diskCount = diskCount;
    return this;
  }

  /**
   * The display name of the VM. Note that this value is not necessarily unique.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the VM. Note that this value is not necessarily unique.
   * @param displayName displayName or {@code null} for none
   */
  public AwsVmDetails setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The instance type of the VM.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceType() {
    return instanceType;
  }

  /**
   * The instance type of the VM.
   * @param instanceType instanceType or {@code null} for none
   */
  public AwsVmDetails setInstanceType(java.lang.String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * The memory size of the VM in MB.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemoryMb() {
    return memoryMb;
  }

  /**
   * The memory size of the VM in MB.
   * @param memoryMb memoryMb or {@code null} for none
   */
  public AwsVmDetails setMemoryMb(java.lang.Integer memoryMb) {
    this.memoryMb = memoryMb;
    return this;
  }

  /**
   * The VM's OS.
   * @return value or {@code null} for none
   */
  public java.lang.String getOsDescription() {
    return osDescription;
  }

  /**
   * The VM's OS.
   * @param osDescription osDescription or {@code null} for none
   */
  public AwsVmDetails setOsDescription(java.lang.String osDescription) {
    this.osDescription = osDescription;
    return this;
  }

  /**
   * Output only. The power state of the VM at the moment list was taken.
   * @return value or {@code null} for none
   */
  public java.lang.String getPowerState() {
    return powerState;
  }

  /**
   * Output only. The power state of the VM at the moment list was taken.
   * @param powerState powerState or {@code null} for none
   */
  public AwsVmDetails setPowerState(java.lang.String powerState) {
    this.powerState = powerState;
    return this;
  }

  /**
   * The security groups the VM belongs to.
   * @return value or {@code null} for none
   */
  public java.util.List<AwsSecurityGroup> getSecurityGroups() {
    return securityGroups;
  }

  /**
   * The security groups the VM belongs to.
   * @param securityGroups securityGroups or {@code null} for none
   */
  public AwsVmDetails setSecurityGroups(java.util.List<AwsSecurityGroup> securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * The descriptive name of the AWS's source this VM is connected to.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceDescription() {
    return sourceDescription;
  }

  /**
   * The descriptive name of the AWS's source this VM is connected to.
   * @param sourceDescription sourceDescription or {@code null} for none
   */
  public AwsVmDetails setSourceDescription(java.lang.String sourceDescription) {
    this.sourceDescription = sourceDescription;
    return this;
  }

  /**
   * The id of the AWS's source this VM is connected to.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceId() {
    return sourceId;
  }

  /**
   * The id of the AWS's source this VM is connected to.
   * @param sourceId sourceId or {@code null} for none
   */
  public AwsVmDetails setSourceId(java.lang.String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

  /**
   * The tags of the VM.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getTags() {
    return tags;
  }

  /**
   * The tags of the VM.
   * @param tags tags or {@code null} for none
   */
  public AwsVmDetails setTags(java.util.Map<String, java.lang.String> tags) {
    this.tags = tags;
    return this;
  }

  /**
   * The VM ID in AWS.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmId() {
    return vmId;
  }

  /**
   * The VM ID in AWS.
   * @param vmId vmId or {@code null} for none
   */
  public AwsVmDetails setVmId(java.lang.String vmId) {
    this.vmId = vmId;
    return this;
  }

  /**
   * The VPC ID the VM belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getVpcId() {
    return vpcId;
  }

  /**
   * The VPC ID the VM belongs to.
   * @param vpcId vpcId or {@code null} for none
   */
  public AwsVmDetails setVpcId(java.lang.String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * The AWS zone of the VM.
   * @return value or {@code null} for none
   */
  public java.lang.String getZone() {
    return zone;
  }

  /**
   * The AWS zone of the VM.
   * @param zone zone or {@code null} for none
   */
  public AwsVmDetails setZone(java.lang.String zone) {
    this.zone = zone;
    return this;
  }

  @Override
  public AwsVmDetails set(String fieldName, Object value) {
    return (AwsVmDetails) super.set(fieldName, value);
  }

  @Override
  public AwsVmDetails clone() {
    return (AwsVmDetails) super.clone();
  }

}
