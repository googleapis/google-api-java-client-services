/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * BackupSchedule expresses the automated backup creation specification for a Spanner database.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupSchedule extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The encryption configuration that is used to encrypt the backup. If this field is not
   * specified, the backup uses the same encryption configuration as the database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CreateBackupEncryptionConfig encryptionConfig;

  /**
   * The schedule creates only full backups.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FullBackupSpec fullBackupSpec;

  /**
   * The schedule creates incremental backup chains.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IncrementalBackupSpec incrementalBackupSpec;

  /**
   * Identifier. Output only for the CreateBackupSchedule operation. Required for the
   * UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which
   * cannot be changed. Values are of the form
   * `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name
   * must be between 2 and 60 characters in length.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The retention duration of a backup that must be at least 6 hours and at most 366
   * days. The backup is eligible to be automatically deleted once the retention period has elapsed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String retentionDuration;

  /**
   * Optional. The schedule specification based on which the backup creations are triggered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BackupScheduleSpec spec;

  /**
   * Output only. The timestamp at which the schedule was last updated. If the schedule has never
   * been updated, this field contains the timestamp when the schedule was first created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. The encryption configuration that is used to encrypt the backup. If this field is not
   * specified, the backup uses the same encryption configuration as the database.
   * @return value or {@code null} for none
   */
  public CreateBackupEncryptionConfig getEncryptionConfig() {
    return encryptionConfig;
  }

  /**
   * Optional. The encryption configuration that is used to encrypt the backup. If this field is not
   * specified, the backup uses the same encryption configuration as the database.
   * @param encryptionConfig encryptionConfig or {@code null} for none
   */
  public BackupSchedule setEncryptionConfig(CreateBackupEncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * The schedule creates only full backups.
   * @return value or {@code null} for none
   */
  public FullBackupSpec getFullBackupSpec() {
    return fullBackupSpec;
  }

  /**
   * The schedule creates only full backups.
   * @param fullBackupSpec fullBackupSpec or {@code null} for none
   */
  public BackupSchedule setFullBackupSpec(FullBackupSpec fullBackupSpec) {
    this.fullBackupSpec = fullBackupSpec;
    return this;
  }

  /**
   * The schedule creates incremental backup chains.
   * @return value or {@code null} for none
   */
  public IncrementalBackupSpec getIncrementalBackupSpec() {
    return incrementalBackupSpec;
  }

  /**
   * The schedule creates incremental backup chains.
   * @param incrementalBackupSpec incrementalBackupSpec or {@code null} for none
   */
  public BackupSchedule setIncrementalBackupSpec(IncrementalBackupSpec incrementalBackupSpec) {
    this.incrementalBackupSpec = incrementalBackupSpec;
    return this;
  }

  /**
   * Identifier. Output only for the CreateBackupSchedule operation. Required for the
   * UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which
   * cannot be changed. Values are of the form
   * `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name
   * must be between 2 and 60 characters in length.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. Output only for the CreateBackupSchedule operation. Required for the
   * UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which
   * cannot be changed. Values are of the form
   * `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name
   * must be between 2 and 60 characters in length.
   * @param name name or {@code null} for none
   */
  public BackupSchedule setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The retention duration of a backup that must be at least 6 hours and at most 366
   * days. The backup is eligible to be automatically deleted once the retention period has elapsed.
   * @return value or {@code null} for none
   */
  public String getRetentionDuration() {
    return retentionDuration;
  }

  /**
   * Optional. The retention duration of a backup that must be at least 6 hours and at most 366
   * days. The backup is eligible to be automatically deleted once the retention period has elapsed.
   * @param retentionDuration retentionDuration or {@code null} for none
   */
  public BackupSchedule setRetentionDuration(String retentionDuration) {
    this.retentionDuration = retentionDuration;
    return this;
  }

  /**
   * Optional. The schedule specification based on which the backup creations are triggered.
   * @return value or {@code null} for none
   */
  public BackupScheduleSpec getSpec() {
    return spec;
  }

  /**
   * Optional. The schedule specification based on which the backup creations are triggered.
   * @param spec spec or {@code null} for none
   */
  public BackupSchedule setSpec(BackupScheduleSpec spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Output only. The timestamp at which the schedule was last updated. If the schedule has never
   * been updated, this field contains the timestamp when the schedule was first created.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp at which the schedule was last updated. If the schedule has never
   * been updated, this field contains the timestamp when the schedule was first created.
   * @param updateTime updateTime or {@code null} for none
   */
  public BackupSchedule setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public BackupSchedule set(String fieldName, Object value) {
    return (BackupSchedule) super.set(fieldName, value);
  }

  @Override
  public BackupSchedule clone() {
    return (BackupSchedule) super.clone();
  }

}
