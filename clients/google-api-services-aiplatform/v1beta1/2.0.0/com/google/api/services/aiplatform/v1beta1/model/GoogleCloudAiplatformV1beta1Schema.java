/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Represents a select subset of an OpenAPI 3.0 Schema object. Schema is used to define the format
 * of input/output data. More fields may be added in the future as needed. https://github.com/OAI
 * /OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1Schema extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The description of the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Possible values of the element of Type.STRING with enum format. For example we can
   * define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH",
   * "WEST"]}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("enum")
  private java.util.List<java.lang.String> enum__;

  /**
   * Optional. Example of the object. Will only populated when the object is the root.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Object example;

  /**
   * Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER
   * type: int32, int64
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String format;

  /**
   * Optional. Schema of the elements of Type.ARRAY.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1Schema items;

  /**
   * Optional. Indicates if the value may be null.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean nullable;

  /**
   * Optional. Properties of Type.OBJECT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudAiplatformV1beta1Schema> properties;

  /**
   * Optional. Required properties of Type.OBJECT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> required;

  /**
   * Optional. The type of the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Optional. The description of the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. The description of the data.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Possible values of the element of Type.STRING with enum format. For example we can
   * define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH",
   * "WEST"]}
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEnum() {
    return enum__;
  }

  /**
   * Optional. Possible values of the element of Type.STRING with enum format. For example we can
   * define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH",
   * "WEST"]}
   * @param enum__ enum__ or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setEnum(java.util.List<java.lang.String> enum__) {
    this.enum__ = enum__;
    return this;
  }

  /**
   * Optional. Example of the object. Will only populated when the object is the root.
   * @return value or {@code null} for none
   */
  public java.lang.Object getExample() {
    return example;
  }

  /**
   * Optional. Example of the object. Will only populated when the object is the root.
   * @param example example or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setExample(java.lang.Object example) {
    this.example = example;
    return this;
  }

  /**
   * Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER
   * type: int32, int64
   * @return value or {@code null} for none
   */
  public java.lang.String getFormat() {
    return format;
  }

  /**
   * Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER
   * type: int32, int64
   * @param format format or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setFormat(java.lang.String format) {
    this.format = format;
    return this;
  }

  /**
   * Optional. Schema of the elements of Type.ARRAY.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema getItems() {
    return items;
  }

  /**
   * Optional. Schema of the elements of Type.ARRAY.
   * @param items items or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setItems(GoogleCloudAiplatformV1beta1Schema items) {
    this.items = items;
    return this;
  }

  /**
   * Optional. Indicates if the value may be null.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNullable() {
    return nullable;
  }

  /**
   * Optional. Indicates if the value may be null.
   * @param nullable nullable or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setNullable(java.lang.Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

  /**
   * Optional. Properties of Type.OBJECT.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudAiplatformV1beta1Schema> getProperties() {
    return properties;
  }

  /**
   * Optional. Properties of Type.OBJECT.
   * @param properties properties or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setProperties(java.util.Map<String, GoogleCloudAiplatformV1beta1Schema> properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Optional. Required properties of Type.OBJECT.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRequired() {
    return required;
  }

  /**
   * Optional. Required properties of Type.OBJECT.
   * @param required required or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setRequired(java.util.List<java.lang.String> required) {
    this.required = required;
    return this;
  }

  /**
   * Optional. The type of the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Optional. The type of the data.
   * @param type type or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1Schema setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1Schema set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1Schema) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1Schema clone() {
    return (GoogleCloudAiplatformV1beta1Schema) super.clone();
  }

}
