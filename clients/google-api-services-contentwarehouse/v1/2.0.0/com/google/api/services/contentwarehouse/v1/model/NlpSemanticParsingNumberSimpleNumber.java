/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next ID: 8
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingNumberSimpleNumber extends com.google.api.client.json.GenericJson {

  /**
   * The type of decimal mark that was present before normalization. Note: different locales may use
   * different decimal marks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String decimalMark;

  /**
   * The type of digit grouping delimiter that was present before normalization. Note: different
   * locales may use different digit grouping delimiters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupingDelimiter;

  /**
   * We expect this field to be set only when grouping_delimiter is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupingSystem;

  /**
   * Contains a normalized string representation of the numeric value that has: * No digit grouping
   * delimiter (e.g. "," in english). * Decimal mark (if present) as "." (dot). This field is kept
   * for backward compatibility. The field is also available in number.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String normalizedValue;

  /**
   * Stores prefix output by the GRM number grammar (http://b/28623478).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String prefix;

  /**
   * Stores suffix output
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String suffix;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The type of decimal mark that was present before normalization. Note: different locales may use
   * different decimal marks.
   * @return value or {@code null} for none
   */
  public java.lang.String getDecimalMark() {
    return decimalMark;
  }

  /**
   * The type of decimal mark that was present before normalization. Note: different locales may use
   * different decimal marks.
   * @param decimalMark decimalMark or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setDecimalMark(java.lang.String decimalMark) {
    this.decimalMark = decimalMark;
    return this;
  }

  /**
   * The type of digit grouping delimiter that was present before normalization. Note: different
   * locales may use different digit grouping delimiters.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupingDelimiter() {
    return groupingDelimiter;
  }

  /**
   * The type of digit grouping delimiter that was present before normalization. Note: different
   * locales may use different digit grouping delimiters.
   * @param groupingDelimiter groupingDelimiter or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setGroupingDelimiter(java.lang.String groupingDelimiter) {
    this.groupingDelimiter = groupingDelimiter;
    return this;
  }

  /**
   * We expect this field to be set only when grouping_delimiter is set.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupingSystem() {
    return groupingSystem;
  }

  /**
   * We expect this field to be set only when grouping_delimiter is set.
   * @param groupingSystem groupingSystem or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setGroupingSystem(java.lang.String groupingSystem) {
    this.groupingSystem = groupingSystem;
    return this;
  }

  /**
   * Contains a normalized string representation of the numeric value that has: * No digit grouping
   * delimiter (e.g. "," in english). * Decimal mark (if present) as "." (dot). This field is kept
   * for backward compatibility. The field is also available in number.proto
   * @return value or {@code null} for none
   */
  public java.lang.String getNormalizedValue() {
    return normalizedValue;
  }

  /**
   * Contains a normalized string representation of the numeric value that has: * No digit grouping
   * delimiter (e.g. "," in english). * Decimal mark (if present) as "." (dot). This field is kept
   * for backward compatibility. The field is also available in number.proto
   * @param normalizedValue normalizedValue or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setNormalizedValue(java.lang.String normalizedValue) {
    this.normalizedValue = normalizedValue;
    return this;
  }

  /**
   * Stores prefix output by the GRM number grammar (http://b/28623478).
   * @return value or {@code null} for none
   */
  public java.lang.String getPrefix() {
    return prefix;
  }

  /**
   * Stores prefix output by the GRM number grammar (http://b/28623478).
   * @param prefix prefix or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setPrefix(java.lang.String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * Stores suffix output
   * @return value or {@code null} for none
   */
  public java.lang.String getSuffix() {
    return suffix;
  }

  /**
   * Stores suffix output
   * @param suffix suffix or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setSuffix(java.lang.String suffix) {
    this.suffix = suffix;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * @param type type or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public NlpSemanticParsingNumberSimpleNumber set(String fieldName, Object value) {
    return (NlpSemanticParsingNumberSimpleNumber) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingNumberSimpleNumber clone() {
    return (NlpSemanticParsingNumberSimpleNumber) super.clone();
  }

}
