/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A document contains the raw text contents of the document as well as an analysis. The document
 * can be split into tokens which can contain information about POS tags and dependency relations.
 * The document can also contain entities and mentions of these entities in the document. Next
 * available id: 36
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSaftDocument extends com.google.api.client.json.GenericJson {

  /**
   * Annotated phrases in the document that are not semantically well-defined mentions of entities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftAnnotatedPhrase> annotatedPhrase;

  static {
    // hack to force ProGuard to consider NlpSaftAnnotatedPhrase used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NlpSaftAnnotatedPhrase.class);
  }

  /**
   * Generic annotations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet annotations;

  /**
   * Document author(s).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> author;

  /**
   * Document's byline date, if available: this is the date that will be shown in the snippets in
   * web search results. It is stored as the number of seconds since epoch. See
   * segindexer/compositedoc.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long bylineDate;

  /**
   * Constituency parse tree nodes for the sentences in this document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftConstituencyNode> constituencyNode;

  static {
    // hack to force ProGuard to consider NlpSaftConstituencyNode used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(NlpSaftConstituencyNode.class);
  }

  /**
   * The root node of the constituency tree for each sentence. If non-empty, the list of roots will
   * be aligned with the sentences in the document. Note that some sentences may not have been
   * parsed for various reasons; these sentences will be annotated with placeholder "stub parses".
   * For details, see //nlp/saft/components/constituents/util/stub-parse.h.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> constituencyRoot;

  /**
   * Stores minimum of first time google successfully crawled a document, or indexed the document
   * with contents (i.e, not roboted). It is stored as the number of seconds since epoch. See
   * quality/historical/signals/firstseen/firstseen.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long contentFirstseen;

  /**
   * Optional document content_type (from webutil/http/content-type.proto). Used for setting the
   * content_type when converting the SAFT Document to a CompositeDoc. Will be inferred if not given
   * here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer contentType;

  /**
   * Age of the content of the document. For details, see:
   * quality/historical/shingle/signals/contentage.proto The format has been translated to a
   * canonical timestamp (seconds since epoch).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long contentage;

  /**
   * Document anchor date in YYYYMMDDhhmmss format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String date;

  /**
   * Identifier for document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String docid;

  /**
   * Entities in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftEntity> entity;

  /**
   * Entity labels used in this document. This field is used to define labels for the
   * Entity::entity_type_probability field, which contains corresponding probabilities. WARNING:
   * This field is deprecated. go/saft-replace-deprecated-entity-type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> entityLabel;

  /**
   * Focus entity. For lexicon articles, like Wikipedia pages, a document is often about a certain
   * entity. This is the local entity id of the focus entity for the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer focusEntity;

  /**
   * Flag for indicating that the document is a gold-standard document. This can be used for putting
   * additional weight on human-labeled documents in contrast to automatically labeled annotations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean golden;

  /**
   * HTTP header for document. If the HTTP headers field is set it should be the complete header
   * including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be
   * valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as
   * opaque data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String httpHeaders;

  /**
   * The hyperlinks in the document. Multiple hyperlinks are sorted in left-to-right order.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftHyperlink> hyperlink;

  /**
   * Generic labeled spans (produced by the span labeling framework, go/saft-span-labeling). The map
   * key identifies spans of the same type. By convention, it should be of the form
   * "team_name/span_type_name".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, NlpSaftLabeledSpans> labeledSpans;

  /**
   * Document language (default is English). This field's value maps cleanly to the
   * i18n.languages.Language proto enum (i18n::languages::Language in C++).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer language;

  /**
   * Last significant update of the page content, in the same format as the contentage field, and
   * also derived from ContentAge.last_significant_update in
   * quality/historical/shingle/signals/contentage.proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long lastSignificantUpdate;

  /**
   * Measures in the documents. This covers both time expressions as well as physical quantities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftMeasure> measure;

  /**
   * True if this document contains privacy sensitive data. When the document is transferred in RPC
   * calls the RPC should use SSL_PRIVACY_AND_INTEGRITY security level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean privacySensitive;

  /**
   * Relations between entities in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftRelation> relation;

  /**
   * True if some RPC which touched this document had an error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean rpcError;

  /**
   * The semantic nodes for the document represent arbitrary types of higher-level abstractions
   * beyond entity mention coreference and binary relations between entities. These may include:
   * n-ary relations, semantic frames or events. The semantic nodes for a document are the nodes in
   * a directed acyclic graph, with an adjacency list representation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftSemanticNode> semanticNode;

  /**
   * Sub-sections for document for dividing a document into volumes, parts, chapters, sections, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftDocument> subsection;

  /**
   * Document's syntactic date (e.g. date explicitly mentioned in the URL of the document or in the
   * document title). It is stored as the number of seconds since epoch. See
   * quality/timebased/syntacticdate/proto/syntactic-date.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long syntacticDate;

  /**
   * Raw text contents of document. (In docjoin attachments from the SAFT goldmine annotator this
   * field will be empty.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * Optional document title.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Tokenization of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftToken> token;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftDocumentTopic> topic;

  /**
   * Whether to enable component tracing during analysis of this document. See http://go/saft-
   * tracing for details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean trace;

  /**
   * Source document URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Annotated phrases in the document that are not semantically well-defined mentions of entities.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftAnnotatedPhrase> getAnnotatedPhrase() {
    return annotatedPhrase;
  }

  /**
   * Annotated phrases in the document that are not semantically well-defined mentions of entities.
   * @param annotatedPhrase annotatedPhrase or {@code null} for none
   */
  public NlpSaftDocument setAnnotatedPhrase(java.util.List<NlpSaftAnnotatedPhrase> annotatedPhrase) {
    this.annotatedPhrase = annotatedPhrase;
    return this;
  }

  /**
   * Generic annotations.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getAnnotations() {
    return annotations;
  }

  /**
   * Generic annotations.
   * @param annotations annotations or {@code null} for none
   */
  public NlpSaftDocument setAnnotations(Proto2BridgeMessageSet annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Document author(s).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAuthor() {
    return author;
  }

  /**
   * Document author(s).
   * @param author author or {@code null} for none
   */
  public NlpSaftDocument setAuthor(java.util.List<java.lang.String> author) {
    this.author = author;
    return this;
  }

  /**
   * Document's byline date, if available: this is the date that will be shown in the snippets in
   * web search results. It is stored as the number of seconds since epoch. See
   * segindexer/compositedoc.proto
   * @return value or {@code null} for none
   */
  public java.lang.Long getBylineDate() {
    return bylineDate;
  }

  /**
   * Document's byline date, if available: this is the date that will be shown in the snippets in
   * web search results. It is stored as the number of seconds since epoch. See
   * segindexer/compositedoc.proto
   * @param bylineDate bylineDate or {@code null} for none
   */
  public NlpSaftDocument setBylineDate(java.lang.Long bylineDate) {
    this.bylineDate = bylineDate;
    return this;
  }

  /**
   * Constituency parse tree nodes for the sentences in this document.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftConstituencyNode> getConstituencyNode() {
    return constituencyNode;
  }

  /**
   * Constituency parse tree nodes for the sentences in this document.
   * @param constituencyNode constituencyNode or {@code null} for none
   */
  public NlpSaftDocument setConstituencyNode(java.util.List<NlpSaftConstituencyNode> constituencyNode) {
    this.constituencyNode = constituencyNode;
    return this;
  }

  /**
   * The root node of the constituency tree for each sentence. If non-empty, the list of roots will
   * be aligned with the sentences in the document. Note that some sentences may not have been
   * parsed for various reasons; these sentences will be annotated with placeholder "stub parses".
   * For details, see //nlp/saft/components/constituents/util/stub-parse.h.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getConstituencyRoot() {
    return constituencyRoot;
  }

  /**
   * The root node of the constituency tree for each sentence. If non-empty, the list of roots will
   * be aligned with the sentences in the document. Note that some sentences may not have been
   * parsed for various reasons; these sentences will be annotated with placeholder "stub parses".
   * For details, see //nlp/saft/components/constituents/util/stub-parse.h.
   * @param constituencyRoot constituencyRoot or {@code null} for none
   */
  public NlpSaftDocument setConstituencyRoot(java.util.List<java.lang.Integer> constituencyRoot) {
    this.constituencyRoot = constituencyRoot;
    return this;
  }

  /**
   * Stores minimum of first time google successfully crawled a document, or indexed the document
   * with contents (i.e, not roboted). It is stored as the number of seconds since epoch. See
   * quality/historical/signals/firstseen/firstseen.proto
   * @return value or {@code null} for none
   */
  public java.lang.Long getContentFirstseen() {
    return contentFirstseen;
  }

  /**
   * Stores minimum of first time google successfully crawled a document, or indexed the document
   * with contents (i.e, not roboted). It is stored as the number of seconds since epoch. See
   * quality/historical/signals/firstseen/firstseen.proto
   * @param contentFirstseen contentFirstseen or {@code null} for none
   */
  public NlpSaftDocument setContentFirstseen(java.lang.Long contentFirstseen) {
    this.contentFirstseen = contentFirstseen;
    return this;
  }

  /**
   * Optional document content_type (from webutil/http/content-type.proto). Used for setting the
   * content_type when converting the SAFT Document to a CompositeDoc. Will be inferred if not given
   * here.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContentType() {
    return contentType;
  }

  /**
   * Optional document content_type (from webutil/http/content-type.proto). Used for setting the
   * content_type when converting the SAFT Document to a CompositeDoc. Will be inferred if not given
   * here.
   * @param contentType contentType or {@code null} for none
   */
  public NlpSaftDocument setContentType(java.lang.Integer contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Age of the content of the document. For details, see:
   * quality/historical/shingle/signals/contentage.proto The format has been translated to a
   * canonical timestamp (seconds since epoch).
   * @return value or {@code null} for none
   */
  public java.lang.Long getContentage() {
    return contentage;
  }

  /**
   * Age of the content of the document. For details, see:
   * quality/historical/shingle/signals/contentage.proto The format has been translated to a
   * canonical timestamp (seconds since epoch).
   * @param contentage contentage or {@code null} for none
   */
  public NlpSaftDocument setContentage(java.lang.Long contentage) {
    this.contentage = contentage;
    return this;
  }

  /**
   * Document anchor date in YYYYMMDDhhmmss format.
   * @return value or {@code null} for none
   */
  public java.lang.String getDate() {
    return date;
  }

  /**
   * Document anchor date in YYYYMMDDhhmmss format.
   * @param date date or {@code null} for none
   */
  public NlpSaftDocument setDate(java.lang.String date) {
    this.date = date;
    return this;
  }

  /**
   * Identifier for document.
   * @return value or {@code null} for none
   */
  public java.lang.String getDocid() {
    return docid;
  }

  /**
   * Identifier for document.
   * @param docid docid or {@code null} for none
   */
  public NlpSaftDocument setDocid(java.lang.String docid) {
    this.docid = docid;
    return this;
  }

  /**
   * Entities in the document.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftEntity> getEntity() {
    return entity;
  }

  /**
   * Entities in the document.
   * @param entity entity or {@code null} for none
   */
  public NlpSaftDocument setEntity(java.util.List<NlpSaftEntity> entity) {
    this.entity = entity;
    return this;
  }

  /**
   * Entity labels used in this document. This field is used to define labels for the
   * Entity::entity_type_probability field, which contains corresponding probabilities. WARNING:
   * This field is deprecated. go/saft-replace-deprecated-entity-type
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEntityLabel() {
    return entityLabel;
  }

  /**
   * Entity labels used in this document. This field is used to define labels for the
   * Entity::entity_type_probability field, which contains corresponding probabilities. WARNING:
   * This field is deprecated. go/saft-replace-deprecated-entity-type
   * @param entityLabel entityLabel or {@code null} for none
   */
  public NlpSaftDocument setEntityLabel(java.util.List<java.lang.String> entityLabel) {
    this.entityLabel = entityLabel;
    return this;
  }

  /**
   * Focus entity. For lexicon articles, like Wikipedia pages, a document is often about a certain
   * entity. This is the local entity id of the focus entity for the document.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFocusEntity() {
    return focusEntity;
  }

  /**
   * Focus entity. For lexicon articles, like Wikipedia pages, a document is often about a certain
   * entity. This is the local entity id of the focus entity for the document.
   * @param focusEntity focusEntity or {@code null} for none
   */
  public NlpSaftDocument setFocusEntity(java.lang.Integer focusEntity) {
    this.focusEntity = focusEntity;
    return this;
  }

  /**
   * Flag for indicating that the document is a gold-standard document. This can be used for putting
   * additional weight on human-labeled documents in contrast to automatically labeled annotations.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGolden() {
    return golden;
  }

  /**
   * Flag for indicating that the document is a gold-standard document. This can be used for putting
   * additional weight on human-labeled documents in contrast to automatically labeled annotations.
   * @param golden golden or {@code null} for none
   */
  public NlpSaftDocument setGolden(java.lang.Boolean golden) {
    this.golden = golden;
    return this;
  }

  /**
   * HTTP header for document. If the HTTP headers field is set it should be the complete header
   * including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be
   * valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as
   * opaque data.
   * @see #decodeHttpHeaders()
   * @return value or {@code null} for none
   */
  public java.lang.String getHttpHeaders() {
    return httpHeaders;
  }

  /**
   * HTTP header for document. If the HTTP headers field is set it should be the complete header
   * including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be
   * valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as
   * opaque data.
   * @see #getHttpHeaders()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeHttpHeaders() {
    return com.google.api.client.util.Base64.decodeBase64(httpHeaders);
  }

  /**
   * HTTP header for document. If the HTTP headers field is set it should be the complete header
   * including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be
   * valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as
   * opaque data.
   * @see #encodeHttpHeaders()
   * @param httpHeaders httpHeaders or {@code null} for none
   */
  public NlpSaftDocument setHttpHeaders(java.lang.String httpHeaders) {
    this.httpHeaders = httpHeaders;
    return this;
  }

  /**
   * HTTP header for document. If the HTTP headers field is set it should be the complete header
   * including the HTTP status line and the trailing cr/nl. HTTP headers are not required to be
   * valid UTF-8. Per the HTTP/1.1 Syntax (RFC7230) standard, non-ASCII octets should be treated as
   * opaque data.
   * @see #setHttpHeaders()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public NlpSaftDocument encodeHttpHeaders(byte[] httpHeaders) {
    this.httpHeaders = com.google.api.client.util.Base64.encodeBase64URLSafeString(httpHeaders);
    return this;
  }

  /**
   * The hyperlinks in the document. Multiple hyperlinks are sorted in left-to-right order.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftHyperlink> getHyperlink() {
    return hyperlink;
  }

  /**
   * The hyperlinks in the document. Multiple hyperlinks are sorted in left-to-right order.
   * @param hyperlink hyperlink or {@code null} for none
   */
  public NlpSaftDocument setHyperlink(java.util.List<NlpSaftHyperlink> hyperlink) {
    this.hyperlink = hyperlink;
    return this;
  }

  /**
   * Generic labeled spans (produced by the span labeling framework, go/saft-span-labeling). The map
   * key identifies spans of the same type. By convention, it should be of the form
   * "team_name/span_type_name".
   * @return value or {@code null} for none
   */
  public java.util.Map<String, NlpSaftLabeledSpans> getLabeledSpans() {
    return labeledSpans;
  }

  /**
   * Generic labeled spans (produced by the span labeling framework, go/saft-span-labeling). The map
   * key identifies spans of the same type. By convention, it should be of the form
   * "team_name/span_type_name".
   * @param labeledSpans labeledSpans or {@code null} for none
   */
  public NlpSaftDocument setLabeledSpans(java.util.Map<String, NlpSaftLabeledSpans> labeledSpans) {
    this.labeledSpans = labeledSpans;
    return this;
  }

  /**
   * Document language (default is English). This field's value maps cleanly to the
   * i18n.languages.Language proto enum (i18n::languages::Language in C++).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLanguage() {
    return language;
  }

  /**
   * Document language (default is English). This field's value maps cleanly to the
   * i18n.languages.Language proto enum (i18n::languages::Language in C++).
   * @param language language or {@code null} for none
   */
  public NlpSaftDocument setLanguage(java.lang.Integer language) {
    this.language = language;
    return this;
  }

  /**
   * Last significant update of the page content, in the same format as the contentage field, and
   * also derived from ContentAge.last_significant_update in
   * quality/historical/shingle/signals/contentage.proto.
   * @return value or {@code null} for none
   */
  public java.lang.Long getLastSignificantUpdate() {
    return lastSignificantUpdate;
  }

  /**
   * Last significant update of the page content, in the same format as the contentage field, and
   * also derived from ContentAge.last_significant_update in
   * quality/historical/shingle/signals/contentage.proto.
   * @param lastSignificantUpdate lastSignificantUpdate or {@code null} for none
   */
  public NlpSaftDocument setLastSignificantUpdate(java.lang.Long lastSignificantUpdate) {
    this.lastSignificantUpdate = lastSignificantUpdate;
    return this;
  }

  /**
   * Measures in the documents. This covers both time expressions as well as physical quantities.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftMeasure> getMeasure() {
    return measure;
  }

  /**
   * Measures in the documents. This covers both time expressions as well as physical quantities.
   * @param measure measure or {@code null} for none
   */
  public NlpSaftDocument setMeasure(java.util.List<NlpSaftMeasure> measure) {
    this.measure = measure;
    return this;
  }

  /**
   * True if this document contains privacy sensitive data. When the document is transferred in RPC
   * calls the RPC should use SSL_PRIVACY_AND_INTEGRITY security level.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPrivacySensitive() {
    return privacySensitive;
  }

  /**
   * True if this document contains privacy sensitive data. When the document is transferred in RPC
   * calls the RPC should use SSL_PRIVACY_AND_INTEGRITY security level.
   * @param privacySensitive privacySensitive or {@code null} for none
   */
  public NlpSaftDocument setPrivacySensitive(java.lang.Boolean privacySensitive) {
    this.privacySensitive = privacySensitive;
    return this;
  }

  /**
   * Relations between entities in the document.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftRelation> getRelation() {
    return relation;
  }

  /**
   * Relations between entities in the document.
   * @param relation relation or {@code null} for none
   */
  public NlpSaftDocument setRelation(java.util.List<NlpSaftRelation> relation) {
    this.relation = relation;
    return this;
  }

  /**
   * True if some RPC which touched this document had an error.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRpcError() {
    return rpcError;
  }

  /**
   * True if some RPC which touched this document had an error.
   * @param rpcError rpcError or {@code null} for none
   */
  public NlpSaftDocument setRpcError(java.lang.Boolean rpcError) {
    this.rpcError = rpcError;
    return this;
  }

  /**
   * The semantic nodes for the document represent arbitrary types of higher-level abstractions
   * beyond entity mention coreference and binary relations between entities. These may include:
   * n-ary relations, semantic frames or events. The semantic nodes for a document are the nodes in
   * a directed acyclic graph, with an adjacency list representation.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftSemanticNode> getSemanticNode() {
    return semanticNode;
  }

  /**
   * The semantic nodes for the document represent arbitrary types of higher-level abstractions
   * beyond entity mention coreference and binary relations between entities. These may include:
   * n-ary relations, semantic frames or events. The semantic nodes for a document are the nodes in
   * a directed acyclic graph, with an adjacency list representation.
   * @param semanticNode semanticNode or {@code null} for none
   */
  public NlpSaftDocument setSemanticNode(java.util.List<NlpSaftSemanticNode> semanticNode) {
    this.semanticNode = semanticNode;
    return this;
  }

  /**
   * Sub-sections for document for dividing a document into volumes, parts, chapters, sections, etc.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftDocument> getSubsection() {
    return subsection;
  }

  /**
   * Sub-sections for document for dividing a document into volumes, parts, chapters, sections, etc.
   * @param subsection subsection or {@code null} for none
   */
  public NlpSaftDocument setSubsection(java.util.List<NlpSaftDocument> subsection) {
    this.subsection = subsection;
    return this;
  }

  /**
   * Document's syntactic date (e.g. date explicitly mentioned in the URL of the document or in the
   * document title). It is stored as the number of seconds since epoch. See
   * quality/timebased/syntacticdate/proto/syntactic-date.proto
   * @return value or {@code null} for none
   */
  public java.lang.Long getSyntacticDate() {
    return syntacticDate;
  }

  /**
   * Document's syntactic date (e.g. date explicitly mentioned in the URL of the document or in the
   * document title). It is stored as the number of seconds since epoch. See
   * quality/timebased/syntacticdate/proto/syntactic-date.proto
   * @param syntacticDate syntacticDate or {@code null} for none
   */
  public NlpSaftDocument setSyntacticDate(java.lang.Long syntacticDate) {
    this.syntacticDate = syntacticDate;
    return this;
  }

  /**
   * Raw text contents of document. (In docjoin attachments from the SAFT goldmine annotator this
   * field will be empty.)
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Raw text contents of document. (In docjoin attachments from the SAFT goldmine annotator this
   * field will be empty.)
   * @param text text or {@code null} for none
   */
  public NlpSaftDocument setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * Optional document title.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Optional document title.
   * @param title title or {@code null} for none
   */
  public NlpSaftDocument setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Tokenization of the document.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftToken> getToken() {
    return token;
  }

  /**
   * Tokenization of the document.
   * @param token token or {@code null} for none
   */
  public NlpSaftDocument setToken(java.util.List<NlpSaftToken> token) {
    this.token = token;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftDocumentTopic> getTopic() {
    return topic;
  }

  /**
   * @param topic topic or {@code null} for none
   */
  public NlpSaftDocument setTopic(java.util.List<NlpSaftDocumentTopic> topic) {
    this.topic = topic;
    return this;
  }

  /**
   * Whether to enable component tracing during analysis of this document. See http://go/saft-
   * tracing for details.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTrace() {
    return trace;
  }

  /**
   * Whether to enable component tracing during analysis of this document. See http://go/saft-
   * tracing for details.
   * @param trace trace or {@code null} for none
   */
  public NlpSaftDocument setTrace(java.lang.Boolean trace) {
    this.trace = trace;
    return this;
  }

  /**
   * Source document URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Source document URL.
   * @param url url or {@code null} for none
   */
  public NlpSaftDocument setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public NlpSaftDocument set(String fieldName, Object value) {
    return (NlpSaftDocument) super.set(fieldName, value);
  }

  @Override
  public NlpSaftDocument clone() {
    return (NlpSaftDocument) super.clone();
  }

}
