/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.displayvideo.v1.model;

/**
 * Settings that control how budget is allocated.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Display & Video 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LineItemBudget extends com.google.api.client.json.GenericJson {

  /**
   * Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is
   * only applicable when automatic budget allocation is enabled for the parent insertion order.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String budgetAllocationType;

  /**
   * Output only. The budget unit specifies whether the budget is currency based or impression
   * based. This value is inherited from the parent insertion order.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String budgetUnit;

  /**
   * The maximum budget amount the line item will spend. Must be greater than 0. When
   * budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is
   * immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit
   * is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros
   * of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the
   * currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions
   * to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will
   * be ignored by the system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long maxAmount;

  /**
   * Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is
   * only applicable when automatic budget allocation is enabled for the parent insertion order.
   * @return value or {@code null} for none
   */
  public java.lang.String getBudgetAllocationType() {
    return budgetAllocationType;
  }

  /**
   * Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is
   * only applicable when automatic budget allocation is enabled for the parent insertion order.
   * @param budgetAllocationType budgetAllocationType or {@code null} for none
   */
  public LineItemBudget setBudgetAllocationType(java.lang.String budgetAllocationType) {
    this.budgetAllocationType = budgetAllocationType;
    return this;
  }

  /**
   * Output only. The budget unit specifies whether the budget is currency based or impression
   * based. This value is inherited from the parent insertion order.
   * @return value or {@code null} for none
   */
  public java.lang.String getBudgetUnit() {
    return budgetUnit;
  }

  /**
   * Output only. The budget unit specifies whether the budget is currency based or impression
   * based. This value is inherited from the parent insertion order.
   * @param budgetUnit budgetUnit or {@code null} for none
   */
  public LineItemBudget setBudgetUnit(java.lang.String budgetUnit) {
    this.budgetUnit = budgetUnit;
    return this;
  }

  /**
   * The maximum budget amount the line item will spend. Must be greater than 0. When
   * budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is
   * immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit
   * is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros
   * of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the
   * currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions
   * to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will
   * be ignored by the system.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMaxAmount() {
    return maxAmount;
  }

  /**
   * The maximum budget amount the line item will spend. Must be greater than 0. When
   * budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is
   * immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit
   * is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros
   * of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the
   * currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions
   * to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will
   * be ignored by the system.
   * @param maxAmount maxAmount or {@code null} for none
   */
  public LineItemBudget setMaxAmount(java.lang.Long maxAmount) {
    this.maxAmount = maxAmount;
    return this;
  }

  @Override
  public LineItemBudget set(String fieldName, Object value) {
    return (LineItemBudget) super.set(fieldName, value);
  }

  @Override
  public LineItemBudget clone() {
    return (LineItemBudget) super.clone();
  }

}
