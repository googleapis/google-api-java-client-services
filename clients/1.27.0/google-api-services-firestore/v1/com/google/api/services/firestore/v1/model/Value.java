/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1.model;

/**
 * A message that can hold any of the supported value types.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Value extends com.google.api.client.json.GenericJson {

  /**
   * An array value.
   *
   * Cannot directly contain another array value, though can contain an map which contains another
   * array.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ArrayValue arrayValue;

  /**
   * A boolean value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean booleanValue;

  /**
   * A bytes value.
   *
   * Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bytesValue;

  /**
   * A double value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double doubleValue;

  /**
   * A geo point value representing a point on the surface of Earth.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LatLng geoPointValue;

  /**
   * An integer value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long integerValue;

  /**
   * A map value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MapValue mapValue;

  /**
   * A null value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nullValue;

  /**
   * A reference to a document. For example:
   * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String referenceValue;

  /**
   * A string value.
   *
   * The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes
   * of the UTF-8 representation are considered by queries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stringValue;

  /**
   * A timestamp value.
   *
   * Precise only to microseconds. When stored, any additional precision is rounded down.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestampValue;

  /**
   * An array value.
   *
   * Cannot directly contain another array value, though can contain an map which contains another
   * array.
   * @return value or {@code null} for none
   */
  public ArrayValue getArrayValue() {
    return arrayValue;
  }

  /**
   * An array value.
   *
   * Cannot directly contain another array value, though can contain an map which contains another
   * array.
   * @param arrayValue arrayValue or {@code null} for none
   */
  public Value setArrayValue(ArrayValue arrayValue) {
    this.arrayValue = arrayValue;
    return this;
  }

  /**
   * A boolean value.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBooleanValue() {
    return booleanValue;
  }

  /**
   * A boolean value.
   * @param booleanValue booleanValue or {@code null} for none
   */
  public Value setBooleanValue(java.lang.Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * A bytes value.
   *
   * Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   * @see #decodeBytesValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getBytesValue() {
    return bytesValue;
  }

  /**
   * A bytes value.
   *
   * Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   * @see #getBytesValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeBytesValue() {
    return com.google.api.client.util.Base64.decodeBase64(bytesValue);
  }

  /**
   * A bytes value.
   *
   * Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   * @see #encodeBytesValue()
   * @param bytesValue bytesValue or {@code null} for none
   */
  public Value setBytesValue(java.lang.String bytesValue) {
    this.bytesValue = bytesValue;
    return this;
  }

  /**
   * A bytes value.
   *
   * Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   * @see #setBytesValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Value encodeBytesValue(byte[] bytesValue) {
    this.bytesValue = com.google.api.client.util.Base64.encodeBase64URLSafeString(bytesValue);
    return this;
  }

  /**
   * A double value.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDoubleValue() {
    return doubleValue;
  }

  /**
   * A double value.
   * @param doubleValue doubleValue or {@code null} for none
   */
  public Value setDoubleValue(java.lang.Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * A geo point value representing a point on the surface of Earth.
   * @return value or {@code null} for none
   */
  public LatLng getGeoPointValue() {
    return geoPointValue;
  }

  /**
   * A geo point value representing a point on the surface of Earth.
   * @param geoPointValue geoPointValue or {@code null} for none
   */
  public Value setGeoPointValue(LatLng geoPointValue) {
    this.geoPointValue = geoPointValue;
    return this;
  }

  /**
   * An integer value.
   * @return value or {@code null} for none
   */
  public java.lang.Long getIntegerValue() {
    return integerValue;
  }

  /**
   * An integer value.
   * @param integerValue integerValue or {@code null} for none
   */
  public Value setIntegerValue(java.lang.Long integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * A map value.
   * @return value or {@code null} for none
   */
  public MapValue getMapValue() {
    return mapValue;
  }

  /**
   * A map value.
   * @param mapValue mapValue or {@code null} for none
   */
  public Value setMapValue(MapValue mapValue) {
    this.mapValue = mapValue;
    return this;
  }

  /**
   * A null value.
   * @return value or {@code null} for none
   */
  public java.lang.String getNullValue() {
    return nullValue;
  }

  /**
   * A null value.
   * @param nullValue nullValue or {@code null} for none
   */
  public Value setNullValue(java.lang.String nullValue) {
    this.nullValue = nullValue;
    return this;
  }

  /**
   * A reference to a document. For example:
   * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getReferenceValue() {
    return referenceValue;
  }

  /**
   * A reference to a document. For example:
   * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
   * @param referenceValue referenceValue or {@code null} for none
   */
  public Value setReferenceValue(java.lang.String referenceValue) {
    this.referenceValue = referenceValue;
    return this;
  }

  /**
   * A string value.
   *
   * The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes
   * of the UTF-8 representation are considered by queries.
   * @return value or {@code null} for none
   */
  public java.lang.String getStringValue() {
    return stringValue;
  }

  /**
   * A string value.
   *
   * The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes
   * of the UTF-8 representation are considered by queries.
   * @param stringValue stringValue or {@code null} for none
   */
  public Value setStringValue(java.lang.String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * A timestamp value.
   *
   * Precise only to microseconds. When stored, any additional precision is rounded down.
   * @return value or {@code null} for none
   */
  public String getTimestampValue() {
    return timestampValue;
  }

  /**
   * A timestamp value.
   *
   * Precise only to microseconds. When stored, any additional precision is rounded down.
   * @param timestampValue timestampValue or {@code null} for none
   */
  public Value setTimestampValue(String timestampValue) {
    this.timestampValue = timestampValue;
    return this;
  }

  @Override
  public Value set(String fieldName, Object value) {
    return (Value) super.set(fieldName, value);
  }

  @Override
  public Value clone() {
    return (Value) super.clone();
  }

}
