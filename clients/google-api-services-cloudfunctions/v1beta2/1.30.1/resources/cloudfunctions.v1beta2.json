{
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "cloudfunctions",
  "title": "Cloud Functions API",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "schemas": {
    "GenerateUploadUrlRequest": {
      "properties": {},
      "id": "GenerateUploadUrlRequest",
      "description": "Request of `GenerateUploadUrl` method.",
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "id": "ListOperationsResponse"
    },
    "CallFunctionResponse": {
      "type": "object",
      "description": "Response of `CallFunction` method.",
      "properties": {
        "error": {
          "description": "Either system or user-function generated error. Set if execution\nwas not successful.",
          "type": "string"
        },
        "executionId": {
          "description": "Execution id of function invocation.",
          "type": "string"
        },
        "result": {
          "description": "Result populated for successful execution of synchronous function. Will\nnot be populated if function does not return a result through context.",
          "type": "string"
        }
      },
      "id": "CallFunctionResponse"
    },
    "SourceRepository": {
      "description": "Describes the location of the function source in a remote repository.",
      "properties": {
        "repositoryUrl": {
          "type": "string",
          "description": "URL to the hosted repository where the function is defined. Only paths in\nhttps://source.developers.google.com domain are supported. The path should\ncontain the name of the repository."
        },
        "deployedRevision": {
          "description": "Output only. The id of the revision that was resolved at the moment of\nfunction creation or update. For example when a user deployed from a\nbranch, it will be the revision id of the latest change on this branch at\nthat time. If user deployed from revision then this value will be always\nequal to the revision specified by the user.",
          "type": "string"
        },
        "branch": {
          "type": "string",
          "description": "The name of the branch from which the function should be fetched."
        },
        "tag": {
          "type": "string",
          "description": "The name of the tag that captures the state of the repository from\nwhich the function should be fetched."
        },
        "revision": {
          "description": "The id of the revision that captures the state of the repository from\nwhich the function should be fetched.",
          "type": "string"
        },
        "sourcePath": {
          "type": "string",
          "description": "The path within the repository where the function is defined. The path\nshould point to the directory where Cloud Functions files are located. Use\n\"/\" if the function is defined directly in the root directory of a\nrepository."
        }
      },
      "id": "SourceRepository",
      "type": "object"
    },
    "CallFunctionRequest": {
      "type": "object",
      "id": "CallFunctionRequest",
      "properties": {
        "data": {
          "description": "Required. Input to be passed to the function.",
          "type": "string"
        }
      },
      "description": "Request for the `CallFunction` method."
    },
    "ListFunctionsResponse": {
      "description": "Response for the `ListFunctions` method.",
      "id": "ListFunctionsResponse",
      "type": "object",
      "properties": {
        "functions": {
          "type": "array",
          "description": "The functions that match the request.",
          "items": {
            "$ref": "CloudFunction"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached. The response does not include any\nfunctions from these locations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more functions that match\nthe request; this value should be passed in a new\ngoogle.cloud.functions.v1beta2.ListFunctionsRequest\nto get more functions.",
          "type": "string"
        }
      }
    },
    "OperationMetadataV1Beta2": {
      "type": "object",
      "properties": {
        "request": {
          "description": "The original request that started the operation.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "target": {
          "description": "Target of the operation - for example\nprojects/project-1/locations/region-1/functions/function-1",
          "type": "string"
        },
        "versionId": {
          "description": "Version id of the function created or updated by an API call.\nThis field is only populated for Create and Update operations.",
          "format": "int64",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update timestamp of the operation."
        },
        "type": {
          "type": "string",
          "enum": [
            "OPERATION_UNSPECIFIED",
            "CREATE_FUNCTION",
            "UPDATE_FUNCTION",
            "DELETE_FUNCTION"
          ],
          "enumDescriptions": [
            "Unknown operation type.",
            "Triggered by CreateFunction call",
            "Triggered by UpdateFunction call",
            "Triggered by DeleteFunction call."
          ],
          "description": "Type of operation."
        }
      },
      "id": "OperationMetadataV1Beta2",
      "description": "Metadata describing an Operation"
    },
    "FailurePolicy": {
      "type": "object",
      "id": "FailurePolicy",
      "description": "Describes the policy in case of function's execution failure.\nIf empty, then defaults to ignoring failures (i.e. not retrying them).",
      "properties": {
        "retry": {
          "description": "If specified, then the function will be retried in case of a failure.",
          "$ref": "Retry"
        }
      }
    },
    "EventTrigger": {
      "properties": {
        "eventType": {
          "description": "`event_type` names contain the service that is sending an event and the\nkind of event that was fired. Must be of the form\n`providers/*/eventTypes/*` e.g. Directly handle a Message published to\nGoogle Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`.\n\nHandle an object changing in Google Cloud Storage:\n`providers/cloud.storage/eventTypes/object.change`\n\nHandle a write to the Firebase Realtime Database:\n`providers/google.firebase.database/eventTypes/ref.write`",
          "type": "string"
        },
        "resource": {
          "description": "Which instance of the source's service should send events. E.g. for Pub/Sub\nthis would be a Pub/Sub topic at `projects/*/topics/*`. For Google Cloud\nStorage this would be a bucket at `projects/*/buckets/*`. For any source\nthat only supports one instance per-project, this should be the name of the\nproject (`projects/*`)",
          "type": "string"
        },
        "service": {
          "type": "string",
          "description": "The hostname of the service that should be observed.\n\nIf no string is provided, the default service implementing the API will\nbe used. For example, `storage.googleapis.com` is the default for all\nevent types in the `google.storage` namespace."
        },
        "failurePolicy": {
          "$ref": "FailurePolicy",
          "description": "Specifies policy for failed executions."
        }
      },
      "type": "object",
      "description": "Describes EventTrigger, used to request events be sent from another\nservice.",
      "id": "EventTrigger"
    },
    "GenerateDownloadUrlResponse": {
      "type": "object",
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "The generated Google Cloud Storage signed URL that should be used for\nfunction source code download."
        }
      },
      "description": "Response of `GenerateDownloadUrl` method.",
      "id": "GenerateDownloadUrlResponse"
    },
    "CloudFunction": {
      "id": "CloudFunction",
      "description": "Describes a Cloud Function that contains user computation executed in\nresponse to an event. It encapsulate function and triggers configurations.",
      "properties": {
        "timeout": {
          "description": "The function execution timeout. Execution is considered failed and\ncan be terminated if the function is not completed at the end of the\ntimeout period. Defaults to 60 seconds.",
          "type": "string",
          "format": "google-duration"
        },
        "httpsTrigger": {
          "$ref": "HTTPSTrigger",
          "description": "An HTTPS endpoint type of source that can be triggered via URL."
        },
        "entryPoint": {
          "type": "string",
          "description": "The name of the function (as defined in source code) that will be\nexecuted. Defaults to the resource name suffix, if not specified. For\nbackward compatibility, if function with given name is not found, then the\nsystem will try to use function named \"function\".\nFor Node.js this is name of a function exported by the module specified\nin `source_location`."
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment variables that shall be available during function execution.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceArchiveUrl": {
          "type": "string",
          "description": "The Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function."
        },
        "name": {
          "description": "A user-defined name of the function. Function names must be unique\nglobally and match pattern `projects/*/locations/*/functions/*`",
          "type": "string"
        },
        "sourceUploadUrl": {
          "description": "The Google Cloud Storage signed URL used for source uploading, generated\nby google.cloud.functions.v1beta2.GenerateUploadUrl",
          "type": "string"
        },
        "serviceAccount": {
          "description": "The email of the function's service account. If empty, defaults to\n`{project_id}@appspot.gserviceaccount.com`.",
          "type": "string"
        },
        "versionId": {
          "description": "Output only. The version identifier of the Cloud Function. Each deployment attempt\nresults in a new version of a function being created.",
          "format": "int64",
          "type": "string"
        },
        "maxInstances": {
          "description": "The limit on the maximum number of function instances that may coexist at a\ngiven time.",
          "format": "int32",
          "type": "integer"
        },
        "network": {
          "type": "string",
          "description": "The VPC Network that this cloud function can connect to. It can be\neither the fully-qualified URI, or the short name of the network resource.\nIf the short network name is used, the network must belong to the same\nproject. Otherwise, it must belong to a project within the same\norganization. The format of this field is either\n`projects/{project}/global/networks/{network}` or `{network}`, where\n{project} is a project id where the network is defined, and {network} is\nthe short name of the network.\n\nThis field is mutually exclusive with `vpc_connector` and will be replaced\nby it.\n\nSee [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for\nmore information on connecting Cloud projects."
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "READY",
            "FAILED",
            "DEPLOYING",
            "DELETING"
          ],
          "description": "Output only. Status of the function deployment.",
          "enumDescriptions": [
            "Status not specified.",
            "Successfully deployed.",
            "Not deployed correctly - behavior is undefined. The item should be updated\nor deleted to move it out of this state.",
            "Creation or update in progress.",
            "Deletion in progress."
          ],
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The last update timestamp of a Cloud Function.",
          "type": "string"
        },
        "availableMemoryMb": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of memory in MB available for a function.\nDefaults to 256MB."
        },
        "vpcConnector": {
          "description": "The VPC Network Connector that this cloud function can connect to. It can\nbe either the fully-qualified URI, or the short name of the network\nconnector resource. The format of this field is\n`projects/*/locations/*/connectors/*`\n\nThis field is mutually exclusive with `network` field and will eventually\nreplace it.\n\nSee [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for\nmore information on connecting Cloud projects.",
          "type": "string"
        },
        "eventTrigger": {
          "$ref": "EventTrigger",
          "description": "A source that fires events in response to a condition in another service."
        },
        "labels": {
          "description": "Labels associated with this Cloud Function.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceRepository": {
          "$ref": "SourceRepository",
          "description": "The hosted repository where the function is defined."
        },
        "latestOperation": {
          "description": "Output only. Name of the most recent operation modifying the function. If\nthe function status is `DEPLOYING` or `DELETING`, then it points to the\nactive operation.",
          "type": "string"
        },
        "sourceRepositoryUrl": {
          "description": "The URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:\n\nTo refer to a specific commit:\n`https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*`\nTo refer to a moveable alias (branch):\n`https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*`\nIn particular, to refer to HEAD use `master` moveable alias.\nTo refer to a specific fixed alias (tag):\n`https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*`\n\nYou may omit `paths/*` if you want to use the main directory.",
          "type": "string"
        },
        "runtime": {
          "type": "string",
          "description": "The runtime in which to run the function. Required when deploying a new\nfunction, optional when updating an existing function. For a complete\nlist of possible choices, see the\n[`gcloud` command\nreference](/sdk/gcloud/reference/functions/deploy#--runtime)."
        }
      },
      "type": "object"
    },
    "GenerateUploadUrlResponse": {
      "description": "Response of `GenerateUploadUrl` method.",
      "id": "GenerateUploadUrlResponse",
      "type": "object",
      "properties": {
        "uploadUrl": {
          "description": "The generated Google Cloud Storage signed URL that should be used for a\nfunction source code upload. The uploaded file should be a zip archive\nwhich contains a function.",
          "type": "string"
        }
      }
    },
    "OperationMetadataV1": {
      "description": "Metadata describing an Operation",
      "properties": {
        "buildId": {
          "type": "string",
          "description": "The Cloud Build ID of the function created or updated by an API call.\nThis field is only populated for Create and Update operations."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update timestamp of the operation."
        },
        "target": {
          "description": "Target of the operation - for example\nprojects/project-1/locations/region-1/functions/function-1",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Unknown operation type.",
            "Triggered by CreateFunction call",
            "Triggered by UpdateFunction call",
            "Triggered by DeleteFunction call."
          ],
          "enum": [
            "OPERATION_UNSPECIFIED",
            "CREATE_FUNCTION",
            "UPDATE_FUNCTION",
            "DELETE_FUNCTION"
          ],
          "description": "Type of operation.",
          "type": "string"
        },
        "request": {
          "type": "object",
          "description": "The original request that started the operation.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "versionId": {
          "type": "string",
          "description": "Version id of the function created or updated by an API call.\nThis field is only populated for Create and Update operations.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "OperationMetadataV1"
    },
    "Location": {
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\"."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location"
    },
    "Retry": {
      "id": "Retry",
      "description": "Describes the retry policy in case of function's execution failure.\nA function execution will be retried on any failure.\nA failed execution will be retried up to 7 days with an exponential backoff\n(capped at 10 seconds).\nRetried execution is charged as any other execution.",
      "properties": {},
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "HTTPSTrigger": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Output only. The deployed url for the function."
        }
      },
      "type": "object",
      "id": "HTTPSTrigger",
      "description": "Describes HTTPSTrigger, could be used to connect web hooks to function."
    },
    "GenerateDownloadUrlRequest": {
      "properties": {
        "versionId": {
          "description": "The optional version of function.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "GenerateDownloadUrlRequest",
      "type": "object",
      "description": "Request of `GenerateDownloadUrl` method."
    }
  },
  "basePath": "",
  "baseUrl": "https://cloudfunctions.googleapis.com/",
  "description": "Manages lightweight user-provided functions executed in response to events.",
  "ownerDomain": "google.com",
  "servicePath": "",
  "canonicalName": "Cloud Functions",
  "id": "cloudfunctions:v1beta2",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "path": "v1beta2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1beta2/projects/{projectsId}/locations",
              "id": "cloudfunctions.projects.locations.list",
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "The standard list filter.",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              }
            }
          },
          "resources": {
            "functions": {
              "methods": {
                "call": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta2/{+name}:call",
                  "description": "Synchronously invokes a deployed Cloud Function. To be used for testing\npurposes as very limited traffic is allowed. For more information on\nthe actual limits refer to [API Calls](\nhttps://cloud.google.com/functions/quotas#rate_limits).",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the function to be called."
                    }
                  },
                  "id": "cloudfunctions.projects.locations.functions.call",
                  "request": {
                    "$ref": "CallFunctionRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "CallFunctionResponse"
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}:call",
                  "httpMethod": "POST"
                },
                "update": {
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates existing function.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "description": "Required. The name of the function to be updated.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "CloudFunction"
                  },
                  "id": "cloudfunctions.projects.locations.functions.update",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta2/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions",
                  "id": "cloudfunctions.projects.locations.functions.list",
                  "parameters": {
                    "location": {
                      "type": "string",
                      "description": "Required. The project and location from which the function should be listed,\nspecified in the format `projects/*/locations/*`\nIf you want to list functions in all locations, use \"-\" in place of a\nlocation. When listing functions in all locations, if one or more\nlocation(s) are unreachable, the response will contain functions from all\nreachable locations along with the names of any unreachable locations.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of functions to return per call.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The value returned by the last\n`ListFunctionsResponse`; indicates that\nthis is a continuation of a prior `ListFunctions` call, and that the\nsystem should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Returns a list of functions that belong to the requested project.",
                  "response": {
                    "$ref": "ListFunctionsResponse"
                  },
                  "path": "v1beta2/{+location}/functions"
                },
                "get": {
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "description": "Returns a function with the given name from the requested project.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the function which details should be obtained.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1beta2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CloudFunction"
                  },
                  "id": "cloudfunctions.projects.locations.functions.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "generateUploadUrl": {
                  "id": "cloudfunctions.projects.locations.functions.generateUploadUrl",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions:generateUploadUrl",
                  "request": {
                    "$ref": "GenerateUploadUrlRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Returns a signed URL for uploading a function source code.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\nOnce the function source code upload is complete, the used signed\nURL should be provided in CreateFunction or UpdateFunction request\nas a reference to the function source code.\n\nWhen uploading source code to the generated signed URL, please follow\nthese restrictions:\n\n* Source file type should be a zip file.\n* Source file size should not exceed 100MB limit.\n* No credentials should be attached - the signed URLs provide access to the\n  target bucket using internal service identity; if credentials were\n  attached, the identity from the credentials would be used, but that\n  identity does not have permissions to upload files to the URL.\n\nWhen making a HTTP PUT request, these two headers need to be specified:\n\n* `content-type: application/zip`\n* `x-goog-content-length-range: 0,104857600`\n\nAnd this header SHOULD NOT be specified:\n\n* `Authorization: Bearer YOUR_TOKEN`",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "The project and location in which the Google Cloud Storage signed URL\nshould be generated, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GenerateUploadUrlResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta2/{+parent}/functions:generateUploadUrl"
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a function with the given name from the specified project. If the\ngiven function is used by some trigger, the trigger will be updated to\nremove this function.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "cloudfunctions.projects.locations.functions.delete",
                  "path": "v1beta2/{+name}",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the function which should be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project and location in which the function should be created, specified\nin the format `projects/*/locations/*`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta2/{+location}/functions",
                  "request": {
                    "$ref": "CloudFunction"
                  },
                  "description": "Creates a new function. If a function with the given name already exists in\nthe specified project, the long running operation will return\n`ALREADY_EXISTS` error.",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "cloudfunctions.projects.locations.functions.create"
                },
                "generateDownloadUrl": {
                  "request": {
                    "$ref": "GenerateDownloadUrlRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/functions/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of function for which source code Google Cloud Storage signed\nURL should be generated."
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/functions/{functionsId}:generateDownloadUrl",
                  "path": "v1beta2/{+name}:generateDownloadUrl",
                  "httpMethod": "POST",
                  "id": "cloudfunctions.projects.locations.functions.generateDownloadUrl",
                  "response": {
                    "$ref": "GenerateDownloadUrlResponse"
                  },
                  "description": "Returns a signed URL for downloading deployed function source code.\nThe URL is only valid for a limited period and should be used within\nminutes after generation.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "flatPath": "v1beta2/operations/{operationsId}",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^operations/[^/]+$",
              "description": "The name of the operation resource."
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "id": "cloudfunctions.operations.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}"
        },
        "list": {
          "parameters": {
            "name": {
              "description": "Must not be set.",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "Required. A filter for matching the requested operations.\u003cbr\u003e\u003cbr\u003e The supported formats of \u003cb\u003efilter\u003c/b\u003e are:\u003cbr\u003e To query for a specific function: \u003ccode\u003eproject:*,location:*,function:*\u003c/code\u003e\u003cbr\u003e To query for all of the latest operations for a project: \u003ccode\u003eproject:*,latest:true\u003c/code\u003e"
            },
            "pageToken": {
              "description": "Token identifying which result to start with, which is returned by a previous list call.\u003cbr\u003e\u003cbr\u003e Pagination is only supported when querying for a specific function.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of records that should be returned.\u003cbr\u003e Requested page size cannot exceed 100. If not set, the default page size is 100.\u003cbr\u003e\u003cbr\u003e Pagination is only supported when querying for a specific function.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            }
          },
          "path": "v1beta2/operations",
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
          "parameterOrder": [],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "httpMethod": "GET",
          "flatPath": "v1beta2/operations",
          "id": "cloudfunctions.operations.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        }
      }
    }
  },
  "mtlsRootUrl": "https://cloudfunctions.mtls.googleapis.com/",
  "version_module": true,
  "rootUrl": "https://cloudfunctions.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "revision": "20200629",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "version": "v1beta2",
  "documentationLink": "https://cloud.google.com/functions"
}
