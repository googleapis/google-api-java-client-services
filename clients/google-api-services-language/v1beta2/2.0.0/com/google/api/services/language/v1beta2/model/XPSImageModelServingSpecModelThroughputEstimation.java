/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1beta2.model;

/**
 * Model definition for XPSImageModelServingSpecModelThroughputEstimation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSImageModelServingSpecModelThroughputEstimation extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String computeEngineAcceleratorType;

  /**
   * Estimated latency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double latencyInMilliseconds;

  /**
   * The approximate qps a deployed node can serve.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double nodeQps;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String servomaticPartitionType;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getComputeEngineAcceleratorType() {
    return computeEngineAcceleratorType;
  }

  /**
   * @param computeEngineAcceleratorType computeEngineAcceleratorType or {@code null} for none
   */
  public XPSImageModelServingSpecModelThroughputEstimation setComputeEngineAcceleratorType(java.lang.String computeEngineAcceleratorType) {
    this.computeEngineAcceleratorType = computeEngineAcceleratorType;
    return this;
  }

  /**
   * Estimated latency.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLatencyInMilliseconds() {
    return latencyInMilliseconds;
  }

  /**
   * Estimated latency.
   * @param latencyInMilliseconds latencyInMilliseconds or {@code null} for none
   */
  public XPSImageModelServingSpecModelThroughputEstimation setLatencyInMilliseconds(java.lang.Double latencyInMilliseconds) {
    this.latencyInMilliseconds = latencyInMilliseconds;
    return this;
  }

  /**
   * The approximate qps a deployed node can serve.
   * @return value or {@code null} for none
   */
  public java.lang.Double getNodeQps() {
    return nodeQps;
  }

  /**
   * The approximate qps a deployed node can serve.
   * @param nodeQps nodeQps or {@code null} for none
   */
  public XPSImageModelServingSpecModelThroughputEstimation setNodeQps(java.lang.Double nodeQps) {
    this.nodeQps = nodeQps;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getServomaticPartitionType() {
    return servomaticPartitionType;
  }

  /**
   * @param servomaticPartitionType servomaticPartitionType or {@code null} for none
   */
  public XPSImageModelServingSpecModelThroughputEstimation setServomaticPartitionType(java.lang.String servomaticPartitionType) {
    this.servomaticPartitionType = servomaticPartitionType;
    return this;
  }

  @Override
  public XPSImageModelServingSpecModelThroughputEstimation set(String fieldName, Object value) {
    return (XPSImageModelServingSpecModelThroughputEstimation) super.set(fieldName, value);
  }

  @Override
  public XPSImageModelServingSpecModelThroughputEstimation clone() {
    return (XPSImageModelServingSpecModelThroughputEstimation) super.clone();
  }

}
