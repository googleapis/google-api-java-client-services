/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * The config for Prediction data drift detection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig extends com.google.api.client.json.GenericJson {

  /**
   * Key is the feature name and value is the threshold. The threshold here is against attribution
   * score distance between different time windows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> attributionScoreDriftThresholds;

  /**
   * Drift anomaly detection threshold used by all features. When the per-feature thresholds are not
   * set, this field can be used to specify a threshold for all features.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1ThresholdConfig defaultDriftThreshold;

  /**
   * Key is the feature name and value is the threshold. If a feature needs to be monitored for
   * drift, a value threshold must be configured for that feature. The threshold here is against
   * feature distribution distance between different time windws.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> driftThresholds;

  /**
   * Key is the feature name and value is the threshold. The threshold here is against attribution
   * score distance between different time windows.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> getAttributionScoreDriftThresholds() {
    return attributionScoreDriftThresholds;
  }

  /**
   * Key is the feature name and value is the threshold. The threshold here is against attribution
   * score distance between different time windows.
   * @param attributionScoreDriftThresholds attributionScoreDriftThresholds or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig setAttributionScoreDriftThresholds(java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> attributionScoreDriftThresholds) {
    this.attributionScoreDriftThresholds = attributionScoreDriftThresholds;
    return this;
  }

  /**
   * Drift anomaly detection threshold used by all features. When the per-feature thresholds are not
   * set, this field can be used to specify a threshold for all features.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1ThresholdConfig getDefaultDriftThreshold() {
    return defaultDriftThreshold;
  }

  /**
   * Drift anomaly detection threshold used by all features. When the per-feature thresholds are not
   * set, this field can be used to specify a threshold for all features.
   * @param defaultDriftThreshold defaultDriftThreshold or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig setDefaultDriftThreshold(GoogleCloudAiplatformV1ThresholdConfig defaultDriftThreshold) {
    this.defaultDriftThreshold = defaultDriftThreshold;
    return this;
  }

  /**
   * Key is the feature name and value is the threshold. If a feature needs to be monitored for
   * drift, a value threshold must be configured for that feature. The threshold here is against
   * feature distribution distance between different time windws.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> getDriftThresholds() {
    return driftThresholds;
  }

  /**
   * Key is the feature name and value is the threshold. If a feature needs to be monitored for
   * drift, a value threshold must be configured for that feature. The threshold here is against
   * feature distribution distance between different time windws.
   * @param driftThresholds driftThresholds or {@code null} for none
   */
  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig setDriftThresholds(java.util.Map<String, GoogleCloudAiplatformV1ThresholdConfig> driftThresholds) {
    this.driftThresholds = driftThresholds;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig clone() {
    return (GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig) super.clone();
  }

}
