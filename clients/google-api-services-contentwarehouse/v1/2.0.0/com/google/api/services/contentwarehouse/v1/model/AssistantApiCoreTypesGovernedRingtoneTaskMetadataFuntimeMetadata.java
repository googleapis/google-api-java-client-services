/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Used to make timers and alarms more delightful. See go/funtime-engdesign for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata extends com.google.api.client.json.GenericJson {

  /**
   * For FunTime alarms and timers, the media resources are provided through AOG apps during their
   * ringtone. Multiple AoG agents can satisfy a label. So a random agent will be chosen from those
   * that are supplied. See go/funtime-engdesign.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> agentIds;

  /**
   * These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will
   * deprecate this field if we figure out a solution to load the animation from the web.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String animationBlob;

  /**
   * Url for Rive animation that is brought up on ring. Rive is a lightweight animation library that
   * is compatible with Flutter on Opal. See https://rive.app/.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String animationUrl;

  /**
   * The url used to load the image that is at the center of the timer during timer countdown
   * visuals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timerHeroUrl;

  /**
   * This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular
   * dependency issue in libassistant protos. It is a serialized proto of type
   * speech.s3.TtsServiceRequest.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ttsServiceRequestBytes;

  /**
   * For FunTime alarms and timers, the media resources are provided through AOG apps during their
   * ringtone. Multiple AoG agents can satisfy a label. So a random agent will be chosen from those
   * that are supplied. See go/funtime-engdesign.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAgentIds() {
    return agentIds;
  }

  /**
   * For FunTime alarms and timers, the media resources are provided through AOG apps during their
   * ringtone. Multiple AoG agents can satisfy a label. So a random agent will be chosen from those
   * that are supplied. See go/funtime-engdesign.
   * @param agentIds agentIds or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata setAgentIds(java.util.List<java.lang.String> agentIds) {
    this.agentIds = agentIds;
    return this;
  }

  /**
   * These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will
   * deprecate this field if we figure out a solution to load the animation from the web.
   * @see #decodeAnimationBlob()
   * @return value or {@code null} for none
   */
  public java.lang.String getAnimationBlob() {
    return animationBlob;
  }

  /**
   * These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will
   * deprecate this field if we figure out a solution to load the animation from the web.
   * @see #getAnimationBlob()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeAnimationBlob() {
    return com.google.api.client.util.Base64.decodeBase64(animationBlob);
  }

  /**
   * These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will
   * deprecate this field if we figure out a solution to load the animation from the web.
   * @see #encodeAnimationBlob()
   * @param animationBlob animationBlob or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata setAnimationBlob(java.lang.String animationBlob) {
    this.animationBlob = animationBlob;
    return this;
  }

  /**
   * These bytes may represent the blob of the Rive animation that we pass to the Opal App. We will
   * deprecate this field if we figure out a solution to load the animation from the web.
   * @see #setAnimationBlob()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata encodeAnimationBlob(byte[] animationBlob) {
    this.animationBlob = com.google.api.client.util.Base64.encodeBase64URLSafeString(animationBlob);
    return this;
  }

  /**
   * Url for Rive animation that is brought up on ring. Rive is a lightweight animation library that
   * is compatible with Flutter on Opal. See https://rive.app/.
   * @return value or {@code null} for none
   */
  public java.lang.String getAnimationUrl() {
    return animationUrl;
  }

  /**
   * Url for Rive animation that is brought up on ring. Rive is a lightweight animation library that
   * is compatible with Flutter on Opal. See https://rive.app/.
   * @param animationUrl animationUrl or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata setAnimationUrl(java.lang.String animationUrl) {
    this.animationUrl = animationUrl;
    return this;
  }

  /**
   * The url used to load the image that is at the center of the timer during timer countdown
   * visuals.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimerHeroUrl() {
    return timerHeroUrl;
  }

  /**
   * The url used to load the image that is at the center of the timer during timer countdown
   * visuals.
   * @param timerHeroUrl timerHeroUrl or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata setTimerHeroUrl(java.lang.String timerHeroUrl) {
    this.timerHeroUrl = timerHeroUrl;
    return this;
  }

  /**
   * This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular
   * dependency issue in libassistant protos. It is a serialized proto of type
   * speech.s3.TtsServiceRequest.
   * @see #decodeTtsServiceRequestBytes()
   * @return value or {@code null} for none
   */
  public java.lang.String getTtsServiceRequestBytes() {
    return ttsServiceRequestBytes;
  }

  /**
   * This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular
   * dependency issue in libassistant protos. It is a serialized proto of type
   * speech.s3.TtsServiceRequest.
   * @see #getTtsServiceRequestBytes()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeTtsServiceRequestBytes() {
    return com.google.api.client.util.Base64.decodeBase64(ttsServiceRequestBytes);
  }

  /**
   * This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular
   * dependency issue in libassistant protos. It is a serialized proto of type
   * speech.s3.TtsServiceRequest.
   * @see #encodeTtsServiceRequestBytes()
   * @param ttsServiceRequestBytes ttsServiceRequestBytes or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata setTtsServiceRequestBytes(java.lang.String ttsServiceRequestBytes) {
    this.ttsServiceRequestBytes = ttsServiceRequestBytes;
    return this;
  }

  /**
   * This is used to call S3 to realize the TTS. Is in the form of bytes because of a circular
   * dependency issue in libassistant protos. It is a serialized proto of type
   * speech.s3.TtsServiceRequest.
   * @see #setTtsServiceRequestBytes()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata encodeTtsServiceRequestBytes(byte[] ttsServiceRequestBytes) {
    this.ttsServiceRequestBytes = com.google.api.client.util.Base64.encodeBase64URLSafeString(ttsServiceRequestBytes);
    return this;
  }

  @Override
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata set(String fieldName, Object value) {
    return (AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata clone() {
    return (AssistantApiCoreTypesGovernedRingtoneTaskMetadataFuntimeMetadata) super.clone();
  }

}
