/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * An Id contains the identifiers used to reference this topic (entity) in the Knowledge Graph. The
 * Knowledge Graph supports several forms of identifiers: - "mids" (machine ids) that are assigned
 * at creation time, and support a resolution mechanism that tracks topics after they are merged
 * (for more about mids, see go/kg-mid), - "ids" are human-readable ids (HRIDs) that are derived
 * from a namespace hierarchy stored in Knowledge Graph, and a set of rules, - "guids" are low-level
 * ids historically used in Freebase (pre-Knowledge Graph, deprecated). Only the mid and id are
 * supplied here. Note that mids can be converted to guids or uint64s (see
 * //metaweb/util/mid/mid.h).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FreebaseId extends com.google.api.client.json.GenericJson {

  /**
   * "id" may be a human readable ID (HRID) or a MID. Originally it was intended to always be a
   * human readable ID, but that convention was not always followed so clients should be wary. Not
   * every topic has an id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The "mid" should be used whenever a globally unique, primary key into the Knowledge Graph is
   * needed. These keys are always prefixed with the "/m" and "/g", (and more rarely the "/x" and
   * "/t") namespaces, and are alphanumeric strings consisting of lowercase letters excluding
   * vowels, numbers and the underscore character. (Applications should not assume a constant length
   * for these strings as Livegraph reserves the right to extend the number of characters to
   * accommodate more topics.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mid;

  /**
   * "id" may be a human readable ID (HRID) or a MID. Originally it was intended to always be a
   * human readable ID, but that convention was not always followed so clients should be wary. Not
   * every topic has an id.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * "id" may be a human readable ID (HRID) or a MID. Originally it was intended to always be a
   * human readable ID, but that convention was not always followed so clients should be wary. Not
   * every topic has an id.
   * @param id id or {@code null} for none
   */
  public FreebaseId setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * The "mid" should be used whenever a globally unique, primary key into the Knowledge Graph is
   * needed. These keys are always prefixed with the "/m" and "/g", (and more rarely the "/x" and
   * "/t") namespaces, and are alphanumeric strings consisting of lowercase letters excluding
   * vowels, numbers and the underscore character. (Applications should not assume a constant length
   * for these strings as Livegraph reserves the right to extend the number of characters to
   * accommodate more topics.)
   * @return value or {@code null} for none
   */
  public java.lang.String getMid() {
    return mid;
  }

  /**
   * The "mid" should be used whenever a globally unique, primary key into the Knowledge Graph is
   * needed. These keys are always prefixed with the "/m" and "/g", (and more rarely the "/x" and
   * "/t") namespaces, and are alphanumeric strings consisting of lowercase letters excluding
   * vowels, numbers and the underscore character. (Applications should not assume a constant length
   * for these strings as Livegraph reserves the right to extend the number of characters to
   * accommodate more topics.)
   * @param mid mid or {@code null} for none
   */
  public FreebaseId setMid(java.lang.String mid) {
    this.mid = mid;
    return this;
  }

  @Override
  public FreebaseId set(String fieldName, Object value) {
    return (FreebaseId) super.set(fieldName, value);
  }

  @Override
  public FreebaseId clone() {
    return (FreebaseId) super.clone();
  }

}
