/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A contact pointer that represents a contact (http://go/assistant-contact-id).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FocusBackendContactPointer extends com.google.api.client.json.GenericJson {

  /**
   * The annotation ID. Annotations are only allowed to point to annotations that do not themselves
   * have a pointer (avoids any possibilty of loops). Cast this field to string in javascript to
   * make it compile in js.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long annotationId;

  /**
   * The raw contact ID from an active mobile device of the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FocusBackendDeviceRawContactId deviceRawContactId;

  /**
   * The contact ID from the Focus backend. Cast this field to string in javascript to make it
   * compile in js.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long focusContactId;

  /**
   * Additional contact ids that are not actively used to match contact pointers to contacts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FocusBackendOtherContactId otherContactId;

  /**
   * The secondary identifier of contact. It will be used when the primary ID doesn't match any
   * contact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FocusBackendSecondaryContactId secondaryId;

  /**
   * The annotation ID. Annotations are only allowed to point to annotations that do not themselves
   * have a pointer (avoids any possibilty of loops). Cast this field to string in javascript to
   * make it compile in js.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAnnotationId() {
    return annotationId;
  }

  /**
   * The annotation ID. Annotations are only allowed to point to annotations that do not themselves
   * have a pointer (avoids any possibilty of loops). Cast this field to string in javascript to
   * make it compile in js.
   * @param annotationId annotationId or {@code null} for none
   */
  public FocusBackendContactPointer setAnnotationId(java.lang.Long annotationId) {
    this.annotationId = annotationId;
    return this;
  }

  /**
   * The raw contact ID from an active mobile device of the user.
   * @return value or {@code null} for none
   */
  public FocusBackendDeviceRawContactId getDeviceRawContactId() {
    return deviceRawContactId;
  }

  /**
   * The raw contact ID from an active mobile device of the user.
   * @param deviceRawContactId deviceRawContactId or {@code null} for none
   */
  public FocusBackendContactPointer setDeviceRawContactId(FocusBackendDeviceRawContactId deviceRawContactId) {
    this.deviceRawContactId = deviceRawContactId;
    return this;
  }

  /**
   * The contact ID from the Focus backend. Cast this field to string in javascript to make it
   * compile in js.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFocusContactId() {
    return focusContactId;
  }

  /**
   * The contact ID from the Focus backend. Cast this field to string in javascript to make it
   * compile in js.
   * @param focusContactId focusContactId or {@code null} for none
   */
  public FocusBackendContactPointer setFocusContactId(java.lang.Long focusContactId) {
    this.focusContactId = focusContactId;
    return this;
  }

  /**
   * Additional contact ids that are not actively used to match contact pointers to contacts.
   * @return value or {@code null} for none
   */
  public FocusBackendOtherContactId getOtherContactId() {
    return otherContactId;
  }

  /**
   * Additional contact ids that are not actively used to match contact pointers to contacts.
   * @param otherContactId otherContactId or {@code null} for none
   */
  public FocusBackendContactPointer setOtherContactId(FocusBackendOtherContactId otherContactId) {
    this.otherContactId = otherContactId;
    return this;
  }

  /**
   * The secondary identifier of contact. It will be used when the primary ID doesn't match any
   * contact.
   * @return value or {@code null} for none
   */
  public FocusBackendSecondaryContactId getSecondaryId() {
    return secondaryId;
  }

  /**
   * The secondary identifier of contact. It will be used when the primary ID doesn't match any
   * contact.
   * @param secondaryId secondaryId or {@code null} for none
   */
  public FocusBackendContactPointer setSecondaryId(FocusBackendSecondaryContactId secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

  @Override
  public FocusBackendContactPointer set(String fieldName, Object value) {
    return (FocusBackendContactPointer) super.set(fieldName, value);
  }

  @Override
  public FocusBackendContactPointer clone() {
    return (FocusBackendContactPointer) super.clone();
  }

}
