/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * Boost applies to suggestions which match a condition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec extends com.google.api.client.json.GenericJson {

  /**
   * Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is
   * 0.0. Setting to 1.0 gives the suggestions a big promotion. However, it does not necessarily
   * mean that the top result will be a boosted suggestion. Setting to -1.0 gives the suggestions a
   * big demotion. However, other suggestions that are relevant might still be shown. Setting to 0.0
   * means no boost applied. The boosting condition is ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float boost;

  /**
   * An expression which specifies a boost condition. The syntax is the same as [filter expression
   * syntax](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-
   * expression-syntax). Currently, the only supported condition is a list of BCP-47 lang codes.
   * Example: * To boost suggestions in languages `en` or `fr`: `(lang_code: ANY("en", "fr"))`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String condition;

  /**
   * Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is
   * 0.0. Setting to 1.0 gives the suggestions a big promotion. However, it does not necessarily
   * mean that the top result will be a boosted suggestion. Setting to -1.0 gives the suggestions a
   * big demotion. However, other suggestions that are relevant might still be shown. Setting to 0.0
   * means no boost applied. The boosting condition is ignored.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBoost() {
    return boost;
  }

  /**
   * Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is
   * 0.0. Setting to 1.0 gives the suggestions a big promotion. However, it does not necessarily
   * mean that the top result will be a boosted suggestion. Setting to -1.0 gives the suggestions a
   * big demotion. However, other suggestions that are relevant might still be shown. Setting to 0.0
   * means no boost applied. The boosting condition is ignored.
   * @param boost boost or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec setBoost(java.lang.Float boost) {
    this.boost = boost;
    return this;
  }

  /**
   * An expression which specifies a boost condition. The syntax is the same as [filter expression
   * syntax](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-
   * expression-syntax). Currently, the only supported condition is a list of BCP-47 lang codes.
   * Example: * To boost suggestions in languages `en` or `fr`: `(lang_code: ANY("en", "fr"))`
   * @return value or {@code null} for none
   */
  public java.lang.String getCondition() {
    return condition;
  }

  /**
   * An expression which specifies a boost condition. The syntax is the same as [filter expression
   * syntax](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-
   * expression-syntax). Currently, the only supported condition is a list of BCP-47 lang codes.
   * Example: * To boost suggestions in languages `en` or `fr`: `(lang_code: ANY("en", "fr"))`
   * @param condition condition or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec setCondition(java.lang.String condition) {
    this.condition = condition;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec clone() {
    return (GoogleCloudDiscoveryengineV1alphaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec) super.clone();
  }

}
