/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Mustang/Kgraph attachment to encode IQL expressions annotated by Webref, Pianno, and other
 * applications. This is currently a prototype implementation. The attachment is not yet output in
 * production. Please contact simonz@ for more info. The planned use-cases include: - Pianno page-
 * level intents (go/pianno-design). - Compound entity representations (go/compounds-in-refx). See
 * go/iql-in-wma for more details about IQL attachment and its encoding design. Next available tag:
 * 5
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersIntentQueryIndexingIQLAttachment extends com.google.api.client.json.GenericJson {

  /**
   * The version of encoder for the IQL FunctionCalls. We bump up the version when, but not limited
   * to, we change how an IQL is converted to a byte array, or the change of byte compression
   * algorithm.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long iqlEncodingVersion;

  /**
   * A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are
   * first encoded as a byte array. The byte array is then compressed. For more details on the
   * encoding, see go/iql-in-wma.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iqlFuncalls;

  /**
   * The Pianno confidence scores of all intents of the IQL FunctionCalls. For space reasons this is
   * stored as a [0, 100] integer that represents the confidence up to two decimal points (fixed
   * point). Convert it to confidence_score using the following formula: float
   * pianno_confidence_score = pianno_confidence_score_e2 / 100.0f It should have the same number of
   * elements as the IQL expressions after decoding. For non-Pianno top level intents, this score is
   * 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Long> piannoConfidenceScoreE2;

  /**
   * A bit map indicating if the intents in the IQL FunctionCalls are top level intents for Pianno
   * (go/pianno). This is a repeated field. In the event of more than 32 intents, the first uint32/
   * represents the 1st to the 32nd intents, and the second uint32 represents/ the 33rd to the 64th
   * intents, and so on. Within each uint32, the bits are in reversed order, i.e. the right-most bit
   * of the first uint32 indicating if the first intent in IQL expressions is a top level intent for
   * Pianno. The prevailing (unused) bits of the last uint32 are filled with 0s.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Long> piannoIqlBitmap;

  /**
   * The version of encoder for the IQL FunctionCalls. We bump up the version when, but not limited
   * to, we change how an IQL is converted to a byte array, or the change of byte compression
   * algorithm.
   * @return value or {@code null} for none
   */
  public java.lang.Long getIqlEncodingVersion() {
    return iqlEncodingVersion;
  }

  /**
   * The version of encoder for the IQL FunctionCalls. We bump up the version when, but not limited
   * to, we change how an IQL is converted to a byte array, or the change of byte compression
   * algorithm.
   * @param iqlEncodingVersion iqlEncodingVersion or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment setIqlEncodingVersion(java.lang.Long iqlEncodingVersion) {
    this.iqlEncodingVersion = iqlEncodingVersion;
    return this;
  }

  /**
   * A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are
   * first encoded as a byte array. The byte array is then compressed. For more details on the
   * encoding, see go/iql-in-wma.
   * @see #decodeIqlFuncalls()
   * @return value or {@code null} for none
   */
  public java.lang.String getIqlFuncalls() {
    return iqlFuncalls;
  }

  /**
   * A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are
   * first encoded as a byte array. The byte array is then compressed. For more details on the
   * encoding, see go/iql-in-wma.
   * @see #getIqlFuncalls()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeIqlFuncalls() {
    return com.google.api.client.util.Base64.decodeBase64(iqlFuncalls);
  }

  /**
   * A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are
   * first encoded as a byte array. The byte array is then compressed. For more details on the
   * encoding, see go/iql-in-wma.
   * @see #encodeIqlFuncalls()
   * @param iqlFuncalls iqlFuncalls or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment setIqlFuncalls(java.lang.String iqlFuncalls) {
    this.iqlFuncalls = iqlFuncalls;
    return this;
  }

  /**
   * A compressed byte array that represents IQL FunctionCalls. A list of IQL FunctionCalls are
   * first encoded as a byte array. The byte array is then compressed. For more details on the
   * encoding, see go/iql-in-wma.
   * @see #setIqlFuncalls()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment encodeIqlFuncalls(byte[] iqlFuncalls) {
    this.iqlFuncalls = com.google.api.client.util.Base64.encodeBase64URLSafeString(iqlFuncalls);
    return this;
  }

  /**
   * The Pianno confidence scores of all intents of the IQL FunctionCalls. For space reasons this is
   * stored as a [0, 100] integer that represents the confidence up to two decimal points (fixed
   * point). Convert it to confidence_score using the following formula: float
   * pianno_confidence_score = pianno_confidence_score_e2 / 100.0f It should have the same number of
   * elements as the IQL expressions after decoding. For non-Pianno top level intents, this score is
   * 0.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getPiannoConfidenceScoreE2() {
    return piannoConfidenceScoreE2;
  }

  /**
   * The Pianno confidence scores of all intents of the IQL FunctionCalls. For space reasons this is
   * stored as a [0, 100] integer that represents the confidence up to two decimal points (fixed
   * point). Convert it to confidence_score using the following formula: float
   * pianno_confidence_score = pianno_confidence_score_e2 / 100.0f It should have the same number of
   * elements as the IQL expressions after decoding. For non-Pianno top level intents, this score is
   * 0.
   * @param piannoConfidenceScoreE2 piannoConfidenceScoreE2 or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment setPiannoConfidenceScoreE2(java.util.List<java.lang.Long> piannoConfidenceScoreE2) {
    this.piannoConfidenceScoreE2 = piannoConfidenceScoreE2;
    return this;
  }

  /**
   * A bit map indicating if the intents in the IQL FunctionCalls are top level intents for Pianno
   * (go/pianno). This is a repeated field. In the event of more than 32 intents, the first uint32/
   * represents the 1st to the 32nd intents, and the second uint32 represents/ the 33rd to the 64th
   * intents, and so on. Within each uint32, the bits are in reversed order, i.e. the right-most bit
   * of the first uint32 indicating if the first intent in IQL expressions is a top level intent for
   * Pianno. The prevailing (unused) bits of the last uint32 are filled with 0s.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getPiannoIqlBitmap() {
    return piannoIqlBitmap;
  }

  /**
   * A bit map indicating if the intents in the IQL FunctionCalls are top level intents for Pianno
   * (go/pianno). This is a repeated field. In the event of more than 32 intents, the first uint32/
   * represents the 1st to the 32nd intents, and the second uint32 represents/ the 33rd to the 64th
   * intents, and so on. Within each uint32, the bits are in reversed order, i.e. the right-most bit
   * of the first uint32 indicating if the first intent in IQL expressions is a top level intent for
   * Pianno. The prevailing (unused) bits of the last uint32 are filled with 0s.
   * @param piannoIqlBitmap piannoIqlBitmap or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment setPiannoIqlBitmap(java.util.List<java.lang.Long> piannoIqlBitmap) {
    this.piannoIqlBitmap = piannoIqlBitmap;
    return this;
  }

  @Override
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment set(String fieldName, Object value) {
    return (KnowledgeAnswersIntentQueryIndexingIQLAttachment) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersIntentQueryIndexingIQLAttachment clone() {
    return (KnowledgeAnswersIntentQueryIndexingIQLAttachment) super.clone();
  }

}
