/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * An asset represents a resource in your environment. Asset types include virtual machines and
 * databases.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Asset extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The list of groups that the asset is assigned to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> assignedGroups;

  /**
   * Generic asset attributes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> attributes;

  /**
   * Output only. The timestamp when the asset was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Asset information specific for database deployments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DatabaseDeploymentDetails databaseDeploymentDetails;

  /**
   * Output only. Asset information specific for logical databases.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DatabaseDetails databaseDetails;

  /**
   * Optional. Indicates if the asset is hidden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hidden;

  /**
   * Optional. An optional reason for marking this asset as hidden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hideReason;

  /**
   * Output only. The timestamp when the asset was marked as hidden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String hideTime;

  /**
   * Output only. The list of insights associated with the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InsightList insightList;

  /**
   * Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Asset information specific for virtual machines.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineDetails machineDetails;

  /**
   * Output only. The full name of the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Performance data for the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssetPerformanceData performanceData;

  /**
   * Output only. The list of sources contributing to the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> sources;

  /**
   * Output only. Server generated human readable name of the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Output only. The timestamp when the asset was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Asset information specific for virtual machines.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VirtualMachineDetails virtualMachineDetails;

  /**
   * Output only. The list of groups that the asset is assigned to.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAssignedGroups() {
    return assignedGroups;
  }

  /**
   * Output only. The list of groups that the asset is assigned to.
   * @param assignedGroups assignedGroups or {@code null} for none
   */
  public Asset setAssignedGroups(java.util.List<java.lang.String> assignedGroups) {
    this.assignedGroups = assignedGroups;
    return this;
  }

  /**
   * Generic asset attributes.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAttributes() {
    return attributes;
  }

  /**
   * Generic asset attributes.
   * @param attributes attributes or {@code null} for none
   */
  public Asset setAttributes(java.util.Map<String, java.lang.String> attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Output only. The timestamp when the asset was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when the asset was created.
   * @param createTime createTime or {@code null} for none
   */
  public Asset setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Asset information specific for database deployments.
   * @return value or {@code null} for none
   */
  public DatabaseDeploymentDetails getDatabaseDeploymentDetails() {
    return databaseDeploymentDetails;
  }

  /**
   * Output only. Asset information specific for database deployments.
   * @param databaseDeploymentDetails databaseDeploymentDetails or {@code null} for none
   */
  public Asset setDatabaseDeploymentDetails(DatabaseDeploymentDetails databaseDeploymentDetails) {
    this.databaseDeploymentDetails = databaseDeploymentDetails;
    return this;
  }

  /**
   * Output only. Asset information specific for logical databases.
   * @return value or {@code null} for none
   */
  public DatabaseDetails getDatabaseDetails() {
    return databaseDetails;
  }

  /**
   * Output only. Asset information specific for logical databases.
   * @param databaseDetails databaseDetails or {@code null} for none
   */
  public Asset setDatabaseDetails(DatabaseDetails databaseDetails) {
    this.databaseDetails = databaseDetails;
    return this;
  }

  /**
   * Optional. Indicates if the asset is hidden.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHidden() {
    return hidden;
  }

  /**
   * Optional. Indicates if the asset is hidden.
   * @param hidden hidden or {@code null} for none
   */
  public Asset setHidden(java.lang.Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

  /**
   * Optional. An optional reason for marking this asset as hidden.
   * @return value or {@code null} for none
   */
  public java.lang.String getHideReason() {
    return hideReason;
  }

  /**
   * Optional. An optional reason for marking this asset as hidden.
   * @param hideReason hideReason or {@code null} for none
   */
  public Asset setHideReason(java.lang.String hideReason) {
    this.hideReason = hideReason;
    return this;
  }

  /**
   * Output only. The timestamp when the asset was marked as hidden.
   * @return value or {@code null} for none
   */
  public String getHideTime() {
    return hideTime;
  }

  /**
   * Output only. The timestamp when the asset was marked as hidden.
   * @param hideTime hideTime or {@code null} for none
   */
  public Asset setHideTime(String hideTime) {
    this.hideTime = hideTime;
    return this;
  }

  /**
   * Output only. The list of insights associated with the asset.
   * @return value or {@code null} for none
   */
  public InsightList getInsightList() {
    return insightList;
  }

  /**
   * Output only. The list of insights associated with the asset.
   * @param insightList insightList or {@code null} for none
   */
  public Asset setInsightList(InsightList insightList) {
    this.insightList = insightList;
    return this;
  }

  /**
   * Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public Asset setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Asset information specific for virtual machines.
   * @return value or {@code null} for none
   */
  public MachineDetails getMachineDetails() {
    return machineDetails;
  }

  /**
   * Output only. Asset information specific for virtual machines.
   * @param machineDetails machineDetails or {@code null} for none
   */
  public Asset setMachineDetails(MachineDetails machineDetails) {
    this.machineDetails = machineDetails;
    return this;
  }

  /**
   * Output only. The full name of the asset.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full name of the asset.
   * @param name name or {@code null} for none
   */
  public Asset setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Performance data for the asset.
   * @return value or {@code null} for none
   */
  public AssetPerformanceData getPerformanceData() {
    return performanceData;
  }

  /**
   * Performance data for the asset.
   * @param performanceData performanceData or {@code null} for none
   */
  public Asset setPerformanceData(AssetPerformanceData performanceData) {
    this.performanceData = performanceData;
    return this;
  }

  /**
   * Output only. The list of sources contributing to the asset.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSources() {
    return sources;
  }

  /**
   * Output only. The list of sources contributing to the asset.
   * @param sources sources or {@code null} for none
   */
  public Asset setSources(java.util.List<java.lang.String> sources) {
    this.sources = sources;
    return this;
  }

  /**
   * Output only. Server generated human readable name of the asset.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Output only. Server generated human readable name of the asset.
   * @param title title or {@code null} for none
   */
  public Asset setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Output only. The timestamp when the asset was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when the asset was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Asset setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. Asset information specific for virtual machines.
   * @return value or {@code null} for none
   */
  public VirtualMachineDetails getVirtualMachineDetails() {
    return virtualMachineDetails;
  }

  /**
   * Output only. Asset information specific for virtual machines.
   * @param virtualMachineDetails virtualMachineDetails or {@code null} for none
   */
  public Asset setVirtualMachineDetails(VirtualMachineDetails virtualMachineDetails) {
    this.virtualMachineDetails = virtualMachineDetails;
    return this;
  }

  @Override
  public Asset set(String fieldName, Object value) {
    return (Asset) super.set(fieldName, value);
  }

  @Override
  public Asset clone() {
    return (Asset) super.clone();
  }

}
