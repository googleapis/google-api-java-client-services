/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Information on Frame Packing arrangement
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoFileFramePackingArrangement extends com.google.api.client.json.GenericJson {

  /**
   * Grid positions
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer gridOffset0Horizontal;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer gridOffset0Vertical;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer gridOffset1Horizontal;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer gridOffset1Vertical;

  /**
   * Content interpretation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String interpretation;

  /**
   * Quincunx sampling flag indicating if quincunx sampling is used
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean quincunxSampling;

  /**
   * Arrangement type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Grid positions
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGridOffset0Horizontal() {
    return gridOffset0Horizontal;
  }

  /**
   * Grid positions
   * @param gridOffset0Horizontal gridOffset0Horizontal or {@code null} for none
   */
  public VideoFileFramePackingArrangement setGridOffset0Horizontal(java.lang.Integer gridOffset0Horizontal) {
    this.gridOffset0Horizontal = gridOffset0Horizontal;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGridOffset0Vertical() {
    return gridOffset0Vertical;
  }

  /**
   * @param gridOffset0Vertical gridOffset0Vertical or {@code null} for none
   */
  public VideoFileFramePackingArrangement setGridOffset0Vertical(java.lang.Integer gridOffset0Vertical) {
    this.gridOffset0Vertical = gridOffset0Vertical;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGridOffset1Horizontal() {
    return gridOffset1Horizontal;
  }

  /**
   * @param gridOffset1Horizontal gridOffset1Horizontal or {@code null} for none
   */
  public VideoFileFramePackingArrangement setGridOffset1Horizontal(java.lang.Integer gridOffset1Horizontal) {
    this.gridOffset1Horizontal = gridOffset1Horizontal;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGridOffset1Vertical() {
    return gridOffset1Vertical;
  }

  /**
   * @param gridOffset1Vertical gridOffset1Vertical or {@code null} for none
   */
  public VideoFileFramePackingArrangement setGridOffset1Vertical(java.lang.Integer gridOffset1Vertical) {
    this.gridOffset1Vertical = gridOffset1Vertical;
    return this;
  }

  /**
   * Content interpretation
   * @return value or {@code null} for none
   */
  public java.lang.String getInterpretation() {
    return interpretation;
  }

  /**
   * Content interpretation
   * @param interpretation interpretation or {@code null} for none
   */
  public VideoFileFramePackingArrangement setInterpretation(java.lang.String interpretation) {
    this.interpretation = interpretation;
    return this;
  }

  /**
   * Quincunx sampling flag indicating if quincunx sampling is used
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getQuincunxSampling() {
    return quincunxSampling;
  }

  /**
   * Quincunx sampling flag indicating if quincunx sampling is used
   * @param quincunxSampling quincunxSampling or {@code null} for none
   */
  public VideoFileFramePackingArrangement setQuincunxSampling(java.lang.Boolean quincunxSampling) {
    this.quincunxSampling = quincunxSampling;
    return this;
  }

  /**
   * Arrangement type
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Arrangement type
   * @param type type or {@code null} for none
   */
  public VideoFileFramePackingArrangement setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public VideoFileFramePackingArrangement set(String fieldName, Object value) {
    return (VideoFileFramePackingArrangement) super.set(fieldName, value);
  }

  @Override
  public VideoFileFramePackingArrangement clone() {
    return (VideoFileFramePackingArrangement) super.clone();
  }

}
