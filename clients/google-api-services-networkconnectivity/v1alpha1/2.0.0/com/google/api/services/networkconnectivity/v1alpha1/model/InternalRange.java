/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1alpha1.model;

/**
 * The internal range resource for IPAM operations within a VPC network. Used to represent a private
 * address range along with behavioral characteristics of that range (its usage and peering
 * behavior). Networking resources can link to this range if they are created as belonging to it.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InternalRange extends com.google.api.client.json.GenericJson {

  /**
   * Time when the internal range was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * A description of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. Immutable ranges cannot have their fields modified, except for labels and
   * description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean immutable;

  /**
   * IP range that this internal range defines. NOTE: IPv6 ranges are limited to
   * usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory,
   * i.e. the address range must be specified explicitly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipCidrRange;

  /**
   * User-defined labels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. Must be present if usage is set to FOR_MIGRATION.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Migration migration;

  /**
   * Immutable. The name of an internal range. Format:
   * projects/{project}/locations/{location}/internalRanges/{internal_range} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The URL or resource ID of the network in which to reserve the internal range. The network
   * cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks
   * are not supported. For example:
   * https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network}
   * projects/{project}/locations/global/networks/{network} {network}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String network;

  /**
   * Optional. Types of resources that are allowed to overlap with the current internal range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> overlaps;

  /**
   * The type of peering set for this internal range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peering;

  /**
   * An alternative to ip_cidr_range. Can be set when trying to create an IPv4 reservation that
   * automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are
   * set, there is an error if the range sizes do not match. Can also be used during updates to
   * change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well,
   * and both fields must match. In other words, with IPv6 this field only works as a redundant
   * parameter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer prefixLength;

  /**
   * Optional. Can be set to narrow down or pick a different address space while searching for a
   * free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search
   * in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918
   * address spaces used in the VPC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> targetCidrRange;

  /**
   * Time when the internal range was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * The type of usage set for this internal range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String usage;

  /**
   * Output only. The list of resources that refer to this internal range. Resources that use the
   * internal range for their range allocation are referred to as users of the range. Other
   * resources mark themselves as users while doing so by creating a reference to this internal
   * range. Having a user, based on this reference, prevents deletion of the internal range that is
   * referred to. Can be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> users;

  /**
   * Time when the internal range was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Time when the internal range was created.
   * @param createTime createTime or {@code null} for none
   */
  public InternalRange setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * A description of this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of this resource.
   * @param description description or {@code null} for none
   */
  public InternalRange setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Immutable ranges cannot have their fields modified, except for labels and
   * description.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getImmutable() {
    return immutable;
  }

  /**
   * Optional. Immutable ranges cannot have their fields modified, except for labels and
   * description.
   * @param immutable immutable or {@code null} for none
   */
  public InternalRange setImmutable(java.lang.Boolean immutable) {
    this.immutable = immutable;
    return this;
  }

  /**
   * IP range that this internal range defines. NOTE: IPv6 ranges are limited to
   * usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory,
   * i.e. the address range must be specified explicitly.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpCidrRange() {
    return ipCidrRange;
  }

  /**
   * IP range that this internal range defines. NOTE: IPv6 ranges are limited to
   * usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory,
   * i.e. the address range must be specified explicitly.
   * @param ipCidrRange ipCidrRange or {@code null} for none
   */
  public InternalRange setIpCidrRange(java.lang.String ipCidrRange) {
    this.ipCidrRange = ipCidrRange;
    return this;
  }

  /**
   * User-defined labels.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * User-defined labels.
   * @param labels labels or {@code null} for none
   */
  public InternalRange setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. Must be present if usage is set to FOR_MIGRATION.
   * @return value or {@code null} for none
   */
  public Migration getMigration() {
    return migration;
  }

  /**
   * Optional. Must be present if usage is set to FOR_MIGRATION.
   * @param migration migration or {@code null} for none
   */
  public InternalRange setMigration(Migration migration) {
    this.migration = migration;
    return this;
  }

  /**
   * Immutable. The name of an internal range. Format:
   * projects/{project}/locations/{location}/internalRanges/{internal_range} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The name of an internal range. Format:
   * projects/{project}/locations/{location}/internalRanges/{internal_range} See:
   * https://google.aip.dev/122#fields-representing-resource-names
   * @param name name or {@code null} for none
   */
  public InternalRange setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The URL or resource ID of the network in which to reserve the internal range. The network
   * cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks
   * are not supported. For example:
   * https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network}
   * projects/{project}/locations/global/networks/{network} {network}
   * @return value or {@code null} for none
   */
  public java.lang.String getNetwork() {
    return network;
  }

  /**
   * The URL or resource ID of the network in which to reserve the internal range. The network
   * cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks
   * are not supported. For example:
   * https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network}
   * projects/{project}/locations/global/networks/{network} {network}
   * @param network network or {@code null} for none
   */
  public InternalRange setNetwork(java.lang.String network) {
    this.network = network;
    return this;
  }

  /**
   * Optional. Types of resources that are allowed to overlap with the current internal range.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOverlaps() {
    return overlaps;
  }

  /**
   * Optional. Types of resources that are allowed to overlap with the current internal range.
   * @param overlaps overlaps or {@code null} for none
   */
  public InternalRange setOverlaps(java.util.List<java.lang.String> overlaps) {
    this.overlaps = overlaps;
    return this;
  }

  /**
   * The type of peering set for this internal range.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeering() {
    return peering;
  }

  /**
   * The type of peering set for this internal range.
   * @param peering peering or {@code null} for none
   */
  public InternalRange setPeering(java.lang.String peering) {
    this.peering = peering;
    return this;
  }

  /**
   * An alternative to ip_cidr_range. Can be set when trying to create an IPv4 reservation that
   * automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are
   * set, there is an error if the range sizes do not match. Can also be used during updates to
   * change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well,
   * and both fields must match. In other words, with IPv6 this field only works as a redundant
   * parameter.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPrefixLength() {
    return prefixLength;
  }

  /**
   * An alternative to ip_cidr_range. Can be set when trying to create an IPv4 reservation that
   * automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are
   * set, there is an error if the range sizes do not match. Can also be used during updates to
   * change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well,
   * and both fields must match. In other words, with IPv6 this field only works as a redundant
   * parameter.
   * @param prefixLength prefixLength or {@code null} for none
   */
  public InternalRange setPrefixLength(java.lang.Integer prefixLength) {
    this.prefixLength = prefixLength;
    return this;
  }

  /**
   * Optional. Can be set to narrow down or pick a different address space while searching for a
   * free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search
   * in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918
   * address spaces used in the VPC.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTargetCidrRange() {
    return targetCidrRange;
  }

  /**
   * Optional. Can be set to narrow down or pick a different address space while searching for a
   * free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search
   * in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918
   * address spaces used in the VPC.
   * @param targetCidrRange targetCidrRange or {@code null} for none
   */
  public InternalRange setTargetCidrRange(java.util.List<java.lang.String> targetCidrRange) {
    this.targetCidrRange = targetCidrRange;
    return this;
  }

  /**
   * Time when the internal range was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Time when the internal range was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public InternalRange setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * The type of usage set for this internal range.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsage() {
    return usage;
  }

  /**
   * The type of usage set for this internal range.
   * @param usage usage or {@code null} for none
   */
  public InternalRange setUsage(java.lang.String usage) {
    this.usage = usage;
    return this;
  }

  /**
   * Output only. The list of resources that refer to this internal range. Resources that use the
   * internal range for their range allocation are referred to as users of the range. Other
   * resources mark themselves as users while doing so by creating a reference to this internal
   * range. Having a user, based on this reference, prevents deletion of the internal range that is
   * referred to. Can be empty.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getUsers() {
    return users;
  }

  /**
   * Output only. The list of resources that refer to this internal range. Resources that use the
   * internal range for their range allocation are referred to as users of the range. Other
   * resources mark themselves as users while doing so by creating a reference to this internal
   * range. Having a user, based on this reference, prevents deletion of the internal range that is
   * referred to. Can be empty.
   * @param users users or {@code null} for none
   */
  public InternalRange setUsers(java.util.List<java.lang.String> users) {
    this.users = users;
    return this;
  }

  @Override
  public InternalRange set(String fieldName, Object value) {
    return (InternalRange) super.set(fieldName, value);
  }

  @Override
  public InternalRange clone() {
    return (InternalRange) super.clone();
  }

}
