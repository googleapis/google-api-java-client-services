/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkehub.v1beta.model;

/**
 * MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other,
 * future Fleet resources) a Membership is bound to.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the GKE Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MembershipBinding extends com.google.api.client.json.GenericJson {

  /**
   * Output only. When the membership binding was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. When the membership binding was deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to
   * all Namespaces in this entire Fleet.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean fleet;

  /**
   * The resource name for the membershipbinding itself
   * `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A Scope resource name in the format `projects/locations/scopes`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scope;

  /**
   * Output only. State of the membership binding resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MembershipBindingLifecycleState state;

  /**
   * Output only. Google-generated UUID for this resource. This is unique across all
   * membershipbinding resources. If a membershipbinding resource is deleted and another resource
   * with the same name is created, it gets a different uid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. When the membership binding was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. When the membership binding was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. When the membership binding was created.
   * @param createTime createTime or {@code null} for none
   */
  public MembershipBinding setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. When the membership binding was deleted.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. When the membership binding was deleted.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public MembershipBinding setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to
   * all Namespaces in this entire Fleet.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFleet() {
    return fleet;
  }

  /**
   * Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to
   * all Namespaces in this entire Fleet.
   * @param fleet fleet or {@code null} for none
   */
  public MembershipBinding setFleet(java.lang.Boolean fleet) {
    this.fleet = fleet;
    return this;
  }

  /**
   * The resource name for the membershipbinding itself
   * `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name for the membershipbinding itself
   * `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
   * @param name name or {@code null} for none
   */
  public MembershipBinding setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * A Scope resource name in the format `projects/locations/scopes`.
   * @return value or {@code null} for none
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * A Scope resource name in the format `projects/locations/scopes`.
   * @param scope scope or {@code null} for none
   */
  public MembershipBinding setScope(java.lang.String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Output only. State of the membership binding resource.
   * @return value or {@code null} for none
   */
  public MembershipBindingLifecycleState getState() {
    return state;
  }

  /**
   * Output only. State of the membership binding resource.
   * @param state state or {@code null} for none
   */
  public MembershipBinding setState(MembershipBindingLifecycleState state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Google-generated UUID for this resource. This is unique across all
   * membershipbinding resources. If a membershipbinding resource is deleted and another resource
   * with the same name is created, it gets a different uid.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Google-generated UUID for this resource. This is unique across all
   * membershipbinding resources. If a membershipbinding resource is deleted and another resource
   * with the same name is created, it gets a different uid.
   * @param uid uid or {@code null} for none
   */
  public MembershipBinding setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. When the membership binding was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. When the membership binding was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public MembershipBinding setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public MembershipBinding set(String fieldName, Object value) {
    return (MembershipBinding) super.set(fieldName, value);
  }

  @Override
  public MembershipBinding clone() {
    return (MembershipBinding) super.clone();
  }

}
