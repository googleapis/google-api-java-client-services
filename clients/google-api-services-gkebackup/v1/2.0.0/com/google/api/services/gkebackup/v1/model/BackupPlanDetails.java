/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * Contains metadata about the backup plan/backup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupPlanDetails extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The fully qualified name of the last successful Backup created under this
   * BackupPlan. `projects/locations/backupPlans/backups`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastSuccessfulBackup;

  /**
   * Output only. Completion time of the last successful Backup. This is sourced from a successful
   * Backup's complete_time field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastSuccessfulBackupTime;

  /**
   * Output only. Start time of next scheduled backup under this BackupPlan by either cron_schedule
   * or rpo config. This is sourced from BackupPlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String nextScheduledBackupTime;

  /**
   * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via
   * this BackupPlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer protectedPodCount;

  /**
   * Output only. A number that represents the current risk level of this BackupPlan from RPO
   * perspective with 1 being no risk and 5 being highest risk.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer rpoRiskLevel;

  /**
   * Output only. State of the BackupPlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The fully qualified name of the last successful Backup created under this
   * BackupPlan. `projects/locations/backupPlans/backups`
   * @return value or {@code null} for none
   */
  public java.lang.String getLastSuccessfulBackup() {
    return lastSuccessfulBackup;
  }

  /**
   * Output only. The fully qualified name of the last successful Backup created under this
   * BackupPlan. `projects/locations/backupPlans/backups`
   * @param lastSuccessfulBackup lastSuccessfulBackup or {@code null} for none
   */
  public BackupPlanDetails setLastSuccessfulBackup(java.lang.String lastSuccessfulBackup) {
    this.lastSuccessfulBackup = lastSuccessfulBackup;
    return this;
  }

  /**
   * Output only. Completion time of the last successful Backup. This is sourced from a successful
   * Backup's complete_time field.
   * @return value or {@code null} for none
   */
  public String getLastSuccessfulBackupTime() {
    return lastSuccessfulBackupTime;
  }

  /**
   * Output only. Completion time of the last successful Backup. This is sourced from a successful
   * Backup's complete_time field.
   * @param lastSuccessfulBackupTime lastSuccessfulBackupTime or {@code null} for none
   */
  public BackupPlanDetails setLastSuccessfulBackupTime(String lastSuccessfulBackupTime) {
    this.lastSuccessfulBackupTime = lastSuccessfulBackupTime;
    return this;
  }

  /**
   * Output only. Start time of next scheduled backup under this BackupPlan by either cron_schedule
   * or rpo config. This is sourced from BackupPlan.
   * @return value or {@code null} for none
   */
  public String getNextScheduledBackupTime() {
    return nextScheduledBackupTime;
  }

  /**
   * Output only. Start time of next scheduled backup under this BackupPlan by either cron_schedule
   * or rpo config. This is sourced from BackupPlan.
   * @param nextScheduledBackupTime nextScheduledBackupTime or {@code null} for none
   */
  public BackupPlanDetails setNextScheduledBackupTime(String nextScheduledBackupTime) {
    this.nextScheduledBackupTime = nextScheduledBackupTime;
    return this;
  }

  /**
   * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via
   * this BackupPlan.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getProtectedPodCount() {
    return protectedPodCount;
  }

  /**
   * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via
   * this BackupPlan.
   * @param protectedPodCount protectedPodCount or {@code null} for none
   */
  public BackupPlanDetails setProtectedPodCount(java.lang.Integer protectedPodCount) {
    this.protectedPodCount = protectedPodCount;
    return this;
  }

  /**
   * Output only. A number that represents the current risk level of this BackupPlan from RPO
   * perspective with 1 being no risk and 5 being highest risk.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRpoRiskLevel() {
    return rpoRiskLevel;
  }

  /**
   * Output only. A number that represents the current risk level of this BackupPlan from RPO
   * perspective with 1 being no risk and 5 being highest risk.
   * @param rpoRiskLevel rpoRiskLevel or {@code null} for none
   */
  public BackupPlanDetails setRpoRiskLevel(java.lang.Integer rpoRiskLevel) {
    this.rpoRiskLevel = rpoRiskLevel;
    return this;
  }

  /**
   * Output only. State of the BackupPlan.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the BackupPlan.
   * @param state state or {@code null} for none
   */
  public BackupPlanDetails setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public BackupPlanDetails set(String fieldName, Object value) {
    return (BackupPlanDetails) super.set(fieldName, value);
  }

  @Override
  public BackupPlanDetails clone() {
    return (BackupPlanDetails) super.clone();
  }

}
