/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha.model;

/**
 * A definition for a calculated metric.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Admin API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAnalyticsAdminV1alphaCalculatedMetric extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The ID to use for the calculated metric. In the UI, this is referred to as the
   * "API name." The calculated_metric_id is used when referencing this calculated metric from
   * external APIs. For example, "calcMetric:{calculated_metric_id}".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String calculatedMetricId;

  /**
   * Optional. Description for this calculated metric. Max length of 4096 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Display name for this calculated metric as shown in the Google Analytics UI. Max
   * length 82 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Required. The calculated metric's definition. Maximum number of unique referenced custom
   * metrics is 5. Formulas supports the following operations: + (addition), - (subtraction), -
   * (negative), * (multiplication), / (division), () (parenthesis). Any valid real numbers are
   * acceptable that fit in a Long (64bit integer) or a Double (64 bit floating point number).
   * Example formula: "( customEvent:parameter_name + cartPurchaseQuantity ) / 2.0"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formula;

  /**
   * Output only. If true, this calculated metric has a invalid metric reference. Anything using a
   * calculated metric with invalid_metric_reference set to true may fail, produce warnings, or
   * produce unexpected results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean invalidMetricReference;

  /**
   * Required. The type for the calculated metric's value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String metricUnit;

  /**
   * Output only. Resource name for this CalculatedMetric. Format:
   * 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Types of restricted data that this metric contains.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> restrictedMetricType;

  /**
   * Output only. The ID to use for the calculated metric. In the UI, this is referred to as the
   * "API name." The calculated_metric_id is used when referencing this calculated metric from
   * external APIs. For example, "calcMetric:{calculated_metric_id}".
   * @return value or {@code null} for none
   */
  public java.lang.String getCalculatedMetricId() {
    return calculatedMetricId;
  }

  /**
   * Output only. The ID to use for the calculated metric. In the UI, this is referred to as the
   * "API name." The calculated_metric_id is used when referencing this calculated metric from
   * external APIs. For example, "calcMetric:{calculated_metric_id}".
   * @param calculatedMetricId calculatedMetricId or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setCalculatedMetricId(java.lang.String calculatedMetricId) {
    this.calculatedMetricId = calculatedMetricId;
    return this;
  }

  /**
   * Optional. Description for this calculated metric. Max length of 4096 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description for this calculated metric. Max length of 4096 characters.
   * @param description description or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Display name for this calculated metric as shown in the Google Analytics UI. Max
   * length 82 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. Display name for this calculated metric as shown in the Google Analytics UI. Max
   * length 82 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The calculated metric's definition. Maximum number of unique referenced custom
   * metrics is 5. Formulas supports the following operations: + (addition), - (subtraction), -
   * (negative), * (multiplication), / (division), () (parenthesis). Any valid real numbers are
   * acceptable that fit in a Long (64bit integer) or a Double (64 bit floating point number).
   * Example formula: "( customEvent:parameter_name + cartPurchaseQuantity ) / 2.0"
   * @return value or {@code null} for none
   */
  public java.lang.String getFormula() {
    return formula;
  }

  /**
   * Required. The calculated metric's definition. Maximum number of unique referenced custom
   * metrics is 5. Formulas supports the following operations: + (addition), - (subtraction), -
   * (negative), * (multiplication), / (division), () (parenthesis). Any valid real numbers are
   * acceptable that fit in a Long (64bit integer) or a Double (64 bit floating point number).
   * Example formula: "( customEvent:parameter_name + cartPurchaseQuantity ) / 2.0"
   * @param formula formula or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setFormula(java.lang.String formula) {
    this.formula = formula;
    return this;
  }

  /**
   * Output only. If true, this calculated metric has a invalid metric reference. Anything using a
   * calculated metric with invalid_metric_reference set to true may fail, produce warnings, or
   * produce unexpected results.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInvalidMetricReference() {
    return invalidMetricReference;
  }

  /**
   * Output only. If true, this calculated metric has a invalid metric reference. Anything using a
   * calculated metric with invalid_metric_reference set to true may fail, produce warnings, or
   * produce unexpected results.
   * @param invalidMetricReference invalidMetricReference or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setInvalidMetricReference(java.lang.Boolean invalidMetricReference) {
    this.invalidMetricReference = invalidMetricReference;
    return this;
  }

  /**
   * Required. The type for the calculated metric's value.
   * @return value or {@code null} for none
   */
  public java.lang.String getMetricUnit() {
    return metricUnit;
  }

  /**
   * Required. The type for the calculated metric's value.
   * @param metricUnit metricUnit or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setMetricUnit(java.lang.String metricUnit) {
    this.metricUnit = metricUnit;
    return this;
  }

  /**
   * Output only. Resource name for this CalculatedMetric. Format:
   * 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Resource name for this CalculatedMetric. Format:
   * 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
   * @param name name or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Types of restricted data that this metric contains.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRestrictedMetricType() {
    return restrictedMetricType;
  }

  /**
   * Output only. Types of restricted data that this metric contains.
   * @param restrictedMetricType restrictedMetricType or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaCalculatedMetric setRestrictedMetricType(java.util.List<java.lang.String> restrictedMetricType) {
    this.restrictedMetricType = restrictedMetricType;
    return this;
  }

  @Override
  public GoogleAnalyticsAdminV1alphaCalculatedMetric set(String fieldName, Object value) {
    return (GoogleAnalyticsAdminV1alphaCalculatedMetric) super.set(fieldName, value);
  }

  @Override
  public GoogleAnalyticsAdminV1alphaCalculatedMetric clone() {
    return (GoogleAnalyticsAdminV1alphaCalculatedMetric) super.clone();
  }

}
