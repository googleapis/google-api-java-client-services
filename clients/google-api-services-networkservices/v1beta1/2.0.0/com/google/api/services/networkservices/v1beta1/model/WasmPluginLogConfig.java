/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkservices.v1beta1.model;

/**
 * Specifies the logging options for the activity performed by this plugin. If logging is enabled,
 * plugin logs are exported to Cloud Logging.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Services API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WasmPluginLogConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Specifies whether to enable logging for activity by this plugin. Defaults to `false`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enable;

  /**
   * Non-empty default. Specificies the lowest level of the plugin logs that are exported to Cloud
   * Logging. This setting relates to the logs generated by using logging statements in your Wasm
   * code. This field is can be set only if logging is enabled for the plugin. If the field is not
   * provided when logging is enabled, it is set to `INFO` by default.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String minLogLevel;

  /**
   * Non-empty default. Configures the sampling rate of activity logs, where `1.0` means all logged
   * activity is reported and `0.0` means no activity is reported. A floating point value between
   * `0.0` and `1.0` indicates that a percentage of log messages is stored. The default value when
   * logging is enabled is `1.0`. The value of the field must be between `0` and `1` (inclusive).
   * This field can be specified only if logging is enabled for this plugin.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float sampleRate;

  /**
   * Optional. Specifies whether to enable logging for activity by this plugin. Defaults to `false`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnable() {
    return enable;
  }

  /**
   * Optional. Specifies whether to enable logging for activity by this plugin. Defaults to `false`.
   * @param enable enable or {@code null} for none
   */
  public WasmPluginLogConfig setEnable(java.lang.Boolean enable) {
    this.enable = enable;
    return this;
  }

  /**
   * Non-empty default. Specificies the lowest level of the plugin logs that are exported to Cloud
   * Logging. This setting relates to the logs generated by using logging statements in your Wasm
   * code. This field is can be set only if logging is enabled for the plugin. If the field is not
   * provided when logging is enabled, it is set to `INFO` by default.
   * @return value or {@code null} for none
   */
  public java.lang.String getMinLogLevel() {
    return minLogLevel;
  }

  /**
   * Non-empty default. Specificies the lowest level of the plugin logs that are exported to Cloud
   * Logging. This setting relates to the logs generated by using logging statements in your Wasm
   * code. This field is can be set only if logging is enabled for the plugin. If the field is not
   * provided when logging is enabled, it is set to `INFO` by default.
   * @param minLogLevel minLogLevel or {@code null} for none
   */
  public WasmPluginLogConfig setMinLogLevel(java.lang.String minLogLevel) {
    this.minLogLevel = minLogLevel;
    return this;
  }

  /**
   * Non-empty default. Configures the sampling rate of activity logs, where `1.0` means all logged
   * activity is reported and `0.0` means no activity is reported. A floating point value between
   * `0.0` and `1.0` indicates that a percentage of log messages is stored. The default value when
   * logging is enabled is `1.0`. The value of the field must be between `0` and `1` (inclusive).
   * This field can be specified only if logging is enabled for this plugin.
   * @return value or {@code null} for none
   */
  public java.lang.Float getSampleRate() {
    return sampleRate;
  }

  /**
   * Non-empty default. Configures the sampling rate of activity logs, where `1.0` means all logged
   * activity is reported and `0.0` means no activity is reported. A floating point value between
   * `0.0` and `1.0` indicates that a percentage of log messages is stored. The default value when
   * logging is enabled is `1.0`. The value of the field must be between `0` and `1` (inclusive).
   * This field can be specified only if logging is enabled for this plugin.
   * @param sampleRate sampleRate or {@code null} for none
   */
  public WasmPluginLogConfig setSampleRate(java.lang.Float sampleRate) {
    this.sampleRate = sampleRate;
    return this;
  }

  @Override
  public WasmPluginLogConfig set(String fieldName, Object value) {
    return (WasmPluginLogConfig) super.set(fieldName, value);
  }

  @Override
  public WasmPluginLogConfig clone() {
    return (WasmPluginLogConfig) super.clone();
  }

}
