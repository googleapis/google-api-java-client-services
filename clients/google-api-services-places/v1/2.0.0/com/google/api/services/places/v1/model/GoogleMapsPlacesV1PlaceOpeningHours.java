/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Information about business hour of the place.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1PlaceOpeningHours extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Is this place open right now? Always present unless we lack time-of-day or
   * timezone data for these opening hours.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean openNow;

  /**
   * Output only. The periods that this place is open during the week. The periods are in
   * chronological order, starting with Sunday in the place-local timezone. An empty (but not
   * absent) value indicates a place that is never open, e.g. because it is closed temporarily for
   * renovations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursPeriod> periods;

  /**
   * Output only. A type string used to identify the type of secondary hours.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String secondaryHoursType;

  /**
   * Output only. Structured information for special days that fall within the period that the
   * returned opening hours cover. Special days are days that could impact the business hours of a
   * place, e.g. Christmas day. Set for current_opening_hours and current_secondary_opening_hours if
   * there are exceptional hours.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay> specialDays;

  /**
   * Output only. Localized strings describing the opening hours of this place, one string for each
   * day of the week. Will be empty if the hours are unknown or could not be converted to localized
   * text. Example: "Sun: 18:00–06:00"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> weekdayDescriptions;

  /**
   * Output only. Is this place open right now? Always present unless we lack time-of-day or
   * timezone data for these opening hours.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOpenNow() {
    return openNow;
  }

  /**
   * Output only. Is this place open right now? Always present unless we lack time-of-day or
   * timezone data for these opening hours.
   * @param openNow openNow or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceOpeningHours setOpenNow(java.lang.Boolean openNow) {
    this.openNow = openNow;
    return this;
  }

  /**
   * Output only. The periods that this place is open during the week. The periods are in
   * chronological order, starting with Sunday in the place-local timezone. An empty (but not
   * absent) value indicates a place that is never open, e.g. because it is closed temporarily for
   * renovations.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursPeriod> getPeriods() {
    return periods;
  }

  /**
   * Output only. The periods that this place is open during the week. The periods are in
   * chronological order, starting with Sunday in the place-local timezone. An empty (but not
   * absent) value indicates a place that is never open, e.g. because it is closed temporarily for
   * renovations.
   * @param periods periods or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceOpeningHours setPeriods(java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursPeriod> periods) {
    this.periods = periods;
    return this;
  }

  /**
   * Output only. A type string used to identify the type of secondary hours.
   * @return value or {@code null} for none
   */
  public java.lang.String getSecondaryHoursType() {
    return secondaryHoursType;
  }

  /**
   * Output only. A type string used to identify the type of secondary hours.
   * @param secondaryHoursType secondaryHoursType or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceOpeningHours setSecondaryHoursType(java.lang.String secondaryHoursType) {
    this.secondaryHoursType = secondaryHoursType;
    return this;
  }

  /**
   * Output only. Structured information for special days that fall within the period that the
   * returned opening hours cover. Special days are days that could impact the business hours of a
   * place, e.g. Christmas day. Set for current_opening_hours and current_secondary_opening_hours if
   * there are exceptional hours.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay> getSpecialDays() {
    return specialDays;
  }

  /**
   * Output only. Structured information for special days that fall within the period that the
   * returned opening hours cover. Special days are days that could impact the business hours of a
   * place, e.g. Christmas day. Set for current_opening_hours and current_secondary_opening_hours if
   * there are exceptional hours.
   * @param specialDays specialDays or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceOpeningHours setSpecialDays(java.util.List<GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay> specialDays) {
    this.specialDays = specialDays;
    return this;
  }

  /**
   * Output only. Localized strings describing the opening hours of this place, one string for each
   * day of the week. Will be empty if the hours are unknown or could not be converted to localized
   * text. Example: "Sun: 18:00–06:00"
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getWeekdayDescriptions() {
    return weekdayDescriptions;
  }

  /**
   * Output only. Localized strings describing the opening hours of this place, one string for each
   * day of the week. Will be empty if the hours are unknown or could not be converted to localized
   * text. Example: "Sun: 18:00–06:00"
   * @param weekdayDescriptions weekdayDescriptions or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceOpeningHours setWeekdayDescriptions(java.util.List<java.lang.String> weekdayDescriptions) {
    this.weekdayDescriptions = weekdayDescriptions;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1PlaceOpeningHours set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1PlaceOpeningHours) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1PlaceOpeningHours clone() {
    return (GoogleMapsPlacesV1PlaceOpeningHours) super.clone();
  }

}
