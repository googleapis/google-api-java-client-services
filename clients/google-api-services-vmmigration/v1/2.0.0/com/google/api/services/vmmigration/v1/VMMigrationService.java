/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1;

/**
 * Service definition for VMMigrationService (v1).
 *
 * <p>
 * Use the Migrate to Virtual Machines API to programmatically migrate workloads. 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/migrate/virtual-machines" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link VMMigrationServiceRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class VMMigrationService extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the VM Migration API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://vmmigration.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://vmmigration.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public VMMigrationService(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  VMMigrationService(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
   *   {@code VMMigrationService.Projects.List request = vmmigration.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
     *   {@code VMMigrationService.Locations.List request = vmmigration.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the vmmigration server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the vmmigration server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the vmmigration server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the vmmigration server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Groups collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
       *   {@code VMMigrationService.Groups.List request = vmmigration.groups().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Groups groups() {
        return new Groups();
      }

      /**
       * The "groups" collection of methods.
       */
      public class Groups {

        /**
         * Adds a MigratingVm to a Group.
         *
         * Create a request for the method "groups.addGroupMigration".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link AddGroupMigration#execute()} method to invoke the remote operation.
         *
         * @param group Required. The full path name of the Group to add to.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.AddGroupMigrationRequest}
         * @return the request
         */
        public AddGroupMigration addGroupMigration(java.lang.String group, com.google.api.services.vmmigration.v1.model.AddGroupMigrationRequest content) throws java.io.IOException {
          AddGroupMigration result = new AddGroupMigration(group, content);
          initialize(result);
          return result;
        }

        public class AddGroupMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+group}:addGroupMigration";

          private final java.util.regex.Pattern GROUP_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groups/[^/]+$");

          /**
           * Adds a MigratingVm to a Group.
           *
           * Create a request for the method "groups.addGroupMigration".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link AddGroupMigration#execute()} method to invoke the remote
           * operation. <p> {@link AddGroupMigration#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param group Required. The full path name of the Group to add to.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.AddGroupMigrationRequest}
           * @since 1.13
           */
          protected AddGroupMigration(java.lang.String group, com.google.api.services.vmmigration.v1.model.AddGroupMigrationRequest content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.group = com.google.api.client.util.Preconditions.checkNotNull(group, "Required parameter group must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUP_PATTERN.matcher(group).matches(),
                  "Parameter group must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
          }

          @Override
          public AddGroupMigration set$Xgafv(java.lang.String $Xgafv) {
            return (AddGroupMigration) super.set$Xgafv($Xgafv);
          }

          @Override
          public AddGroupMigration setAccessToken(java.lang.String accessToken) {
            return (AddGroupMigration) super.setAccessToken(accessToken);
          }

          @Override
          public AddGroupMigration setAlt(java.lang.String alt) {
            return (AddGroupMigration) super.setAlt(alt);
          }

          @Override
          public AddGroupMigration setCallback(java.lang.String callback) {
            return (AddGroupMigration) super.setCallback(callback);
          }

          @Override
          public AddGroupMigration setFields(java.lang.String fields) {
            return (AddGroupMigration) super.setFields(fields);
          }

          @Override
          public AddGroupMigration setKey(java.lang.String key) {
            return (AddGroupMigration) super.setKey(key);
          }

          @Override
          public AddGroupMigration setOauthToken(java.lang.String oauthToken) {
            return (AddGroupMigration) super.setOauthToken(oauthToken);
          }

          @Override
          public AddGroupMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AddGroupMigration) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AddGroupMigration setQuotaUser(java.lang.String quotaUser) {
            return (AddGroupMigration) super.setQuotaUser(quotaUser);
          }

          @Override
          public AddGroupMigration setUploadType(java.lang.String uploadType) {
            return (AddGroupMigration) super.setUploadType(uploadType);
          }

          @Override
          public AddGroupMigration setUploadProtocol(java.lang.String uploadProtocol) {
            return (AddGroupMigration) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The full path name of the Group to add to. */
          @com.google.api.client.util.Key
          private java.lang.String group;

          /** Required. The full path name of the Group to add to.
           */
          public java.lang.String getGroup() {
            return group;
          }

          /** Required. The full path name of the Group to add to. */
          public AddGroupMigration setGroup(java.lang.String group) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUP_PATTERN.matcher(group).matches(),
                  "Parameter group must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
            this.group = group;
            return this;
          }

          @Override
          public AddGroupMigration set(String parameterName, Object value) {
            return (AddGroupMigration) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new Group in a given project and location.
         *
         * Create a request for the method "groups.create".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The Group's parent.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.Group}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.Group content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/groups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Group in a given project and location.
           *
           * Create a request for the method "groups.create".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The Group's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.Group}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.Group content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Group's parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The Group's parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The Group's parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The group identifier. */
          @com.google.api.client.util.Key
          private java.lang.String groupId;

          /** Required. The group identifier.
           */
          public java.lang.String getGroupId() {
            return groupId;
          }

          /** Required. The group identifier. */
          public Create setGroupId(java.lang.String groupId) {
            this.groupId = groupId;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Group.
         *
         * Create a request for the method "groups.delete".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The Group name.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groups/[^/]+$");

          /**
           * Deletes a single Group.
           *
           * Create a request for the method "groups.delete".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The Group name.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Group name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The Group name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The Group name. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes after the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Group.
         *
         * Create a request for the method "groups.get".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The group name.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Group> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groups/[^/]+$");

          /**
           * Gets details of a single Group.
           *
           * Create a request for the method "groups.get".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The group name.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Group.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The group name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The group name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The group name. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Groups in a given project and location.
         *
         * Create a request for the method "groups.list".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of groups.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListGroupsResponse> {

          private static final String REST_PATH = "v1/{+parent}/groups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Groups in a given project and location.
           *
           * Create a request for the method "groups.list".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of groups.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListGroupsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of groups. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of groups.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of groups. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter request. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter request.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter request. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. the order by fields for the result. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. the order by fields for the result.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. the order by fields for the result. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of groups to return. The service may return fewer than
           * this value. If unspecified, at most 500 groups will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of groups to return. The service may return fewer than this value. If
         unspecified, at most 500 groups will be returned. The maximum value is 1000; values above 1000 will
         be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of groups to return. The service may return fewer than
           * this value. If unspecified, at most 500 groups will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Required. A page token, received from a previous `ListGroups` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListGroups` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Required. A page token, received from a previous `ListGroups` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call
         that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Required. A page token, received from a previous `ListGroups` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListGroups` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single Group.
         *
         * Create a request for the method "groups.patch".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The Group name.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.Group}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.Group content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groups/[^/]+$");

          /**
           * Updates the parameters of a single Group.
           *
           * Create a request for the method "groups.patch".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The Group name.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.Group}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.Group content) {
            super(VMMigrationService.this, "PATCH", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The Group name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The Group name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The Group name. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Group resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Group resource by the update. The
         fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields will
         be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Group resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Removes a MigratingVm from a Group.
         *
         * Create a request for the method "groups.removeGroupMigration".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link RemoveGroupMigration#execute()} method to invoke the remote
         * operation.
         *
         * @param group Required. The name of the Group.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.RemoveGroupMigrationRequest}
         * @return the request
         */
        public RemoveGroupMigration removeGroupMigration(java.lang.String group, com.google.api.services.vmmigration.v1.model.RemoveGroupMigrationRequest content) throws java.io.IOException {
          RemoveGroupMigration result = new RemoveGroupMigration(group, content);
          initialize(result);
          return result;
        }

        public class RemoveGroupMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+group}:removeGroupMigration";

          private final java.util.regex.Pattern GROUP_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/groups/[^/]+$");

          /**
           * Removes a MigratingVm from a Group.
           *
           * Create a request for the method "groups.removeGroupMigration".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link RemoveGroupMigration#execute()} method to invoke the
           * remote operation. <p> {@link RemoveGroupMigration#initialize(com.google.api.client.googleapis.s
           * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param group Required. The name of the Group.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.RemoveGroupMigrationRequest}
           * @since 1.13
           */
          protected RemoveGroupMigration(java.lang.String group, com.google.api.services.vmmigration.v1.model.RemoveGroupMigrationRequest content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.group = com.google.api.client.util.Preconditions.checkNotNull(group, "Required parameter group must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUP_PATTERN.matcher(group).matches(),
                  "Parameter group must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
          }

          @Override
          public RemoveGroupMigration set$Xgafv(java.lang.String $Xgafv) {
            return (RemoveGroupMigration) super.set$Xgafv($Xgafv);
          }

          @Override
          public RemoveGroupMigration setAccessToken(java.lang.String accessToken) {
            return (RemoveGroupMigration) super.setAccessToken(accessToken);
          }

          @Override
          public RemoveGroupMigration setAlt(java.lang.String alt) {
            return (RemoveGroupMigration) super.setAlt(alt);
          }

          @Override
          public RemoveGroupMigration setCallback(java.lang.String callback) {
            return (RemoveGroupMigration) super.setCallback(callback);
          }

          @Override
          public RemoveGroupMigration setFields(java.lang.String fields) {
            return (RemoveGroupMigration) super.setFields(fields);
          }

          @Override
          public RemoveGroupMigration setKey(java.lang.String key) {
            return (RemoveGroupMigration) super.setKey(key);
          }

          @Override
          public RemoveGroupMigration setOauthToken(java.lang.String oauthToken) {
            return (RemoveGroupMigration) super.setOauthToken(oauthToken);
          }

          @Override
          public RemoveGroupMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RemoveGroupMigration) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RemoveGroupMigration setQuotaUser(java.lang.String quotaUser) {
            return (RemoveGroupMigration) super.setQuotaUser(quotaUser);
          }

          @Override
          public RemoveGroupMigration setUploadType(java.lang.String uploadType) {
            return (RemoveGroupMigration) super.setUploadType(uploadType);
          }

          @Override
          public RemoveGroupMigration setUploadProtocol(java.lang.String uploadProtocol) {
            return (RemoveGroupMigration) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Group. */
          @com.google.api.client.util.Key
          private java.lang.String group;

          /** Required. The name of the Group.
           */
          public java.lang.String getGroup() {
            return group;
          }

          /** Required. The name of the Group. */
          public RemoveGroupMigration setGroup(java.lang.String group) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(GROUP_PATTERN.matcher(group).matches(),
                  "Parameter group must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/groups/[^/]+$");
            }
            this.group = group;
            return this;
          }

          @Override
          public RemoveGroupMigration set(String parameterName, Object value) {
            return (RemoveGroupMigration) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ImageImports collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
       *   {@code VMMigrationService.ImageImports.List request = vmmigration.imageImports().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ImageImports imageImports() {
        return new ImageImports();
      }

      /**
       * The "imageImports" collection of methods.
       */
      public class ImageImports {

        /**
         * Creates a new ImageImport in a given project.
         *
         * Create a request for the method "imageImports.create".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The ImageImport's parent.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.ImageImport}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.ImageImport content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/imageImports";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new ImageImport in a given project.
           *
           * Create a request for the method "imageImports.create".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The ImageImport's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.ImageImport}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.ImageImport content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ImageImport's parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The ImageImport's parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The ImageImport's parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The image import identifier. This value maximum length is 63 characters, and
           * valid characters are /a-z-/. It must start with an english letter and must not end with
           * a hyphen.
           */
          @com.google.api.client.util.Key
          private java.lang.String imageImportId;

          /** Required. The image import identifier. This value maximum length is 63 characters, and valid
         characters are /a-z-/. It must start with an english letter and must not end with a hyphen.
           */
          public java.lang.String getImageImportId() {
            return imageImportId;
          }

          /**
           * Required. The image import identifier. This value maximum length is 63 characters, and
           * valid characters are /a-z-/. It must start with an english letter and must not end with
           * a hyphen.
           */
          public Create setImageImportId(java.lang.String imageImportId) {
            this.imageImportId = imageImportId;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single ImageImport.
         *
         * Create a request for the method "imageImports.delete".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The ImageImport name.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");

          /**
           * Deletes a single ImageImport.
           *
           * Create a request for the method "imageImports.delete".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The ImageImport name.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ImageImport name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The ImageImport name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The ImageImport name. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and t he
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes after the first request. For example, consider a
         situation where you make an initial request and t he request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and t he
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single ImageImport.
         *
         * Create a request for the method "imageImports.get".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The ImageImport name.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ImageImport> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");

          /**
           * Gets details of a single ImageImport.
           *
           * Create a request for the method "imageImports.get".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The ImageImport name.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ImageImport.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The ImageImport name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The ImageImport name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The ImageImport name. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists ImageImports in a given project.
         *
         * Create a request for the method "imageImports.list".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of targets.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListImageImportsResponse> {

          private static final String REST_PATH = "v1/{+parent}/imageImports";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists ImageImports in a given project.
           *
           * Create a request for the method "imageImports.list".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of targets.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListImageImportsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of targets. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of targets.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of targets. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter request (according to AIP-160). */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter request (according to AIP-160).
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter request (according to AIP-160). */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The order by fields for the result (according to AIP-132). Currently ordering
           * is only possible by "name" field.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. The order by fields for the result (according to AIP-132). Currently ordering is only
         possible by "name" field.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. The order by fields for the result (according to AIP-132). Currently ordering
           * is only possible by "name" field.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of targets to return. The service may return fewer than
           * this value. If unspecified, at most 500 targets will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of targets to return. The service may return fewer than this value. If
         unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000
         will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of targets to return. The service may return fewer than
           * this value. If unspecified, at most 500 targets will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous `ListImageImports` call. Provide this
           * to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListImageImports` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous `ListImageImports` call. Provide this to retrieve
         the subsequent page. When paginating, all other parameters provided to `ListImageImports` must
         match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous `ListImageImports` call. Provide this
           * to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListImageImports` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the ImageImportJobs collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
         *   {@code VMMigrationService.ImageImportJobs.List request = vmmigration.imageImportJobs().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ImageImportJobs imageImportJobs() {
          return new ImageImportJobs();
        }

        /**
         * The "imageImportJobs" collection of methods.
         */
        public class ImageImportJobs {

          /**
           * Initiates the cancellation of a running clone job.
           *
           * Create a request for the method "imageImportJobs.cancel".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name Required. The image import job id.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelImageImportJobRequest}
           * @return the request
           */
          public Cancel cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelImageImportJobRequest content) throws java.io.IOException {
            Cancel result = new Cancel(name, content);
            initialize(result);
            return result;
          }

          public class Cancel extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");

            /**
             * Initiates the cancellation of a running clone job.
             *
             * Create a request for the method "imageImportJobs.cancel".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The image import job id.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelImageImportJobRequest}
             * @since 1.13
             */
            protected Cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelImageImportJobRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The image import job id. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The image import job id.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The image import job id. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single ImageImportJob.
           *
           * Create a request for the method "imageImportJobs.get".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The ImageImportJob name.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ImageImportJob> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");

            /**
             * Gets details of a single ImageImportJob.
             *
             * Create a request for the method "imageImportJobs.get".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The ImageImportJob name.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ImageImportJob.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The ImageImportJob name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The ImageImportJob name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The ImageImportJob name. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists ImageImportJobs in a given project.
           *
           * Create a request for the method "imageImportJobs.list".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of targets.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListImageImportJobsResponse> {

            private static final String REST_PATH = "v1/{+parent}/imageImportJobs";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");

            /**
             * Lists ImageImportJobs in a given project.
             *
             * Create a request for the method "imageImportJobs.list".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of targets.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListImageImportJobsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent, which owns this collection of targets. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of targets.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent, which owns this collection of targets. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter request (according to AIP-160). */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter request (according to AIP-160).
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter request (according to AIP-160). */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. The order by fields for the result (according to AIP-132). Currently
             * ordering is only possible by "name" field.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. The order by fields for the result (according to AIP-132). Currently ordering is only
           possible by "name" field.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. The order by fields for the result (according to AIP-132). Currently
             * ordering is only possible by "name" field.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of targets to return. The service may return fewer than
             * this value. If unspecified, at most 500 targets will be returned. The maximum value
             * is 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of targets to return. The service may return fewer than this value. If
           unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000
           will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of targets to return. The service may return fewer than
             * this value. If unspecified, at most 500 targets will be returned. The maximum value
             * is 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. A page token, received from a previous `ListImageImportJobs` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListImageImportJobs` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A page token, received from a previous `ListImageImportJobs` call. Provide this to
           retrieve the subsequent page. When paginating, all other parameters provided to
           `ListImageImportJobs` must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. A page token, received from a previous `ListImageImportJobs` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListImageImportJobs` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
       *   {@code VMMigrationService.Operations.List request = vmmigration.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelOperationRequest content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
       *   {@code VMMigrationService.Sources.List request = vmmigration.sources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sources sources() {
        return new Sources();
      }

      /**
       * The "sources" collection of methods.
       */
      public class Sources {

        /**
         * Creates a new Source in a given project and location.
         *
         * Create a request for the method "sources.create".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The Source's parent.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.Source}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.Source content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/sources";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Source in a given project and location.
           *
           * Create a request for the method "sources.create".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The Source's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.Source}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.Source content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Source's parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The Source's parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The Source's parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The source identifier. */
          @com.google.api.client.util.Key
          private java.lang.String sourceId;

          /** Required. The source identifier.
           */
          public java.lang.String getSourceId() {
            return sourceId;
          }

          /** Required. The source identifier. */
          public Create setSourceId(java.lang.String sourceId) {
            this.sourceId = sourceId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Source.
         *
         * Create a request for the method "sources.delete".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The Source name.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

          /**
           * Deletes a single Source.
           *
           * Create a request for the method "sources.delete".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The Source name.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Source name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The Source name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The Source name. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes after the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the
         * sense it's not in Compute Engine). The inventory describes the list of existing VMs in that
         * source. Note that this operation lists the VMs on the remote source, as opposed to listing the
         * MigratingVms resources in the vmmigration service.
         *
         * Create a request for the method "sources.fetchInventory".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link FetchInventory#execute()} method to invoke the remote operation.
         *
         * @param source Required. The name of the Source.
         * @return the request
         */
        public FetchInventory fetchInventory(java.lang.String source) throws java.io.IOException {
          FetchInventory result = new FetchInventory(source);
          initialize(result);
          return result;
        }

        public class FetchInventory extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.FetchInventoryResponse> {

          private static final String REST_PATH = "v1/{+source}:fetchInventory";

          private final java.util.regex.Pattern SOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

          /**
           * List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the
           * sense it's not in Compute Engine). The inventory describes the list of existing VMs in that
           * source. Note that this operation lists the VMs on the remote source, as opposed to listing the
           * MigratingVms resources in the vmmigration service.
           *
           * Create a request for the method "sources.fetchInventory".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link FetchInventory#execute()} method to invoke the remote
           * operation. <p> {@link FetchInventory#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param source Required. The name of the Source.
           * @since 1.13
           */
          protected FetchInventory(java.lang.String source) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.FetchInventoryResponse.class);
            this.source = com.google.api.client.util.Preconditions.checkNotNull(source, "Required parameter source must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_PATTERN.matcher(source).matches(),
                  "Parameter source must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public FetchInventory set$Xgafv(java.lang.String $Xgafv) {
            return (FetchInventory) super.set$Xgafv($Xgafv);
          }

          @Override
          public FetchInventory setAccessToken(java.lang.String accessToken) {
            return (FetchInventory) super.setAccessToken(accessToken);
          }

          @Override
          public FetchInventory setAlt(java.lang.String alt) {
            return (FetchInventory) super.setAlt(alt);
          }

          @Override
          public FetchInventory setCallback(java.lang.String callback) {
            return (FetchInventory) super.setCallback(callback);
          }

          @Override
          public FetchInventory setFields(java.lang.String fields) {
            return (FetchInventory) super.setFields(fields);
          }

          @Override
          public FetchInventory setKey(java.lang.String key) {
            return (FetchInventory) super.setKey(key);
          }

          @Override
          public FetchInventory setOauthToken(java.lang.String oauthToken) {
            return (FetchInventory) super.setOauthToken(oauthToken);
          }

          @Override
          public FetchInventory setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (FetchInventory) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public FetchInventory setQuotaUser(java.lang.String quotaUser) {
            return (FetchInventory) super.setQuotaUser(quotaUser);
          }

          @Override
          public FetchInventory setUploadType(java.lang.String uploadType) {
            return (FetchInventory) super.setUploadType(uploadType);
          }

          @Override
          public FetchInventory setUploadProtocol(java.lang.String uploadProtocol) {
            return (FetchInventory) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Source. */
          @com.google.api.client.util.Key
          private java.lang.String source;

          /** Required. The name of the Source.
           */
          public java.lang.String getSource() {
            return source;
          }

          /** Required. The name of the Source. */
          public FetchInventory setSource(java.lang.String source) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_PATTERN.matcher(source).matches(),
                  "Parameter source must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
            this.source = source;
            return this;
          }

          /**
           * If this flag is set to true, the source will be queried instead of using cached
           * results. Using this flag will make the call slower.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean forceRefresh;

          /** If this flag is set to true, the source will be queried instead of using cached results. Using this
         flag will make the call slower.
           */
          public java.lang.Boolean getForceRefresh() {
            return forceRefresh;
          }

          /**
           * If this flag is set to true, the source will be queried instead of using cached
           * results. Using this flag will make the call slower.
           */
          public FetchInventory setForceRefresh(java.lang.Boolean forceRefresh) {
            this.forceRefresh = forceRefresh;
            return this;
          }

          /**
           * The maximum number of VMs to return. The service may return fewer than this value. For
           * AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all
           * VMs will be returned. There is no limit for maximum value.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of VMs to return. The service may return fewer than this value. For AWS source:
         If unspecified, at most 500 VMs will be returned. The maximum value is 1000; values above 1000 will
         be coerced to 1000. For VMWare source: If unspecified, all VMs will be returned. There is no limit
         for maximum value.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of VMs to return. The service may return fewer than this value. For
           * AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all
           * VMs will be returned. There is no limit for maximum value.
           */
          public FetchInventory setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `FetchInventory` call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to `FetchInventory`
           * must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `FetchInventory` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `FetchInventory` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `FetchInventory` call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to `FetchInventory`
           * must match the call that provided the page token.
           */
          public FetchInventory setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public FetchInventory set(String parameterName, Object value) {
            return (FetchInventory) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Source.
         *
         * Create a request for the method "sources.get".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The Source name.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Source> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

          /**
           * Gets details of a single Source.
           *
           * Create a request for the method "sources.get".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The Source name.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Source.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Source name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The Source name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The Source name. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Sources in a given project and location.
         *
         * Create a request for the method "sources.list".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of sources.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListSourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/sources";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Sources in a given project and location.
           *
           * Create a request for the method "sources.list".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of sources.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListSourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of sources. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of sources.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of sources. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter request. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter request.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter request. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. the order by fields for the result. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. the order by fields for the result.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. the order by fields for the result. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of sources to return. The service may return fewer than
           * this value. If unspecified, at most 500 sources will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of sources to return. The service may return fewer than this value. If
         unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000
         will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of sources to return. The service may return fewer than
           * this value. If unspecified, at most 500 sources will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Required. A page token, received from a previous `ListSources` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListSources` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Required. A page token, received from a previous `ListSources` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListSources` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Required. A page token, received from a previous `ListSources` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListSources` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single Source.
         *
         * Create a request for the method "sources.patch".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The Source name.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.Source}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.Source content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

          /**
           * Updates the parameters of a single Source.
           *
           * Create a request for the method "sources.patch".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The Source name.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.Source}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.Source content) {
            super(VMMigrationService.this, "PATCH", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The Source name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The Source name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The Source name. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Source resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Source resource by the update.
         The fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields will
         be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Source resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the DatacenterConnectors collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
         *   {@code VMMigrationService.DatacenterConnectors.List request = vmmigration.datacenterConnectors().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DatacenterConnectors datacenterConnectors() {
          return new DatacenterConnectors();
        }

        /**
         * The "datacenterConnectors" collection of methods.
         */
        public class DatacenterConnectors {

          /**
           * Creates a new DatacenterConnector in a given Source.
           *
           * Create a request for the method "datacenterConnectors.create".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The DatacenterConnector's parent. Required. The Source in where the new
           *        DatacenterConnector will be created. For example: `projects/my-project/locations/us-
           *        central1/sources/my-source`
           * @param content the {@link com.google.api.services.vmmigration.v1.model.DatacenterConnector}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.DatacenterConnector content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/datacenterConnectors";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Creates a new DatacenterConnector in a given Source.
             *
             * Create a request for the method "datacenterConnectors.create".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The DatacenterConnector's parent. Required. The Source in where the new
           *        DatacenterConnector will be created. For example: `projects/my-project/locations/us-
           *        central1/sources/my-source`
             * @param content the {@link com.google.api.services.vmmigration.v1.model.DatacenterConnector}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.DatacenterConnector content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The DatacenterConnector's parent. Required. The Source in where the new
             * DatacenterConnector will be created. For example: `projects/my-project/locations/us-
             * central1/sources/my-source`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The DatacenterConnector's parent. Required. The Source in where the new
           DatacenterConnector will be created. For example: `projects/my-project/locations/us-
           central1/sources/my-source`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The DatacenterConnector's parent. Required. The Source in where the new
             * DatacenterConnector will be created. For example: `projects/my-project/locations/us-
             * central1/sources/my-source`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. The datacenterConnector identifier. */
            @com.google.api.client.util.Key
            private java.lang.String datacenterConnectorId;

            /** Required. The datacenterConnector identifier.
             */
            public java.lang.String getDatacenterConnectorId() {
              return datacenterConnectorId;
            }

            /** Required. The datacenterConnector identifier. */
            public Create setDatacenterConnectorId(java.lang.String datacenterConnectorId) {
              this.datacenterConnectorId = datacenterConnectorId;
              return this;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
           request, the server will know to ignore the request if it has already been completed. The server
           will guarantee that for at least 60 minutes since the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single DatacenterConnector.
           *
           * Create a request for the method "datacenterConnectors.delete".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The DatacenterConnector name.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");

            /**
             * Deletes a single DatacenterConnector.
             *
             * Create a request for the method "datacenterConnectors.delete".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The DatacenterConnector name.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The DatacenterConnector name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The DatacenterConnector name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The DatacenterConnector name. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes after the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
           request, the server will know to ignore the request if it has already been completed. The server
           will guarantee that for at least 60 minutes after the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes after the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single DatacenterConnector.
           *
           * Create a request for the method "datacenterConnectors.get".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the DatacenterConnector.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.DatacenterConnector> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");

            /**
             * Gets details of a single DatacenterConnector.
             *
             * Create a request for the method "datacenterConnectors.get".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the DatacenterConnector.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.DatacenterConnector.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the DatacenterConnector. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the DatacenterConnector.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the DatacenterConnector. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists DatacenterConnectors in a given Source.
           *
           * Create a request for the method "datacenterConnectors.list".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of connectors.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListDatacenterConnectorsResponse> {

            private static final String REST_PATH = "v1/{+parent}/datacenterConnectors";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Lists DatacenterConnectors in a given Source.
             *
             * Create a request for the method "datacenterConnectors.list".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of connectors.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListDatacenterConnectorsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent, which owns this collection of connectors. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of connectors.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent, which owns this collection of connectors. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter request. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter request.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter request. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional. the order by fields for the result. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. the order by fields for the result.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Optional. the order by fields for the result. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of connectors to return. The service may return fewer
             * than this value. If unspecified, at most 500 sources will be returned. The maximum
             * value is 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of connectors to return. The service may return fewer than this value.
           If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000
           will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of connectors to return. The service may return fewer
             * than this value. If unspecified, at most 500 sources will be returned. The maximum
             * value is 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Required. A page token, received from a previous `ListDatacenterConnectors` call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to `ListDatacenterConnectors` must match the call that provided the page
             * token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Required. A page token, received from a previous `ListDatacenterConnectors` call. Provide this to
           retrieve the subsequent page. When paginating, all other parameters provided to
           `ListDatacenterConnectors` must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Required. A page token, received from a previous `ListDatacenterConnectors` call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to `ListDatacenterConnectors` must match the call that provided the page
             * token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.
           *
           * Create a request for the method "datacenterConnectors.upgradeAppliance".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link UpgradeAppliance#execute()} method to invoke the remote operation.
           *
           * @param datacenterConnector Required. The DatacenterConnector name.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.UpgradeApplianceRequest}
           * @return the request
           */
          public UpgradeAppliance upgradeAppliance(java.lang.String datacenterConnector, com.google.api.services.vmmigration.v1.model.UpgradeApplianceRequest content) throws java.io.IOException {
            UpgradeAppliance result = new UpgradeAppliance(datacenterConnector, content);
            initialize(result);
            return result;
          }

          public class UpgradeAppliance extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+datacenterConnector}:upgradeAppliance";

            private final java.util.regex.Pattern DATACENTER_CONNECTOR_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");

            /**
             * Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.
             *
             * Create a request for the method "datacenterConnectors.upgradeAppliance".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link UpgradeAppliance#execute()} method to invoke the remote
             * operation. <p> {@link UpgradeAppliance#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param datacenterConnector Required. The DatacenterConnector name.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.UpgradeApplianceRequest}
             * @since 1.13
             */
            protected UpgradeAppliance(java.lang.String datacenterConnector, com.google.api.services.vmmigration.v1.model.UpgradeApplianceRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.datacenterConnector = com.google.api.client.util.Preconditions.checkNotNull(datacenterConnector, "Required parameter datacenterConnector must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATACENTER_CONNECTOR_PATTERN.matcher(datacenterConnector).matches(),
                    "Parameter datacenterConnector must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
            }

            @Override
            public UpgradeAppliance set$Xgafv(java.lang.String $Xgafv) {
              return (UpgradeAppliance) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpgradeAppliance setAccessToken(java.lang.String accessToken) {
              return (UpgradeAppliance) super.setAccessToken(accessToken);
            }

            @Override
            public UpgradeAppliance setAlt(java.lang.String alt) {
              return (UpgradeAppliance) super.setAlt(alt);
            }

            @Override
            public UpgradeAppliance setCallback(java.lang.String callback) {
              return (UpgradeAppliance) super.setCallback(callback);
            }

            @Override
            public UpgradeAppliance setFields(java.lang.String fields) {
              return (UpgradeAppliance) super.setFields(fields);
            }

            @Override
            public UpgradeAppliance setKey(java.lang.String key) {
              return (UpgradeAppliance) super.setKey(key);
            }

            @Override
            public UpgradeAppliance setOauthToken(java.lang.String oauthToken) {
              return (UpgradeAppliance) super.setOauthToken(oauthToken);
            }

            @Override
            public UpgradeAppliance setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpgradeAppliance) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpgradeAppliance setQuotaUser(java.lang.String quotaUser) {
              return (UpgradeAppliance) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpgradeAppliance setUploadType(java.lang.String uploadType) {
              return (UpgradeAppliance) super.setUploadType(uploadType);
            }

            @Override
            public UpgradeAppliance setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpgradeAppliance) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The DatacenterConnector name. */
            @com.google.api.client.util.Key
            private java.lang.String datacenterConnector;

            /** Required. The DatacenterConnector name.
             */
            public java.lang.String getDatacenterConnector() {
              return datacenterConnector;
            }

            /** Required. The DatacenterConnector name. */
            public UpgradeAppliance setDatacenterConnector(java.lang.String datacenterConnector) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DATACENTER_CONNECTOR_PATTERN.matcher(datacenterConnector).matches(),
                    "Parameter datacenterConnector must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$");
              }
              this.datacenterConnector = datacenterConnector;
              return this;
            }

            @Override
            public UpgradeAppliance set(String parameterName, Object value) {
              return (UpgradeAppliance) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the MigratingVms collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
         *   {@code VMMigrationService.MigratingVms.List request = vmmigration.migratingVms().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public MigratingVms migratingVms() {
          return new MigratingVms();
        }

        /**
         * The "migratingVms" collection of methods.
         */
        public class MigratingVms {

          /**
           * Creates a new MigratingVm in a given Source.
           *
           * Create a request for the method "migratingVms.create".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The MigratingVm's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.MigratingVm}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.MigratingVm content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/migratingVms";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Creates a new MigratingVm in a given Source.
             *
             * Create a request for the method "migratingVms.create".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The MigratingVm's parent.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.MigratingVm}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.MigratingVm content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The MigratingVm's parent. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The MigratingVm's parent.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The MigratingVm's parent. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. The migratingVm identifier. */
            @com.google.api.client.util.Key
            private java.lang.String migratingVmId;

            /** Required. The migratingVm identifier.
             */
            public java.lang.String getMigratingVmId() {
              return migratingVmId;
            }

            /** Required. The migratingVm identifier. */
            public Create setMigratingVmId(java.lang.String migratingVmId) {
              this.migratingVmId = migratingVmId;
              return this;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
           request, the server will know to ignore the request if it has already been completed. The server
           will guarantee that for at least 60 minutes since the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single MigratingVm.
           *
           * Create a request for the method "migratingVms.delete".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the MigratingVm.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Deletes a single MigratingVm.
             *
             * Create a request for the method "migratingVms.delete".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the MigratingVm.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the MigratingVm. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Marks a migration as completed, deleting migration resources that are no longer being used. Only
           * applicable after cutover is done.
           *
           * Create a request for the method "migratingVms.finalizeMigration".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link FinalizeMigration#execute()} method to invoke the remote operation.
           *
           * @param migratingVm Required. The name of the MigratingVm.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.FinalizeMigrationRequest}
           * @return the request
           */
          public FinalizeMigration finalizeMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.FinalizeMigrationRequest content) throws java.io.IOException {
            FinalizeMigration result = new FinalizeMigration(migratingVm, content);
            initialize(result);
            return result;
          }

          public class FinalizeMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+migratingVm}:finalizeMigration";

            private final java.util.regex.Pattern MIGRATING_VM_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Marks a migration as completed, deleting migration resources that are no longer being used.
             * Only applicable after cutover is done.
             *
             * Create a request for the method "migratingVms.finalizeMigration".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link FinalizeMigration#execute()} method to invoke the remote
             * operation. <p> {@link FinalizeMigration#initialize(com.google.api.client.googleapis.services.Ab
             * stractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param migratingVm Required. The name of the MigratingVm.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.FinalizeMigrationRequest}
             * @since 1.13
             */
            protected FinalizeMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.FinalizeMigrationRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.migratingVm = com.google.api.client.util.Preconditions.checkNotNull(migratingVm, "Required parameter migratingVm must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public FinalizeMigration set$Xgafv(java.lang.String $Xgafv) {
              return (FinalizeMigration) super.set$Xgafv($Xgafv);
            }

            @Override
            public FinalizeMigration setAccessToken(java.lang.String accessToken) {
              return (FinalizeMigration) super.setAccessToken(accessToken);
            }

            @Override
            public FinalizeMigration setAlt(java.lang.String alt) {
              return (FinalizeMigration) super.setAlt(alt);
            }

            @Override
            public FinalizeMigration setCallback(java.lang.String callback) {
              return (FinalizeMigration) super.setCallback(callback);
            }

            @Override
            public FinalizeMigration setFields(java.lang.String fields) {
              return (FinalizeMigration) super.setFields(fields);
            }

            @Override
            public FinalizeMigration setKey(java.lang.String key) {
              return (FinalizeMigration) super.setKey(key);
            }

            @Override
            public FinalizeMigration setOauthToken(java.lang.String oauthToken) {
              return (FinalizeMigration) super.setOauthToken(oauthToken);
            }

            @Override
            public FinalizeMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (FinalizeMigration) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public FinalizeMigration setQuotaUser(java.lang.String quotaUser) {
              return (FinalizeMigration) super.setQuotaUser(quotaUser);
            }

            @Override
            public FinalizeMigration setUploadType(java.lang.String uploadType) {
              return (FinalizeMigration) super.setUploadType(uploadType);
            }

            @Override
            public FinalizeMigration setUploadProtocol(java.lang.String uploadProtocol) {
              return (FinalizeMigration) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String migratingVm;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getMigratingVm() {
              return migratingVm;
            }

            /** Required. The name of the MigratingVm. */
            public FinalizeMigration setMigratingVm(java.lang.String migratingVm) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.migratingVm = migratingVm;
              return this;
            }

            @Override
            public FinalizeMigration set(String parameterName, Object value) {
              return (FinalizeMigration) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single MigratingVm.
           *
           * Create a request for the method "migratingVms.get".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the MigratingVm.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.MigratingVm> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Gets details of a single MigratingVm.
             *
             * Create a request for the method "migratingVms.get".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the MigratingVm.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.MigratingVm.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the MigratingVm. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The level of details of the migrating VM. */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. The level of details of the migrating VM.
             */
            public java.lang.String getView() {
              return view;
            }

            /** Optional. The level of details of the migrating VM. */
            public Get setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists MigratingVms in a given Source.
           *
           * Create a request for the method "migratingVms.list".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of MigratingVms.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListMigratingVmsResponse> {

            private static final String REST_PATH = "v1/{+parent}/migratingVms";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Lists MigratingVms in a given Source.
             *
             * Create a request for the method "migratingVms.list".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of MigratingVms.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListMigratingVmsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent, which owns this collection of MigratingVms. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of MigratingVms.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent, which owns this collection of MigratingVms. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter request. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter request.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter request. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional. the order by fields for the result. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. the order by fields for the result.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Optional. the order by fields for the result. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of migrating VMs to return. The service may return fewer
             * than this value. If unspecified, at most 500 migrating VMs will be returned. The
             * maximum value is 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of migrating VMs to return. The service may return fewer than this
           value. If unspecified, at most 500 migrating VMs will be returned. The maximum value is 1000;
           values above 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of migrating VMs to return. The service may return fewer
             * than this value. If unspecified, at most 500 migrating VMs will be returned. The
             * maximum value is 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Required. A page token, received from a previous `ListMigratingVms` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListMigratingVms` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Required. A page token, received from a previous `ListMigratingVms` call. Provide this to retrieve
           the subsequent page. When paginating, all other parameters provided to `ListMigratingVms` must
           match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Required. A page token, received from a previous `ListMigratingVms` call. Provide
             * this to retrieve the subsequent page. When paginating, all other parameters provided
             * to `ListMigratingVms` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Optional. The level of details of each migrating VM. */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. The level of details of each migrating VM.
             */
            public java.lang.String getView() {
              return view;
            }

            /** Optional. The level of details of each migrating VM. */
            public List setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the parameters of a single MigratingVm.
           *
           * Create a request for the method "migratingVms.patch".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. The identifier of the MigratingVm.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.MigratingVm}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.MigratingVm content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Updates the parameters of a single MigratingVm.
             *
             * Create a request for the method "migratingVms.patch".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. The identifier of the MigratingVm.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.MigratingVm}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.MigratingVm content) {
              super(VMMigrationService.this, "PATCH", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Output only. The identifier of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. The identifier of the MigratingVm.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Output only. The identifier of the MigratingVm. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
           request, the server will know to ignore the request if it has already been completed. The server
           will guarantee that for at least 60 minutes since the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Patch setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the MigratingVm
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then all fields will be overwritten.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the
           update. The fields specified in the update_mask are relative to the resource, not the full request.
           A field will be overwritten if it is in the mask. If the user does not provide a mask then all
           fields will be overwritten.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Field mask is used to specify the fields to be overwritten in the MigratingVm
             * resource by the update. The fields specified in the update_mask are relative to the
             * resource, not the full request. A field will be overwritten if it is in the mask. If
             * the user does not provide a mask then all fields will be overwritten.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source
           * task data. Further replication cycles will not be triggered while the VM is paused.
           *
           * Create a request for the method "migratingVms.pauseMigration".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link PauseMigration#execute()} method to invoke the remote operation.
           *
           * @param migratingVm Required. The name of the MigratingVm.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.PauseMigrationRequest}
           * @return the request
           */
          public PauseMigration pauseMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.PauseMigrationRequest content) throws java.io.IOException {
            PauseMigration result = new PauseMigration(migratingVm, content);
            initialize(result);
            return result;
          }

          public class PauseMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+migratingVm}:pauseMigration";

            private final java.util.regex.Pattern MIGRATING_VM_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving
             * source task data. Further replication cycles will not be triggered while the VM is paused.
             *
             * Create a request for the method "migratingVms.pauseMigration".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link PauseMigration#execute()} method to invoke the remote
             * operation. <p> {@link PauseMigration#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param migratingVm Required. The name of the MigratingVm.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.PauseMigrationRequest}
             * @since 1.13
             */
            protected PauseMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.PauseMigrationRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.migratingVm = com.google.api.client.util.Preconditions.checkNotNull(migratingVm, "Required parameter migratingVm must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public PauseMigration set$Xgafv(java.lang.String $Xgafv) {
              return (PauseMigration) super.set$Xgafv($Xgafv);
            }

            @Override
            public PauseMigration setAccessToken(java.lang.String accessToken) {
              return (PauseMigration) super.setAccessToken(accessToken);
            }

            @Override
            public PauseMigration setAlt(java.lang.String alt) {
              return (PauseMigration) super.setAlt(alt);
            }

            @Override
            public PauseMigration setCallback(java.lang.String callback) {
              return (PauseMigration) super.setCallback(callback);
            }

            @Override
            public PauseMigration setFields(java.lang.String fields) {
              return (PauseMigration) super.setFields(fields);
            }

            @Override
            public PauseMigration setKey(java.lang.String key) {
              return (PauseMigration) super.setKey(key);
            }

            @Override
            public PauseMigration setOauthToken(java.lang.String oauthToken) {
              return (PauseMigration) super.setOauthToken(oauthToken);
            }

            @Override
            public PauseMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (PauseMigration) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public PauseMigration setQuotaUser(java.lang.String quotaUser) {
              return (PauseMigration) super.setQuotaUser(quotaUser);
            }

            @Override
            public PauseMigration setUploadType(java.lang.String uploadType) {
              return (PauseMigration) super.setUploadType(uploadType);
            }

            @Override
            public PauseMigration setUploadProtocol(java.lang.String uploadProtocol) {
              return (PauseMigration) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String migratingVm;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getMigratingVm() {
              return migratingVm;
            }

            /** Required. The name of the MigratingVm. */
            public PauseMigration setMigratingVm(java.lang.String migratingVm) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.migratingVm = migratingVm;
              return this;
            }

            @Override
            public PauseMigration set(String parameterName, Object value) {
              return (PauseMigration) super.set(parameterName, value);
            }
          }
          /**
           * Resumes a migration for a VM. When called on a paused migration, will start the process of
           * uploading data and creating snapshots; when called on a completed cut-over migration, will update
           * the migration to active state and start the process of uploading data and creating snapshots.
           *
           * Create a request for the method "migratingVms.resumeMigration".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link ResumeMigration#execute()} method to invoke the remote operation.
           *
           * @param migratingVm Required. The name of the MigratingVm.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.ResumeMigrationRequest}
           * @return the request
           */
          public ResumeMigration resumeMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.ResumeMigrationRequest content) throws java.io.IOException {
            ResumeMigration result = new ResumeMigration(migratingVm, content);
            initialize(result);
            return result;
          }

          public class ResumeMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+migratingVm}:resumeMigration";

            private final java.util.regex.Pattern MIGRATING_VM_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Resumes a migration for a VM. When called on a paused migration, will start the process of
             * uploading data and creating snapshots; when called on a completed cut-over migration, will
             * update the migration to active state and start the process of uploading data and creating
             * snapshots.
             *
             * Create a request for the method "migratingVms.resumeMigration".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link ResumeMigration#execute()} method to invoke the remote
             * operation. <p> {@link ResumeMigration#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param migratingVm Required. The name of the MigratingVm.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.ResumeMigrationRequest}
             * @since 1.13
             */
            protected ResumeMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.ResumeMigrationRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.migratingVm = com.google.api.client.util.Preconditions.checkNotNull(migratingVm, "Required parameter migratingVm must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public ResumeMigration set$Xgafv(java.lang.String $Xgafv) {
              return (ResumeMigration) super.set$Xgafv($Xgafv);
            }

            @Override
            public ResumeMigration setAccessToken(java.lang.String accessToken) {
              return (ResumeMigration) super.setAccessToken(accessToken);
            }

            @Override
            public ResumeMigration setAlt(java.lang.String alt) {
              return (ResumeMigration) super.setAlt(alt);
            }

            @Override
            public ResumeMigration setCallback(java.lang.String callback) {
              return (ResumeMigration) super.setCallback(callback);
            }

            @Override
            public ResumeMigration setFields(java.lang.String fields) {
              return (ResumeMigration) super.setFields(fields);
            }

            @Override
            public ResumeMigration setKey(java.lang.String key) {
              return (ResumeMigration) super.setKey(key);
            }

            @Override
            public ResumeMigration setOauthToken(java.lang.String oauthToken) {
              return (ResumeMigration) super.setOauthToken(oauthToken);
            }

            @Override
            public ResumeMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ResumeMigration) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ResumeMigration setQuotaUser(java.lang.String quotaUser) {
              return (ResumeMigration) super.setQuotaUser(quotaUser);
            }

            @Override
            public ResumeMigration setUploadType(java.lang.String uploadType) {
              return (ResumeMigration) super.setUploadType(uploadType);
            }

            @Override
            public ResumeMigration setUploadProtocol(java.lang.String uploadProtocol) {
              return (ResumeMigration) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String migratingVm;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getMigratingVm() {
              return migratingVm;
            }

            /** Required. The name of the MigratingVm. */
            public ResumeMigration setMigratingVm(java.lang.String migratingVm) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.migratingVm = migratingVm;
              return this;
            }

            @Override
            public ResumeMigration set(String parameterName, Object value) {
              return (ResumeMigration) super.set(parameterName, value);
            }
          }
          /**
           * Starts migration for a VM. Starts the process of uploading data and creating snapshots, in
           * replication cycles scheduled by the policy.
           *
           * Create a request for the method "migratingVms.startMigration".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link StartMigration#execute()} method to invoke the remote operation.
           *
           * @param migratingVm Required. The name of the MigratingVm.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.StartMigrationRequest}
           * @return the request
           */
          public StartMigration startMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.StartMigrationRequest content) throws java.io.IOException {
            StartMigration result = new StartMigration(migratingVm, content);
            initialize(result);
            return result;
          }

          public class StartMigration extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+migratingVm}:startMigration";

            private final java.util.regex.Pattern MIGRATING_VM_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

            /**
             * Starts migration for a VM. Starts the process of uploading data and creating snapshots, in
             * replication cycles scheduled by the policy.
             *
             * Create a request for the method "migratingVms.startMigration".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link StartMigration#execute()} method to invoke the remote
             * operation. <p> {@link StartMigration#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param migratingVm Required. The name of the MigratingVm.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.StartMigrationRequest}
             * @since 1.13
             */
            protected StartMigration(java.lang.String migratingVm, com.google.api.services.vmmigration.v1.model.StartMigrationRequest content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.migratingVm = com.google.api.client.util.Preconditions.checkNotNull(migratingVm, "Required parameter migratingVm must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
            }

            @Override
            public StartMigration set$Xgafv(java.lang.String $Xgafv) {
              return (StartMigration) super.set$Xgafv($Xgafv);
            }

            @Override
            public StartMigration setAccessToken(java.lang.String accessToken) {
              return (StartMigration) super.setAccessToken(accessToken);
            }

            @Override
            public StartMigration setAlt(java.lang.String alt) {
              return (StartMigration) super.setAlt(alt);
            }

            @Override
            public StartMigration setCallback(java.lang.String callback) {
              return (StartMigration) super.setCallback(callback);
            }

            @Override
            public StartMigration setFields(java.lang.String fields) {
              return (StartMigration) super.setFields(fields);
            }

            @Override
            public StartMigration setKey(java.lang.String key) {
              return (StartMigration) super.setKey(key);
            }

            @Override
            public StartMigration setOauthToken(java.lang.String oauthToken) {
              return (StartMigration) super.setOauthToken(oauthToken);
            }

            @Override
            public StartMigration setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (StartMigration) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public StartMigration setQuotaUser(java.lang.String quotaUser) {
              return (StartMigration) super.setQuotaUser(quotaUser);
            }

            @Override
            public StartMigration setUploadType(java.lang.String uploadType) {
              return (StartMigration) super.setUploadType(uploadType);
            }

            @Override
            public StartMigration setUploadProtocol(java.lang.String uploadProtocol) {
              return (StartMigration) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the MigratingVm. */
            @com.google.api.client.util.Key
            private java.lang.String migratingVm;

            /** Required. The name of the MigratingVm.
             */
            public java.lang.String getMigratingVm() {
              return migratingVm;
            }

            /** Required. The name of the MigratingVm. */
            public StartMigration setMigratingVm(java.lang.String migratingVm) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(MIGRATING_VM_PATTERN.matcher(migratingVm).matches(),
                    "Parameter migratingVm must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
              }
              this.migratingVm = migratingVm;
              return this;
            }

            @Override
            public StartMigration set(String parameterName, Object value) {
              return (StartMigration) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the CloneJobs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
           *   {@code VMMigrationService.CloneJobs.List request = vmmigration.cloneJobs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public CloneJobs cloneJobs() {
            return new CloneJobs();
          }

          /**
           * The "cloneJobs" collection of methods.
           */
          public class CloneJobs {

            /**
             * Initiates the cancellation of a running clone job.
             *
             * Create a request for the method "cloneJobs.cancel".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name Required. The clone job id
             * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelCloneJobRequest}
             * @return the request
             */
            public Cancel cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelCloneJobRequest content) throws java.io.IOException {
              Cancel result = new Cancel(name, content);
              initialize(result);
              return result;
            }

            public class Cancel extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");

              /**
               * Initiates the cancellation of a running clone job.
               *
               * Create a request for the method "cloneJobs.cancel".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The clone job id
               * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelCloneJobRequest}
               * @since 1.13
               */
              protected Cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelCloneJobRequest content) {
                super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The clone job id */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The clone job id
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The clone job id */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Initiates a Clone of a specific migrating VM.
             *
             * Create a request for the method "cloneJobs.create".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The Clone's parent.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.CloneJob}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.CloneJob content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+parent}/cloneJobs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

              /**
               * Initiates a Clone of a specific migrating VM.
               *
               * Create a request for the method "cloneJobs.create".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The Clone's parent.
               * @param content the {@link com.google.api.services.vmmigration.v1.model.CloneJob}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.CloneJob content) {
                super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The Clone's parent. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The Clone's parent.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The Clone's parent. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Required. The clone job identifier. */
              @com.google.api.client.util.Key
              private java.lang.String cloneJobId;

              /** Required. The clone job identifier.
               */
              public java.lang.String getCloneJobId() {
                return cloneJobId;
              }

              /** Required. The clone job identifier. */
              public Create setCloneJobId(java.lang.String cloneJobId) {
                this.cloneJobId = cloneJobId;
                return this;
              }

              /**
               * A request ID to identify requests. Specify a unique request ID so that if you must
               * retry your request, the server will know to ignore the request if it has already
               * been completed. The server will guarantee that for at least 60 minutes since the
               * first request. For example, consider a situation where you make an initial request
               * and the request times out. If you make the request again with the same request ID,
               * the server can check if original operation with the same request ID was received,
               * and if so, will ignore the second request. This prevents clients from accidentally
               * creating duplicate commitments. The request ID must be a valid UUID with the
               * exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
             request, the server will know to ignore the request if it has already been completed. The server
             will guarantee that for at least 60 minutes since the first request. For example, consider a
             situation where you make an initial request and the request times out. If you make the request
             again with the same request ID, the server can check if original operation with the same request ID
             was received, and if so, will ignore the second request. This prevents clients from accidentally
             creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
             UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * A request ID to identify requests. Specify a unique request ID so that if you must
               * retry your request, the server will know to ignore the request if it has already
               * been completed. The server will guarantee that for at least 60 minutes since the
               * first request. For example, consider a situation where you make an initial request
               * and the request times out. If you make the request again with the same request ID,
               * the server can check if original operation with the same request ID was received,
               * and if so, will ignore the second request. This prevents clients from accidentally
               * creating duplicate commitments. The request ID must be a valid UUID with the
               * exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              public Create setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a single CloneJob.
             *
             * Create a request for the method "cloneJobs.get".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the CloneJob.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.CloneJob> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");

              /**
               * Gets details of a single CloneJob.
               *
               * Create a request for the method "cloneJobs.get".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the CloneJob.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.CloneJob.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the CloneJob. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the CloneJob.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the CloneJob. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the CloneJobs of a migrating VM. Only 25 most recent CloneJobs are listed.
             *
             * Create a request for the method "cloneJobs.list".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of source VMs.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListCloneJobsResponse> {

              private static final String REST_PATH = "v1/{+parent}/cloneJobs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

              /**
               * Lists the CloneJobs of a migrating VM. Only 25 most recent CloneJobs are listed.
               *
               * Create a request for the method "cloneJobs.list".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of source VMs.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListCloneJobsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent, which owns this collection of source VMs. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of source VMs.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent, which owns this collection of source VMs. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Optional. The filter request. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. The filter request.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Optional. The filter request. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Optional. the order by fields for the result. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Optional. the order by fields for the result.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Optional. the order by fields for the result. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Optional. The maximum number of clone jobs to return. The service may return fewer
               * than this value. If unspecified, at most 500 clone jobs will be returned. The
               * maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of clone jobs to return. The service may return fewer than this value.
             If unspecified, at most 500 clone jobs will be returned. The maximum value is 1000; values above
             1000 will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of clone jobs to return. The service may return fewer
               * than this value. If unspecified, at most 500 clone jobs will be returned. The
               * maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Required. A page token, received from a previous `ListCloneJobs` call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListCloneJobs` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Required. A page token, received from a previous `ListCloneJobs` call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to `ListCloneJobs` must match the
             call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Required. A page token, received from a previous `ListCloneJobs` call. Provide this
               * to retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListCloneJobs` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the CutoverJobs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
           *   {@code VMMigrationService.CutoverJobs.List request = vmmigration.cutoverJobs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public CutoverJobs cutoverJobs() {
            return new CutoverJobs();
          }

          /**
           * The "cutoverJobs" collection of methods.
           */
          public class CutoverJobs {

            /**
             * Initiates the cancellation of a running cutover job.
             *
             * Create a request for the method "cutoverJobs.cancel".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             *
             * @param name Required. The cutover job id
             * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelCutoverJobRequest}
             * @return the request
             */
            public Cancel cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelCutoverJobRequest content) throws java.io.IOException {
              Cancel result = new Cancel(name, content);
              initialize(result);
              return result;
            }

            public class Cancel extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+name}:cancel";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");

              /**
               * Initiates the cancellation of a running cutover job.
               *
               * Create a request for the method "cutoverJobs.cancel".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
               * <p> {@link
               * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The cutover job id
               * @param content the {@link com.google.api.services.vmmigration.v1.model.CancelCutoverJobRequest}
               * @since 1.13
               */
              protected Cancel(java.lang.String name, com.google.api.services.vmmigration.v1.model.CancelCutoverJobRequest content) {
                super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");
                }
              }

              @Override
              public Cancel set$Xgafv(java.lang.String $Xgafv) {
                return (Cancel) super.set$Xgafv($Xgafv);
              }

              @Override
              public Cancel setAccessToken(java.lang.String accessToken) {
                return (Cancel) super.setAccessToken(accessToken);
              }

              @Override
              public Cancel setAlt(java.lang.String alt) {
                return (Cancel) super.setAlt(alt);
              }

              @Override
              public Cancel setCallback(java.lang.String callback) {
                return (Cancel) super.setCallback(callback);
              }

              @Override
              public Cancel setFields(java.lang.String fields) {
                return (Cancel) super.setFields(fields);
              }

              @Override
              public Cancel setKey(java.lang.String key) {
                return (Cancel) super.setKey(key);
              }

              @Override
              public Cancel setOauthToken(java.lang.String oauthToken) {
                return (Cancel) super.setOauthToken(oauthToken);
              }

              @Override
              public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Cancel) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Cancel setQuotaUser(java.lang.String quotaUser) {
                return (Cancel) super.setQuotaUser(quotaUser);
              }

              @Override
              public Cancel setUploadType(java.lang.String uploadType) {
                return (Cancel) super.setUploadType(uploadType);
              }

              @Override
              public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
                return (Cancel) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The cutover job id */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The cutover job id
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The cutover job id */
              public Cancel setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Cancel set(String parameterName, Object value) {
                return (Cancel) super.set(parameterName, value);
              }
            }
            /**
             * Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover
             * job resource is created and the job is initiated.
             *
             * Create a request for the method "cutoverJobs.create".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The Cutover's parent.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.CutoverJob}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.CutoverJob content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+parent}/cutoverJobs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

              /**
               * Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover
               * job resource is created and the job is initiated.
               *
               * Create a request for the method "cutoverJobs.create".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The Cutover's parent.
               * @param content the {@link com.google.api.services.vmmigration.v1.model.CutoverJob}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.CutoverJob content) {
                super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The Cutover's parent. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The Cutover's parent.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The Cutover's parent. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Required. The cutover job identifier. */
              @com.google.api.client.util.Key
              private java.lang.String cutoverJobId;

              /** Required. The cutover job identifier.
               */
              public java.lang.String getCutoverJobId() {
                return cutoverJobId;
              }

              /** Required. The cutover job identifier. */
              public Create setCutoverJobId(java.lang.String cutoverJobId) {
                this.cutoverJobId = cutoverJobId;
                return this;
              }

              /**
               * A request ID to identify requests. Specify a unique request ID so that if you must
               * retry your request, the server will know to ignore the request if it has already
               * been completed. The server will guarantee that for at least 60 minutes since the
               * first request. For example, consider a situation where you make an initial request
               * and the request times out. If you make the request again with the same request ID,
               * the server can check if original operation with the same request ID was received,
               * and if so, will ignore the second request. This prevents clients from accidentally
               * creating duplicate commitments. The request ID must be a valid UUID with the
               * exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
             request, the server will know to ignore the request if it has already been completed. The server
             will guarantee that for at least 60 minutes since the first request. For example, consider a
             situation where you make an initial request and the request times out. If you make the request
             again with the same request ID, the server can check if original operation with the same request ID
             was received, and if so, will ignore the second request. This prevents clients from accidentally
             creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
             UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * A request ID to identify requests. Specify a unique request ID so that if you must
               * retry your request, the server will know to ignore the request if it has already
               * been completed. The server will guarantee that for at least 60 minutes since the
               * first request. For example, consider a situation where you make an initial request
               * and the request times out. If you make the request again with the same request ID,
               * the server can check if original operation with the same request ID was received,
               * and if so, will ignore the second request. This prevents clients from accidentally
               * creating duplicate commitments. The request ID must be a valid UUID with the
               * exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              public Create setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Gets details of a single CutoverJob.
             *
             * Create a request for the method "cutoverJobs.get".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the CutoverJob.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.CutoverJob> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");

              /**
               * Gets details of a single CutoverJob.
               *
               * Create a request for the method "cutoverJobs.get".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the CutoverJob.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.CutoverJob.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the CutoverJob. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the CutoverJob.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the CutoverJob. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the CutoverJobs of a migrating VM. Only 25 most recent CutoverJobs are listed.
             *
             * Create a request for the method "cutoverJobs.list".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of migrating VMs.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListCutoverJobsResponse> {

              private static final String REST_PATH = "v1/{+parent}/cutoverJobs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

              /**
               * Lists the CutoverJobs of a migrating VM. Only 25 most recent CutoverJobs are listed.
               *
               * Create a request for the method "cutoverJobs.list".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of migrating VMs.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListCutoverJobsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent, which owns this collection of migrating VMs. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of migrating VMs.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent, which owns this collection of migrating VMs. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Optional. The filter request. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. The filter request.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Optional. The filter request. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Optional. the order by fields for the result. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Optional. the order by fields for the result.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Optional. the order by fields for the result. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Optional. The maximum number of cutover jobs to return. The service may return
               * fewer than this value. If unspecified, at most 500 cutover jobs will be returned.
               * The maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of cutover jobs to return. The service may return fewer than this
             value. If unspecified, at most 500 cutover jobs will be returned. The maximum value is 1000; values
             above 1000 will be coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of cutover jobs to return. The service may return
               * fewer than this value. If unspecified, at most 500 cutover jobs will be returned.
               * The maximum value is 1000; values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Required. A page token, received from a previous `ListCutoverJobs` call. Provide
               * this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListCutoverJobs` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Required. A page token, received from a previous `ListCutoverJobs` call. Provide this to retrieve
             the subsequent page. When paginating, all other parameters provided to `ListCutoverJobs` must match
             the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Required. A page token, received from a previous `ListCutoverJobs` call. Provide
               * this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListCutoverJobs` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the ReplicationCycles collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
           *   {@code VMMigrationService.ReplicationCycles.List request = vmmigration.replicationCycles().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public ReplicationCycles replicationCycles() {
            return new ReplicationCycles();
          }

          /**
           * The "replicationCycles" collection of methods.
           */
          public class ReplicationCycles {

            /**
             * Gets details of a single ReplicationCycle.
             *
             * Create a request for the method "replicationCycles.get".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the ReplicationCycle.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ReplicationCycle> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$");

              /**
               * Gets details of a single ReplicationCycle.
               *
               * Create a request for the method "replicationCycles.get".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the ReplicationCycle.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ReplicationCycle.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the ReplicationCycle. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the ReplicationCycle.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the ReplicationCycle. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists ReplicationCycles in a given MigratingVM.
             *
             * Create a request for the method "replicationCycles.list".
             *
             * This request holds the parameters needed by the vmmigration server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of ReplicationCycles.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListReplicationCyclesResponse> {

              private static final String REST_PATH = "v1/{+parent}/replicationCycles";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");

              /**
               * Lists ReplicationCycles in a given MigratingVM.
               *
               * Create a request for the method "replicationCycles.list".
               *
               * This request holds the parameters needed by the the vmmigration server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of ReplicationCycles.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListReplicationCyclesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The parent, which owns this collection of ReplicationCycles. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of ReplicationCycles.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The parent, which owns this collection of ReplicationCycles. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Optional. The filter request. */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. The filter request.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /** Optional. The filter request. */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** Optional. the order by fields for the result. */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Optional. the order by fields for the result.
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /** Optional. the order by fields for the result. */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Optional. The maximum number of replication cycles to return. The service may
               * return fewer than this value. If unspecified, at most 100 migrating VMs will be
               * returned. The maximum value is 100; values above 100 will be coerced to 100.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. The maximum number of replication cycles to return. The service may return fewer than
             this value. If unspecified, at most 100 migrating VMs will be returned. The maximum value is 100;
             values above 100 will be coerced to 100.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. The maximum number of replication cycles to return. The service may
               * return fewer than this value. If unspecified, at most 100 migrating VMs will be
               * returned. The maximum value is 100; values above 100 will be coerced to 100.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Required. A page token, received from a previous `ListReplicationCycles` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListReplicationCycles` must match the call that provided the page
               * token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Required. A page token, received from a previous `ListReplicationCycles` call. Provide this to
             retrieve the subsequent page. When paginating, all other parameters provided to
             `ListReplicationCycles` must match the call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Required. A page token, received from a previous `ListReplicationCycles` call.
               * Provide this to retrieve the subsequent page. When paginating, all other parameters
               * provided to `ListReplicationCycles` must match the call that provided the page
               * token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the UtilizationReports collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
         *   {@code VMMigrationService.UtilizationReports.List request = vmmigration.utilizationReports().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public UtilizationReports utilizationReports() {
          return new UtilizationReports();
        }

        /**
         * The "utilizationReports" collection of methods.
         */
        public class UtilizationReports {

          /**
           * Creates a new UtilizationReport.
           *
           * Create a request for the method "utilizationReports.create".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The Utilization Report's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.UtilizationReport}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.UtilizationReport content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+parent}/utilizationReports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Creates a new UtilizationReport.
             *
             * Create a request for the method "utilizationReports.create".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The Utilization Report's parent.
             * @param content the {@link com.google.api.services.vmmigration.v1.model.UtilizationReport}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.UtilizationReport content) {
              super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Utilization Report's parent. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The Utilization Report's parent.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The Utilization Report's parent. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
           request, the server will know to ignore the request if it has already been completed. The server
           will guarantee that for at least 60 minutes since the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * A request ID to identify requests. Specify a unique request ID so that if you must
             * retry your request, the server will know to ignore the request if it has already been
             * completed. The server will guarantee that for at least 60 minutes since the first
             * request. For example, consider a situation where you make an initial request and the
             * request times out. If you make the request again with the same request ID, the server
             * can check if original operation with the same request ID was received, and if so,
             * will ignore the second request. This prevents clients from accidentally creating
             * duplicate commitments. The request ID must be a valid UUID with the exception that
             * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Create setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            /**
             * Required. The ID to use for the report, which will become the final component of the
             * reports's resource name. This value maximum length is 63 characters, and valid
             * characters are /a-z-/. It must start with an english letter and must not end with a
             * hyphen.
             */
            @com.google.api.client.util.Key
            private java.lang.String utilizationReportId;

            /** Required. The ID to use for the report, which will become the final component of the reports's
           resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must
           start with an english letter and must not end with a hyphen.
             */
            public java.lang.String getUtilizationReportId() {
              return utilizationReportId;
            }

            /**
             * Required. The ID to use for the report, which will become the final component of the
             * reports's resource name. This value maximum length is 63 characters, and valid
             * characters are /a-z-/. It must start with an english letter and must not end with a
             * hyphen.
             */
            public Create setUtilizationReportId(java.lang.String utilizationReportId) {
              this.utilizationReportId = utilizationReportId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a single Utilization Report.
           *
           * Create a request for the method "utilizationReports.delete".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The Utilization Report name.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");

            /**
             * Deletes a single Utilization Report.
             *
             * Create a request for the method "utilizationReports.delete".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The Utilization Report name.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Utilization Report name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The Utilization Report name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The Utilization Report name. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server will know to ignore the request if it has
             * already been completed. The server will guarantee that for at least 60 minutes after
             * the first request. For example, consider a situation where you make an initial
             * request and the request times out. If you make the request again with the same
             * request ID, the server can check if original operation with the same request ID was
             * received, and if so, will ignore the second request. This prevents clients from
             * accidentally creating duplicate commitments. The request ID must be a valid UUID with
             * the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
           your request, the server will know to ignore the request if it has already been completed. The
           server will guarantee that for at least 60 minutes after the first request. For example, consider a
           situation where you make an initial request and the request times out. If you make the request
           again with the same request ID, the server can check if original operation with the same request ID
           was received, and if so, will ignore the second request. This prevents clients from accidentally
           creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
           UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. A request ID to identify requests. Specify a unique request ID so that if
             * you must retry your request, the server will know to ignore the request if it has
             * already been completed. The server will guarantee that for at least 60 minutes after
             * the first request. For example, consider a situation where you make an initial
             * request and the request times out. If you make the request again with the same
             * request ID, the server can check if original operation with the same request ID was
             * received, and if so, will ignore the second request. This prevents clients from
             * accidentally creating duplicate commitments. The request ID must be a valid UUID with
             * the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a single Utilization Report.
           *
           * Create a request for the method "utilizationReports.get".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The Utilization Report name.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.UtilizationReport> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");

            /**
             * Gets a single Utilization Report.
             *
             * Create a request for the method "utilizationReports.get".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The Utilization Report name.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.UtilizationReport.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Utilization Report name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The Utilization Report name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The Utilization Report name. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Optional. The level of details of the report. Defaults to FULL */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. The level of details of the report. Defaults to FULL
             */
            public java.lang.String getView() {
              return view;
            }

            /** Optional. The level of details of the report. Defaults to FULL */
            public Get setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists Utilization Reports of the given Source.
           *
           * Create a request for the method "utilizationReports.list".
           *
           * This request holds the parameters needed by the vmmigration server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The Utilization Reports parent.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListUtilizationReportsResponse> {

            private static final String REST_PATH = "v1/{+parent}/utilizationReports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/sources/[^/]+$");

            /**
             * Lists Utilization Reports of the given Source.
             *
             * Create a request for the method "utilizationReports.list".
             *
             * This request holds the parameters needed by the the vmmigration server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The Utilization Reports parent.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListUtilizationReportsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The Utilization Reports parent. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The Utilization Reports parent.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The Utilization Reports parent. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/sources/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. The filter request. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. The filter request.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. The filter request. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** Optional. the order by fields for the result. */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. the order by fields for the result.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /** Optional. the order by fields for the result. */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of reports to return. The service may return fewer than
             * this value. If unspecified, at most 500 reports will be returned. The maximum value
             * is 1000; values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of reports to return. The service may return fewer than this value. If
           unspecified, at most 500 reports will be returned. The maximum value is 1000; values above 1000
           will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of reports to return. The service may return fewer than
             * this value. If unspecified, at most 500 reports will be returned. The maximum value
             * is 1000; values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Required. A page token, received from a previous `ListUtilizationReports` call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to `ListUtilizationReports` must match the call that provided the page
             * token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Required. A page token, received from a previous `ListUtilizationReports` call. Provide this to
           retrieve the subsequent page. When paginating, all other parameters provided to
           `ListUtilizationReports` must match the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Required. A page token, received from a previous `ListUtilizationReports` call.
             * Provide this to retrieve the subsequent page. When paginating, all other parameters
             * provided to `ListUtilizationReports` must match the call that provided the page
             * token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /** Optional. The level of details of each report. Defaults to BASIC. */
            @com.google.api.client.util.Key
            private java.lang.String view;

            /** Optional. The level of details of each report. Defaults to BASIC.
             */
            public java.lang.String getView() {
              return view;
            }

            /** Optional. The level of details of each report. Defaults to BASIC. */
            public List setView(java.lang.String view) {
              this.view = view;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the TargetProjects collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code VMMigrationService vmmigration = new VMMigrationService(...);}
       *   {@code VMMigrationService.TargetProjects.List request = vmmigration.targetProjects().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TargetProjects targetProjects() {
        return new TargetProjects();
      }

      /**
       * The "targetProjects" collection of methods.
       */
      public class TargetProjects {

        /**
         * Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence
         * the only supported value for location is `global`.
         *
         * Create a request for the method "targetProjects.create".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The TargetProject's parent.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.TargetProject}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.TargetProject content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/targetProjects";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence
           * the only supported value for location is `global`.
           *
           * Create a request for the method "targetProjects.create".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The TargetProject's parent.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.TargetProject}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.vmmigration.v1.model.TargetProject content) {
            super(VMMigrationService.this, "POST", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The TargetProject's parent. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The TargetProject's parent.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The TargetProject's parent. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The target_project identifier. */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** Required. The target_project identifier.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /** Required. The target_project identifier. */
          public Create setTargetProjectId(java.lang.String targetProjectId) {
            this.targetProjectId = targetProjectId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only
         * supported value for location is `global`.
         *
         * Create a request for the method "targetProjects.delete".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The TargetProject name.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");

          /**
           * Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only
           * supported value for location is `global`.
           *
           * Create a request for the method "targetProjects.delete".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The TargetProject name.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(VMMigrationService.this, "DELETE", REST_PATH, null, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The TargetProject name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The TargetProject name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The TargetProject name. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes after the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. A request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes after the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only
         * supported value for location is `global`.
         *
         * Create a request for the method "targetProjects.get".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The TargetProject name.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.TargetProject> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");

          /**
           * Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the
           * only supported value for location is `global`.
           *
           * Create a request for the method "targetProjects.get".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The TargetProject name.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.TargetProject.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The TargetProject name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The TargetProject name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The TargetProject name. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only
         * supported value for location is `global`.
         *
         * Create a request for the method "targetProjects.list".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of targets.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.ListTargetProjectsResponse> {

          private static final String REST_PATH = "v1/{+parent}/targetProjects";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the
           * only supported value for location is `global`.
           *
           * Create a request for the method "targetProjects.list".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of targets.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(VMMigrationService.this, "GET", REST_PATH, null, com.google.api.services.vmmigration.v1.model.ListTargetProjectsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of targets. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of targets.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of targets. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. The filter request. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. The filter request.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. The filter request. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. the order by fields for the result. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. the order by fields for the result.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. the order by fields for the result. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of targets to return. The service may return fewer than
           * this value. If unspecified, at most 500 targets will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of targets to return. The service may return fewer than this value. If
         unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000
         will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of targets to return. The service may return fewer than
           * this value. If unspecified, at most 500 targets will be returned. The maximum value is
           * 1000; values above 1000 will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Required. A page token, received from a previous `ListTargets` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListTargets` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Required. A page token, received from a previous `ListTargets` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListTargets` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Required. A page token, received from a previous `ListTargets` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListTargets` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence
         * the only supported value for location is `global`.
         *
         * Create a request for the method "targetProjects.patch".
         *
         * This request holds the parameters needed by the vmmigration server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The name of the target project.
         * @param content the {@link com.google.api.services.vmmigration.v1.model.TargetProject}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.TargetProject content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends VMMigrationServiceRequest<com.google.api.services.vmmigration.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");

          /**
           * Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource;
           * hence the only supported value for location is `global`.
           *
           * Create a request for the method "targetProjects.patch".
           *
           * This request holds the parameters needed by the the vmmigration server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The name of the target project.
           * @param content the {@link com.google.api.services.vmmigration.v1.model.TargetProject}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.vmmigration.v1.model.TargetProject content) {
            super(VMMigrationService.this, "PATCH", REST_PATH, content, com.google.api.services.vmmigration.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The name of the target project. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The name of the target project.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The name of the target project. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** A request ID to identify requests. Specify a unique request ID so that if you must retry your
         request, the server will know to ignore the request if it has already been completed. The server
         will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * A request ID to identify requests. Specify a unique request ID so that if you must
           * retry your request, the server will know to ignore the request if it has already been
           * completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the TargetProject
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the TargetProject resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then all
         fields will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the TargetProject
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link VMMigrationService}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link VMMigrationService}. */
    @Override
    public VMMigrationService build() {
      return new VMMigrationService(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link VMMigrationServiceRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setVMMigrationServiceRequestInitializer(
        VMMigrationServiceRequestInitializer vmmigrationserviceRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(vmmigrationserviceRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
