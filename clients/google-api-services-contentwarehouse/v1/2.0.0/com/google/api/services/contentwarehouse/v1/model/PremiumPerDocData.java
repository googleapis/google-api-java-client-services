/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Per-doc data for premium documents in the Google index.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PremiumPerDocData extends com.google.api.client.json.GenericJson {

  /**
   * type froogle/currency/currency.h
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Currency")
  private java.lang.Integer currency;

  /**
   * publishing date (seconds since 1970,
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Date") @com.google.api.client.json.JsonString
  private java.lang.Long date;

  /**
   * entitlement data
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Entitlement")
  private java.util.List<java.lang.Integer> entitlement;

  /**
   * True if a free document is archival in nature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("IsArchival")
  private java.lang.Boolean isArchival;

  /**
   * User is entitled to see the premium content for free.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("IsEntitled")
  private java.lang.Boolean isEntitled;

  /**
   * price * 100 if available
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Price")
  private java.lang.Integer price;

  /**
   * negative values for prior dates) FP of the Premium publication name
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Publication") @com.google.api.client.json.JsonString
  private java.math.BigInteger publication;

  /**
   * type froogle/currency/currency.h
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCurrency() {
    return currency;
  }

  /**
   * type froogle/currency/currency.h
   * @param currency currency or {@code null} for none
   */
  public PremiumPerDocData setCurrency(java.lang.Integer currency) {
    this.currency = currency;
    return this;
  }

  /**
   * publishing date (seconds since 1970,
   * @return value or {@code null} for none
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * publishing date (seconds since 1970,
   * @param date date or {@code null} for none
   */
  public PremiumPerDocData setDate(java.lang.Long date) {
    this.date = date;
    return this;
  }

  /**
   * entitlement data
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getEntitlement() {
    return entitlement;
  }

  /**
   * entitlement data
   * @param entitlement entitlement or {@code null} for none
   */
  public PremiumPerDocData setEntitlement(java.util.List<java.lang.Integer> entitlement) {
    this.entitlement = entitlement;
    return this;
  }

  /**
   * True if a free document is archival in nature.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsArchival() {
    return isArchival;
  }

  /**
   * True if a free document is archival in nature.
   * @param isArchival isArchival or {@code null} for none
   */
  public PremiumPerDocData setIsArchival(java.lang.Boolean isArchival) {
    this.isArchival = isArchival;
    return this;
  }

  /**
   * User is entitled to see the premium content for free.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsEntitled() {
    return isEntitled;
  }

  /**
   * User is entitled to see the premium content for free.
   * @param isEntitled isEntitled or {@code null} for none
   */
  public PremiumPerDocData setIsEntitled(java.lang.Boolean isEntitled) {
    this.isEntitled = isEntitled;
    return this;
  }

  /**
   * price * 100 if available
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPrice() {
    return price;
  }

  /**
   * price * 100 if available
   * @param price price or {@code null} for none
   */
  public PremiumPerDocData setPrice(java.lang.Integer price) {
    this.price = price;
    return this;
  }

  /**
   * negative values for prior dates) FP of the Premium publication name
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getPublication() {
    return publication;
  }

  /**
   * negative values for prior dates) FP of the Premium publication name
   * @param publication publication or {@code null} for none
   */
  public PremiumPerDocData setPublication(java.math.BigInteger publication) {
    this.publication = publication;
    return this;
  }

  @Override
  public PremiumPerDocData set(String fieldName, Object value) {
    return (PremiumPerDocData) super.set(fieldName, value);
  }

  @Override
  public PremiumPerDocData clone() {
    return (PremiumPerDocData) super.clone();
  }

}
