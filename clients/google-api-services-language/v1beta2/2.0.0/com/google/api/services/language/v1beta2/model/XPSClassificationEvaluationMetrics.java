/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1beta2.model;

/**
 * Model evaluation metrics for classification problems. It can be used for image and video
 * classification. Next tag: 9.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSClassificationEvaluationMetrics extends com.google.api.client.json.GenericJson {

  /**
   * The Area under precision recall curve metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float auPrc;

  /**
   * The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall
   * evaluation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float auRoc;

  /**
   * The Area under precision recall curve metric based on priors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float baseAuPrc;

  /**
   * Metrics that have confidence thresholds. Precision-recall curve can be derived from it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XPSConfidenceMetricsEntry> confidenceMetricsEntries;

  /**
   * Confusion matrix of the evaluation. Only set for MULTICLASS classification problems where
   * number of annotation specs is no more than 10. Only set for model level evaluation, not for
   * evaluation per label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSConfusionMatrix confusionMatrix;

  /**
   * The number of examples used for model evaluation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer evaluatedExamplesCount;

  /**
   * The Log Loss metric.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float logLoss;

  /**
   * The Area under precision recall curve metric.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAuPrc() {
    return auPrc;
  }

  /**
   * The Area under precision recall curve metric.
   * @param auPrc auPrc or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setAuPrc(java.lang.Float auPrc) {
    this.auPrc = auPrc;
    return this;
  }

  /**
   * The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall
   * evaluation.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAuRoc() {
    return auRoc;
  }

  /**
   * The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall
   * evaluation.
   * @param auRoc auRoc or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setAuRoc(java.lang.Float auRoc) {
    this.auRoc = auRoc;
    return this;
  }

  /**
   * The Area under precision recall curve metric based on priors.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBaseAuPrc() {
    return baseAuPrc;
  }

  /**
   * The Area under precision recall curve metric based on priors.
   * @param baseAuPrc baseAuPrc or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setBaseAuPrc(java.lang.Float baseAuPrc) {
    this.baseAuPrc = baseAuPrc;
    return this;
  }

  /**
   * Metrics that have confidence thresholds. Precision-recall curve can be derived from it.
   * @return value or {@code null} for none
   */
  public java.util.List<XPSConfidenceMetricsEntry> getConfidenceMetricsEntries() {
    return confidenceMetricsEntries;
  }

  /**
   * Metrics that have confidence thresholds. Precision-recall curve can be derived from it.
   * @param confidenceMetricsEntries confidenceMetricsEntries or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setConfidenceMetricsEntries(java.util.List<XPSConfidenceMetricsEntry> confidenceMetricsEntries) {
    this.confidenceMetricsEntries = confidenceMetricsEntries;
    return this;
  }

  /**
   * Confusion matrix of the evaluation. Only set for MULTICLASS classification problems where
   * number of annotation specs is no more than 10. Only set for model level evaluation, not for
   * evaluation per label.
   * @return value or {@code null} for none
   */
  public XPSConfusionMatrix getConfusionMatrix() {
    return confusionMatrix;
  }

  /**
   * Confusion matrix of the evaluation. Only set for MULTICLASS classification problems where
   * number of annotation specs is no more than 10. Only set for model level evaluation, not for
   * evaluation per label.
   * @param confusionMatrix confusionMatrix or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setConfusionMatrix(XPSConfusionMatrix confusionMatrix) {
    this.confusionMatrix = confusionMatrix;
    return this;
  }

  /**
   * The number of examples used for model evaluation.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEvaluatedExamplesCount() {
    return evaluatedExamplesCount;
  }

  /**
   * The number of examples used for model evaluation.
   * @param evaluatedExamplesCount evaluatedExamplesCount or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setEvaluatedExamplesCount(java.lang.Integer evaluatedExamplesCount) {
    this.evaluatedExamplesCount = evaluatedExamplesCount;
    return this;
  }

  /**
   * The Log Loss metric.
   * @return value or {@code null} for none
   */
  public java.lang.Float getLogLoss() {
    return logLoss;
  }

  /**
   * The Log Loss metric.
   * @param logLoss logLoss or {@code null} for none
   */
  public XPSClassificationEvaluationMetrics setLogLoss(java.lang.Float logLoss) {
    this.logLoss = logLoss;
    return this;
  }

  @Override
  public XPSClassificationEvaluationMetrics set(String fieldName, Object value) {
    return (XPSClassificationEvaluationMetrics) super.set(fieldName, value);
  }

  @Override
  public XPSClassificationEvaluationMetrics clone() {
    return (XPSClassificationEvaluationMetrics) super.clone();
  }

}
