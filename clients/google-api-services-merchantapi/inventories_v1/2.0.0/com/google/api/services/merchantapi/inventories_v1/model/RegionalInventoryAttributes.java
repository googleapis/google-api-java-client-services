/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.inventories_v1.model;

/**
 * Regional inventory attributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RegionalInventoryAttributes extends com.google.api.client.json.GenericJson {

  /**
   * Optional. [Availability](https://support.google.com/merchants/answer/14644124) of the product
   * in this region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String availability;

  /**
   * Optional. Price of the product in this region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price price;

  /**
   * Optional. Sale price of the product in this region. Mandatory if `salePriceEffectiveDate` is
   * defined.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price salePrice;

  /**
   * Optional. The `TimePeriod` of the sale price in this region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Interval salePriceEffectiveDate;

  /**
   * Optional. [Availability](https://support.google.com/merchants/answer/14644124) of the product
   * in this region.
   * @return value or {@code null} for none
   */
  public java.lang.String getAvailability() {
    return availability;
  }

  /**
   * Optional. [Availability](https://support.google.com/merchants/answer/14644124) of the product
   * in this region.
   * @param availability availability or {@code null} for none
   */
  public RegionalInventoryAttributes setAvailability(java.lang.String availability) {
    this.availability = availability;
    return this;
  }

  /**
   * Optional. Price of the product in this region.
   * @return value or {@code null} for none
   */
  public Price getPrice() {
    return price;
  }

  /**
   * Optional. Price of the product in this region.
   * @param price price or {@code null} for none
   */
  public RegionalInventoryAttributes setPrice(Price price) {
    this.price = price;
    return this;
  }

  /**
   * Optional. Sale price of the product in this region. Mandatory if `salePriceEffectiveDate` is
   * defined.
   * @return value or {@code null} for none
   */
  public Price getSalePrice() {
    return salePrice;
  }

  /**
   * Optional. Sale price of the product in this region. Mandatory if `salePriceEffectiveDate` is
   * defined.
   * @param salePrice salePrice or {@code null} for none
   */
  public RegionalInventoryAttributes setSalePrice(Price salePrice) {
    this.salePrice = salePrice;
    return this;
  }

  /**
   * Optional. The `TimePeriod` of the sale price in this region.
   * @return value or {@code null} for none
   */
  public Interval getSalePriceEffectiveDate() {
    return salePriceEffectiveDate;
  }

  /**
   * Optional. The `TimePeriod` of the sale price in this region.
   * @param salePriceEffectiveDate salePriceEffectiveDate or {@code null} for none
   */
  public RegionalInventoryAttributes setSalePriceEffectiveDate(Interval salePriceEffectiveDate) {
    this.salePriceEffectiveDate = salePriceEffectiveDate;
    return this;
  }

  @Override
  public RegionalInventoryAttributes set(String fieldName, Object value) {
    return (RegionalInventoryAttributes) super.set(fieldName, value);
  }

  @Override
  public RegionalInventoryAttributes clone() {
    return (RegionalInventoryAttributes) super.clone();
  }

}
