/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A BlobRef is used to refer to a blob in BlobStore. Clients may only manipulate blobs through
 * BlobRefs. BlobRefs should not be sent in the clear outside of Google (for example, encoded in
 * URLs, stored in a client cookie, or referred to in Javascript); for efficiency, the IDs expose
 * internal details of the blobstore (such as machine IPs or cluster names). If clients need to
 * store BlobRefs outside of Google, they must encrypt the BlobRef securely or use an alternative
 * insecure identifier with an id->BlobRef mapping inside our network.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BlobstoreBlobRef extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("BlobID")
  private java.lang.String blobID;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Options") @com.google.api.client.json.JsonString
  private java.lang.Long options;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("RefID")
  private java.lang.String refID;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("ShardBin")
  private java.lang.Integer shardBin;

  /**
   * Size of the complete blob, in bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Size") @com.google.api.client.json.JsonString
  private java.lang.Long size;

  /**
   * The ID of the V2 blob this blob has
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("SourceV2BlobID")
  private java.lang.String sourceV2BlobID;

  /**
   * Deprecated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("V2ReadBlobToken")
  private java.lang.String v2ReadBlobToken;

  /**
   * @see #decodeBlobID()
   * @return value or {@code null} for none
   */
  public java.lang.String getBlobID() {
    return blobID;
  }

  /**

   * @see #getBlobID()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeBlobID() {
    return com.google.api.client.util.Base64.decodeBase64(blobID);
  }

  /**
   * @see #encodeBlobID()
   * @param blobID blobID or {@code null} for none
   */
  public BlobstoreBlobRef setBlobID(java.lang.String blobID) {
    this.blobID = blobID;
    return this;
  }

  /**

   * @see #setBlobID()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public BlobstoreBlobRef encodeBlobID(byte[] blobID) {
    this.blobID = com.google.api.client.util.Base64.encodeBase64URLSafeString(blobID);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getOptions() {
    return options;
  }

  /**
   * @param options options or {@code null} for none
   */
  public BlobstoreBlobRef setOptions(java.lang.Long options) {
    this.options = options;
    return this;
  }

  /**
   * @see #decodeRefID()
   * @return value or {@code null} for none
   */
  public java.lang.String getRefID() {
    return refID;
  }

  /**

   * @see #getRefID()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRefID() {
    return com.google.api.client.util.Base64.decodeBase64(refID);
  }

  /**
   * @see #encodeRefID()
   * @param refID refID or {@code null} for none
   */
  public BlobstoreBlobRef setRefID(java.lang.String refID) {
    this.refID = refID;
    return this;
  }

  /**

   * @see #setRefID()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public BlobstoreBlobRef encodeRefID(byte[] refID) {
    this.refID = com.google.api.client.util.Base64.encodeBase64URLSafeString(refID);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getShardBin() {
    return shardBin;
  }

  /**
   * @param shardBin shardBin or {@code null} for none
   */
  public BlobstoreBlobRef setShardBin(java.lang.Integer shardBin) {
    this.shardBin = shardBin;
    return this;
  }

  /**
   * Size of the complete blob, in bytes.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSize() {
    return size;
  }

  /**
   * Size of the complete blob, in bytes.
   * @param size size or {@code null} for none
   */
  public BlobstoreBlobRef setSize(java.lang.Long size) {
    this.size = size;
    return this;
  }

  /**
   * The ID of the V2 blob this blob has
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceV2BlobID() {
    return sourceV2BlobID;
  }

  /**
   * The ID of the V2 blob this blob has
   * @param sourceV2BlobID sourceV2BlobID or {@code null} for none
   */
  public BlobstoreBlobRef setSourceV2BlobID(java.lang.String sourceV2BlobID) {
    this.sourceV2BlobID = sourceV2BlobID;
    return this;
  }

  /**
   * Deprecated.
   * @return value or {@code null} for none
   */
  public java.lang.String getV2ReadBlobToken() {
    return v2ReadBlobToken;
  }

  /**
   * Deprecated.
   * @param v2ReadBlobToken v2ReadBlobToken or {@code null} for none
   */
  public BlobstoreBlobRef setV2ReadBlobToken(java.lang.String v2ReadBlobToken) {
    this.v2ReadBlobToken = v2ReadBlobToken;
    return this;
  }

  @Override
  public BlobstoreBlobRef set(String fieldName, Object value) {
    return (BlobstoreBlobRef) super.set(fieldName, value);
  }

  @Override
  public BlobstoreBlobRef clone() {
    return (BlobstoreBlobRef) super.clone();
  }

}
