/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1beta1.model;

/**
 * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more
 * information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs
 * /partitioned-tables#partitioning_versus_sharding).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Data Catalog API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDatacatalogV1BigQueryDateShardedSpec extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The Data Catalog resource name of the dataset entry the current table belongs to.
   * For example:
   * `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataset;

  /**
   * Output only. BigQuery resource name of the latest shard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String latestShardResource;

  /**
   * Output only. Total number of shards.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long shardCount;

  /**
   * Output only. The table name prefix of the shards. The name of any given shard is
   * `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is
   * `MyTable`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tablePrefix;

  /**
   * Output only. The Data Catalog resource name of the dataset entry the current table belongs to.
   * For example:
   * `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataset() {
    return dataset;
  }

  /**
   * Output only. The Data Catalog resource name of the dataset entry the current table belongs to.
   * For example:
   * `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
   * @param dataset dataset or {@code null} for none
   */
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec setDataset(java.lang.String dataset) {
    this.dataset = dataset;
    return this;
  }

  /**
   * Output only. BigQuery resource name of the latest shard.
   * @return value or {@code null} for none
   */
  public java.lang.String getLatestShardResource() {
    return latestShardResource;
  }

  /**
   * Output only. BigQuery resource name of the latest shard.
   * @param latestShardResource latestShardResource or {@code null} for none
   */
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec setLatestShardResource(java.lang.String latestShardResource) {
    this.latestShardResource = latestShardResource;
    return this;
  }

  /**
   * Output only. Total number of shards.
   * @return value or {@code null} for none
   */
  public java.lang.Long getShardCount() {
    return shardCount;
  }

  /**
   * Output only. Total number of shards.
   * @param shardCount shardCount or {@code null} for none
   */
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec setShardCount(java.lang.Long shardCount) {
    this.shardCount = shardCount;
    return this;
  }

  /**
   * Output only. The table name prefix of the shards. The name of any given shard is
   * `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is
   * `MyTable`.
   * @return value or {@code null} for none
   */
  public java.lang.String getTablePrefix() {
    return tablePrefix;
  }

  /**
   * Output only. The table name prefix of the shards. The name of any given shard is
   * `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is
   * `MyTable`.
   * @param tablePrefix tablePrefix or {@code null} for none
   */
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec setTablePrefix(java.lang.String tablePrefix) {
    this.tablePrefix = tablePrefix;
    return this;
  }

  @Override
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec set(String fieldName, Object value) {
    return (GoogleCloudDatacatalogV1BigQueryDateShardedSpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec clone() {
    return (GoogleCloudDatacatalogV1BigQueryDateShardedSpec) super.clone();
  }

}
