/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * This is deprecated and has no effect. Do not use.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Rule extends com.google.api.client.json.GenericJson {

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String action;

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Condition> conditions;

  static {
    // hack to force ProGuard to consider Condition used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Condition.class);
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ins;

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<LogConfig> logConfigs;

  static {
    // hack to force ProGuard to consider LogConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LogConfig.class);
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> notIns;

  /**
   * This is deprecated and has no effect. Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> permissions;

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.lang.String getAction() {
    return action;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param action action or {@code null} for none
   */
  public Rule setAction(java.lang.String action) {
    this.action = action;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.util.List<Condition> getConditions() {
    return conditions;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param conditions conditions or {@code null} for none
   */
  public Rule setConditions(java.util.List<Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param description description or {@code null} for none
   */
  public Rule setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIns() {
    return ins;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param ins ins or {@code null} for none
   */
  public Rule setIns(java.util.List<java.lang.String> ins) {
    this.ins = ins;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.util.List<LogConfig> getLogConfigs() {
    return logConfigs;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param logConfigs logConfigs or {@code null} for none
   */
  public Rule setLogConfigs(java.util.List<LogConfig> logConfigs) {
    this.logConfigs = logConfigs;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNotIns() {
    return notIns;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param notIns notIns or {@code null} for none
   */
  public Rule setNotIns(java.util.List<java.lang.String> notIns) {
    this.notIns = notIns;
    return this;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPermissions() {
    return permissions;
  }

  /**
   * This is deprecated and has no effect. Do not use.
   * @param permissions permissions or {@code null} for none
   */
  public Rule setPermissions(java.util.List<java.lang.String> permissions) {
    this.permissions = permissions;
    return this;
  }

  @Override
  public Rule set(String fieldName, Object value) {
    return (Rule) super.set(fieldName, value);
  }

  @Override
  public Rule clone() {
    return (Rule) super.clone();
  }

}
