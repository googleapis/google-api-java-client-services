/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Information associated with a docket. Note that multiple dockets can be combined and argued as
 * one and produce a single opinion
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LegalCitationCourtDocumentPerDocketInfo extends com.google.api.client.json.GenericJson {

  /**
   * An alpha-numeric (usually, mostly numeric) string used to identify the case by the court
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DocketID")
  private java.lang.String docketID;

  /**
   * Who is bringing the action? (X in X vs. Y)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Petitioner")
  private java.util.List<LegalPerson> petitioner;

  /**
   * Who represents the petitioner?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("PetitionerCounsel")
  private java.util.List<LegalPerson> petitionerCounsel;

  /**
   * Who is responding to the action? (Y in X vs. Y)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Respondent")
  private java.util.List<LegalPerson> respondent;

  /**
   * Who represents the respondent?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("RespondentCounsel")
  private java.util.List<LegalPerson> respondentCounsel;

  /**
   * The "in re" or "matter of" field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Topic")
  private java.lang.String topic;

  /**
   * An alpha-numeric (usually, mostly numeric) string used to identify the case by the court
   * @return value or {@code null} for none
   */
  public java.lang.String getDocketID() {
    return docketID;
  }

  /**
   * An alpha-numeric (usually, mostly numeric) string used to identify the case by the court
   * @param docketID docketID or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setDocketID(java.lang.String docketID) {
    this.docketID = docketID;
    return this;
  }

  /**
   * Who is bringing the action? (X in X vs. Y)
   * @return value or {@code null} for none
   */
  public java.util.List<LegalPerson> getPetitioner() {
    return petitioner;
  }

  /**
   * Who is bringing the action? (X in X vs. Y)
   * @param petitioner petitioner or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setPetitioner(java.util.List<LegalPerson> petitioner) {
    this.petitioner = petitioner;
    return this;
  }

  /**
   * Who represents the petitioner?
   * @return value or {@code null} for none
   */
  public java.util.List<LegalPerson> getPetitionerCounsel() {
    return petitionerCounsel;
  }

  /**
   * Who represents the petitioner?
   * @param petitionerCounsel petitionerCounsel or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setPetitionerCounsel(java.util.List<LegalPerson> petitionerCounsel) {
    this.petitionerCounsel = petitionerCounsel;
    return this;
  }

  /**
   * Who is responding to the action? (Y in X vs. Y)
   * @return value or {@code null} for none
   */
  public java.util.List<LegalPerson> getRespondent() {
    return respondent;
  }

  /**
   * Who is responding to the action? (Y in X vs. Y)
   * @param respondent respondent or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setRespondent(java.util.List<LegalPerson> respondent) {
    this.respondent = respondent;
    return this;
  }

  /**
   * Who represents the respondent?
   * @return value or {@code null} for none
   */
  public java.util.List<LegalPerson> getRespondentCounsel() {
    return respondentCounsel;
  }

  /**
   * Who represents the respondent?
   * @param respondentCounsel respondentCounsel or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setRespondentCounsel(java.util.List<LegalPerson> respondentCounsel) {
    this.respondentCounsel = respondentCounsel;
    return this;
  }

  /**
   * The "in re" or "matter of" field.
   * @return value or {@code null} for none
   */
  public java.lang.String getTopic() {
    return topic;
  }

  /**
   * The "in re" or "matter of" field.
   * @param topic topic or {@code null} for none
   */
  public LegalCitationCourtDocumentPerDocketInfo setTopic(java.lang.String topic) {
    this.topic = topic;
    return this;
  }

  @Override
  public LegalCitationCourtDocumentPerDocketInfo set(String fieldName, Object value) {
    return (LegalCitationCourtDocumentPerDocketInfo) super.set(fieldName, value);
  }

  @Override
  public LegalCitationCourtDocumentPerDocketInfo clone() {
    return (LegalCitationCourtDocumentPerDocketInfo) super.clone();
  }

}
