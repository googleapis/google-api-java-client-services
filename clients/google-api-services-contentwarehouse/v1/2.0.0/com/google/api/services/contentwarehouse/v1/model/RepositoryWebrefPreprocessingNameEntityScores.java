/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Abstract, source independent scores. Next available tag: 7
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefPreprocessingNameEntityScores extends com.google.api.client.json.GenericJson {

  /**
   * An unnormalized measure of how much evidence we have that this name variant refers to the key
   * entity. Should be comparable to all scores from the same source for: - other entities having
   * the same name variant - the open world score computed for this name variant
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double priorScore;

  /**
   * Prior score come from source that is quantifiable. artificial_score = prior_score -
   * volume_based_score.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double volumeBasedScore;

  /**
   * An unnormalized measure of how much evidence we have that this name variant refers to the key
   * entity. Should be comparable to all scores from the same source for: - other entities having
   * the same name variant - the open world score computed for this name variant
   * @return value or {@code null} for none
   */
  public java.lang.Double getPriorScore() {
    return priorScore;
  }

  /**
   * An unnormalized measure of how much evidence we have that this name variant refers to the key
   * entity. Should be comparable to all scores from the same source for: - other entities having
   * the same name variant - the open world score computed for this name variant
   * @param priorScore priorScore or {@code null} for none
   */
  public RepositoryWebrefPreprocessingNameEntityScores setPriorScore(java.lang.Double priorScore) {
    this.priorScore = priorScore;
    return this;
  }

  /**
   * Prior score come from source that is quantifiable. artificial_score = prior_score -
   * volume_based_score.
   * @return value or {@code null} for none
   */
  public java.lang.Double getVolumeBasedScore() {
    return volumeBasedScore;
  }

  /**
   * Prior score come from source that is quantifiable. artificial_score = prior_score -
   * volume_based_score.
   * @param volumeBasedScore volumeBasedScore or {@code null} for none
   */
  public RepositoryWebrefPreprocessingNameEntityScores setVolumeBasedScore(java.lang.Double volumeBasedScore) {
    this.volumeBasedScore = volumeBasedScore;
    return this;
  }

  @Override
  public RepositoryWebrefPreprocessingNameEntityScores set(String fieldName, Object value) {
    return (RepositoryWebrefPreprocessingNameEntityScores) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefPreprocessingNameEntityScores clone() {
    return (RepositoryWebrefPreprocessingNameEntityScores) super.clone();
  }

}
