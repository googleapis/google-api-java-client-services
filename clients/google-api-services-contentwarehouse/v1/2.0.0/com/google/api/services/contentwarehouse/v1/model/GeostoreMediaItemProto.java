/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Media item attached to an element of price list.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostoreMediaItemProto extends com.google.api.client.json.GenericJson {

  /**
   * The FIFE url associated with the media. NOTE: This FIFE URL must be PII-free, see go/product-
   * catalogue-photo-storage
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String googleUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaFormat;

  /**
   * The mediaKey associated with the media. NOTE: This media key must be PII-free, see go/product-
   * catalogue-photo-storage
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostoreMediaItemProtoMediaSize mediaSize;

  /**
   * The FIFE url associated with the media. NOTE: This FIFE URL must be PII-free, see go/product-
   * catalogue-photo-storage
   * @return value or {@code null} for none
   */
  public java.lang.String getGoogleUrl() {
    return googleUrl;
  }

  /**
   * The FIFE url associated with the media. NOTE: This FIFE URL must be PII-free, see go/product-
   * catalogue-photo-storage
   * @param googleUrl googleUrl or {@code null} for none
   */
  public GeostoreMediaItemProto setGoogleUrl(java.lang.String googleUrl) {
    this.googleUrl = googleUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaFormat() {
    return mediaFormat;
  }

  /**
   * @param mediaFormat mediaFormat or {@code null} for none
   */
  public GeostoreMediaItemProto setMediaFormat(java.lang.String mediaFormat) {
    this.mediaFormat = mediaFormat;
    return this;
  }

  /**
   * The mediaKey associated with the media. NOTE: This media key must be PII-free, see go/product-
   * catalogue-photo-storage
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaKey() {
    return mediaKey;
  }

  /**
   * The mediaKey associated with the media. NOTE: This media key must be PII-free, see go/product-
   * catalogue-photo-storage
   * @param mediaKey mediaKey or {@code null} for none
   */
  public GeostoreMediaItemProto setMediaKey(java.lang.String mediaKey) {
    this.mediaKey = mediaKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GeostoreMediaItemProtoMediaSize getMediaSize() {
    return mediaSize;
  }

  /**
   * @param mediaSize mediaSize or {@code null} for none
   */
  public GeostoreMediaItemProto setMediaSize(GeostoreMediaItemProtoMediaSize mediaSize) {
    this.mediaSize = mediaSize;
    return this;
  }

  @Override
  public GeostoreMediaItemProto set(String fieldName, Object value) {
    return (GeostoreMediaItemProto) super.set(fieldName, value);
  }

  @Override
  public GeostoreMediaItemProto clone() {
    return (GeostoreMediaItemProto) super.clone();
  }

}
