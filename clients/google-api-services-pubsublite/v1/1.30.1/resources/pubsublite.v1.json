{
  "canonicalName": "PubsubLite",
  "mtlsRootUrl": "https://pubsublite.mtls.googleapis.com/",
  "title": "Pub/Sub Lite API",
  "version": "v1",
  "protocol": "rest",
  "baseUrl": "https://pubsublite.googleapis.com/",
  "documentationLink": "https://cloud.google.com/pubsub/lite/docs",
  "revision": "20200818",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ListSubscriptionsResponse": {
      "id": "ListSubscriptionsResponse",
      "type": "object",
      "description": "Response for ListSubscriptions.",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
          "type": "string"
        },
        "subscriptions": {
          "description": "The list of subscriptions in the requested parent. The order of the subscriptions is unspecified.",
          "type": "array",
          "items": {
            "$ref": "Subscription"
          }
        }
      }
    },
    "DeliveryConfig": {
      "properties": {
        "deliveryRequirement": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The server does not wait for a published message to be successfully written to storage before delivering it to subscribers.",
            "The server will not deliver a published message to subscribers until the message has been successfully written to storage. This will result in higher end-to-end latency, but consistent delivery."
          ],
          "description": "The DeliveryRequirement for this subscription.",
          "enum": [
            "DELIVERY_REQUIREMENT_UNSPECIFIED",
            "DELIVER_IMMEDIATELY",
            "DELIVER_AFTER_STORED"
          ]
        }
      },
      "id": "DeliveryConfig",
      "type": "object",
      "description": "The settings for a subscription's message delivery."
    },
    "Cursor": {
      "id": "Cursor",
      "properties": {
        "offset": {
          "format": "int64",
          "description": "The offset of a message within a topic partition. Must be greater than or equal 0.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A cursor that describes the position of a message within a topic partition."
    },
    "TopicPartitions": {
      "id": "TopicPartitions",
      "description": "Response for GetTopicPartitions.",
      "type": "object",
      "properties": {
        "partitionCount": {
          "type": "string",
          "description": "The number of partitions in the topic.",
          "format": "int64"
        }
      }
    },
    "PartitionConfig": {
      "id": "PartitionConfig",
      "properties": {
        "capacity": {
          "description": "The capacity configuration.",
          "$ref": "Capacity"
        },
        "count": {
          "description": "The number of partitions in the topic. Must be at least 1.",
          "type": "string",
          "format": "int64"
        },
        "scale": {
          "type": "integer",
          "description": "DEPRECATED: Use capacity instead which can express a superset of configurations. Every partition in the topic is allocated throughput equivalent to `scale` times the standard partition throughput (4 MiB/s). This is also reflected in the cost of this topic; a topic with `scale` of 2 and count of 10 is charged for 20 partitions. This value must be in the range [1,4].",
          "format": "int32"
        }
      },
      "description": "The settings for a topic's partitions.",
      "type": "object"
    },
    "ListTopicsResponse": {
      "id": "ListTopicsResponse",
      "properties": {
        "topics": {
          "type": "array",
          "description": "The list of topic in the requested parent. The order of the topics is unspecified.",
          "items": {
            "$ref": "Topic"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
          "type": "string"
        }
      },
      "description": "Response for ListTopics.",
      "type": "object"
    },
    "Capacity": {
      "properties": {
        "subscribeMibPerSec": {
          "type": "integer",
          "description": "Subscribe throughput capacity per partition in MiB/s. Must be \u003e= 4 and \u003c= 32.",
          "format": "int32"
        },
        "publishMibPerSec": {
          "description": "Publish throughput capacity per partition in MiB/s. Must be \u003e= 4 and \u003c= 16.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "Capacity",
      "description": "The throughput capacity configuration for each partition."
    },
    "Subscription": {
      "type": "object",
      "description": "Metadata about a subscription resource.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}"
        },
        "name": {
          "description": "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
          "type": "string"
        },
        "deliveryConfig": {
          "description": "The settings for this subscription's message delivery.",
          "$ref": "DeliveryConfig"
        }
      },
      "id": "Subscription"
    },
    "Topic": {
      "id": "Topic",
      "properties": {
        "partitionConfig": {
          "$ref": "PartitionConfig",
          "description": "The settings for this topic's partitions."
        },
        "retentionConfig": {
          "$ref": "RetentionConfig",
          "description": "The settings for this topic's message retention."
        },
        "name": {
          "description": "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata about a topic resource."
    },
    "ListPartitionCursorsResponse": {
      "type": "object",
      "properties": {
        "partitionCursors": {
          "description": "The partition cursors from this request.",
          "type": "array",
          "items": {
            "$ref": "PartitionCursor"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "ListPartitionCursorsResponse",
      "description": "Response for ListPartitionCursors"
    },
    "RetentionConfig": {
      "properties": {
        "perPartitionBytes": {
          "description": "The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic's partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.",
          "type": "string",
          "format": "int64"
        },
        "period": {
          "format": "google-duration",
          "description": "How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.",
          "type": "string"
        }
      },
      "description": "The settings for a topic's message retention.",
      "id": "RetentionConfig",
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ListTopicSubscriptionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
          "type": "string"
        },
        "subscriptions": {
          "description": "The names of subscriptions attached to the topic. The order of the subscriptions is unspecified.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListTopicSubscriptionsResponse",
      "type": "object",
      "description": "Response for ListTopicSubscriptions."
    },
    "PartitionCursor": {
      "properties": {
        "cursor": {
          "$ref": "Cursor",
          "description": "The value of the cursor."
        },
        "partition": {
          "format": "int64",
          "type": "string",
          "description": "The partition this is for."
        }
      },
      "description": "A pair of a Cursor and the partition it is for.",
      "type": "object",
      "id": "PartitionCursor"
    }
  },
  "id": "pubsublite:v1",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "resources": {
    "admin": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "subscriptions": {
                  "methods": {
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.delete",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the subscription to delete.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$"
                        }
                      },
                      "description": "Deletes the specified subscription.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE",
                      "path": "v1/admin/{+name}"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions",
                      "id": "pubsublite.admin.projects.locations.subscriptions.create",
                      "response": {
                        "$ref": "Subscription"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent location in which to create the subscription. Structured like `projects/{project_number}/locations/{location}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "subscriptionId": {
                          "type": "string",
                          "description": "Required. The ID to use for the subscription, which will become the final component of the subscription's name. This value is structured like: `my-sub-name`.",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "Subscription"
                      },
                      "description": "Creates a new subscription.",
                      "path": "v1/admin/{+parent}/subscriptions"
                    },
                    "patch": {
                      "request": {
                        "$ref": "Subscription"
                      },
                      "response": {
                        "$ref": "Subscription"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.patch",
                      "description": "Updates properties of the specified subscription.",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "Required. A mask specifying the subscription fields to change.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "required": true,
                          "description": "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}"
                        }
                      },
                      "path": "v1/admin/{+name}",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH"
                    },
                    "list": {
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions",
                      "response": {
                        "$ref": "ListSubscriptionsResponse"
                      },
                      "path": "v1/admin/{+parent}/subscriptions",
                      "id": "pubsublite.admin.projects.locations.subscriptions.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "description": "Returns the list of subscriptions for the given project.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "description": "Required. The parent whose subscriptions are to be listed. Structured like `projects/{project_number}/locations/{location}`.",
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the parent will be returned.",
                          "format": "int32",
                          "location": "query"
                        }
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the subscription whose configuration to return.",
                          "location": "path"
                        }
                      },
                      "description": "Returns the subscription configuration.",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "response": {
                        "$ref": "Subscription"
                      },
                      "id": "pubsublite.admin.projects.locations.subscriptions.get",
                      "path": "v1/admin/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "topics": {
                  "resources": {
                    "subscriptions": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/admin/{+name}/subscriptions",
                          "parameters": {
                            "pageSize": {
                              "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the given topic will be returned.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            },
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the topic whose subscriptions to list."
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "A page token, received from a previous `ListTopicSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopicSubscriptions` must match the call that provided the page token.",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "ListTopicSubscriptionsResponse"
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "pubsublite.admin.projects.locations.topics.subscriptions.list",
                          "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/subscriptions",
                          "description": "Lists the subscriptions attached to the specified topic."
                        }
                      }
                    }
                  },
                  "methods": {
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the topic to delete.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/admin/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "description": "Deletes the specified topic.",
                      "id": "pubsublite.admin.projects.locations.topics.delete"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the topic whose configuration to return."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "pubsublite.admin.projects.locations.topics.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Topic"
                      },
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "path": "v1/admin/{+name}",
                      "description": "Returns the topic configuration.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListTopics` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopics` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the parent will be returned.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent whose topics are to be listed. Structured like `projects/{project_number}/locations/{location}`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "required": true
                        }
                      },
                      "id": "pubsublite.admin.projects.locations.topics.list",
                      "response": {
                        "$ref": "ListTopicsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "description": "Returns the list of topics for the given project.",
                      "path": "v1/admin/{+parent}/topics"
                    },
                    "create": {
                      "parameters": {
                        "topicId": {
                          "type": "string",
                          "description": "Required. The ID to use for the topic, which will become the final component of the topic's name. This value is structured like: `my-topic-name`.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent location in which to create the topic. Structured like `projects/{project_number}/locations/{location}`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Topic"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "pubsublite.admin.projects.locations.topics.create",
                      "request": {
                        "$ref": "Topic"
                      },
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics",
                      "httpMethod": "POST",
                      "description": "Creates a new topic.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/admin/{+parent}/topics"
                    },
                    "getPartitions": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "TopicPartitions"
                      },
                      "description": "Returns the partition information for the requested topic.",
                      "httpMethod": "GET",
                      "id": "pubsublite.admin.projects.locations.topics.getPartitions",
                      "path": "v1/admin/{+name}/partitions",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/partitions",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "location": "path",
                          "description": "Required. The topic whose partition information to return.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "patch": {
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "request": {
                        "$ref": "Topic"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/admin/{+name}",
                      "parameters": {
                        "name": {
                          "description": "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Required. A mask specifying the topic fields to change.",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "id": "pubsublite.admin.projects.locations.topics.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "description": "Updates properties of the specified topic.",
                      "response": {
                        "$ref": "Topic"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "cursor": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "subscriptions": {
                  "resources": {
                    "cursors": {
                      "methods": {
                        "list": {
                          "description": "Returns all committed cursor information for a subscription.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "pubsublite.cursor.projects.locations.subscriptions.cursors.list",
                          "response": {
                            "$ref": "ListPartitionCursorsResponse"
                          },
                          "path": "v1/cursor/{+parent}/cursors",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "required": true,
                              "description": "Required. The subscription for which to retrieve cursors. Structured like `projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                              "type": "string"
                            },
                            "pageToken": {
                              "description": "A page token, received from a previous `ListPartitionCursors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPartitionCursors` must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "The maximum number of cursors to return. The service may return fewer than this value. If unset or zero, all cursors for the parent will be returned."
                            }
                          },
                          "flatPath": "v1/cursor/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}/cursors"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "servicePath": "",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "description": "",
  "rootUrl": "https://pubsublite.googleapis.com/",
  "parameters": {
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    }
  },
  "kind": "discovery#restDescription",
  "name": "pubsublite",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "basePath": ""
}
