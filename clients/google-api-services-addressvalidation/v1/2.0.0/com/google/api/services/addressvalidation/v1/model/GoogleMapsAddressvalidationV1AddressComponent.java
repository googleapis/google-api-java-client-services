/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.addressvalidation.v1.model;

/**
 * Represents an address component, such as a street, city, or state.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Address Validation API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsAddressvalidationV1AddressComponent extends com.google.api.client.json.GenericJson {

  /**
   * The name for this component.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsAddressvalidationV1ComponentName componentName;

  /**
   * The type of the address component. See [Table 2: Additional types returned by the Places
   * service](https://developers.google.com/places/web-service/supported_types#table2) for a list of
   * possible types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String componentType;

  /**
   * Indicates the level of certainty that we have that the component is correct.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String confirmationLevel;

  /**
   * Indicates that the component was not part of the input, but we inferred it for the address
   * location and believe it should be provided for a complete address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inferred;

  /**
   * Indicates the name of the component was replaced with a completely different one, for example a
   * wrong postal code being replaced with one that is correct for the address. This is not a
   * cosmetic change, the input component has been changed to a different one.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean replaced;

  /**
   * Indicates a correction to a misspelling in the component name. The API does not always flag
   * changes from one spelling variant to another, such as when changing "centre" to "center". It
   * also does not always flag common misspellings, such as when changing "Amphitheater Pkwy" to
   * "Amphitheatre Pkwy".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean spellCorrected;

  /**
   * Indicates an address component that is not expected to be present in a postal address for the
   * given region. We have retained it only because it was part of the input.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unexpected;

  /**
   * The name for this component.
   * @return value or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1ComponentName getComponentName() {
    return componentName;
  }

  /**
   * The name for this component.
   * @param componentName componentName or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setComponentName(GoogleMapsAddressvalidationV1ComponentName componentName) {
    this.componentName = componentName;
    return this;
  }

  /**
   * The type of the address component. See [Table 2: Additional types returned by the Places
   * service](https://developers.google.com/places/web-service/supported_types#table2) for a list of
   * possible types.
   * @return value or {@code null} for none
   */
  public java.lang.String getComponentType() {
    return componentType;
  }

  /**
   * The type of the address component. See [Table 2: Additional types returned by the Places
   * service](https://developers.google.com/places/web-service/supported_types#table2) for a list of
   * possible types.
   * @param componentType componentType or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setComponentType(java.lang.String componentType) {
    this.componentType = componentType;
    return this;
  }

  /**
   * Indicates the level of certainty that we have that the component is correct.
   * @return value or {@code null} for none
   */
  public java.lang.String getConfirmationLevel() {
    return confirmationLevel;
  }

  /**
   * Indicates the level of certainty that we have that the component is correct.
   * @param confirmationLevel confirmationLevel or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setConfirmationLevel(java.lang.String confirmationLevel) {
    this.confirmationLevel = confirmationLevel;
    return this;
  }

  /**
   * Indicates that the component was not part of the input, but we inferred it for the address
   * location and believe it should be provided for a complete address.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInferred() {
    return inferred;
  }

  /**
   * Indicates that the component was not part of the input, but we inferred it for the address
   * location and believe it should be provided for a complete address.
   * @param inferred inferred or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setInferred(java.lang.Boolean inferred) {
    this.inferred = inferred;
    return this;
  }

  /**
   * Indicates the name of the component was replaced with a completely different one, for example a
   * wrong postal code being replaced with one that is correct for the address. This is not a
   * cosmetic change, the input component has been changed to a different one.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReplaced() {
    return replaced;
  }

  /**
   * Indicates the name of the component was replaced with a completely different one, for example a
   * wrong postal code being replaced with one that is correct for the address. This is not a
   * cosmetic change, the input component has been changed to a different one.
   * @param replaced replaced or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setReplaced(java.lang.Boolean replaced) {
    this.replaced = replaced;
    return this;
  }

  /**
   * Indicates a correction to a misspelling in the component name. The API does not always flag
   * changes from one spelling variant to another, such as when changing "centre" to "center". It
   * also does not always flag common misspellings, such as when changing "Amphitheater Pkwy" to
   * "Amphitheatre Pkwy".
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSpellCorrected() {
    return spellCorrected;
  }

  /**
   * Indicates a correction to a misspelling in the component name. The API does not always flag
   * changes from one spelling variant to another, such as when changing "centre" to "center". It
   * also does not always flag common misspellings, such as when changing "Amphitheater Pkwy" to
   * "Amphitheatre Pkwy".
   * @param spellCorrected spellCorrected or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setSpellCorrected(java.lang.Boolean spellCorrected) {
    this.spellCorrected = spellCorrected;
    return this;
  }

  /**
   * Indicates an address component that is not expected to be present in a postal address for the
   * given region. We have retained it only because it was part of the input.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnexpected() {
    return unexpected;
  }

  /**
   * Indicates an address component that is not expected to be present in a postal address for the
   * given region. We have retained it only because it was part of the input.
   * @param unexpected unexpected or {@code null} for none
   */
  public GoogleMapsAddressvalidationV1AddressComponent setUnexpected(java.lang.Boolean unexpected) {
    this.unexpected = unexpected;
    return this;
  }

  @Override
  public GoogleMapsAddressvalidationV1AddressComponent set(String fieldName, Object value) {
    return (GoogleMapsAddressvalidationV1AddressComponent) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsAddressvalidationV1AddressComponent clone() {
    return (GoogleMapsAddressvalidationV1AddressComponent) super.clone();
  }

}
