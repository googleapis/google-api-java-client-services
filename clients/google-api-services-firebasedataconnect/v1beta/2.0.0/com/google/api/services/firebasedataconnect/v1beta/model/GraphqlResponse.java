/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasedataconnect.v1beta.model;

/**
 * The GraphQL response from Firebase Data Connect. It strives to match the GraphQL over HTTP spec.
 * Note: Firebase Data Connect always responds with `Content-Type: application/json`.
 * https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#body
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Data Connect API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GraphqlResponse extends com.google.api.client.json.GenericJson {

  /**
   * The result of the execution of the requested operation. If an error was raised before execution
   * begins, the data entry should not be present in the result. (a request error:
   * https://spec.graphql.org/draft/#sec-Errors.Request-Errors) If an error was raised during the
   * execution that prevented a valid response, the data entry in the response should be null. (a
   * field error: https://spec.graphql.org/draft/#sec-Errors.Error-Result-Format)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> data;

  /**
   * Errors of this response. If the data entry in the response is not present, the errors entry
   * must be present. It conforms to https://spec.graphql.org/draft/#sec-Errors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GraphqlError> errors;

  static {
    // hack to force ProGuard to consider GraphqlError used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GraphqlError.class);
  }

  /**
   * The result of the execution of the requested operation. If an error was raised before execution
   * begins, the data entry should not be present in the result. (a request error:
   * https://spec.graphql.org/draft/#sec-Errors.Request-Errors) If an error was raised during the
   * execution that prevented a valid response, the data entry in the response should be null. (a
   * field error: https://spec.graphql.org/draft/#sec-Errors.Error-Result-Format)
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getData() {
    return data;
  }

  /**
   * The result of the execution of the requested operation. If an error was raised before execution
   * begins, the data entry should not be present in the result. (a request error:
   * https://spec.graphql.org/draft/#sec-Errors.Request-Errors) If an error was raised during the
   * execution that prevented a valid response, the data entry in the response should be null. (a
   * field error: https://spec.graphql.org/draft/#sec-Errors.Error-Result-Format)
   * @param data data or {@code null} for none
   */
  public GraphqlResponse setData(java.util.Map<String, java.lang.Object> data) {
    this.data = data;
    return this;
  }

  /**
   * Errors of this response. If the data entry in the response is not present, the errors entry
   * must be present. It conforms to https://spec.graphql.org/draft/#sec-Errors.
   * @return value or {@code null} for none
   */
  public java.util.List<GraphqlError> getErrors() {
    return errors;
  }

  /**
   * Errors of this response. If the data entry in the response is not present, the errors entry
   * must be present. It conforms to https://spec.graphql.org/draft/#sec-Errors.
   * @param errors errors or {@code null} for none
   */
  public GraphqlResponse setErrors(java.util.List<GraphqlError> errors) {
    this.errors = errors;
    return this;
  }

  @Override
  public GraphqlResponse set(String fieldName, Object value) {
    return (GraphqlResponse) super.set(fieldName, value);
  }

  @Override
  public GraphqlResponse clone() {
    return (GraphqlResponse) super.clone();
  }

}
