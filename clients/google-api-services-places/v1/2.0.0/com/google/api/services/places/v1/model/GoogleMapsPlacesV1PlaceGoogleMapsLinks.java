/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Links to trigger different Google Maps actions.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1PlaceGoogleMapsLinks extends com.google.api.client.json.GenericJson {

  /**
   * A link to show the directions to the place. The link only populates the destination location
   * and uses the default travel mode `DRIVE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String directionsUri;

  /**
   * A link to show photos of this place. This link is currently not supported on Google Maps Mobile
   * and only works on the web version of Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String photosUri;

  /**
   * A link to show this place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeUri;

  /**
   * A link to show reviews of this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reviewsUri;

  /**
   * A link to write a review for this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String writeAReviewUri;

  /**
   * A link to show the directions to the place. The link only populates the destination location
   * and uses the default travel mode `DRIVE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDirectionsUri() {
    return directionsUri;
  }

  /**
   * A link to show the directions to the place. The link only populates the destination location
   * and uses the default travel mode `DRIVE`.
   * @param directionsUri directionsUri or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks setDirectionsUri(java.lang.String directionsUri) {
    this.directionsUri = directionsUri;
    return this;
  }

  /**
   * A link to show photos of this place. This link is currently not supported on Google Maps Mobile
   * and only works on the web version of Google Maps.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhotosUri() {
    return photosUri;
  }

  /**
   * A link to show photos of this place. This link is currently not supported on Google Maps Mobile
   * and only works on the web version of Google Maps.
   * @param photosUri photosUri or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks setPhotosUri(java.lang.String photosUri) {
    this.photosUri = photosUri;
    return this;
  }

  /**
   * A link to show this place.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceUri() {
    return placeUri;
  }

  /**
   * A link to show this place.
   * @param placeUri placeUri or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks setPlaceUri(java.lang.String placeUri) {
    this.placeUri = placeUri;
    return this;
  }

  /**
   * A link to show reviews of this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * @return value or {@code null} for none
   */
  public java.lang.String getReviewsUri() {
    return reviewsUri;
  }

  /**
   * A link to show reviews of this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * @param reviewsUri reviewsUri or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks setReviewsUri(java.lang.String reviewsUri) {
    this.reviewsUri = reviewsUri;
    return this;
  }

  /**
   * A link to write a review for this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * @return value or {@code null} for none
   */
  public java.lang.String getWriteAReviewUri() {
    return writeAReviewUri;
  }

  /**
   * A link to write a review for this place. This link is currently not supported on Google Maps
   * Mobile and only works on the web version of Google Maps.
   * @param writeAReviewUri writeAReviewUri or {@code null} for none
   */
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks setWriteAReviewUri(java.lang.String writeAReviewUri) {
    this.writeAReviewUri = writeAReviewUri;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1PlaceGoogleMapsLinks) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1PlaceGoogleMapsLinks clone() {
    return (GoogleMapsPlacesV1PlaceGoogleMapsLinks) super.clone();
  }

}
