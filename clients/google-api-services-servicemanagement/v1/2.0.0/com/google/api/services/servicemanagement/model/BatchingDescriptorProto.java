/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.servicemanagement.model;

/**
 * `BatchingDescriptorProto` specifies the fields of the request message to be used for batching,
 * and, optionally, the fields of the response message to be used for demultiplexing.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BatchingDescriptorProto extends com.google.api.client.json.GenericJson {

  /**
   * The repeated field in the request message to be aggregated by batching.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String batchedField;

  /**
   * A list of the fields in the request message. Two requests will be batched together only if the
   * values of every field specified in `request_discriminator_fields` is equal between the two
   * requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> discriminatorFields;

  /**
   * Optional. When present, indicates the field in the response message to be used to demultiplex
   * the response into multiple response messages, in correspondence with the multiple request
   * messages originally batched together.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subresponseField;

  /**
   * The repeated field in the request message to be aggregated by batching.
   * @return value or {@code null} for none
   */
  public java.lang.String getBatchedField() {
    return batchedField;
  }

  /**
   * The repeated field in the request message to be aggregated by batching.
   * @param batchedField batchedField or {@code null} for none
   */
  public BatchingDescriptorProto setBatchedField(java.lang.String batchedField) {
    this.batchedField = batchedField;
    return this;
  }

  /**
   * A list of the fields in the request message. Two requests will be batched together only if the
   * values of every field specified in `request_discriminator_fields` is equal between the two
   * requests.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDiscriminatorFields() {
    return discriminatorFields;
  }

  /**
   * A list of the fields in the request message. Two requests will be batched together only if the
   * values of every field specified in `request_discriminator_fields` is equal between the two
   * requests.
   * @param discriminatorFields discriminatorFields or {@code null} for none
   */
  public BatchingDescriptorProto setDiscriminatorFields(java.util.List<java.lang.String> discriminatorFields) {
    this.discriminatorFields = discriminatorFields;
    return this;
  }

  /**
   * Optional. When present, indicates the field in the response message to be used to demultiplex
   * the response into multiple response messages, in correspondence with the multiple request
   * messages originally batched together.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubresponseField() {
    return subresponseField;
  }

  /**
   * Optional. When present, indicates the field in the response message to be used to demultiplex
   * the response into multiple response messages, in correspondence with the multiple request
   * messages originally batched together.
   * @param subresponseField subresponseField or {@code null} for none
   */
  public BatchingDescriptorProto setSubresponseField(java.lang.String subresponseField) {
    this.subresponseField = subresponseField;
    return this;
  }

  @Override
  public BatchingDescriptorProto set(String fieldName, Object value) {
    return (BatchingDescriptorProto) super.set(fieldName, value);
  }

  @Override
  public BatchingDescriptorProto clone() {
    return (BatchingDescriptorProto) super.clone();
  }

}
