/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.ml.v1.model;

/**
 * All parameters related to queuing and scheduling of training jobs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AI Platform Training & Prediction API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudMlV1Scheduling extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The maximum job running time, expressed in seconds. By default there is no limit.
   *
   * If the training job is still running after this duration, AI Platform Training cancels it.
   *
   * For example, if you want to ensure your job runs for no more than 2 hours, set this field to
   * `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute).
   *
   * If you submit your training job using the `gcloud` tool, you can [provide this field in a
   * `config.yaml` file](/ml-engine/docs/training-jobs#formatting_your_configuration_parameters).
   * For example:
   *
   * ```yaml trainingInput:   ...   scheduling:     maxRunningTime: 7200s   ... ```
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String maxRunningTime;

  /**
   * Optional. The maximum job running time, expressed in seconds. By default there is no limit.
   *
   * If the training job is still running after this duration, AI Platform Training cancels it.
   *
   * For example, if you want to ensure your job runs for no more than 2 hours, set this field to
   * `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute).
   *
   * If you submit your training job using the `gcloud` tool, you can [provide this field in a
   * `config.yaml` file](/ml-engine/docs/training-jobs#formatting_your_configuration_parameters).
   * For example:
   *
   * ```yaml trainingInput:   ...   scheduling:     maxRunningTime: 7200s   ... ```
   * @return value or {@code null} for none
   */
  public String getMaxRunningTime() {
    return maxRunningTime;
  }

  /**
   * Optional. The maximum job running time, expressed in seconds. By default there is no limit.
   *
   * If the training job is still running after this duration, AI Platform Training cancels it.
   *
   * For example, if you want to ensure your job runs for no more than 2 hours, set this field to
   * `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute).
   *
   * If you submit your training job using the `gcloud` tool, you can [provide this field in a
   * `config.yaml` file](/ml-engine/docs/training-jobs#formatting_your_configuration_parameters).
   * For example:
   *
   * ```yaml trainingInput:   ...   scheduling:     maxRunningTime: 7200s   ... ```
   * @param maxRunningTime maxRunningTime or {@code null} for none
   */
  public GoogleCloudMlV1Scheduling setMaxRunningTime(String maxRunningTime) {
    this.maxRunningTime = maxRunningTime;
    return this;
  }

  @Override
  public GoogleCloudMlV1Scheduling set(String fieldName, Object value) {
    return (GoogleCloudMlV1Scheduling) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudMlV1Scheduling clone() {
    return (GoogleCloudMlV1Scheduling) super.clone();
  }

}
