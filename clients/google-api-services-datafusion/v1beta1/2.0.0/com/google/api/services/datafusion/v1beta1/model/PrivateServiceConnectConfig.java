/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datafusion.v1beta1.model;

/**
 * Configuration for using Private Service Connect to establish connectivity between the Data Fusion
 * consumer project and the corresponding tenant project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Fusion API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PrivateServiceConnectConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer
   * project VPC. The size of this block is /25. The format of this field is governed by RFC 4632.
   * Example: 240.0.0.0/25
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String effectiveUnreachableCidrBlock;

  /**
   * Required. The reference to the network attachment used to establish private connectivity. It
   * will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-
   * attachment-id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkAttachment;

  /**
   * Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the
   * consumer project VPC. The size of this block should be at least /25. This range should not
   * overlap with the primary address range of any subnetwork used by the network attachment. This
   * range can be used for other purposes in the consumer VPC as long as there is no requirement for
   * CDF to reach destinations using these addresses. If this value is not provided, the server
   * chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
   * Example: 192.168.0.0/25
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unreachableCidrBlock;

  /**
   * Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer
   * project VPC. The size of this block is /25. The format of this field is governed by RFC 4632.
   * Example: 240.0.0.0/25
   * @return value or {@code null} for none
   */
  public java.lang.String getEffectiveUnreachableCidrBlock() {
    return effectiveUnreachableCidrBlock;
  }

  /**
   * Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer
   * project VPC. The size of this block is /25. The format of this field is governed by RFC 4632.
   * Example: 240.0.0.0/25
   * @param effectiveUnreachableCidrBlock effectiveUnreachableCidrBlock or {@code null} for none
   */
  public PrivateServiceConnectConfig setEffectiveUnreachableCidrBlock(java.lang.String effectiveUnreachableCidrBlock) {
    this.effectiveUnreachableCidrBlock = effectiveUnreachableCidrBlock;
    return this;
  }

  /**
   * Required. The reference to the network attachment used to establish private connectivity. It
   * will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-
   * attachment-id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkAttachment() {
    return networkAttachment;
  }

  /**
   * Required. The reference to the network attachment used to establish private connectivity. It
   * will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-
   * attachment-id}.
   * @param networkAttachment networkAttachment or {@code null} for none
   */
  public PrivateServiceConnectConfig setNetworkAttachment(java.lang.String networkAttachment) {
    this.networkAttachment = networkAttachment;
    return this;
  }

  /**
   * Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the
   * consumer project VPC. The size of this block should be at least /25. This range should not
   * overlap with the primary address range of any subnetwork used by the network attachment. This
   * range can be used for other purposes in the consumer VPC as long as there is no requirement for
   * CDF to reach destinations using these addresses. If this value is not provided, the server
   * chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
   * Example: 192.168.0.0/25
   * @return value or {@code null} for none
   */
  public java.lang.String getUnreachableCidrBlock() {
    return unreachableCidrBlock;
  }

  /**
   * Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the
   * consumer project VPC. The size of this block should be at least /25. This range should not
   * overlap with the primary address range of any subnetwork used by the network attachment. This
   * range can be used for other purposes in the consumer VPC as long as there is no requirement for
   * CDF to reach destinations using these addresses. If this value is not provided, the server
   * chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
   * Example: 192.168.0.0/25
   * @param unreachableCidrBlock unreachableCidrBlock or {@code null} for none
   */
  public PrivateServiceConnectConfig setUnreachableCidrBlock(java.lang.String unreachableCidrBlock) {
    this.unreachableCidrBlock = unreachableCidrBlock;
    return this;
  }

  @Override
  public PrivateServiceConnectConfig set(String fieldName, Object value) {
    return (PrivateServiceConnectConfig) super.set(fieldName, value);
  }

  @Override
  public PrivateServiceConnectConfig clone() {
    return (PrivateServiceConnectConfig) super.clone();
  }

}
