/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager.model;

/**
 * Represents a Google Tag Manager Variable.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Tag Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Variable extends com.google.api.client.json.GenericJson {

  /**
   * GTM Account ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accountId;

  /**
   * GTM Container ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerId;

  /**
   * For mobile containers only: A list of trigger IDs for disabling conditional variables; the
   * variable is enabled if one of the enabling trigger is true while all the disabling trigger are
   * false. Treated as an unordered set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> disablingTriggerId;

  /**
   * For mobile containers only: A list of trigger IDs for enabling conditional variables; the
   * variable is enabled if one of the enabling triggers is true while all the disabling triggers
   * are false. Treated as an unordered set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> enablingTriggerId;

  /**
   * The fingerprint of the GTM Variable as computed at storage time. This value is recomputed
   * whenever the variable is modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fingerprint;

  /**
   * Variable display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * User notes on how to apply this variable in the container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notes;

  /**
   * The variable's parameters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Parameter> parameter;

  static {
    // hack to force ProGuard to consider Parameter used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Parameter.class);
  }

  /**
   * Parent folder id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parentFolderId;

  /**
   * GTM Variable's API relative path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * The end timestamp in milliseconds to schedule a variable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long scheduleEndMs;

  /**
   * The start timestamp in milliseconds to schedule a variable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long scheduleStartMs;

  /**
   * Auto generated link to the tag manager UI
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tagManagerUrl;

  /**
   * GTM Variable Type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The Variable ID uniquely identifies the GTM Variable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String variableId;

  /**
   * GTM Workspace ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workspaceId;

  /**
   * GTM Account ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccountId() {
    return accountId;
  }

  /**
   * GTM Account ID.
   * @param accountId accountId or {@code null} for none
   */
  public Variable setAccountId(java.lang.String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * GTM Container ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerId() {
    return containerId;
  }

  /**
   * GTM Container ID.
   * @param containerId containerId or {@code null} for none
   */
  public Variable setContainerId(java.lang.String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * For mobile containers only: A list of trigger IDs for disabling conditional variables; the
   * variable is enabled if one of the enabling trigger is true while all the disabling trigger are
   * false. Treated as an unordered set.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDisablingTriggerId() {
    return disablingTriggerId;
  }

  /**
   * For mobile containers only: A list of trigger IDs for disabling conditional variables; the
   * variable is enabled if one of the enabling trigger is true while all the disabling trigger are
   * false. Treated as an unordered set.
   * @param disablingTriggerId disablingTriggerId or {@code null} for none
   */
  public Variable setDisablingTriggerId(java.util.List<java.lang.String> disablingTriggerId) {
    this.disablingTriggerId = disablingTriggerId;
    return this;
  }

  /**
   * For mobile containers only: A list of trigger IDs for enabling conditional variables; the
   * variable is enabled if one of the enabling triggers is true while all the disabling triggers
   * are false. Treated as an unordered set.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEnablingTriggerId() {
    return enablingTriggerId;
  }

  /**
   * For mobile containers only: A list of trigger IDs for enabling conditional variables; the
   * variable is enabled if one of the enabling triggers is true while all the disabling triggers
   * are false. Treated as an unordered set.
   * @param enablingTriggerId enablingTriggerId or {@code null} for none
   */
  public Variable setEnablingTriggerId(java.util.List<java.lang.String> enablingTriggerId) {
    this.enablingTriggerId = enablingTriggerId;
    return this;
  }

  /**
   * The fingerprint of the GTM Variable as computed at storage time. This value is recomputed
   * whenever the variable is modified.
   * @return value or {@code null} for none
   */
  public java.lang.String getFingerprint() {
    return fingerprint;
  }

  /**
   * The fingerprint of the GTM Variable as computed at storage time. This value is recomputed
   * whenever the variable is modified.
   * @param fingerprint fingerprint or {@code null} for none
   */
  public Variable setFingerprint(java.lang.String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

  /**
   * Variable display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Variable display name.
   * @param name name or {@code null} for none
   */
  public Variable setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * User notes on how to apply this variable in the container.
   * @return value or {@code null} for none
   */
  public java.lang.String getNotes() {
    return notes;
  }

  /**
   * User notes on how to apply this variable in the container.
   * @param notes notes or {@code null} for none
   */
  public Variable setNotes(java.lang.String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * The variable's parameters.
   * @return value or {@code null} for none
   */
  public java.util.List<Parameter> getParameter() {
    return parameter;
  }

  /**
   * The variable's parameters.
   * @param parameter parameter or {@code null} for none
   */
  public Variable setParameter(java.util.List<Parameter> parameter) {
    this.parameter = parameter;
    return this;
  }

  /**
   * Parent folder id.
   * @return value or {@code null} for none
   */
  public java.lang.String getParentFolderId() {
    return parentFolderId;
  }

  /**
   * Parent folder id.
   * @param parentFolderId parentFolderId or {@code null} for none
   */
  public Variable setParentFolderId(java.lang.String parentFolderId) {
    this.parentFolderId = parentFolderId;
    return this;
  }

  /**
   * GTM Variable's API relative path.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * GTM Variable's API relative path.
   * @param path path or {@code null} for none
   */
  public Variable setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * The end timestamp in milliseconds to schedule a variable.
   * @return value or {@code null} for none
   */
  public java.lang.Long getScheduleEndMs() {
    return scheduleEndMs;
  }

  /**
   * The end timestamp in milliseconds to schedule a variable.
   * @param scheduleEndMs scheduleEndMs or {@code null} for none
   */
  public Variable setScheduleEndMs(java.lang.Long scheduleEndMs) {
    this.scheduleEndMs = scheduleEndMs;
    return this;
  }

  /**
   * The start timestamp in milliseconds to schedule a variable.
   * @return value or {@code null} for none
   */
  public java.lang.Long getScheduleStartMs() {
    return scheduleStartMs;
  }

  /**
   * The start timestamp in milliseconds to schedule a variable.
   * @param scheduleStartMs scheduleStartMs or {@code null} for none
   */
  public Variable setScheduleStartMs(java.lang.Long scheduleStartMs) {
    this.scheduleStartMs = scheduleStartMs;
    return this;
  }

  /**
   * Auto generated link to the tag manager UI
   * @return value or {@code null} for none
   */
  public java.lang.String getTagManagerUrl() {
    return tagManagerUrl;
  }

  /**
   * Auto generated link to the tag manager UI
   * @param tagManagerUrl tagManagerUrl or {@code null} for none
   */
  public Variable setTagManagerUrl(java.lang.String tagManagerUrl) {
    this.tagManagerUrl = tagManagerUrl;
    return this;
  }

  /**
   * GTM Variable Type.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * GTM Variable Type.
   * @param type type or {@code null} for none
   */
  public Variable setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * The Variable ID uniquely identifies the GTM Variable.
   * @return value or {@code null} for none
   */
  public java.lang.String getVariableId() {
    return variableId;
  }

  /**
   * The Variable ID uniquely identifies the GTM Variable.
   * @param variableId variableId or {@code null} for none
   */
  public Variable setVariableId(java.lang.String variableId) {
    this.variableId = variableId;
    return this;
  }

  /**
   * GTM Workspace ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkspaceId() {
    return workspaceId;
  }

  /**
   * GTM Workspace ID.
   * @param workspaceId workspaceId or {@code null} for none
   */
  public Variable setWorkspaceId(java.lang.String workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  @Override
  public Variable set(String fieldName, Object value) {
    return (Variable) super.set(fieldName, value);
  }

  @Override
  public Variable clone() {
    return (Variable) super.clone();
  }

}
