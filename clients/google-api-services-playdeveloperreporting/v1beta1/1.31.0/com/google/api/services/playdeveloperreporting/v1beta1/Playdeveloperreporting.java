/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.playdeveloperreporting.v1beta1;

/**
 * Service definition for Playdeveloperreporting (v1beta1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/play/developer/reporting" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link PlaydeveloperreportingRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Playdeveloperreporting extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the Google Play Developer Reporting API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://playdeveloperreporting.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://playdeveloperreporting.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Playdeveloperreporting(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Playdeveloperreporting(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Anomalies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
   *   {@code Playdeveloperreporting.Anomalies.List request = playdeveloperreporting.anomalies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Anomalies anomalies() {
    return new Anomalies();
  }

  /**
   * The "anomalies" collection of methods.
   */
  public class Anomalies {

    /**
     * Lists anomalies in any of the datasets.
     *
     * Create a request for the method "anomalies.list".
     *
     * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Parent app for which anomalies were detected. Format: apps/{app}
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1ListAnomaliesResponse> {

      private static final String REST_PATH = "v1beta1/{+parent}/anomalies";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^apps/[^/]+$");

      /**
       * Lists anomalies in any of the datasets.
       *
       * Create a request for the method "anomalies.list".
       *
       * This request holds the parameters needed by the the playdeveloperreporting server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Parent app for which anomalies were detected. Format: apps/{app}
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(Playdeveloperreporting.this, "GET", REST_PATH, null, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1ListAnomaliesResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^apps/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Parent app for which anomalies were detected. Format: apps/{app} */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Parent app for which anomalies were detected. Format: apps/{app}
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. Parent app for which anomalies were detected. Format: apps/{app} */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^apps/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /**
       * Filtering criteria for anomalies. For basic filter guidance, please check:
       * https://google.aip.dev/160. **Supported functions:** * `activeBetween(startTime, endTime)`:
       * If specified, only list anomalies that were active in between `startTime` (inclusive) and
       * `endTime` (exclusive). Both parameters are expected to conform to an RFC-3339 formatted
       * string (e.g. `2012-04-21T11:30:00-04:00`). UTC offsets are supported. Both `startTime` and
       * `endTime` accept the special value `UNBOUNDED`, to signify intervals with no lower or upper
       * bound, respectively. Examples: * `activeBetween("2021-04-21T11:30:00Z",
       * "2021-07-21T00:00:00Z")` * `activeBetween(UNBOUNDED, "2021-11-21T00:00:00-04:00")` *
       * `activeBetween("2021-07-21T00:00:00-04:00", UNBOUNDED)`
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Filtering criteria for anomalies. For basic filter guidance, please check:
     https://google.aip.dev/160. **Supported functions:** * `activeBetween(startTime, endTime)`: If
     specified, only list anomalies that were active in between `startTime` (inclusive) and `endTime`
     (exclusive). Both parameters are expected to conform to an RFC-3339 formatted string (e.g.
     `2012-04-21T11:30:00-04:00`). UTC offsets are supported. Both `startTime` and `endTime` accept the
     special value `UNBOUNDED`, to signify intervals with no lower or upper bound, respectively.
     Examples: * `activeBetween("2021-04-21T11:30:00Z", "2021-07-21T00:00:00Z")` *
     `activeBetween(UNBOUNDED, "2021-11-21T00:00:00-04:00")` *
     `activeBetween("2021-07-21T00:00:00-04:00", UNBOUNDED)`
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Filtering criteria for anomalies. For basic filter guidance, please check:
       * https://google.aip.dev/160. **Supported functions:** * `activeBetween(startTime, endTime)`:
       * If specified, only list anomalies that were active in between `startTime` (inclusive) and
       * `endTime` (exclusive). Both parameters are expected to conform to an RFC-3339 formatted
       * string (e.g. `2012-04-21T11:30:00-04:00`). UTC offsets are supported. Both `startTime` and
       * `endTime` accept the special value `UNBOUNDED`, to signify intervals with no lower or upper
       * bound, respectively. Examples: * `activeBetween("2021-04-21T11:30:00Z",
       * "2021-07-21T00:00:00Z")` * `activeBetween(UNBOUNDED, "2021-11-21T00:00:00-04:00")` *
       * `activeBetween("2021-07-21T00:00:00-04:00", UNBOUNDED)`
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Maximum size of the returned data. If unspecified, at most 10 anomalies will be returned.
       * The maximum value is 100; values above 100 will be coerced to 100.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Maximum size of the returned data. If unspecified, at most 10 anomalies will be returned. The
     maximum value is 100; values above 100 will be coerced to 100.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Maximum size of the returned data. If unspecified, at most 10 anomalies will be returned.
       * The maximum value is 100; values above 100 will be coerced to 100.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListErrorReports` call. Provide this to retrieve
       * the subsequent page. When paginating, all other parameters provided to `ListErrorReports`
       * must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListErrorReports` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListErrorReports` must match
     the call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListErrorReports` call. Provide this to retrieve
       * the subsequent page. When paginating, all other parameters provided to `ListErrorReports`
       * must match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Vitals collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
   *   {@code Playdeveloperreporting.Vitals.List request = playdeveloperreporting.vitals().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Vitals vitals() {
    return new Vitals();
  }

  /**
   * The "vitals" collection of methods.
   */
  public class Vitals {

    /**
     * An accessor for creating requests from the Anrrate collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
     *   {@code Playdeveloperreporting.Anrrate.List request = playdeveloperreporting.anrrate().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Anrrate anrrate() {
      return new Anrrate();
    }

    /**
     * The "anrrate" collection of methods.
     */
    public class Anrrate {

      /**
       * Describes the properties of the metric set.
       *
       * Create a request for the method "anrrate.get".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/anrRateMetricSet
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1AnrRateMetricSet> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/anrRateMetricSet$");

        /**
         * Describes the properties of the metric set.
         *
         * Create a request for the method "anrrate.get".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/anrRateMetricSet
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Playdeveloperreporting.this, "GET", REST_PATH, null, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1AnrRateMetricSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/anrRateMetricSet$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/anrRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Queries the metrics in the metric set.
       *
       * Create a request for the method "anrrate.query".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/anrRateMetricSet
       * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest}
       * @return the request
       */
      public Query query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest content) throws java.io.IOException {
        Query result = new Query(name, content);
        initialize(result);
        return result;
      }

      public class Query extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetResponse> {

        private static final String REST_PATH = "v1beta1/{+name}:query";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/anrRateMetricSet$");

        /**
         * Queries the metrics in the metric set.
         *
         * Create a request for the method "anrrate.query".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Query#execute()} method to invoke the remote
         * operation. <p> {@link
         * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/anrRateMetricSet
         * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest}
         * @since 1.13
         */
        protected Query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest content) {
          super(Playdeveloperreporting.this, "POST", REST_PATH, content, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/anrRateMetricSet$");
          }
        }

        @Override
        public Query set$Xgafv(java.lang.String $Xgafv) {
          return (Query) super.set$Xgafv($Xgafv);
        }

        @Override
        public Query setAccessToken(java.lang.String accessToken) {
          return (Query) super.setAccessToken(accessToken);
        }

        @Override
        public Query setAlt(java.lang.String alt) {
          return (Query) super.setAlt(alt);
        }

        @Override
        public Query setCallback(java.lang.String callback) {
          return (Query) super.setCallback(callback);
        }

        @Override
        public Query setFields(java.lang.String fields) {
          return (Query) super.setFields(fields);
        }

        @Override
        public Query setKey(java.lang.String key) {
          return (Query) super.setKey(key);
        }

        @Override
        public Query setOauthToken(java.lang.String oauthToken) {
          return (Query) super.setOauthToken(oauthToken);
        }

        @Override
        public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Query) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Query setQuotaUser(java.lang.String quotaUser) {
          return (Query) super.setQuotaUser(quotaUser);
        }

        @Override
        public Query setUploadType(java.lang.String uploadType) {
          return (Query) super.setUploadType(uploadType);
        }

        @Override
        public Query setUploadProtocol(java.lang.String uploadProtocol) {
          return (Query) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/anrRateMetricSet */
        public Query setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/anrRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Query set(String parameterName, Object value) {
          return (Query) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Crashrate collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
     *   {@code Playdeveloperreporting.Crashrate.List request = playdeveloperreporting.crashrate().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Crashrate crashrate() {
      return new Crashrate();
    }

    /**
     * The "crashrate" collection of methods.
     */
    public class Crashrate {

      /**
       * Describes the properties of the metric set.
       *
       * Create a request for the method "crashrate.get".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/crashRateMetricSet
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1CrashRateMetricSet> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/crashRateMetricSet$");

        /**
         * Describes the properties of the metric set.
         *
         * Create a request for the method "crashrate.get".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/crashRateMetricSet
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Playdeveloperreporting.this, "GET", REST_PATH, null, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1CrashRateMetricSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/crashRateMetricSet$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/crashRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Queries the metrics in the metric set.
       *
       * Create a request for the method "crashrate.query".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/crashRateMetricSet
       * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest}
       * @return the request
       */
      public Query query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest content) throws java.io.IOException {
        Query result = new Query(name, content);
        initialize(result);
        return result;
      }

      public class Query extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetResponse> {

        private static final String REST_PATH = "v1beta1/{+name}:query";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/crashRateMetricSet$");

        /**
         * Queries the metrics in the metric set.
         *
         * Create a request for the method "crashrate.query".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Query#execute()} method to invoke the remote
         * operation. <p> {@link
         * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/crashRateMetricSet
         * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest}
         * @since 1.13
         */
        protected Query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest content) {
          super(Playdeveloperreporting.this, "POST", REST_PATH, content, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/crashRateMetricSet$");
          }
        }

        @Override
        public Query set$Xgafv(java.lang.String $Xgafv) {
          return (Query) super.set$Xgafv($Xgafv);
        }

        @Override
        public Query setAccessToken(java.lang.String accessToken) {
          return (Query) super.setAccessToken(accessToken);
        }

        @Override
        public Query setAlt(java.lang.String alt) {
          return (Query) super.setAlt(alt);
        }

        @Override
        public Query setCallback(java.lang.String callback) {
          return (Query) super.setCallback(callback);
        }

        @Override
        public Query setFields(java.lang.String fields) {
          return (Query) super.setFields(fields);
        }

        @Override
        public Query setKey(java.lang.String key) {
          return (Query) super.setKey(key);
        }

        @Override
        public Query setOauthToken(java.lang.String oauthToken) {
          return (Query) super.setOauthToken(oauthToken);
        }

        @Override
        public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Query) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Query setQuotaUser(java.lang.String quotaUser) {
          return (Query) super.setQuotaUser(quotaUser);
        }

        @Override
        public Query setUploadType(java.lang.String uploadType) {
          return (Query) super.setUploadType(uploadType);
        }

        @Override
        public Query setUploadProtocol(java.lang.String uploadProtocol) {
          return (Query) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/crashRateMetricSet */
        public Query setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/crashRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Query set(String parameterName, Object value) {
          return (Query) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Excessivewakeuprate collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
     *   {@code Playdeveloperreporting.Excessivewakeuprate.List request = playdeveloperreporting.excessivewakeuprate().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Excessivewakeuprate excessivewakeuprate() {
      return new Excessivewakeuprate();
    }

    /**
     * The "excessivewakeuprate" collection of methods.
     */
    public class Excessivewakeuprate {

      /**
       * Describes the properties of the metric set.
       *
       * Create a request for the method "excessivewakeuprate.get".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1ExcessiveWakeupRateMetricSet> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/excessiveWakeupRateMetricSet$");

        /**
         * Describes the properties of the metric set.
         *
         * Create a request for the method "excessivewakeuprate.get".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Playdeveloperreporting.this, "GET", REST_PATH, null, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1ExcessiveWakeupRateMetricSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/excessiveWakeupRateMetricSet$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/excessiveWakeupRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Queries the metrics in the metric set.
       *
       * Create a request for the method "excessivewakeuprate.query".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
       * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest}
       * @return the request
       */
      public Query query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest content) throws java.io.IOException {
        Query result = new Query(name, content);
        initialize(result);
        return result;
      }

      public class Query extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetResponse> {

        private static final String REST_PATH = "v1beta1/{+name}:query";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/excessiveWakeupRateMetricSet$");

        /**
         * Queries the metrics in the metric set.
         *
         * Create a request for the method "excessivewakeuprate.query".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Query#execute()} method to invoke the remote
         * operation. <p> {@link
         * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
         * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest}
         * @since 1.13
         */
        protected Query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest content) {
          super(Playdeveloperreporting.this, "POST", REST_PATH, content, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/excessiveWakeupRateMetricSet$");
          }
        }

        @Override
        public Query set$Xgafv(java.lang.String $Xgafv) {
          return (Query) super.set$Xgafv($Xgafv);
        }

        @Override
        public Query setAccessToken(java.lang.String accessToken) {
          return (Query) super.setAccessToken(accessToken);
        }

        @Override
        public Query setAlt(java.lang.String alt) {
          return (Query) super.setAlt(alt);
        }

        @Override
        public Query setCallback(java.lang.String callback) {
          return (Query) super.setCallback(callback);
        }

        @Override
        public Query setFields(java.lang.String fields) {
          return (Query) super.setFields(fields);
        }

        @Override
        public Query setKey(java.lang.String key) {
          return (Query) super.setKey(key);
        }

        @Override
        public Query setOauthToken(java.lang.String oauthToken) {
          return (Query) super.setOauthToken(oauthToken);
        }

        @Override
        public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Query) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Query setQuotaUser(java.lang.String quotaUser) {
          return (Query) super.setQuotaUser(quotaUser);
        }

        @Override
        public Query setUploadType(java.lang.String uploadType) {
          return (Query) super.setUploadType(uploadType);
        }

        @Override
        public Query setUploadProtocol(java.lang.String uploadProtocol) {
          return (Query) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet */
        public Query setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/excessiveWakeupRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Query set(String parameterName, Object value) {
          return (Query) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Stuckbackgroundwakelockrate collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Playdeveloperreporting playdeveloperreporting = new Playdeveloperreporting(...);}
     *   {@code Playdeveloperreporting.Stuckbackgroundwakelockrate.List request = playdeveloperreporting.stuckbackgroundwakelockrate().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Stuckbackgroundwakelockrate stuckbackgroundwakelockrate() {
      return new Stuckbackgroundwakelockrate();
    }

    /**
     * The "stuckbackgroundwakelockrate" collection of methods.
     */
    public class Stuckbackgroundwakelockrate {

      /**
       * Describes the properties of the metric set.
       *
       * Create a request for the method "stuckbackgroundwakelockrate.get".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1StuckBackgroundWakelockRateMetricSet> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");

        /**
         * Describes the properties of the metric set.
         *
         * Create a request for the method "stuckbackgroundwakelockrate.get".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Playdeveloperreporting.this, "GET", REST_PATH, null, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1StuckBackgroundWakelockRateMetricSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Queries the metrics in the metric set.
       *
       * Create a request for the method "stuckbackgroundwakelockrate.query".
       *
       * This request holds the parameters needed by the playdeveloperreporting server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
       * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest}
       * @return the request
       */
      public Query query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest content) throws java.io.IOException {
        Query result = new Query(name, content);
        initialize(result);
        return result;
      }

      public class Query extends PlaydeveloperreportingRequest<com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetResponse> {

        private static final String REST_PATH = "v1beta1/{+name}:query";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");

        /**
         * Queries the metrics in the metric set.
         *
         * Create a request for the method "stuckbackgroundwakelockrate.query".
         *
         * This request holds the parameters needed by the the playdeveloperreporting server.  After
         * setting any optional parameters, call the {@link Query#execute()} method to invoke the remote
         * operation. <p> {@link
         * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
         * @param content the {@link com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest}
         * @since 1.13
         */
        protected Query(java.lang.String name, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest content) {
          super(Playdeveloperreporting.this, "POST", REST_PATH, content, com.google.api.services.playdeveloperreporting.v1beta1.model.GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");
          }
        }

        @Override
        public Query set$Xgafv(java.lang.String $Xgafv) {
          return (Query) super.set$Xgafv($Xgafv);
        }

        @Override
        public Query setAccessToken(java.lang.String accessToken) {
          return (Query) super.setAccessToken(accessToken);
        }

        @Override
        public Query setAlt(java.lang.String alt) {
          return (Query) super.setAlt(alt);
        }

        @Override
        public Query setCallback(java.lang.String callback) {
          return (Query) super.setCallback(callback);
        }

        @Override
        public Query setFields(java.lang.String fields) {
          return (Query) super.setFields(fields);
        }

        @Override
        public Query setKey(java.lang.String key) {
          return (Query) super.setKey(key);
        }

        @Override
        public Query setOauthToken(java.lang.String oauthToken) {
          return (Query) super.setOauthToken(oauthToken);
        }

        @Override
        public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Query) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Query setQuotaUser(java.lang.String quotaUser) {
          return (Query) super.setQuotaUser(quotaUser);
        }

        @Override
        public Query setUploadType(java.lang.String uploadType) {
          return (Query) super.setUploadType(uploadType);
        }

        @Override
        public Query setUploadProtocol(java.lang.String uploadProtocol) {
          return (Query) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet */
        public Query setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Query set(String parameterName, Object value) {
          return (Query) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Playdeveloperreporting}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Playdeveloperreporting}. */
    @Override
    public Playdeveloperreporting build() {
      return new Playdeveloperreporting(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link PlaydeveloperreportingRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setPlaydeveloperreportingRequestInitializer(
        PlaydeveloperreportingRequestInitializer playdeveloperreportingRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(playdeveloperreportingRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
