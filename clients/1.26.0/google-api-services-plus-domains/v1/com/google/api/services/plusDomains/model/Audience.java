/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.plusDomains.model;

/**
 * Model definition for Audience.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google+ Domains API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Audience extends com.google.api.client.json.GenericJson {

  /**
   * ETag of this response for caching purposes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * The access control list entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PlusDomainsAclentryResource item;

  /**
   * Identifies this resource as an audience. Value: "plus#audience".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The number of people in this circle. This only applies if entity_type is CIRCLE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long memberCount;

  /**
   * The circle members' visibility as chosen by the owner of the circle. This only applies for
   * items with "item.type" equals "circle". Possible values are: - "public" - Members are visible
   * to the public.  - "limited" - Members are visible to a limited audience.  - "private" - Members
   * are visible to the owner only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String visibility;

  /**
   * ETag of this response for caching purposes.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * ETag of this response for caching purposes.
   * @param etag etag or {@code null} for none
   */
  public Audience setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * The access control list entry.
   * @return value or {@code null} for none
   */
  public PlusDomainsAclentryResource getItem() {
    return item;
  }

  /**
   * The access control list entry.
   * @param item item or {@code null} for none
   */
  public Audience setItem(PlusDomainsAclentryResource item) {
    this.item = item;
    return this;
  }

  /**
   * Identifies this resource as an audience. Value: "plus#audience".
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Identifies this resource as an audience. Value: "plus#audience".
   * @param kind kind or {@code null} for none
   */
  public Audience setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The number of people in this circle. This only applies if entity_type is CIRCLE.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMemberCount() {
    return memberCount;
  }

  /**
   * The number of people in this circle. This only applies if entity_type is CIRCLE.
   * @param memberCount memberCount or {@code null} for none
   */
  public Audience setMemberCount(java.lang.Long memberCount) {
    this.memberCount = memberCount;
    return this;
  }

  /**
   * The circle members' visibility as chosen by the owner of the circle. This only applies for
   * items with "item.type" equals "circle". Possible values are: - "public" - Members are visible
   * to the public.  - "limited" - Members are visible to a limited audience.  - "private" - Members
   * are visible to the owner only.
   * @return value or {@code null} for none
   */
  public java.lang.String getVisibility() {
    return visibility;
  }

  /**
   * The circle members' visibility as chosen by the owner of the circle. This only applies for
   * items with "item.type" equals "circle". Possible values are: - "public" - Members are visible
   * to the public.  - "limited" - Members are visible to a limited audience.  - "private" - Members
   * are visible to the owner only.
   * @param visibility visibility or {@code null} for none
   */
  public Audience setVisibility(java.lang.String visibility) {
    this.visibility = visibility;
    return this;
  }

  @Override
  public Audience set(String fieldName, Object value) {
    return (Audience) super.set(fieldName, value);
  }

  @Override
  public Audience clone() {
    return (Audience) super.clone();
  }

}
