/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkehub.v1alpha.model;

/**
 * Feature represents the settings and status of any Hub Feature.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the GKE Hub. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Feature extends com.google.api.client.json.GenericJson {

  /**
   * Output only. When the Feature resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. When the Feature resource was deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * GCP labels for this Feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. Membership-specific configuration for this Feature. If this Feature does not support
   * any per-Membership configuration, this field may be unused. The keys indicate which Membership
   * the configuration is for, in the form: projects/{p}/locations/{l}/memberships/{m} Where {p} is
   * the project number, {l} is a valid location and {m} is a valid Membership in this project at
   * that location. {p} MUST match the Feature's project number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, MembershipFeatureSpec> membershipSpecs;

  /**
   * Output only. Membership-specific Feature status. If this Feature does report any per-Membership
   * status, this field may be unused. The keys indicate which Membership the state is for, in the
   * form: projects/{p}/locations/{l}/memberships/{m} Where {p} is the project number, {l} is a
   * valid location and {m} is a valid Membership in this project at that location. {p} MUST match
   * the Feature's project number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, MembershipFeatureState> membershipStates;

  /**
   * Output only. The full, unique name of this Feature resource in the format
   * `projects/locations/global/features`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. State of the Feature resource itself.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FeatureResourceState resourceState;

  /**
   * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide
   * configuration, this field may be unused.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CommonFeatureSpec spec;

  /**
   * Output only. The Hub-wide Feature state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CommonFeatureState state;

  /**
   * Output only. When the Feature resource was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. When the Feature resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. When the Feature resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public Feature setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. When the Feature resource was deleted.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. When the Feature resource was deleted.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public Feature setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * GCP labels for this Feature.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * GCP labels for this Feature.
   * @param labels labels or {@code null} for none
   */
  public Feature setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. Membership-specific configuration for this Feature. If this Feature does not support
   * any per-Membership configuration, this field may be unused. The keys indicate which Membership
   * the configuration is for, in the form: projects/{p}/locations/{l}/memberships/{m} Where {p} is
   * the project number, {l} is a valid location and {m} is a valid Membership in this project at
   * that location. {p} MUST match the Feature's project number.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, MembershipFeatureSpec> getMembershipSpecs() {
    return membershipSpecs;
  }

  /**
   * Optional. Membership-specific configuration for this Feature. If this Feature does not support
   * any per-Membership configuration, this field may be unused. The keys indicate which Membership
   * the configuration is for, in the form: projects/{p}/locations/{l}/memberships/{m} Where {p} is
   * the project number, {l} is a valid location and {m} is a valid Membership in this project at
   * that location. {p} MUST match the Feature's project number.
   * @param membershipSpecs membershipSpecs or {@code null} for none
   */
  public Feature setMembershipSpecs(java.util.Map<String, MembershipFeatureSpec> membershipSpecs) {
    this.membershipSpecs = membershipSpecs;
    return this;
  }

  /**
   * Output only. Membership-specific Feature status. If this Feature does report any per-Membership
   * status, this field may be unused. The keys indicate which Membership the state is for, in the
   * form: projects/{p}/locations/{l}/memberships/{m} Where {p} is the project number, {l} is a
   * valid location and {m} is a valid Membership in this project at that location. {p} MUST match
   * the Feature's project number.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, MembershipFeatureState> getMembershipStates() {
    return membershipStates;
  }

  /**
   * Output only. Membership-specific Feature status. If this Feature does report any per-Membership
   * status, this field may be unused. The keys indicate which Membership the state is for, in the
   * form: projects/{p}/locations/{l}/memberships/{m} Where {p} is the project number, {l} is a
   * valid location and {m} is a valid Membership in this project at that location. {p} MUST match
   * the Feature's project number.
   * @param membershipStates membershipStates or {@code null} for none
   */
  public Feature setMembershipStates(java.util.Map<String, MembershipFeatureState> membershipStates) {
    this.membershipStates = membershipStates;
    return this;
  }

  /**
   * Output only. The full, unique name of this Feature resource in the format
   * `projects/locations/global/features`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full, unique name of this Feature resource in the format
   * `projects/locations/global/features`.
   * @param name name or {@code null} for none
   */
  public Feature setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. State of the Feature resource itself.
   * @return value or {@code null} for none
   */
  public FeatureResourceState getResourceState() {
    return resourceState;
  }

  /**
   * Output only. State of the Feature resource itself.
   * @param resourceState resourceState or {@code null} for none
   */
  public Feature setResourceState(FeatureResourceState resourceState) {
    this.resourceState = resourceState;
    return this;
  }

  /**
   * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide
   * configuration, this field may be unused.
   * @return value or {@code null} for none
   */
  public CommonFeatureSpec getSpec() {
    return spec;
  }

  /**
   * Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide
   * configuration, this field may be unused.
   * @param spec spec or {@code null} for none
   */
  public Feature setSpec(CommonFeatureSpec spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Output only. The Hub-wide Feature state.
   * @return value or {@code null} for none
   */
  public CommonFeatureState getState() {
    return state;
  }

  /**
   * Output only. The Hub-wide Feature state.
   * @param state state or {@code null} for none
   */
  public Feature setState(CommonFeatureState state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. When the Feature resource was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. When the Feature resource was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Feature setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Feature set(String fieldName, Object value) {
    return (Feature) super.set(fieldName, value);
  }

  @Override
  public Feature clone() {
    return (Feature) super.clone();
  }

}
