/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vault.v1.model;

/**
 * Mail specific count metrics.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the G Suite Vault API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MailCountResult extends com.google.api.client.json.GenericJson {

  /**
   * Error occurred when querying these accounts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AccountCountError> accountCountErrors;

  static {
    // hack to force ProGuard to consider AccountCountError used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AccountCountError.class);
  }

  /**
   * Subtotal count per matching account that have more than zero messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AccountCount> accountCounts;

  static {
    // hack to force ProGuard to consider AccountCount used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AccountCount.class);
  }

  /**
   * Total number of accounts that can be queried and have more than zero messages.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long matchingAccountsCount;

  /**
   * When data scope is HELD_DATA in the request Query, these accounts in the request are not
   * queried because they are not on hold. For other data scope, this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> nonQueryableAccounts;

  /**
   * Total number of accounts involved in this count operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long queriedAccountsCount;

  /**
   * Error occurred when querying these accounts.
   * @return value or {@code null} for none
   */
  public java.util.List<AccountCountError> getAccountCountErrors() {
    return accountCountErrors;
  }

  /**
   * Error occurred when querying these accounts.
   * @param accountCountErrors accountCountErrors or {@code null} for none
   */
  public MailCountResult setAccountCountErrors(java.util.List<AccountCountError> accountCountErrors) {
    this.accountCountErrors = accountCountErrors;
    return this;
  }

  /**
   * Subtotal count per matching account that have more than zero messages.
   * @return value or {@code null} for none
   */
  public java.util.List<AccountCount> getAccountCounts() {
    return accountCounts;
  }

  /**
   * Subtotal count per matching account that have more than zero messages.
   * @param accountCounts accountCounts or {@code null} for none
   */
  public MailCountResult setAccountCounts(java.util.List<AccountCount> accountCounts) {
    this.accountCounts = accountCounts;
    return this;
  }

  /**
   * Total number of accounts that can be queried and have more than zero messages.
   * @return value or {@code null} for none
   */
  public java.lang.Long getMatchingAccountsCount() {
    return matchingAccountsCount;
  }

  /**
   * Total number of accounts that can be queried and have more than zero messages.
   * @param matchingAccountsCount matchingAccountsCount or {@code null} for none
   */
  public MailCountResult setMatchingAccountsCount(java.lang.Long matchingAccountsCount) {
    this.matchingAccountsCount = matchingAccountsCount;
    return this;
  }

  /**
   * When data scope is HELD_DATA in the request Query, these accounts in the request are not
   * queried because they are not on hold. For other data scope, this field is not set.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNonQueryableAccounts() {
    return nonQueryableAccounts;
  }

  /**
   * When data scope is HELD_DATA in the request Query, these accounts in the request are not
   * queried because they are not on hold. For other data scope, this field is not set.
   * @param nonQueryableAccounts nonQueryableAccounts or {@code null} for none
   */
  public MailCountResult setNonQueryableAccounts(java.util.List<java.lang.String> nonQueryableAccounts) {
    this.nonQueryableAccounts = nonQueryableAccounts;
    return this;
  }

  /**
   * Total number of accounts involved in this count operation.
   * @return value or {@code null} for none
   */
  public java.lang.Long getQueriedAccountsCount() {
    return queriedAccountsCount;
  }

  /**
   * Total number of accounts involved in this count operation.
   * @param queriedAccountsCount queriedAccountsCount or {@code null} for none
   */
  public MailCountResult setQueriedAccountsCount(java.lang.Long queriedAccountsCount) {
    this.queriedAccountsCount = queriedAccountsCount;
    return this;
  }

  @Override
  public MailCountResult set(String fieldName, Object value) {
    return (MailCountResult) super.set(fieldName, value);
  }

  @Override
  public MailCountResult clone() {
    return (MailCountResult) super.clone();
  }

}
