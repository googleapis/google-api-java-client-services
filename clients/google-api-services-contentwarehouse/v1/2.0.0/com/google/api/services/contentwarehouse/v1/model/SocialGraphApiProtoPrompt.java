/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialGraphApiProtoPrompt extends com.google.api.client.json.GenericJson {

  /**
   * Indicates if this prompt is active regardless of its reccurrence date, dismiss date or
   * notification triggers. This is required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String activeState;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphApiProtoPromptContent content;

  /**
   * The most recent day the user dismissed this prompt. Empty means the user has never dismissed
   * the prompt.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate lastDismissDate;

  /**
   * If this is empty, only the "Prompt Spark" will be displayed (in the time-range read from per
   * type config), no push notifications will be shown. If push notification are configured with
   * this field, the "Prompt Spark" time-range will be determined by earliest notification value
   * here.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SocialGraphApiProtoNotificationTrigger> notificationTriggers;

  static {
    // hack to force ProGuard to consider SocialGraphApiProtoNotificationTrigger used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(SocialGraphApiProtoNotificationTrigger.class);
  }

  /**
   * Read-only. This is derived from the containing field value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String purpose;

  /**
   * How frequently will this prompt occur and how many times.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphApiProtoRecurrence recurrence;

  /**
   * Prompt ID is generated by server on initial mutate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uniquePromptId;

  /**
   * Indicates if this prompt is active regardless of its reccurrence date, dismiss date or
   * notification triggers. This is required.
   * @return value or {@code null} for none
   */
  public java.lang.String getActiveState() {
    return activeState;
  }

  /**
   * Indicates if this prompt is active regardless of its reccurrence date, dismiss date or
   * notification triggers. This is required.
   * @param activeState activeState or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setActiveState(java.lang.String activeState) {
    this.activeState = activeState;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public SocialGraphApiProtoPromptContent getContent() {
    return content;
  }

  /**
   * @param content content or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setContent(SocialGraphApiProtoPromptContent content) {
    this.content = content;
    return this;
  }

  /**
   * The most recent day the user dismissed this prompt. Empty means the user has never dismissed
   * the prompt.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getLastDismissDate() {
    return lastDismissDate;
  }

  /**
   * The most recent day the user dismissed this prompt. Empty means the user has never dismissed
   * the prompt.
   * @param lastDismissDate lastDismissDate or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setLastDismissDate(GoogleTypeDate lastDismissDate) {
    this.lastDismissDate = lastDismissDate;
    return this;
  }

  /**
   * If this is empty, only the "Prompt Spark" will be displayed (in the time-range read from per
   * type config), no push notifications will be shown. If push notification are configured with
   * this field, the "Prompt Spark" time-range will be determined by earliest notification value
   * here.
   * @return value or {@code null} for none
   */
  public java.util.List<SocialGraphApiProtoNotificationTrigger> getNotificationTriggers() {
    return notificationTriggers;
  }

  /**
   * If this is empty, only the "Prompt Spark" will be displayed (in the time-range read from per
   * type config), no push notifications will be shown. If push notification are configured with
   * this field, the "Prompt Spark" time-range will be determined by earliest notification value
   * here.
   * @param notificationTriggers notificationTriggers or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setNotificationTriggers(java.util.List<SocialGraphApiProtoNotificationTrigger> notificationTriggers) {
    this.notificationTriggers = notificationTriggers;
    return this;
  }

  /**
   * Read-only. This is derived from the containing field value.
   * @return value or {@code null} for none
   */
  public java.lang.String getPurpose() {
    return purpose;
  }

  /**
   * Read-only. This is derived from the containing field value.
   * @param purpose purpose or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setPurpose(java.lang.String purpose) {
    this.purpose = purpose;
    return this;
  }

  /**
   * How frequently will this prompt occur and how many times.
   * @return value or {@code null} for none
   */
  public SocialGraphApiProtoRecurrence getRecurrence() {
    return recurrence;
  }

  /**
   * How frequently will this prompt occur and how many times.
   * @param recurrence recurrence or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setRecurrence(SocialGraphApiProtoRecurrence recurrence) {
    this.recurrence = recurrence;
    return this;
  }

  /**
   * Prompt ID is generated by server on initial mutate.
   * @return value or {@code null} for none
   */
  public java.lang.String getUniquePromptId() {
    return uniquePromptId;
  }

  /**
   * Prompt ID is generated by server on initial mutate.
   * @param uniquePromptId uniquePromptId or {@code null} for none
   */
  public SocialGraphApiProtoPrompt setUniquePromptId(java.lang.String uniquePromptId) {
    this.uniquePromptId = uniquePromptId;
    return this;
  }

  @Override
  public SocialGraphApiProtoPrompt set(String fieldName, Object value) {
    return (SocialGraphApiProtoPrompt) super.set(fieldName, value);
  }

  @Override
  public SocialGraphApiProtoPrompt clone() {
    return (SocialGraphApiProtoPrompt) super.clone();
  }

}
