/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Sampling data for battery. * This field is telemetry information and this will change over time
 * as the device is utilized. * Data for this field is controlled via policy:
 * [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) *
 * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy
 * Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will
 * be reported when the device is next online: No * Reported for affiliated users only: N/A
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1BatterySampleReport extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Battery charge percentage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer chargeRate;

  /**
   * Output only. Battery current (mA).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long current;

  /**
   * Output only. The battery discharge rate measured in mW. Positive if the battery is being
   * discharged, negative if it's being charged.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer dischargeRate;

  /**
   * Output only. Battery remaining capacity (mAmpere-hours).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long remainingCapacity;

  /**
   * Output only. Timestamp of when the sample was collected on device
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reportTime;

  /**
   * Output only. Battery status read from sysfs. Example: Discharging
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * Output only. Temperature in Celsius degrees.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer temperature;

  /**
   * Output only. Battery voltage (millivolt).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long voltage;

  /**
   * Output only. Battery charge percentage.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getChargeRate() {
    return chargeRate;
  }

  /**
   * Output only. Battery charge percentage.
   * @param chargeRate chargeRate or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setChargeRate(java.lang.Integer chargeRate) {
    this.chargeRate = chargeRate;
    return this;
  }

  /**
   * Output only. Battery current (mA).
   * @return value or {@code null} for none
   */
  public java.lang.Long getCurrent() {
    return current;
  }

  /**
   * Output only. Battery current (mA).
   * @param current current or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setCurrent(java.lang.Long current) {
    this.current = current;
    return this;
  }

  /**
   * Output only. The battery discharge rate measured in mW. Positive if the battery is being
   * discharged, negative if it's being charged.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDischargeRate() {
    return dischargeRate;
  }

  /**
   * Output only. The battery discharge rate measured in mW. Positive if the battery is being
   * discharged, negative if it's being charged.
   * @param dischargeRate dischargeRate or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setDischargeRate(java.lang.Integer dischargeRate) {
    this.dischargeRate = dischargeRate;
    return this;
  }

  /**
   * Output only. Battery remaining capacity (mAmpere-hours).
   * @return value or {@code null} for none
   */
  public java.lang.Long getRemainingCapacity() {
    return remainingCapacity;
  }

  /**
   * Output only. Battery remaining capacity (mAmpere-hours).
   * @param remainingCapacity remainingCapacity or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setRemainingCapacity(java.lang.Long remainingCapacity) {
    this.remainingCapacity = remainingCapacity;
    return this;
  }

  /**
   * Output only. Timestamp of when the sample was collected on device
   * @return value or {@code null} for none
   */
  public String getReportTime() {
    return reportTime;
  }

  /**
   * Output only. Timestamp of when the sample was collected on device
   * @param reportTime reportTime or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setReportTime(String reportTime) {
    this.reportTime = reportTime;
    return this;
  }

  /**
   * Output only. Battery status read from sysfs. Example: Discharging
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Output only. Battery status read from sysfs. Example: Discharging
   * @param status status or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * Output only. Temperature in Celsius degrees.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTemperature() {
    return temperature;
  }

  /**
   * Output only. Temperature in Celsius degrees.
   * @param temperature temperature or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setTemperature(java.lang.Integer temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * Output only. Battery voltage (millivolt).
   * @return value or {@code null} for none
   */
  public java.lang.Long getVoltage() {
    return voltage;
  }

  /**
   * Output only. Battery voltage (millivolt).
   * @param voltage voltage or {@code null} for none
   */
  public GoogleChromeManagementV1BatterySampleReport setVoltage(java.lang.Long voltage) {
    this.voltage = voltage;
    return this;
  }

  @Override
  public GoogleChromeManagementV1BatterySampleReport set(String fieldName, Object value) {
    return (GoogleChromeManagementV1BatterySampleReport) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1BatterySampleReport clone() {
    return (GoogleChromeManagementV1BatterySampleReport) super.clone();
  }

}
