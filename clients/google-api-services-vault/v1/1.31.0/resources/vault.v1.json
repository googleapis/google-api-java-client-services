{
  "canonicalName": "Vault",
  "batchPath": "batch",
  "id": "vault:v1",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Archiving and eDiscovery for G Suite.",
  "baseUrl": "https://vault.googleapis.com/",
  "revision": "20210121",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        }
      }
    }
  },
  "schemas": {
    "TeamDriveInfo": {
      "id": "TeamDriveInfo",
      "description": "Team Drives to search",
      "properties": {
        "teamDriveIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Team Drive IDs, as provided by Drive API."
        }
      },
      "type": "object"
    },
    "VoiceOptions": {
      "id": "VoiceOptions",
      "properties": {
        "coveredData": {
          "description": "Datatypes to search",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ],
            "type": "string",
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          }
        }
      },
      "type": "object",
      "description": "Voice search options"
    },
    "SavedQuery": {
      "description": "Definition of the saved query.",
      "id": "SavedQuery",
      "properties": {
        "matterId": {
          "description": "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
          "type": "string"
        },
        "savedQueryId": {
          "type": "string",
          "description": "A unique identifier for the saved query."
        },
        "displayName": {
          "description": "Name of the saved query.",
          "type": "string"
        },
        "query": {
          "description": "The underlying Query object which contains all the information of the saved query.",
          "$ref": "Query"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The server generated timestamp at which saved query was created."
        }
      },
      "type": "object"
    },
    "AccountCount": {
      "id": "AccountCount",
      "description": "Count number for each account.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "description": "The number of artifacts found for this account.",
          "type": "string"
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      }
    },
    "HeldVoiceQuery": {
      "properties": {
        "coveredData": {
          "type": "array",
          "description": "Data covered by this rule. Should be non-empty. Order does not matter and duplicates will be ignored.",
          "items": {
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ],
            "type": "string"
          }
        }
      },
      "id": "HeldVoiceQuery",
      "description": "Query options for Voice holds.",
      "type": "object"
    },
    "MailCountResult": {
      "type": "object",
      "id": "MailCountResult",
      "properties": {
        "accountCounts": {
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          }
        },
        "queriedAccountsCount": {
          "type": "string",
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64"
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "nonQueryableAccounts": {
          "type": "array",
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "items": {
            "type": "string"
          }
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Mail specific count metrics."
    },
    "Query": {
      "type": "object",
      "description": "A query definition relevant for search & export.",
      "properties": {
        "searchMethod": {
          "description": "The search method to use.",
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string"
        },
        "mailOptions": {
          "description": "For mail search, specify more options in this field.",
          "$ref": "MailOptions"
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)"
        },
        "dataScope": {
          "description": "The data source to search from.",
          "type": "string",
          "enumDescriptions": [
            "No data scope specified.",
            "All available data.",
            "Data on hold.",
            "Data not processed."
          ],
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ]
        },
        "corpus": {
          "description": "The corpus to search.",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string"
        },
        "voiceOptions": {
          "$ref": "VoiceOptions",
          "description": "For voice search, specify more options in this field."
        },
        "teamDriveInfo": {
          "$ref": "TeamDriveInfo",
          "description": "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified."
        },
        "method": {
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string",
          "description": "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only."
        },
        "driveOptions": {
          "$ref": "DriveOptions",
          "description": "For Drive search, specify more options in this field."
        },
        "hangoutsChatOptions": {
          "description": "For hangouts chat search, specify more options in this field. (read-only)",
          "$ref": "HangoutsChatOptions"
        },
        "terms": {
          "type": "string",
          "description": "The corpus-specific search operators used to generate search results."
        },
        "orgUnitInfo": {
          "description": "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified.",
          "$ref": "OrgUnitInfo"
        },
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."
        },
        "sharedDriveInfo": {
          "description": "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified.",
          "$ref": "SharedDriveInfo"
        }
      },
      "id": "Query"
    },
    "HangoutsChatInfo": {
      "properties": {
        "roomId": {
          "description": "A set of rooms to search.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Accounts to search",
      "id": "HangoutsChatInfo",
      "type": "object"
    },
    "Hold": {
      "id": "Hold",
      "type": "object",
      "properties": {
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field.",
          "$ref": "HeldOrgUnit"
        },
        "holdId": {
          "type": "string",
          "description": "The unique immutable ID of the hold. Assigned during creation."
        },
        "corpus": {
          "type": "string",
          "description": "The corpus to be searched.",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last time this hold was modified."
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "query": {
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus type.",
          "$ref": "CorpusQuery"
        },
        "accounts": {
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          }
        }
      },
      "description": "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit."
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest",
      "properties": {},
      "type": "object"
    },
    "AddHeldAccountsResponse": {
      "description": "Response for batch create held accounts.",
      "type": "object",
      "properties": {
        "responses": {
          "description": "The list of responses, in the same order as the batch request.",
          "type": "array",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      },
      "id": "AddHeldAccountsResponse"
    },
    "MailOptions": {
      "type": "object",
      "id": "MailOptions",
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to true to exclude drafts."
        }
      },
      "description": "Mail search advanced options"
    },
    "DriveOptions": {
      "type": "object",
      "id": "DriveOptions",
      "properties": {
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to true to include shared drive."
        },
        "versionDate": {
          "type": "string",
          "format": "google-datetime",
          "description": "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date."
        }
      },
      "description": "Drive search advanced options"
    },
    "AccountCountError": {
      "description": "An error that occurred when querying a specific account",
      "type": "object",
      "properties": {
        "errorType": {
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "type": "string",
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ]
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      },
      "id": "AccountCountError"
    },
    "ExportStats": {
      "id": "ExportStats",
      "type": "object",
      "description": "Stats of an export.",
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "description": "The size of export in bytes.",
          "type": "string"
        },
        "totalArtifactCount": {
          "description": "The number of documents to be exported.",
          "type": "string",
          "format": "int64"
        },
        "exportedArtifactCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of documents already processed by the export."
        }
      }
    },
    "CountArtifactsRequest": {
      "id": "CountArtifactsRequest",
      "type": "object",
      "properties": {
        "query": {
          "description": "The search query.",
          "$ref": "Query"
        },
        "view": {
          "enumDescriptions": [
            "Default. It works the same as TOTAL_COUNT.",
            "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors.",
            "Response includes additional breakdown of account count."
          ],
          "type": "string",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "description": "Specifies the granularity of the count result returned in response."
        }
      },
      "description": "Count artifacts request."
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list.",
          "type": "string"
        },
        "savedQueries": {
          "items": {
            "$ref": "SavedQuery"
          },
          "type": "array",
          "description": "List of output saved queries."
        }
      },
      "description": "Definition of the response for method ListSaveQuery.",
      "id": "ListSavedQueriesResponse"
    },
    "UserInfo": {
      "type": "object",
      "description": "User's information.",
      "id": "UserInfo",
      "properties": {
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The displayed name of the user."
        }
      }
    },
    "Matter": {
      "properties": {
        "state": {
          "description": "The state of the matter.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ]
        },
        "matterId": {
          "description": "The matter ID which is generated by the server. Should be blank when creating a new matter.",
          "type": "string"
        },
        "description": {
          "description": "The description of the matter.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the matter."
        },
        "matterPermissions": {
          "type": "array",
          "items": {
            "$ref": "MatterPermission"
          },
          "description": "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have."
        }
      },
      "type": "object",
      "description": "Represents a matter.",
      "id": "Matter"
    },
    "ListHeldAccountsResponse": {
      "id": "ListHeldAccountsResponse",
      "type": "object",
      "description": "Returns a list of held accounts for a hold.",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "The held accounts on a hold.",
          "type": "array"
        }
      }
    },
    "CountArtifactsResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "format": "int64",
          "description": "Total count of artifacts. For mail and groups, artifacts refers to messages.",
          "type": "string"
        },
        "mailCountResult": {
          "$ref": "MailCountResult",
          "description": "Count metrics of Mail."
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics of Groups."
        }
      },
      "description": "Definition of the response for method CountArtifacts.",
      "id": "CountArtifactsResponse"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "ReopenMatterResponse": {
      "type": "object",
      "id": "ReopenMatterResponse",
      "properties": {
        "matter": {
          "description": "The updated matter, with state OPEN.",
          "$ref": "Matter"
        }
      },
      "description": "Response to a ReopenMatterRequest."
    },
    "AddMatterPermissionsRequest": {
      "properties": {
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."
        },
        "sendEmails": {
          "type": "boolean",
          "description": "True to send notification email to the added account. False to not send notification email."
        },
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The MatterPermission to add."
        }
      },
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
      "id": "AddMatterPermissionsRequest",
      "type": "object"
    },
    "CountArtifactsMetadata": {
      "id": "CountArtifactsMetadata",
      "type": "object",
      "description": "Long running operation metadata for CountArtifacts.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "End time of count operation. Available when operation is done.",
          "type": "string"
        },
        "matterId": {
          "type": "string",
          "description": "The matter ID of the associated matter."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Creation time of count operation."
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        }
      }
    },
    "MatterPermission": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by Admin SDK."
        },
        "role": {
          "type": "string",
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ],
          "description": "The user's role in this matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ]
        }
      },
      "type": "object",
      "description": "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "id": "MatterPermission"
    },
    "HeldDriveQuery": {
      "type": "object",
      "id": "HeldDriveQuery",
      "properties": {
        "includeTeamDriveFiles": {
          "description": "If true, include files in Team Drives in the hold.",
          "type": "boolean"
        },
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in shared drives in the hold."
        }
      },
      "description": "Query options for Drive holds."
    },
    "RemoveMatterPermissionsRequest": {
      "id": "RemoveMatterPermissionsRequest",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Remove an account as a matter collaborator."
    },
    "ListMattersResponse": {
      "type": "object",
      "properties": {
        "matters": {
          "items": {
            "$ref": "Matter"
          },
          "type": "array",
          "description": "List of matters."
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "id": "ListMattersResponse",
      "description": "Provides the list of matters."
    },
    "Export": {
      "description": "An export",
      "properties": {
        "name": {
          "type": "string",
          "description": "The export name."
        },
        "status": {
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is still being executed."
          ],
          "description": "Output only. The export status.",
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "type": "string"
        },
        "cloudStorageSink": {
          "description": "Output only. Export sink for cloud storage files.",
          "$ref": "CloudStorageSink"
        },
        "id": {
          "description": "Output only. The generated export ID.",
          "type": "string"
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "exportOptions": {
          "description": "Advanced options of the export.",
          "$ref": "ExportOptions"
        },
        "query": {
          "description": "The search query being exported.",
          "$ref": "Query"
        },
        "requester": {
          "$ref": "UserInfo",
          "description": "Output only. The requester of the export."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the export was created."
        },
        "stats": {
          "$ref": "ExportStats",
          "description": "Output only. Export statistics."
        }
      },
      "type": "object",
      "id": "Export"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "CloseMatterRequest": {
      "description": "Close a matter by ID.",
      "id": "CloseMatterRequest",
      "properties": {},
      "type": "object"
    },
    "DriveExportOptions": {
      "type": "object",
      "properties": {
        "includeAccessInfo": {
          "description": "Set to true to include access level information for users with indirect access to files.",
          "type": "boolean"
        }
      },
      "description": "The options for Drive export.",
      "id": "DriveExportOptions"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "OrgUnitInfo": {
      "id": "OrgUnitInfo",
      "type": "object",
      "properties": {
        "orgUnitId": {
          "type": "string",
          "description": "Org unit to search, as provided by the Admin SDK Directory API."
        }
      },
      "description": "Org Unit to search"
    },
    "GroupsCountResult": {
      "type": "object",
      "description": "Groups specific count metrics.",
      "properties": {
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "queriedAccountsCount": {
          "format": "int64",
          "description": "Total number of accounts involved in this count operation.",
          "type": "string"
        },
        "nonQueryableAccounts": {
          "type": "array",
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "items": {
            "type": "string"
          }
        },
        "matchingAccountsCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        }
      },
      "id": "GroupsCountResult"
    },
    "CloseMatterResponse": {
      "type": "object",
      "id": "CloseMatterResponse",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state CLOSED."
        }
      },
      "description": "Response to a CloseMatterRequest."
    },
    "ListExportsResponse": {
      "type": "object",
      "description": "The holds for a matter.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list."
        },
        "exports": {
          "description": "The list of exports.",
          "items": {
            "$ref": "Export"
          },
          "type": "array"
        }
      },
      "id": "ListExportsResponse"
    },
    "CorpusQuery": {
      "id": "CorpusQuery",
      "properties": {
        "voiceQuery": {
          "description": "Details pertaining to Voice holds. If set, corpus must be Voice.",
          "$ref": "HeldVoiceQuery"
        },
        "hangoutsChatQuery": {
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat.",
          "$ref": "HeldHangoutsChatQuery"
        },
        "groupsQuery": {
          "$ref": "HeldGroupsQuery",
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups."
        },
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive."
        },
        "mailQuery": {
          "$ref": "HeldMailQuery",
          "description": "Details pertaining to mail holds. If set, corpus must be mail."
        }
      },
      "description": "Corpus specific queries.",
      "type": "object"
    },
    "HeldHangoutsChatQuery": {
      "id": "HeldHangoutsChatQuery",
      "type": "object",
      "description": "Query options for hangouts chat holds.",
      "properties": {
        "includeRooms": {
          "description": "If true, include rooms the user has participated in.",
          "type": "boolean"
        }
      }
    },
    "SharedDriveInfo": {
      "id": "SharedDriveInfo",
      "description": "Shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "type": "array",
          "description": "List of Shared drive IDs, as provided by Drive API.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "HeldMailQuery": {
      "type": "object",
      "description": "Query options for mail holds.",
      "id": "HeldMailQuery",
      "properties": {
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "endTime": {
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        }
      }
    },
    "AddHeldAccountsRequest": {
      "type": "object",
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "properties": {
        "emails": {
          "description": "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both."
        }
      }
    },
    "ListHoldsResponse": {
      "id": "ListHoldsResponse",
      "properties": {
        "holds": {
          "description": "The list of holds.",
          "items": {
            "$ref": "Hold"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The holds for a matter."
    },
    "HeldAccount": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "lastName": {
          "description": "Output only. The last name of the account holder.",
          "type": "string"
        },
        "holdTime": {
          "format": "google-datetime",
          "description": "Output only. When the account was put on hold.",
          "type": "string"
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over account ID.",
          "type": "string"
        },
        "accountId": {
          "description": "The account's ID as provided by the Admin SDK.",
          "type": "string"
        }
      },
      "id": "HeldAccount",
      "description": "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus."
    },
    "HeldOrgUnit": {
      "description": "A organizational unit being held in a particular hold. This structure is immutable.",
      "id": "HeldOrgUnit",
      "type": "object",
      "properties": {
        "holdTime": {
          "description": "When the org unit was put on hold. This property is immutable.",
          "format": "google-datetime",
          "type": "string"
        },
        "orgUnitId": {
          "type": "string",
          "description": "The org unit's immutable ID as provided by the Admin SDK."
        }
      }
    },
    "ExportOptions": {
      "description": "Export advanced options",
      "id": "ExportOptions",
      "properties": {
        "voiceOptions": {
          "description": "Option available for voice export.",
          "$ref": "VoiceExportOptions"
        },
        "mailOptions": {
          "$ref": "MailExportOptions",
          "description": "Option available for mail export."
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatExportOptions",
          "description": "Option available for hangouts chat export."
        },
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Option available for Drive export."
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Option available for groups export."
        },
        "region": {
          "enumDescriptions": [
            "The region is unspecified. Will be treated the same as ANY.",
            "Any region.",
            "US region.",
            "Europe region."
          ],
          "description": "The requested export location.",
          "type": "string",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ]
        }
      },
      "type": "object"
    },
    "CloudStorageSink": {
      "description": "Export sink for cloud storage files.",
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "description": "Output only. The exported files on cloud storage.",
          "items": {
            "$ref": "CloudStorageFile"
          }
        }
      },
      "id": "CloudStorageSink"
    },
    "GroupsExportOptions": {
      "type": "object",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The export format for groups export."
        }
      },
      "id": "GroupsExportOptions",
      "description": "The options for groups export."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status"
    },
    "AccountInfo": {
      "type": "object",
      "id": "AccountInfo",
      "properties": {
        "emails": {
          "type": "array",
          "description": "A set of accounts to search.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Accounts to search"
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "type": "object",
      "properties": {
        "statuses": {
          "items": {
            "$ref": "Status"
          },
          "type": "array",
          "description": "A list of statuses for deleted accounts. Results have the same order as the request."
        }
      },
      "id": "RemoveHeldAccountsResponse"
    },
    "VoiceExportOptions": {
      "id": "VoiceExportOptions",
      "description": "The options for voice export.",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The export format for voice export."
        }
      },
      "type": "object"
    },
    "MailExportOptions": {
      "description": "The options for mail export.",
      "properties": {
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "type": "string",
          "description": "The export file format.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        },
        "showConfidentialModeContent": {
          "type": "boolean",
          "description": "Set to true to export confidential mode content."
        }
      },
      "type": "object",
      "id": "MailExportOptions"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "type": "object"
    },
    "HeldGroupsQuery": {
      "type": "object",
      "description": "Query options for group holds.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        },
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        }
      },
      "id": "HeldGroupsQuery"
    },
    "AddHeldAccountResult": {
      "type": "object",
      "description": "A status detailing the status of each account creation, and the HeldAccount, if successful.",
      "properties": {
        "status": {
          "$ref": "Status",
          "description": "This represents the success status. If failed, check message."
        },
        "account": {
          "$ref": "HeldAccount",
          "description": "If present, this account was successfully created."
        }
      },
      "id": "AddHeldAccountResult"
    },
    "UndeleteMatterRequest": {
      "id": "UndeleteMatterRequest",
      "properties": {},
      "type": "object",
      "description": "Undelete a matter by ID."
    },
    "CloudStorageFile": {
      "description": "An export file on cloud storage",
      "id": "CloudStorageFile",
      "type": "object",
      "properties": {
        "md5Hash": {
          "description": "The md5 hash of the file.",
          "type": "string"
        },
        "size": {
          "type": "string",
          "description": "The size of the export file.",
          "format": "int64"
        },
        "objectName": {
          "description": "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API.",
          "type": "string"
        },
        "bucketName": {
          "type": "string",
          "description": "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name."
        }
      }
    },
    "HangoutsChatExportOptions": {
      "id": "HangoutsChatExportOptions",
      "type": "object",
      "properties": {
        "exportFormat": {
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "type": "string",
          "description": "The export format for hangouts chat export."
        }
      },
      "description": "The options for hangouts chat export."
    },
    "HangoutsChatOptions": {
      "id": "HangoutsChatOptions",
      "properties": {
        "includeRooms": {
          "description": "Set to true to include rooms.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Hangouts chat search advanced options"
    },
    "RemoveHeldAccountsRequest": {
      "id": "RemoveHeldAccountsRequest",
      "type": "object",
      "description": "Remove a list of accounts from a hold.",
      "properties": {
        "accountIds": {
          "description": "Account IDs to identify HeldAccounts to remove.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/vault",
  "servicePath": "",
  "version": "v1",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "rootUrl": "https://vault.googleapis.com/",
  "resources": {
    "matters": {
      "resources": {
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
                  "id": "vault.matters.holds.accounts.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameters": {
                    "matterId": {
                      "required": true,
                      "description": "The matter ID.",
                      "location": "path",
                      "type": "string"
                    },
                    "accountId": {
                      "location": "path",
                      "required": true,
                      "description": "The ID of the account to remove from the hold.",
                      "type": "string"
                    },
                    "holdId": {
                      "required": true,
                      "location": "path",
                      "description": "The hold ID.",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "parameters": {
                    "matterId": {
                      "required": true,
                      "type": "string",
                      "description": "The matter ID.",
                      "location": "path"
                    },
                    "holdId": {
                      "location": "path",
                      "description": "The hold ID.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "id": "vault.matters.holds.accounts.create",
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that has no held_org_unit set. Attempting to add an account to an OU-based hold will result in an error.",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts"
                },
                "list": {
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "id": "vault.matters.holds.accounts.list",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "matterId": {
                      "location": "path",
                      "type": "string",
                      "description": "The matter ID.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified held accounts. If the hold is on an OU, then use Admin SDK to enumerate its members."
                }
              }
            }
          },
          "methods": {
            "get": {
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Gets a hold by ID.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.get",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query",
                  "description": "Specifies which parts of the Hold to return.",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "type": "string"
                },
                "holdId": {
                  "required": true,
                  "type": "string",
                  "description": "The hold ID.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "removeHeldAccounts": {
              "id": "vault.matters.holds.removeHeldAccounts",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "httpMethod": "POST",
              "description": "Removes HeldAccounts from a hold. Returns a list of statuses in the same order as the request. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                },
                "holdId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The hold ID."
                }
              }
            },
            "update": {
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "request": {
                "$ref": "Hold"
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "parameters": {
                "holdId": {
                  "required": true,
                  "type": "string",
                  "description": "The ID of the hold.",
                  "location": "path"
                },
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "id": "vault.matters.holds.update",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "PUT",
              "response": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts to a hold that covers an OU, nor can you add OUs to a hold that covers individual accounts. Accounts listed in the hold will be ignored."
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as page_size = 100."
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "description": "Specifies which parts of the Hold to return.",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
                  "location": "query"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/holds",
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "path": "v1/matters/{matterId}/holds",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse denotes no more holds to list.",
              "id": "vault.matters.holds.list",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "id": "vault.matters.holds.delete",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "parameters": {
                "holdId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The hold ID."
                },
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            },
            "create": {
              "httpMethod": "POST",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The matter ID."
                }
              },
              "id": "vault.matters.holds.create",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "Hold"
              },
              "response": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId"
              ],
              "description": "Creates a hold in the given matter.",
              "flatPath": "v1/matters/{matterId}/holds",
              "path": "v1/matters/{matterId}/holds"
            },
            "addHeldAccounts": {
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "description": "Adds HeldAccounts to a hold. Returns a list of accounts that have been successfully added. Accounts can only be added to an existing account-based hold.",
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "id": "vault.matters.holds.addHeldAccounts",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The matter ID."
                },
                "holdId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The hold ID."
                }
              }
            }
          }
        },
        "savedQueries": {
          "methods": {
            "get": {
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "SavedQuery"
              },
              "parameters": {
                "savedQueryId": {
                  "description": "ID of the saved query to be retrieved.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved query is to be retrieved.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "vault.matters.savedQueries.get",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "description": "Retrieves a saved query by Id.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "list": {
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists saved queries within a matter. An empty page token in ListSavedQueriesResponse denotes no more saved queries to list.",
              "path": "v1/matters/{matterId}/savedQueries",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "id": "vault.matters.savedQueries.list",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning."
                },
                "matterId": {
                  "location": "path",
                  "description": "The matter ID of the parent matter for which the saved queries are to be retrieved.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of saved queries to return.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The matter ID of the parent matter for which the saved query is to be created.",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Creates a saved query.",
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.savedQueries.create",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "request": {
                "$ref": "SavedQuery"
              },
              "response": {
                "$ref": "SavedQuery"
              },
              "httpMethod": "POST",
              "path": "v1/matters/{matterId}/savedQueries"
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameters": {
                "savedQueryId": {
                  "description": "ID of the saved query to be deleted.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID of the parent matter for which the saved query is to be deleted.",
                  "required": true
                }
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "description": "Deletes a saved query by Id.",
              "id": "vault.matters.savedQueries.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}"
            }
          }
        },
        "exports": {
          "methods": {
            "get": {
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path"
                },
                "exportId": {
                  "location": "path",
                  "type": "string",
                  "description": "The export ID.",
                  "required": true
                }
              },
              "response": {
                "$ref": "Export"
              },
              "id": "vault.matters.exports.get",
              "description": "Gets an Export.",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "id": "vault.matters.exports.create",
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "Export"
              },
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Export"
              },
              "description": "Creates an Export.",
              "path": "v1/matters/{matterId}/exports",
              "httpMethod": "POST",
              "flatPath": "v1/matters/{matterId}/exports"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "response": {
                "$ref": "ListExportsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists Exports.",
              "id": "vault.matters.exports.list",
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of exports to return in the response."
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token as returned in the response."
                }
              }
            },
            "delete": {
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "httpMethod": "DELETE",
              "parameters": {
                "exportId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The export ID."
                },
                "matterId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Deletes an Export.",
              "response": {
                "$ref": "Empty"
              },
              "id": "vault.matters.exports.delete",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "parameterOrder": [
                "matterId",
                "exportId"
              ]
            }
          }
        }
      },
      "methods": {
        "close": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "path": "v1/matters/{matterId}:close",
          "id": "vault.matters.close",
          "description": "Closes the specified matter. Returns matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          },
          "flatPath": "v1/matters/{matterId}:close",
          "httpMethod": "POST",
          "request": {
            "$ref": "CloseMatterRequest"
          }
        },
        "count": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Counts the artifacts within the context of a matter and returns a detailed breakdown of metrics.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "id": "vault.matters.count",
          "path": "v1/matters/{matterId}:count",
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "flatPath": "v1/matters/{matterId}:count"
        },
        "create": {
          "id": "vault.matters.create",
          "request": {
            "$ref": "Matter"
          },
          "response": {
            "$ref": "Matter"
          },
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1/matters",
          "description": "Creates a new matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [],
          "path": "v1/matters"
        },
        "update": {
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          },
          "path": "v1/matters/{matterId}",
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "httpMethod": "PUT",
          "id": "vault.matters.update",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "Matter"
          },
          "request": {
            "$ref": "Matter"
          },
          "parameterOrder": [
            "matterId"
          ],
          "flatPath": "v1/matters/{matterId}"
        },
        "addPermissions": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "description": "Adds an account as a matter collaborator.",
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "description": "The matter ID.",
              "location": "path"
            }
          },
          "id": "vault.matters.addPermissions",
          "path": "v1/matters/{matterId}:addPermissions",
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "MatterPermission"
          }
        },
        "list": {
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameterOrder": [],
          "description": "Lists matters the user has access to.",
          "path": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "flatPath": "v1/matters",
          "id": "vault.matters.list",
          "parameters": {
            "view": {
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "location": "query",
              "type": "string",
              "description": "Specifies which parts of the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ]
            },
            "pageSize": {
              "type": "integer",
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "format": "int32",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The pagination token as returned in the response."
            },
            "state": {
              "location": "query",
              "enumDescriptions": [
                "The matter has no specified state.",
                "This matter is open.",
                "This matter is closed.",
                "This matter is deleted."
              ],
              "description": "If set, list only matters with that specific state. The default is listing matters of all states.",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "type": "string"
            }
          },
          "httpMethod": "GET"
        },
        "removePermissions": {
          "path": "v1/matters/{matterId}:removePermissions",
          "id": "vault.matters.removePermissions",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Removes an account as a matter collaborator.",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "parameters": {
            "matterId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The matter ID."
            }
          }
        },
        "undelete": {
          "flatPath": "v1/matters/{matterId}:undelete",
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "response": {
            "$ref": "Matter"
          },
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "description": "The matter ID.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:undelete",
          "id": "vault.matters.undelete"
        },
        "delete": {
          "path": "v1/matters/{matterId}",
          "id": "vault.matters.delete",
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}",
          "parameters": {
            "matterId": {
              "description": "The matter ID",
              "location": "path",
              "required": true,
              "type": "string"
            }
          }
        },
        "get": {
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "GET",
          "id": "vault.matters.get",
          "path": "v1/matters/{matterId}",
          "description": "Gets the specified matter.",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            },
            "view": {
              "description": "Specifies which parts of the Matter to return in the response.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ]
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "response": {
            "$ref": "Matter"
          }
        },
        "reopen": {
          "id": "vault.matters.reopen",
          "path": "v1/matters/{matterId}:reopen",
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "description": "Reopens the specified matter. Returns matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:reopen"
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "flatPath": "v1/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "GET",
          "id": "vault.operations.get",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^operations/.*$",
              "location": "path",
              "required": true,
              "description": "The name of the operation resource."
            }
          },
          "path": "v1/{+name}"
        },
        "list": {
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "location": "query",
              "type": "string"
            },
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The name of the operation's parent resource.",
              "pattern": "^operations$"
            },
            "pageSize": {
              "type": "integer",
              "description": "The standard list page size.",
              "location": "query",
              "format": "int32"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations",
          "path": "v1/{+name}",
          "id": "vault.operations.list",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "response": {
            "$ref": "ListOperationsResponse"
          }
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "description": "The name of the operation resource to be deleted.",
              "pattern": "^operations/.*$",
              "type": "string"
            }
          },
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "httpMethod": "DELETE",
          "flatPath": "v1/operations/{operationsId}",
          "path": "v1/{+name}",
          "id": "vault.operations.delete",
          "response": {
            "$ref": "Empty"
          }
        },
        "cancel": {
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "path": "v1/{+name}:cancel",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "required": true,
              "description": "The name of the operation resource to be cancelled.",
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "parameterOrder": [
            "name"
          ],
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "httpMethod": "POST",
          "id": "vault.operations.cancel"
        }
      }
    }
  },
  "version_module": true,
  "title": "G Suite Vault API",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "basePath": "",
  "name": "vault",
  "ownerDomain": "google.com"
}
