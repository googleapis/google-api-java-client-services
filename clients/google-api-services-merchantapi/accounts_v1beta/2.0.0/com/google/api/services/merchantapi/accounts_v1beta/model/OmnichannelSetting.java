/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Collection of information related to the omnichannel settings of a merchant.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OmnichannelSetting extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The about page URI and state for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private About about;

  /**
   * Optional. The InStock URI and state for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InStock inStock;

  /**
   * Optional. The inventory verification contact and state for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InventoryVerification inventoryVerification;

  /**
   * Output only. The established link to a LFP provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LfpLink lfpLink;

  /**
   * Required. The Local Store Front type for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lsfType;

  /**
   * Identifier. The resource name of the omnichannel setting. Format:
   * `accounts/{account}/omnichannelSettings/{omnichannel_setting}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The On Display to Order (ODO) policy URI and state for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OnDisplayToOrder odo;

  /**
   * Optional. The Pickup URI and state for this country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Pickup pickup;

  /**
   * Required. Immutable. Region code defined by [CLDR](https://cldr.unicode.org/). Must be provided
   * in the Create method, and is immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * Optional. The about page URI and state for this country.
   * @return value or {@code null} for none
   */
  public About getAbout() {
    return about;
  }

  /**
   * Optional. The about page URI and state for this country.
   * @param about about or {@code null} for none
   */
  public OmnichannelSetting setAbout(About about) {
    this.about = about;
    return this;
  }

  /**
   * Optional. The InStock URI and state for this country.
   * @return value or {@code null} for none
   */
  public InStock getInStock() {
    return inStock;
  }

  /**
   * Optional. The InStock URI and state for this country.
   * @param inStock inStock or {@code null} for none
   */
  public OmnichannelSetting setInStock(InStock inStock) {
    this.inStock = inStock;
    return this;
  }

  /**
   * Optional. The inventory verification contact and state for this country.
   * @return value or {@code null} for none
   */
  public InventoryVerification getInventoryVerification() {
    return inventoryVerification;
  }

  /**
   * Optional. The inventory verification contact and state for this country.
   * @param inventoryVerification inventoryVerification or {@code null} for none
   */
  public OmnichannelSetting setInventoryVerification(InventoryVerification inventoryVerification) {
    this.inventoryVerification = inventoryVerification;
    return this;
  }

  /**
   * Output only. The established link to a LFP provider.
   * @return value or {@code null} for none
   */
  public LfpLink getLfpLink() {
    return lfpLink;
  }

  /**
   * Output only. The established link to a LFP provider.
   * @param lfpLink lfpLink or {@code null} for none
   */
  public OmnichannelSetting setLfpLink(LfpLink lfpLink) {
    this.lfpLink = lfpLink;
    return this;
  }

  /**
   * Required. The Local Store Front type for this country.
   * @return value or {@code null} for none
   */
  public java.lang.String getLsfType() {
    return lsfType;
  }

  /**
   * Required. The Local Store Front type for this country.
   * @param lsfType lsfType or {@code null} for none
   */
  public OmnichannelSetting setLsfType(java.lang.String lsfType) {
    this.lsfType = lsfType;
    return this;
  }

  /**
   * Identifier. The resource name of the omnichannel setting. Format:
   * `accounts/{account}/omnichannelSettings/{omnichannel_setting}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the omnichannel setting. Format:
   * `accounts/{account}/omnichannelSettings/{omnichannel_setting}`
   * @param name name or {@code null} for none
   */
  public OmnichannelSetting setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The On Display to Order (ODO) policy URI and state for this country.
   * @return value or {@code null} for none
   */
  public OnDisplayToOrder getOdo() {
    return odo;
  }

  /**
   * Optional. The On Display to Order (ODO) policy URI and state for this country.
   * @param odo odo or {@code null} for none
   */
  public OmnichannelSetting setOdo(OnDisplayToOrder odo) {
    this.odo = odo;
    return this;
  }

  /**
   * Optional. The Pickup URI and state for this country.
   * @return value or {@code null} for none
   */
  public Pickup getPickup() {
    return pickup;
  }

  /**
   * Optional. The Pickup URI and state for this country.
   * @param pickup pickup or {@code null} for none
   */
  public OmnichannelSetting setPickup(Pickup pickup) {
    this.pickup = pickup;
    return this;
  }

  /**
   * Required. Immutable. Region code defined by [CLDR](https://cldr.unicode.org/). Must be provided
   * in the Create method, and is immutable.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Required. Immutable. Region code defined by [CLDR](https://cldr.unicode.org/). Must be provided
   * in the Create method, and is immutable.
   * @param regionCode regionCode or {@code null} for none
   */
  public OmnichannelSetting setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  @Override
  public OmnichannelSetting set(String fieldName, Object value) {
    return (OmnichannelSetting) super.set(fieldName, value);
  }

  @Override
  public OmnichannelSetting clone() {
    return (OmnichannelSetting) super.clone();
  }

}
