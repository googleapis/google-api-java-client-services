/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigeeregistry.v1;

/**
 * Service definition for ApigeeRegistry (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/apigee/docs/api-hub/what-is-api-hub" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ApigeeRegistryRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ApigeeRegistry extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Apigee Registry API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://apigeeregistry.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://apigeeregistry.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ApigeeRegistry(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ApigeeRegistry(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
   *   {@code ApigeeRegistry.Projects.List request = apigeeregistry.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
     *   {@code ApigeeRegistry.Locations.List request = apigeeregistry.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the apigeeregistry server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the apigeeregistry server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the apigeeregistry server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apis collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
       *   {@code ApigeeRegistry.Apis.List request = apigeeregistry.apis().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apis apis() {
        return new Apis();
      }

      /**
       * The "apis" collection of methods.
       */
      public class Apis {

        /**
         * Creates a specified API.
         *
         * Create a request for the method "apis.create".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of APIs. Format: `projects/locations`
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Api}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Api content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Api> {

          private static final String REST_PATH = "v1/{+parent}/apis";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a specified API.
           *
           * Create a request for the method "apis.create".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Api}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Api content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Api.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the API, which will become the final component of the API's
           * resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
           * Following AIP-162, IDs must not have the form of a UUID.
           */
          @com.google.api.client.util.Key
          private java.lang.String apiId;

          /** Required. The ID to use for the API, which will become the final component of the API's resource
         name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs
         must not have the form of a UUID.
           */
          public java.lang.String getApiId() {
            return apiId;
          }

          /**
           * Required. The ID to use for the API, which will become the final component of the API's
           * resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
           * Following AIP-162, IDs must not have the form of a UUID.
           */
          public Create setApiId(java.lang.String apiId) {
            this.apiId = apiId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Removes a specified API and all of the resources that it owns.
         *
         * Create a request for the method "apis.delete".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the API to delete. Format: `projects/locations/apis`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Removes a specified API and all of the resources that it owns.
           *
           * Create a request for the method "apis.delete".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the API to delete. Format: `projects/locations/apis`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the API to delete. Format: `projects/locations/apis` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the API to delete. Format: `projects/locations/apis`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the API to delete. Format: `projects/locations/apis` */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, any child resources will also be deleted. (Otherwise, the request will
           * only work if there are no child resources.)
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, any child resources will also be deleted. (Otherwise, the request will only work if
         there are no child resources.)
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, any child resources will also be deleted. (Otherwise, the request will
           * only work if there are no child resources.)
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns a specified API.
         *
         * Create a request for the method "apis.get".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the API to retrieve. Format: `projects/locations/apis`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Api> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Returns a specified API.
           *
           * Create a request for the method "apis.get".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the API to retrieve. Format: `projects/locations/apis`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Api.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the API to retrieve. Format: `projects/locations/apis` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the API to retrieve. Format: `projects/locations/apis`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the API to retrieve. Format: `projects/locations/apis` */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "apis.getIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "apis.getIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns matching APIs.
         *
         * Create a request for the method "apis.list".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of APIs. Format: `projects/locations`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApisResponse> {

          private static final String REST_PATH = "v1/{+parent}/apis";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns matching APIs.
           *
           * Create a request for the method "apis.list".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApisResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent, which owns this collection of APIs. Format: `projects/locations`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An expression that can be used to filter the list. Filters use the Common Expression
           * Language and can refer to all message fields.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression that can be used to filter the list. Filters use the Common Expression Language and
         can refer to all message fields.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * An expression that can be used to filter the list. Filters use the Common Expression
           * Language and can refer to all message fields.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
           * order using the "desc" identifier, e.g. "foo desc,bar"
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
         "desc" identifier, e.g. "foo desc,bar"
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
           * order using the "desc" identifier, e.g. "foo desc,bar"
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of APIs to return. The service may return fewer than this value. If
           * unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000
           * will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of APIs to return. The service may return fewer than this value. If unspecified,
         at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of APIs to return. The service may return fewer than this value. If
           * unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000
           * will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListApis` call. Provide this to retrieve the
           * subsequent page. When paginating, all other parameters provided to `ListApis` must
           * match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent
         page. When paginating, all other parameters provided to `ListApis` must match the call that
         provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListApis` call. Provide this to retrieve the
           * subsequent page. When paginating, all other parameters provided to `ListApis` must
           * match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Used to modify a specified API.
         *
         * Create a request for the method "apis.patch".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Resource name.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Api}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Api content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Api> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Used to modify a specified API.
           *
           * Create a request for the method "apis.patch".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource name.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Api}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Api content) {
            super(ApigeeRegistry.this, "PATCH", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Api.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Resource name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Resource name. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, and the API is not found, a new API will be created. In this situation,
           * `update_mask` is ignored.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean allowMissing;

          /** If set to true, and the API is not found, a new API will be created. In this situation,
         `update_mask` is ignored.
           */
          public java.lang.Boolean getAllowMissing() {
            return allowMissing;
          }

          /**
           * If set to true, and the API is not found, a new API will be created. In this situation,
           * `update_mask` is ignored.
           */
          public Patch setAllowMissing(java.lang.Boolean allowMissing) {
            this.allowMissing = allowMissing;
            return this;
          }

          /**
           * The list of fields to be updated. If omitted, all fields are updated that are set in
           * the request message (fields set to default values are ignored). If an asterisk "*" is
           * specified, all fields are updated, including fields that are unspecified/default in the
           * request.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to be updated. If omitted, all fields are updated that are set in the request
         message (fields set to default values are ignored). If an asterisk "*" is specified, all fields are
         updated, including fields that are unspecified/default in the request.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The list of fields to be updated. If omitted, all fields are updated that are set in
           * the request message (fields set to default values are ignored). If an asterisk "*" is
           * specified, all fields are updated, including fields that are unspecified/default in the
           * request.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "apis.setIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "apis.setIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "apis.testIamPermissions".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "apis.testIamPermissions".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Artifacts collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
         *   {@code ApigeeRegistry.Artifacts.List request = apigeeregistry.artifacts().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Artifacts artifacts() {
          return new Artifacts();
        }

        /**
         * The "artifacts" collection of methods.
         */
        public class Artifacts {

          /**
           * Creates a specified artifact.
           *
           * Create a request for the method "artifacts.create".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

            private static final String REST_PATH = "v1/{+parent}/artifacts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Creates a specified artifact.
             *
             * Create a request for the method "artifacts.create".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the artifact, which will become the final component of
             * the artifact's resource name. This value should be 4-63 characters, and valid
             * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            @com.google.api.client.util.Key
            private java.lang.String artifactId;

            /** Required. The ID to use for the artifact, which will become the final component of the artifact's
           resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following
           AIP-162, IDs must not have the form of a UUID.
             */
            public java.lang.String getArtifactId() {
              return artifactId;
            }

            /**
             * Required. The ID to use for the artifact, which will become the final component of
             * the artifact's resource name. This value should be 4-63 characters, and valid
             * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            public Create setArtifactId(java.lang.String artifactId) {
              this.artifactId = artifactId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Removes a specified artifact.
           *
           * Create a request for the method "artifacts.delete".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Removes a specified artifact.
             *
             * Create a request for the method "artifacts.delete".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the artifact to delete. Format: `{parent}/artifacts`
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns a specified artifact.
           *
           * Create a request for the method "artifacts.get".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Returns a specified artifact.
             *
             * Create a request for the method "artifacts.get".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the
           * default behavior is to return the artifact uncompressed (the mime_type response field indicates
           * the exact format returned).
           *
           * Create a request for the method "artifacts.getContents".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
           * @return the request
           */
          public GetContents getContents(java.lang.String name) throws java.io.IOException {
            GetContents result = new GetContents(name);
            initialize(result);
            return result;
          }

          public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

            private static final String REST_PATH = "v1/{+name}:getContents";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Returns the contents of a specified artifact. If artifacts are stored with GZip compression,
             * the default behavior is to return the artifact uncompressed (the mime_type response field
             * indicates the exact format returned).
             *
             * Create a request for the method "artifacts.getContents".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
             * @since 1.13
             */
            protected GetContents(java.lang.String name) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetContents set$Xgafv(java.lang.String $Xgafv) {
              return (GetContents) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetContents setAccessToken(java.lang.String accessToken) {
              return (GetContents) super.setAccessToken(accessToken);
            }

            @Override
            public GetContents setAlt(java.lang.String alt) {
              return (GetContents) super.setAlt(alt);
            }

            @Override
            public GetContents setCallback(java.lang.String callback) {
              return (GetContents) super.setCallback(callback);
            }

            @Override
            public GetContents setFields(java.lang.String fields) {
              return (GetContents) super.setFields(fields);
            }

            @Override
            public GetContents setKey(java.lang.String key) {
              return (GetContents) super.setKey(key);
            }

            @Override
            public GetContents setOauthToken(java.lang.String oauthToken) {
              return (GetContents) super.setOauthToken(oauthToken);
            }

            @Override
            public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetContents) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetContents setQuotaUser(java.lang.String quotaUser) {
              return (GetContents) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetContents setUploadType(java.lang.String uploadType) {
              return (GetContents) super.setUploadType(uploadType);
            }

            @Override
            public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetContents) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the artifact whose contents should be retrieved. Format:
             * `{parent}/artifacts`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the artifact whose contents should be retrieved. Format:
             * `{parent}/artifacts`
             */
            public GetContents setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetContents set(String parameterName, Object value) {
              return (GetContents) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "artifacts.getIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "artifacts.getIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns matching artifacts.
           *
           * Create a request for the method "artifacts.list".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse> {

            private static final String REST_PATH = "v1/{+parent}/artifacts";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Returns matching artifacts.
             *
             * Create a request for the method "artifacts.list".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields except contents.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that can be used to filter the list. Filters use the Common Expression Language and
           can refer to all message fields except contents.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields except contents.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
           "desc" identifier, e.g. "foo desc,bar"
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of artifacts to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of artifacts to return. The service may return fewer than this value. If
           unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
           coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of artifacts to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListArtifacts` call. Provide this to retrieve
             * the subsequent page. When paginating, all other parameters provided to
             * `ListArtifacts` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the
           call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListArtifacts` call. Provide this to retrieve
             * the subsequent page. When paginating, all other parameters provided to
             * `ListArtifacts` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Used to replace a specified artifact.
           *
           * Create a request for the method "artifacts.replaceArtifact".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
           * operation.
           *
           * @param name Resource name.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
           * @return the request
           */
          public ReplaceArtifact replaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
            ReplaceArtifact result = new ReplaceArtifact(name, content);
            initialize(result);
            return result;
          }

          public class ReplaceArtifact extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Used to replace a specified artifact.
             *
             * Create a request for the method "artifacts.replaceArtifact".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
             * operation. <p> {@link ReplaceArtifact#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @since 1.13
             */
            protected ReplaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
              super(ApigeeRegistry.this, "PUT", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public ReplaceArtifact set$Xgafv(java.lang.String $Xgafv) {
              return (ReplaceArtifact) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReplaceArtifact setAccessToken(java.lang.String accessToken) {
              return (ReplaceArtifact) super.setAccessToken(accessToken);
            }

            @Override
            public ReplaceArtifact setAlt(java.lang.String alt) {
              return (ReplaceArtifact) super.setAlt(alt);
            }

            @Override
            public ReplaceArtifact setCallback(java.lang.String callback) {
              return (ReplaceArtifact) super.setCallback(callback);
            }

            @Override
            public ReplaceArtifact setFields(java.lang.String fields) {
              return (ReplaceArtifact) super.setFields(fields);
            }

            @Override
            public ReplaceArtifact setKey(java.lang.String key) {
              return (ReplaceArtifact) super.setKey(key);
            }

            @Override
            public ReplaceArtifact setOauthToken(java.lang.String oauthToken) {
              return (ReplaceArtifact) super.setOauthToken(oauthToken);
            }

            @Override
            public ReplaceArtifact setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReplaceArtifact) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReplaceArtifact setQuotaUser(java.lang.String quotaUser) {
              return (ReplaceArtifact) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReplaceArtifact setUploadType(java.lang.String uploadType) {
              return (ReplaceArtifact) super.setUploadType(uploadType);
            }

            @Override
            public ReplaceArtifact setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReplaceArtifact) super.setUploadProtocol(uploadProtocol);
            }

            /** Resource name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Resource name. */
            public ReplaceArtifact setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ReplaceArtifact set(String parameterName, Object value) {
              return (ReplaceArtifact) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "artifacts.setIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "artifacts.setIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "artifacts.testIamPermissions".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "artifacts.testIamPermissions".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/artifacts/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
         *   {@code ApigeeRegistry.Deployments.List request = apigeeregistry.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Creates a specified deployment.
           *
           * Create a request for the method "deployments.create".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiDeployment}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiDeployment content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Creates a specified deployment.
             *
             * Create a request for the method "deployments.create".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiDeployment}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiDeployment content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of deployments. Format:
             * `projects/locations/apis`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of deployments. Format:
             * `projects/locations/apis`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the deployment, which will become the final component of
             * the deployment's resource name. This value should be 4-63 characters, and valid
             * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            @com.google.api.client.util.Key
            private java.lang.String apiDeploymentId;

            /** Required. The ID to use for the deployment, which will become the final component of the
           deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
           Following AIP-162, IDs must not have the form of a UUID.
             */
            public java.lang.String getApiDeploymentId() {
              return apiDeploymentId;
            }

            /**
             * Required. The ID to use for the deployment, which will become the final component of
             * the deployment's resource name. This value should be 4-63 characters, and valid
             * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            public Create setApiDeploymentId(java.lang.String apiDeploymentId) {
              this.apiDeploymentId = apiDeploymentId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Removes a specified deployment, all revisions, and all child resources (e.g., artifacts).
           *
           * Create a request for the method "deployments.delete".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the deployment to delete. Format: `projects/locations/apis/deployments`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Removes a specified deployment, all revisions, and all child resources (e.g., artifacts).
             *
             * Create a request for the method "deployments.delete".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the deployment to delete. Format: `projects/locations/apis/deployments`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the deployment to delete. Format:
             * `projects/locations/apis/deployments`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the deployment to delete. Format: `projects/locations/apis/deployments`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the deployment to delete. Format:
             * `projects/locations/apis/deployments`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, any child resources will also be deleted. (Otherwise, the request
             * will only work if there are no child resources.)
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** If set to true, any child resources will also be deleted. (Otherwise, the request will only work if
           there are no child resources.)
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * If set to true, any child resources will also be deleted. (Otherwise, the request
             * will only work if there are no child resources.)
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a revision of a deployment.
           *
           * Create a request for the method "deployments.deleteRevision".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link DeleteRevision#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the deployment revision to be deleted, with a revision ID explicitly included.
           *        Example: `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
           * @return the request
           */
          public DeleteRevision deleteRevision(java.lang.String name) throws java.io.IOException {
            DeleteRevision result = new DeleteRevision(name);
            initialize(result);
            return result;
          }

          public class DeleteRevision extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+name}:deleteRevision";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Deletes a revision of a deployment.
             *
             * Create a request for the method "deployments.deleteRevision".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link DeleteRevision#execute()} method to invoke the remote
             * operation. <p> {@link DeleteRevision#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The name of the deployment revision to be deleted, with a revision ID explicitly included.
           *        Example: `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
             * @since 1.13
             */
            protected DeleteRevision(java.lang.String name) {
              super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public DeleteRevision set$Xgafv(java.lang.String $Xgafv) {
              return (DeleteRevision) super.set$Xgafv($Xgafv);
            }

            @Override
            public DeleteRevision setAccessToken(java.lang.String accessToken) {
              return (DeleteRevision) super.setAccessToken(accessToken);
            }

            @Override
            public DeleteRevision setAlt(java.lang.String alt) {
              return (DeleteRevision) super.setAlt(alt);
            }

            @Override
            public DeleteRevision setCallback(java.lang.String callback) {
              return (DeleteRevision) super.setCallback(callback);
            }

            @Override
            public DeleteRevision setFields(java.lang.String fields) {
              return (DeleteRevision) super.setFields(fields);
            }

            @Override
            public DeleteRevision setKey(java.lang.String key) {
              return (DeleteRevision) super.setKey(key);
            }

            @Override
            public DeleteRevision setOauthToken(java.lang.String oauthToken) {
              return (DeleteRevision) super.setOauthToken(oauthToken);
            }

            @Override
            public DeleteRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (DeleteRevision) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public DeleteRevision setQuotaUser(java.lang.String quotaUser) {
              return (DeleteRevision) super.setQuotaUser(quotaUser);
            }

            @Override
            public DeleteRevision setUploadType(java.lang.String uploadType) {
              return (DeleteRevision) super.setUploadType(uploadType);
            }

            @Override
            public DeleteRevision setUploadProtocol(java.lang.String uploadProtocol) {
              return (DeleteRevision) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the deployment revision to be deleted, with a revision ID
             * explicitly included. Example:
             * `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the deployment revision to be deleted, with a revision ID explicitly
           included. Example: `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the deployment revision to be deleted, with a revision ID
             * explicitly included. Example:
             * `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
             */
            public DeleteRevision setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public DeleteRevision set(String parameterName, Object value) {
              return (DeleteRevision) super.set(parameterName, value);
            }
          }
          /**
           * Returns a specified deployment.
           *
           * Create a request for the method "deployments.get".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the deployment to retrieve. Format: `projects/locations/apis/deployments`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Returns a specified deployment.
             *
             * Create a request for the method "deployments.get".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the deployment to retrieve. Format: `projects/locations/apis/deployments`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the deployment to retrieve. Format:
             * `projects/locations/apis/deployments`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the deployment to retrieve. Format: `projects/locations/apis/deployments`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the deployment to retrieve. Format:
             * `projects/locations/apis/deployments`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "deployments.getIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "deployments.getIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns matching deployments.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApiDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Returns matching deployments.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApiDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of deployments. Format:
             * `projects/locations/apis`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of deployments. Format: `projects/locations/apis`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of deployments. Format:
             * `projects/locations/apis`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that can be used to filter the list. Filters use the Common Expression Language and
           can refer to all message fields.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
           "desc" identifier, e.g. "foo desc,bar"
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of deployments to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of deployments to return. The service may return fewer than this value. If
           unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
           coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of deployments to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListApiDeployments` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListApiDeployments` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListApiDeployments` call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to `ListApiDeployments` must match
           the call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListApiDeployments` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListApiDeployments` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Lists all revisions of a deployment. Revisions are returned in descending order of revision
           * creation time.
           *
           * Create a request for the method "deployments.listRevisions".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link ListRevisions#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the deployment to list revisions for.
           * @return the request
           */
          public ListRevisions listRevisions(java.lang.String name) throws java.io.IOException {
            ListRevisions result = new ListRevisions(name);
            initialize(result);
            return result;
          }

          public class ListRevisions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApiDeploymentRevisionsResponse> {

            private static final String REST_PATH = "v1/{+name}:listRevisions";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Lists all revisions of a deployment. Revisions are returned in descending order of revision
             * creation time.
             *
             * Create a request for the method "deployments.listRevisions".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link ListRevisions#execute()} method to invoke the remote
             * operation. <p> {@link ListRevisions#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The name of the deployment to list revisions for.
             * @since 1.13
             */
            protected ListRevisions(java.lang.String name) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApiDeploymentRevisionsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListRevisions set$Xgafv(java.lang.String $Xgafv) {
              return (ListRevisions) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListRevisions setAccessToken(java.lang.String accessToken) {
              return (ListRevisions) super.setAccessToken(accessToken);
            }

            @Override
            public ListRevisions setAlt(java.lang.String alt) {
              return (ListRevisions) super.setAlt(alt);
            }

            @Override
            public ListRevisions setCallback(java.lang.String callback) {
              return (ListRevisions) super.setCallback(callback);
            }

            @Override
            public ListRevisions setFields(java.lang.String fields) {
              return (ListRevisions) super.setFields(fields);
            }

            @Override
            public ListRevisions setKey(java.lang.String key) {
              return (ListRevisions) super.setKey(key);
            }

            @Override
            public ListRevisions setOauthToken(java.lang.String oauthToken) {
              return (ListRevisions) super.setOauthToken(oauthToken);
            }

            @Override
            public ListRevisions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListRevisions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListRevisions setQuotaUser(java.lang.String quotaUser) {
              return (ListRevisions) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListRevisions setUploadType(java.lang.String uploadType) {
              return (ListRevisions) super.setUploadType(uploadType);
            }

            @Override
            public ListRevisions setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListRevisions) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the deployment to list revisions for. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the deployment to list revisions for.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the deployment to list revisions for. */
            public ListRevisions setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that can be used to filter the list. Filters use the Common Expression Language and
           can refer to all message fields.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            public ListRevisions setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The maximum number of revisions to return per page. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of revisions to return per page.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of revisions to return per page. */
            public ListRevisions setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The page token, received from a previous ListApiDeploymentRevisions call. Provide
             * this to retrieve the subsequent page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The page token, received from a previous ListApiDeploymentRevisions call. Provide this to retrieve
           the subsequent page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The page token, received from a previous ListApiDeploymentRevisions call. Provide
             * this to retrieve the subsequent page.
             */
            public ListRevisions setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public ListRevisions set(String parameterName, Object value) {
              return (ListRevisions) super.set(parameterName, value);
            }
          }
          /**
           * Used to modify a specified deployment.
           *
           * Create a request for the method "deployments.patch".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Resource name.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiDeployment}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiDeployment content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Used to modify a specified deployment.
             *
             * Create a request for the method "deployments.patch".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiDeployment}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiDeployment content) {
              super(ApigeeRegistry.this, "PATCH", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Resource name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Resource name. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, and the deployment is not found, a new deployment will be created. In
             * this situation, `update_mask` is ignored.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the deployment is not found, a new deployment will be created. In this
           situation, `update_mask` is ignored.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /**
             * If set to true, and the deployment is not found, a new deployment will be created. In
             * this situation, `update_mask` is ignored.
             */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /**
             * The list of fields to be updated. If omitted, all fields are updated that are set in
             * the request message (fields set to default values are ignored). If an asterisk "*" is
             * specified, all fields are updated, including fields that are unspecified/default in
             * the request.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The list of fields to be updated. If omitted, all fields are updated that are set in the request
           message (fields set to default values are ignored). If an asterisk "*" is specified, all fields are
           updated, including fields that are unspecified/default in the request.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The list of fields to be updated. If omitted, all fields are updated that are set in
             * the request message (fields set to default values are ignored). If an asterisk "*" is
             * specified, all fields are updated, including fields that are unspecified/default in
             * the request.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the current revision to a specified prior revision. Note that this creates a new revision
           * with a new revision ID.
           *
           * Create a request for the method "deployments.rollback".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
           *
           * @param name Required. The deployment being rolled back.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.RollbackApiDeploymentRequest}
           * @return the request
           */
          public Rollback rollback(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.RollbackApiDeploymentRequest content) throws java.io.IOException {
            Rollback result = new Rollback(name, content);
            initialize(result);
            return result;
          }

          public class Rollback extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+name}:rollback";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Sets the current revision to a specified prior revision. Note that this creates a new revision
             * with a new revision ID.
             *
             * Create a request for the method "deployments.rollback".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
             * <p> {@link
             * Rollback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The deployment being rolled back.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.RollbackApiDeploymentRequest}
             * @since 1.13
             */
            protected Rollback(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.RollbackApiDeploymentRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public Rollback set$Xgafv(java.lang.String $Xgafv) {
              return (Rollback) super.set$Xgafv($Xgafv);
            }

            @Override
            public Rollback setAccessToken(java.lang.String accessToken) {
              return (Rollback) super.setAccessToken(accessToken);
            }

            @Override
            public Rollback setAlt(java.lang.String alt) {
              return (Rollback) super.setAlt(alt);
            }

            @Override
            public Rollback setCallback(java.lang.String callback) {
              return (Rollback) super.setCallback(callback);
            }

            @Override
            public Rollback setFields(java.lang.String fields) {
              return (Rollback) super.setFields(fields);
            }

            @Override
            public Rollback setKey(java.lang.String key) {
              return (Rollback) super.setKey(key);
            }

            @Override
            public Rollback setOauthToken(java.lang.String oauthToken) {
              return (Rollback) super.setOauthToken(oauthToken);
            }

            @Override
            public Rollback setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Rollback) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Rollback setQuotaUser(java.lang.String quotaUser) {
              return (Rollback) super.setQuotaUser(quotaUser);
            }

            @Override
            public Rollback setUploadType(java.lang.String uploadType) {
              return (Rollback) super.setUploadType(uploadType);
            }

            @Override
            public Rollback setUploadProtocol(java.lang.String uploadProtocol) {
              return (Rollback) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The deployment being rolled back. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The deployment being rolled back.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The deployment being rolled back. */
            public Rollback setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Rollback set(String parameterName, Object value) {
              return (Rollback) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "deployments.setIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "deployments.setIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Adds a tag to a specified revision of a deployment.
           *
           * Create a request for the method "deployments.tagRevision".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TagRevision#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the deployment to be tagged, including the revision ID.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TagApiDeploymentRevisionRequest}
           * @return the request
           */
          public TagRevision tagRevision(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.TagApiDeploymentRevisionRequest content) throws java.io.IOException {
            TagRevision result = new TagRevision(name, content);
            initialize(result);
            return result;
          }

          public class TagRevision extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiDeployment> {

            private static final String REST_PATH = "v1/{+name}:tagRevision";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Adds a tag to a specified revision of a deployment.
             *
             * Create a request for the method "deployments.tagRevision".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TagRevision#execute()} method to invoke the remote
             * operation. <p> {@link
             * TagRevision#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the deployment to be tagged, including the revision ID.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TagApiDeploymentRevisionRequest}
             * @since 1.13
             */
            protected TagRevision(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.TagApiDeploymentRevisionRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiDeployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public TagRevision set$Xgafv(java.lang.String $Xgafv) {
              return (TagRevision) super.set$Xgafv($Xgafv);
            }

            @Override
            public TagRevision setAccessToken(java.lang.String accessToken) {
              return (TagRevision) super.setAccessToken(accessToken);
            }

            @Override
            public TagRevision setAlt(java.lang.String alt) {
              return (TagRevision) super.setAlt(alt);
            }

            @Override
            public TagRevision setCallback(java.lang.String callback) {
              return (TagRevision) super.setCallback(callback);
            }

            @Override
            public TagRevision setFields(java.lang.String fields) {
              return (TagRevision) super.setFields(fields);
            }

            @Override
            public TagRevision setKey(java.lang.String key) {
              return (TagRevision) super.setKey(key);
            }

            @Override
            public TagRevision setOauthToken(java.lang.String oauthToken) {
              return (TagRevision) super.setOauthToken(oauthToken);
            }

            @Override
            public TagRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TagRevision) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TagRevision setQuotaUser(java.lang.String quotaUser) {
              return (TagRevision) super.setQuotaUser(quotaUser);
            }

            @Override
            public TagRevision setUploadType(java.lang.String uploadType) {
              return (TagRevision) super.setUploadType(uploadType);
            }

            @Override
            public TagRevision setUploadProtocol(java.lang.String uploadProtocol) {
              return (TagRevision) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the deployment to be tagged, including the revision ID. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the deployment to be tagged, including the revision ID.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the deployment to be tagged, including the revision ID. */
            public TagRevision setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public TagRevision set(String parameterName, Object value) {
              return (TagRevision) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "deployments.testIamPermissions".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "deployments.testIamPermissions".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Artifacts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
           *   {@code ApigeeRegistry.Artifacts.List request = apigeeregistry.artifacts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Artifacts artifacts() {
            return new Artifacts();
          }

          /**
           * The "artifacts" collection of methods.
           */
          public class Artifacts {

            /**
             * Creates a specified artifact.
             *
             * Create a request for the method "artifacts.create".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+parent}/artifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

              /**
               * Creates a specified artifact.
               *
               * Create a request for the method "artifacts.create".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the artifact, which will become the final component of
               * the artifact's resource name. This value should be 4-63 characters, and valid
               * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              @com.google.api.client.util.Key
              private java.lang.String artifactId;

              /** Required. The ID to use for the artifact, which will become the final component of the artifact's
             resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following
             AIP-162, IDs must not have the form of a UUID.
               */
              public java.lang.String getArtifactId() {
                return artifactId;
              }

              /**
               * Required. The ID to use for the artifact, which will become the final component of
               * the artifact's resource name. This value should be 4-63 characters, and valid
               * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              public Create setArtifactId(java.lang.String artifactId) {
                this.artifactId = artifactId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Removes a specified artifact.
             *
             * Create a request for the method "artifacts.delete".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");

              /**
               * Removes a specified artifact.
               *
               * Create a request for the method "artifacts.delete".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Returns a specified artifact.
             *
             * Create a request for the method "artifacts.get".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");

              /**
               * Returns a specified artifact.
               *
               * Create a request for the method "artifacts.get".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the
             * default behavior is to return the artifact uncompressed (the mime_type response field indicates
             * the exact format returned).
             *
             * Create a request for the method "artifacts.getContents".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
             * @return the request
             */
            public GetContents getContents(java.lang.String name) throws java.io.IOException {
              GetContents result = new GetContents(name);
              initialize(result);
              return result;
            }

            public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}:getContents";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");

              /**
               * Returns the contents of a specified artifact. If artifacts are stored with GZip compression,
               * the default behavior is to return the artifact uncompressed (the mime_type response field
               * indicates the exact format returned).
               *
               * Create a request for the method "artifacts.getContents".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected GetContents(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetContents set$Xgafv(java.lang.String $Xgafv) {
                return (GetContents) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetContents setAccessToken(java.lang.String accessToken) {
                return (GetContents) super.setAccessToken(accessToken);
              }

              @Override
              public GetContents setAlt(java.lang.String alt) {
                return (GetContents) super.setAlt(alt);
              }

              @Override
              public GetContents setCallback(java.lang.String callback) {
                return (GetContents) super.setCallback(callback);
              }

              @Override
              public GetContents setFields(java.lang.String fields) {
                return (GetContents) super.setFields(fields);
              }

              @Override
              public GetContents setKey(java.lang.String key) {
                return (GetContents) super.setKey(key);
              }

              @Override
              public GetContents setOauthToken(java.lang.String oauthToken) {
                return (GetContents) super.setOauthToken(oauthToken);
              }

              @Override
              public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetContents) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetContents setQuotaUser(java.lang.String quotaUser) {
                return (GetContents) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetContents setUploadType(java.lang.String uploadType) {
                return (GetContents) super.setUploadType(uploadType);
              }

              @Override
              public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetContents) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the artifact whose contents should be retrieved. Format:
               * `{parent}/artifacts`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the artifact whose contents should be retrieved. Format:
               * `{parent}/artifacts`
               */
              public GetContents setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GetContents set(String parameterName, Object value) {
                return (GetContents) super.set(parameterName, value);
              }
            }
            /**
             * Returns matching artifacts.
             *
             * Create a request for the method "artifacts.list".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse> {

              private static final String REST_PATH = "v1/{+parent}/artifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");

              /**
               * Returns matching artifacts.
               *
               * Create a request for the method "artifacts.list".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that can be used to filter the list. Filters use the Common Expression Language and
             can refer to all message fields except contents.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
             "desc" identifier, e.g. "foo desc,bar"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of artifacts to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of artifacts to return. The service may return fewer than this value. If
             unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
             coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of artifacts to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListArtifacts` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListArtifacts` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the
             call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListArtifacts` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListArtifacts` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Used to replace a specified artifact.
             *
             * Create a request for the method "artifacts.replaceArtifact".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
             * operation.
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @return the request
             */
            public ReplaceArtifact replaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
              ReplaceArtifact result = new ReplaceArtifact(name, content);
              initialize(result);
              return result;
            }

            public class ReplaceArtifact extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");

              /**
               * Used to replace a specified artifact.
               *
               * Create a request for the method "artifacts.replaceArtifact".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
               * operation. <p> {@link ReplaceArtifact#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Resource name.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @since 1.13
               */
              protected ReplaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                super(ApigeeRegistry.this, "PUT", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public ReplaceArtifact set$Xgafv(java.lang.String $Xgafv) {
                return (ReplaceArtifact) super.set$Xgafv($Xgafv);
              }

              @Override
              public ReplaceArtifact setAccessToken(java.lang.String accessToken) {
                return (ReplaceArtifact) super.setAccessToken(accessToken);
              }

              @Override
              public ReplaceArtifact setAlt(java.lang.String alt) {
                return (ReplaceArtifact) super.setAlt(alt);
              }

              @Override
              public ReplaceArtifact setCallback(java.lang.String callback) {
                return (ReplaceArtifact) super.setCallback(callback);
              }

              @Override
              public ReplaceArtifact setFields(java.lang.String fields) {
                return (ReplaceArtifact) super.setFields(fields);
              }

              @Override
              public ReplaceArtifact setKey(java.lang.String key) {
                return (ReplaceArtifact) super.setKey(key);
              }

              @Override
              public ReplaceArtifact setOauthToken(java.lang.String oauthToken) {
                return (ReplaceArtifact) super.setOauthToken(oauthToken);
              }

              @Override
              public ReplaceArtifact setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ReplaceArtifact) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ReplaceArtifact setQuotaUser(java.lang.String quotaUser) {
                return (ReplaceArtifact) super.setQuotaUser(quotaUser);
              }

              @Override
              public ReplaceArtifact setUploadType(java.lang.String uploadType) {
                return (ReplaceArtifact) super.setUploadType(uploadType);
              }

              @Override
              public ReplaceArtifact setUploadProtocol(java.lang.String uploadProtocol) {
                return (ReplaceArtifact) super.setUploadProtocol(uploadProtocol);
              }

              /** Resource name. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Resource name. */
              public ReplaceArtifact setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public ReplaceArtifact set(String parameterName, Object value) {
                return (ReplaceArtifact) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Versions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
         *   {@code ApigeeRegistry.Versions.List request = apigeeregistry.versions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Versions versions() {
          return new Versions();
        }

        /**
         * The "versions" collection of methods.
         */
        public class Versions {

          /**
           * Creates a specified version.
           *
           * Create a request for the method "versions.create".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiVersion}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiVersion content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiVersion> {

            private static final String REST_PATH = "v1/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Creates a specified version.
             *
             * Create a request for the method "versions.create".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiVersion}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiVersion content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiVersion.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of versions. Format:
             * `projects/locations/apis`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of versions. Format:
             * `projects/locations/apis`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID to use for the version, which will become the final component of the
             * version's resource name. This value should be 1-63 characters, and valid characters
             * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            @com.google.api.client.util.Key
            private java.lang.String apiVersionId;

            /** Required. The ID to use for the version, which will become the final component of the version's
           resource name. This value should be 1-63 characters, and valid characters are /a-z-/. Following
           AIP-162, IDs must not have the form of a UUID.
             */
            public java.lang.String getApiVersionId() {
              return apiVersionId;
            }

            /**
             * Required. The ID to use for the version, which will become the final component of the
             * version's resource name. This value should be 1-63 characters, and valid characters
             * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
             */
            public Create setApiVersionId(java.lang.String apiVersionId) {
              this.apiVersionId = apiVersionId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Removes a specified version and all of the resources that it owns.
           *
           * Create a request for the method "versions.delete".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the version to delete. Format: `projects/locations/apis/versions`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Removes a specified version and all of the resources that it owns.
             *
             * Create a request for the method "versions.delete".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the version to delete. Format: `projects/locations/apis/versions`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the version to delete. Format:
             * `projects/locations/apis/versions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the version to delete. Format: `projects/locations/apis/versions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the version to delete. Format:
             * `projects/locations/apis/versions`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, any child resources will also be deleted. (Otherwise, the request
             * will only work if there are no child resources.)
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** If set to true, any child resources will also be deleted. (Otherwise, the request will only work if
           there are no child resources.)
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * If set to true, any child resources will also be deleted. (Otherwise, the request
             * will only work if there are no child resources.)
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns a specified version.
           *
           * Create a request for the method "versions.get".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the version to retrieve. Format: `projects/locations/apis/versions`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiVersion> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Returns a specified version.
             *
             * Create a request for the method "versions.get".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the version to retrieve. Format: `projects/locations/apis/versions`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ApiVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the version to retrieve. Format:
             * `projects/locations/apis/versions`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the version to retrieve. Format: `projects/locations/apis/versions`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the version to retrieve. Format:
             * `projects/locations/apis/versions`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "versions.getIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "versions.getIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns matching versions.
           *
           * Create a request for the method "versions.list".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApiVersionsResponse> {

            private static final String REST_PATH = "v1/{+parent}/versions";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+$");

            /**
             * Returns matching versions.
             *
             * Create a request for the method "versions.list".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApiVersionsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent, which owns this collection of versions. Format:
             * `projects/locations/apis`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent, which owns this collection of versions. Format: `projects/locations/apis`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent, which owns this collection of versions. Format:
             * `projects/locations/apis`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** An expression that can be used to filter the list. Filters use the Common Expression Language and
           can refer to all message fields.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * An expression that can be used to filter the list. Filters use the Common Expression
             * Language and can refer to all message fields.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
           "desc" identifier, e.g. "foo desc,bar"
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
             * order using the "desc" identifier, e.g. "foo desc,bar"
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * The maximum number of versions to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of versions to return. The service may return fewer than this value. If
           unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
           coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of versions to return. The service may return fewer than this
             * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
             * values above 1000 will be coerced to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, received from a previous `ListApiVersions` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListApiVersions` must match the call that provided the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, received from a previous `ListApiVersions` call. Provide this to retrieve the
           subsequent page. When paginating, all other parameters provided to `ListApiVersions` must match the
           call that provided the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, received from a previous `ListApiVersions` call. Provide this to
             * retrieve the subsequent page. When paginating, all other parameters provided to
             * `ListApiVersions` must match the call that provided the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Used to modify a specified version.
           *
           * Create a request for the method "versions.patch".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Resource name.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiVersion}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiVersion content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiVersion> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Used to modify a specified version.
             *
             * Create a request for the method "versions.patch".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiVersion}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiVersion content) {
              super(ApigeeRegistry.this, "PATCH", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiVersion.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /** Resource name. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Resource name. */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * If set to true, and the version is not found, a new version will be created. In this
             * situation, `update_mask` is ignored.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean allowMissing;

            /** If set to true, and the version is not found, a new version will be created. In this situation,
           `update_mask` is ignored.
             */
            public java.lang.Boolean getAllowMissing() {
              return allowMissing;
            }

            /**
             * If set to true, and the version is not found, a new version will be created. In this
             * situation, `update_mask` is ignored.
             */
            public Patch setAllowMissing(java.lang.Boolean allowMissing) {
              this.allowMissing = allowMissing;
              return this;
            }

            /**
             * The list of fields to be updated. If omitted, all fields are updated that are set in
             * the request message (fields set to default values are ignored). If an asterisk "*" is
             * specified, all fields are updated, including fields that are unspecified/default in
             * the request.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The list of fields to be updated. If omitted, all fields are updated that are set in the request
           message (fields set to default values are ignored). If an asterisk "*" is specified, all fields are
           updated, including fields that are unspecified/default in the request.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The list of fields to be updated. If omitted, all fields are updated that are set in
             * the request message (fields set to default values are ignored). If an asterisk "*" is
             * specified, all fields are updated, including fields that are unspecified/default in
             * the request.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "versions.setIamPolicy".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "versions.setIamPolicy".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "versions.testIamPermissions".
           *
           * This request holds the parameters needed by the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "versions.testIamPermissions".
             *
             * This request holds the parameters needed by the the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
              super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Artifacts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
           *   {@code ApigeeRegistry.Artifacts.List request = apigeeregistry.artifacts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Artifacts artifacts() {
            return new Artifacts();
          }

          /**
           * The "artifacts" collection of methods.
           */
          public class Artifacts {

            /**
             * Creates a specified artifact.
             *
             * Create a request for the method "artifacts.create".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+parent}/artifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

              /**
               * Creates a specified artifact.
               *
               * Create a request for the method "artifacts.create".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the artifact, which will become the final component of
               * the artifact's resource name. This value should be 4-63 characters, and valid
               * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              @com.google.api.client.util.Key
              private java.lang.String artifactId;

              /** Required. The ID to use for the artifact, which will become the final component of the artifact's
             resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following
             AIP-162, IDs must not have the form of a UUID.
               */
              public java.lang.String getArtifactId() {
                return artifactId;
              }

              /**
               * Required. The ID to use for the artifact, which will become the final component of
               * the artifact's resource name. This value should be 4-63 characters, and valid
               * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              public Create setArtifactId(java.lang.String artifactId) {
                this.artifactId = artifactId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Removes a specified artifact.
             *
             * Create a request for the method "artifacts.delete".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Removes a specified artifact.
               *
               * Create a request for the method "artifacts.delete".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Returns a specified artifact.
             *
             * Create a request for the method "artifacts.get".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Returns a specified artifact.
               *
               * Create a request for the method "artifacts.get".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the
             * default behavior is to return the artifact uncompressed (the mime_type response field indicates
             * the exact format returned).
             *
             * Create a request for the method "artifacts.getContents".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
             * @return the request
             */
            public GetContents getContents(java.lang.String name) throws java.io.IOException {
              GetContents result = new GetContents(name);
              initialize(result);
              return result;
            }

            public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}:getContents";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Returns the contents of a specified artifact. If artifacts are stored with GZip compression,
               * the default behavior is to return the artifact uncompressed (the mime_type response field
               * indicates the exact format returned).
               *
               * Create a request for the method "artifacts.getContents".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
               * @since 1.13
               */
              protected GetContents(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetContents set$Xgafv(java.lang.String $Xgafv) {
                return (GetContents) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetContents setAccessToken(java.lang.String accessToken) {
                return (GetContents) super.setAccessToken(accessToken);
              }

              @Override
              public GetContents setAlt(java.lang.String alt) {
                return (GetContents) super.setAlt(alt);
              }

              @Override
              public GetContents setCallback(java.lang.String callback) {
                return (GetContents) super.setCallback(callback);
              }

              @Override
              public GetContents setFields(java.lang.String fields) {
                return (GetContents) super.setFields(fields);
              }

              @Override
              public GetContents setKey(java.lang.String key) {
                return (GetContents) super.setKey(key);
              }

              @Override
              public GetContents setOauthToken(java.lang.String oauthToken) {
                return (GetContents) super.setOauthToken(oauthToken);
              }

              @Override
              public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetContents) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetContents setQuotaUser(java.lang.String quotaUser) {
                return (GetContents) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetContents setUploadType(java.lang.String uploadType) {
                return (GetContents) super.setUploadType(uploadType);
              }

              @Override
              public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetContents) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the artifact whose contents should be retrieved. Format:
               * `{parent}/artifacts`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the artifact whose contents should be retrieved. Format:
               * `{parent}/artifacts`
               */
              public GetContents setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GetContents set(String parameterName, Object value) {
                return (GetContents) super.set(parameterName, value);
              }
            }
            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "artifacts.getIamPolicy".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "artifacts.getIamPolicy".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset. The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
             which resources support conditions in their IAM policies, see the [IAM
             documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns matching artifacts.
             *
             * Create a request for the method "artifacts.list".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse> {

              private static final String REST_PATH = "v1/{+parent}/artifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

              /**
               * Returns matching artifacts.
               *
               * Create a request for the method "artifacts.list".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that can be used to filter the list. Filters use the Common Expression Language and
             can refer to all message fields except contents.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
             "desc" identifier, e.g. "foo desc,bar"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of artifacts to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of artifacts to return. The service may return fewer than this value. If
             unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
             coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of artifacts to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListArtifacts` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListArtifacts` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the
             subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the
             call that provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListArtifacts` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListArtifacts` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Used to replace a specified artifact.
             *
             * Create a request for the method "artifacts.replaceArtifact".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
             * operation.
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
             * @return the request
             */
            public ReplaceArtifact replaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
              ReplaceArtifact result = new ReplaceArtifact(name, content);
              initialize(result);
              return result;
            }

            public class ReplaceArtifact extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Used to replace a specified artifact.
               *
               * Create a request for the method "artifacts.replaceArtifact".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
               * operation. <p> {@link ReplaceArtifact#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Resource name.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @since 1.13
               */
              protected ReplaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                super(ApigeeRegistry.this, "PUT", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public ReplaceArtifact set$Xgafv(java.lang.String $Xgafv) {
                return (ReplaceArtifact) super.set$Xgafv($Xgafv);
              }

              @Override
              public ReplaceArtifact setAccessToken(java.lang.String accessToken) {
                return (ReplaceArtifact) super.setAccessToken(accessToken);
              }

              @Override
              public ReplaceArtifact setAlt(java.lang.String alt) {
                return (ReplaceArtifact) super.setAlt(alt);
              }

              @Override
              public ReplaceArtifact setCallback(java.lang.String callback) {
                return (ReplaceArtifact) super.setCallback(callback);
              }

              @Override
              public ReplaceArtifact setFields(java.lang.String fields) {
                return (ReplaceArtifact) super.setFields(fields);
              }

              @Override
              public ReplaceArtifact setKey(java.lang.String key) {
                return (ReplaceArtifact) super.setKey(key);
              }

              @Override
              public ReplaceArtifact setOauthToken(java.lang.String oauthToken) {
                return (ReplaceArtifact) super.setOauthToken(oauthToken);
              }

              @Override
              public ReplaceArtifact setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ReplaceArtifact) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ReplaceArtifact setQuotaUser(java.lang.String quotaUser) {
                return (ReplaceArtifact) super.setQuotaUser(quotaUser);
              }

              @Override
              public ReplaceArtifact setUploadType(java.lang.String uploadType) {
                return (ReplaceArtifact) super.setUploadType(uploadType);
              }

              @Override
              public ReplaceArtifact setUploadProtocol(java.lang.String uploadProtocol) {
                return (ReplaceArtifact) super.setUploadProtocol(uploadProtocol);
              }

              /** Resource name. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Resource name. */
              public ReplaceArtifact setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public ReplaceArtifact set(String parameterName, Object value) {
                return (ReplaceArtifact) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "artifacts.setIamPolicy".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "artifacts.setIamPolicy".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "artifacts.testIamPermissions".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "artifacts.testIamPermissions".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/artifacts/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Specs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
           *   {@code ApigeeRegistry.Specs.List request = apigeeregistry.specs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Specs specs() {
            return new Specs();
          }

          /**
           * The "specs" collection of methods.
           */
          public class Specs {

            /**
             * Creates a specified spec.
             *
             * Create a request for the method "specs.create".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of specs. Format:
             *        `projects/locations/apis/versions`
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiSpec}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiSpec content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+parent}/specs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

              /**
               * Creates a specified spec.
               *
               * Create a request for the method "specs.create".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of specs. Format:
             *        `projects/locations/apis/versions`
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiSpec}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.ApiSpec content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of specs. Format:
               * `projects/locations/apis/versions`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of specs. Format:
             `projects/locations/apis/versions`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of specs. Format:
               * `projects/locations/apis/versions`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID to use for the spec, which will become the final component of the
               * spec's resource name. This value should be 4-63 characters, and valid characters
               * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              @com.google.api.client.util.Key
              private java.lang.String apiSpecId;

              /** Required. The ID to use for the spec, which will become the final component of the spec's resource
             name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs
             must not have the form of a UUID.
               */
              public java.lang.String getApiSpecId() {
                return apiSpecId;
              }

              /**
               * Required. The ID to use for the spec, which will become the final component of the
               * spec's resource name. This value should be 4-63 characters, and valid characters
               * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
               */
              public Create setApiSpecId(java.lang.String apiSpecId) {
                this.apiSpecId = apiSpecId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Removes a specified spec, all revisions, and all child resources (e.g., artifacts).
             *
             * Create a request for the method "specs.delete".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the spec to delete. Format: `projects/locations/apis/versions/specs`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Removes a specified spec, all revisions, and all child resources (e.g., artifacts).
               *
               * Create a request for the method "specs.delete".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the spec to delete. Format: `projects/locations/apis/versions/specs`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the spec to delete. Format:
               * `projects/locations/apis/versions/specs`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec to delete. Format: `projects/locations/apis/versions/specs`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the spec to delete. Format:
               * `projects/locations/apis/versions/specs`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * If set to true, any child resources will also be deleted. (Otherwise, the request
               * will only work if there are no child resources.)
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean force;

              /** If set to true, any child resources will also be deleted. (Otherwise, the request will only work if
             there are no child resources.)
               */
              public java.lang.Boolean getForce() {
                return force;
              }

              /**
               * If set to true, any child resources will also be deleted. (Otherwise, the request
               * will only work if there are no child resources.)
               */
              public Delete setForce(java.lang.Boolean force) {
                this.force = force;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a revision of a spec.
             *
             * Create a request for the method "specs.deleteRevision".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link DeleteRevision#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the spec revision to be deleted, with a revision ID explicitly included.
             *        Example: `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml
             *        @c7cfa2a8`
             * @return the request
             */
            public DeleteRevision deleteRevision(java.lang.String name) throws java.io.IOException {
              DeleteRevision result = new DeleteRevision(name);
              initialize(result);
              return result;
            }

            public class DeleteRevision extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+name}:deleteRevision";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Deletes a revision of a spec.
               *
               * Create a request for the method "specs.deleteRevision".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link DeleteRevision#execute()} method to invoke the remote
               * operation. <p> {@link DeleteRevision#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. The name of the spec revision to be deleted, with a revision ID explicitly included.
             *        Example: `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml
             *        @c7cfa2a8`
               * @since 1.13
               */
              protected DeleteRevision(java.lang.String name) {
                super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public DeleteRevision set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteRevision) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteRevision setAccessToken(java.lang.String accessToken) {
                return (DeleteRevision) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteRevision setAlt(java.lang.String alt) {
                return (DeleteRevision) super.setAlt(alt);
              }

              @Override
              public DeleteRevision setCallback(java.lang.String callback) {
                return (DeleteRevision) super.setCallback(callback);
              }

              @Override
              public DeleteRevision setFields(java.lang.String fields) {
                return (DeleteRevision) super.setFields(fields);
              }

              @Override
              public DeleteRevision setKey(java.lang.String key) {
                return (DeleteRevision) super.setKey(key);
              }

              @Override
              public DeleteRevision setOauthToken(java.lang.String oauthToken) {
                return (DeleteRevision) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteRevision) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteRevision setQuotaUser(java.lang.String quotaUser) {
                return (DeleteRevision) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteRevision setUploadType(java.lang.String uploadType) {
                return (DeleteRevision) super.setUploadType(uploadType);
              }

              @Override
              public DeleteRevision setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteRevision) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the spec revision to be deleted, with a revision ID
               * explicitly included. Example: `projects/sample/locations/global/apis/petstore/versi
               * ons/1.0.0/specs/openapi.yaml@c7cfa2a8`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec revision to be deleted, with a revision ID explicitly included.
             Example:
             `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the spec revision to be deleted, with a revision ID
               * explicitly included. Example: `projects/sample/locations/global/apis/petstore/versi
               * ons/1.0.0/specs/openapi.yaml@c7cfa2a8`
               */
              public DeleteRevision setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public DeleteRevision set(String parameterName, Object value) {
                return (DeleteRevision) super.set(parameterName, value);
              }
            }
            /**
             * Returns a specified spec.
             *
             * Create a request for the method "specs.get".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the spec to retrieve. Format: `projects/locations/apis/versions/specs`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Returns a specified spec.
               *
               * Create a request for the method "specs.get".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the spec to retrieve. Format: `projects/locations/apis/versions/specs`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the spec to retrieve. Format:
               * `projects/locations/apis/versions/specs`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec to retrieve. Format: `projects/locations/apis/versions/specs`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the spec to retrieve. Format:
               * `projects/locations/apis/versions/specs`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Returns the contents of a specified spec. If specs are stored with GZip compression, the default
             * behavior is to return the spec uncompressed (the mime_type response field indicates the exact
             * format returned).
             *
             * Create a request for the method "specs.getContents".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the spec whose contents should be retrieved. Format:
             *        `projects/locations/apis/versions/specs`
             * @return the request
             */
            public GetContents getContents(java.lang.String name) throws java.io.IOException {
              GetContents result = new GetContents(name);
              initialize(result);
              return result;
            }

            public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}:getContents";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Returns the contents of a specified spec. If specs are stored with GZip compression, the
               * default behavior is to return the spec uncompressed (the mime_type response field indicates the
               * exact format returned).
               *
               * Create a request for the method "specs.getContents".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the spec whose contents should be retrieved. Format:
             *        `projects/locations/apis/versions/specs`
               * @since 1.13
               */
              protected GetContents(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetContents set$Xgafv(java.lang.String $Xgafv) {
                return (GetContents) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetContents setAccessToken(java.lang.String accessToken) {
                return (GetContents) super.setAccessToken(accessToken);
              }

              @Override
              public GetContents setAlt(java.lang.String alt) {
                return (GetContents) super.setAlt(alt);
              }

              @Override
              public GetContents setCallback(java.lang.String callback) {
                return (GetContents) super.setCallback(callback);
              }

              @Override
              public GetContents setFields(java.lang.String fields) {
                return (GetContents) super.setFields(fields);
              }

              @Override
              public GetContents setKey(java.lang.String key) {
                return (GetContents) super.setKey(key);
              }

              @Override
              public GetContents setOauthToken(java.lang.String oauthToken) {
                return (GetContents) super.setOauthToken(oauthToken);
              }

              @Override
              public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetContents) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetContents setQuotaUser(java.lang.String quotaUser) {
                return (GetContents) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetContents setUploadType(java.lang.String uploadType) {
                return (GetContents) super.setUploadType(uploadType);
              }

              @Override
              public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetContents) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the spec whose contents should be retrieved. Format:
               * `projects/locations/apis/versions/specs`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec whose contents should be retrieved. Format:
             `projects/locations/apis/versions/specs`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the spec whose contents should be retrieved. Format:
               * `projects/locations/apis/versions/specs`
               */
              public GetContents setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GetContents set(String parameterName, Object value) {
                return (GetContents) super.set(parameterName, value);
              }
            }
            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "specs.getIamPolicy".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "specs.getIamPolicy".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset. The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
             which resources support conditions in their IAM policies, see the [IAM
             documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns matching specs.
             *
             * Create a request for the method "specs.list".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The parent, which owns this collection of specs. Format:
             *        `projects/locations/apis/versions`
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApiSpecsResponse> {

              private static final String REST_PATH = "v1/{+parent}/specs";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");

              /**
               * Returns matching specs.
               *
               * Create a request for the method "specs.list".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The parent, which owns this collection of specs. Format:
             *        `projects/locations/apis/versions`
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApiSpecsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The parent, which owns this collection of specs. Format:
               * `projects/locations/apis/versions`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The parent, which owns this collection of specs. Format:
             `projects/locations/apis/versions`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The parent, which owns this collection of specs. Format:
               * `projects/locations/apis/versions`
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that can be used to filter the list. Filters use the Common Expression Language and
             can refer to all message fields except contents.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields except contents.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
             "desc" identifier, e.g. "foo desc,bar"
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
               * order using the "desc" identifier, e.g. "foo desc,bar"
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * The maximum number of specs to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of specs to return. The service may return fewer than this value. If
             unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
             coerced to 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * The maximum number of specs to return. The service may return fewer than this
               * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
               * values above 1000 will be coerced to 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * A page token, received from a previous `ListApiSpecs` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListApiSpecs` must match the call that provided the page token.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent
             page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that
             provided the page token.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * A page token, received from a previous `ListApiSpecs` call. Provide this to
               * retrieve the subsequent page. When paginating, all other parameters provided to
               * `ListApiSpecs` must match the call that provided the page token.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Lists all revisions of a spec. Revisions are returned in descending order of revision creation
             * time.
             *
             * Create a request for the method "specs.listRevisions".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link ListRevisions#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the spec to list revisions for.
             * @return the request
             */
            public ListRevisions listRevisions(java.lang.String name) throws java.io.IOException {
              ListRevisions result = new ListRevisions(name);
              initialize(result);
              return result;
            }

            public class ListRevisions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListApiSpecRevisionsResponse> {

              private static final String REST_PATH = "v1/{+name}:listRevisions";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Lists all revisions of a spec. Revisions are returned in descending order of revision creation
               * time.
               *
               * Create a request for the method "specs.listRevisions".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link ListRevisions#execute()} method to invoke the remote
               * operation. <p> {@link ListRevisions#initialize(com.google.api.client.googleapis.services.Abstra
               * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. The name of the spec to list revisions for.
               * @since 1.13
               */
              protected ListRevisions(java.lang.String name) {
                super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListApiSpecRevisionsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public ListRevisions set$Xgafv(java.lang.String $Xgafv) {
                return (ListRevisions) super.set$Xgafv($Xgafv);
              }

              @Override
              public ListRevisions setAccessToken(java.lang.String accessToken) {
                return (ListRevisions) super.setAccessToken(accessToken);
              }

              @Override
              public ListRevisions setAlt(java.lang.String alt) {
                return (ListRevisions) super.setAlt(alt);
              }

              @Override
              public ListRevisions setCallback(java.lang.String callback) {
                return (ListRevisions) super.setCallback(callback);
              }

              @Override
              public ListRevisions setFields(java.lang.String fields) {
                return (ListRevisions) super.setFields(fields);
              }

              @Override
              public ListRevisions setKey(java.lang.String key) {
                return (ListRevisions) super.setKey(key);
              }

              @Override
              public ListRevisions setOauthToken(java.lang.String oauthToken) {
                return (ListRevisions) super.setOauthToken(oauthToken);
              }

              @Override
              public ListRevisions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ListRevisions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ListRevisions setQuotaUser(java.lang.String quotaUser) {
                return (ListRevisions) super.setQuotaUser(quotaUser);
              }

              @Override
              public ListRevisions setUploadType(java.lang.String uploadType) {
                return (ListRevisions) super.setUploadType(uploadType);
              }

              @Override
              public ListRevisions setUploadProtocol(java.lang.String uploadProtocol) {
                return (ListRevisions) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the spec to list revisions for. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec to list revisions for.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the spec to list revisions for. */
              public ListRevisions setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** An expression that can be used to filter the list. Filters use the Common Expression Language and
             can refer to all message fields.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * An expression that can be used to filter the list. Filters use the Common
               * Expression Language and can refer to all message fields.
               */
              public ListRevisions setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /** The maximum number of revisions to return per page. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of revisions to return per page.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The maximum number of revisions to return per page. */
              public ListRevisions setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * The page token, received from a previous ListApiSpecRevisions call. Provide this to
               * retrieve the subsequent page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The page token, received from a previous ListApiSpecRevisions call. Provide this to retrieve the
             subsequent page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * The page token, received from a previous ListApiSpecRevisions call. Provide this to
               * retrieve the subsequent page.
               */
              public ListRevisions setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public ListRevisions set(String parameterName, Object value) {
                return (ListRevisions) super.set(parameterName, value);
              }
            }
            /**
             * Used to modify a specified spec.
             *
             * Create a request for the method "specs.patch".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Resource name.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiSpec}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiSpec content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Used to modify a specified spec.
               *
               * Create a request for the method "specs.patch".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Resource name.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.ApiSpec}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.ApiSpec content) {
                super(ApigeeRegistry.this, "PATCH", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /** Resource name. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Resource name. */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * If set to true, and the spec is not found, a new spec will be created. In this
               * situation, `update_mask` is ignored.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean allowMissing;

              /** If set to true, and the spec is not found, a new spec will be created. In this situation,
             `update_mask` is ignored.
               */
              public java.lang.Boolean getAllowMissing() {
                return allowMissing;
              }

              /**
               * If set to true, and the spec is not found, a new spec will be created. In this
               * situation, `update_mask` is ignored.
               */
              public Patch setAllowMissing(java.lang.Boolean allowMissing) {
                this.allowMissing = allowMissing;
                return this;
              }

              /**
               * The list of fields to be updated. If omitted, all fields are updated that are set
               * in the request message (fields set to default values are ignored). If an asterisk
               * "*" is specified, all fields are updated, including fields that are
               * unspecified/default in the request.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** The list of fields to be updated. If omitted, all fields are updated that are set in the request
             message (fields set to default values are ignored). If an asterisk "*" is specified, all fields are
             updated, including fields that are unspecified/default in the request.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * The list of fields to be updated. If omitted, all fields are updated that are set
               * in the request message (fields set to default values are ignored). If an asterisk
               * "*" is specified, all fields are updated, including fields that are
               * unspecified/default in the request.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Sets the current revision to a specified prior revision. Note that this creates a new revision
             * with a new revision ID.
             *
             * Create a request for the method "specs.rollback".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
             *
             * @param name Required. The spec being rolled back.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.RollbackApiSpecRequest}
             * @return the request
             */
            public Rollback rollback(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.RollbackApiSpecRequest content) throws java.io.IOException {
              Rollback result = new Rollback(name, content);
              initialize(result);
              return result;
            }

            public class Rollback extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+name}:rollback";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Sets the current revision to a specified prior revision. Note that this creates a new revision
               * with a new revision ID.
               *
               * Create a request for the method "specs.rollback".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
               * <p> {@link
               * Rollback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The spec being rolled back.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.RollbackApiSpecRequest}
               * @since 1.13
               */
              protected Rollback(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.RollbackApiSpecRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public Rollback set$Xgafv(java.lang.String $Xgafv) {
                return (Rollback) super.set$Xgafv($Xgafv);
              }

              @Override
              public Rollback setAccessToken(java.lang.String accessToken) {
                return (Rollback) super.setAccessToken(accessToken);
              }

              @Override
              public Rollback setAlt(java.lang.String alt) {
                return (Rollback) super.setAlt(alt);
              }

              @Override
              public Rollback setCallback(java.lang.String callback) {
                return (Rollback) super.setCallback(callback);
              }

              @Override
              public Rollback setFields(java.lang.String fields) {
                return (Rollback) super.setFields(fields);
              }

              @Override
              public Rollback setKey(java.lang.String key) {
                return (Rollback) super.setKey(key);
              }

              @Override
              public Rollback setOauthToken(java.lang.String oauthToken) {
                return (Rollback) super.setOauthToken(oauthToken);
              }

              @Override
              public Rollback setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Rollback) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Rollback setQuotaUser(java.lang.String quotaUser) {
                return (Rollback) super.setQuotaUser(quotaUser);
              }

              @Override
              public Rollback setUploadType(java.lang.String uploadType) {
                return (Rollback) super.setUploadType(uploadType);
              }

              @Override
              public Rollback setUploadProtocol(java.lang.String uploadProtocol) {
                return (Rollback) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The spec being rolled back. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The spec being rolled back.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The spec being rolled back. */
              public Rollback setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Rollback set(String parameterName, Object value) {
                return (Rollback) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "specs.setIamPolicy".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

              private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "specs.setIamPolicy".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Adds a tag to a specified revision of a spec.
             *
             * Create a request for the method "specs.tagRevision".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TagRevision#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the spec to be tagged, including the revision ID.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TagApiSpecRevisionRequest}
             * @return the request
             */
            public TagRevision tagRevision(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.TagApiSpecRevisionRequest content) throws java.io.IOException {
              TagRevision result = new TagRevision(name, content);
              initialize(result);
              return result;
            }

            public class TagRevision extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ApiSpec> {

              private static final String REST_PATH = "v1/{+name}:tagRevision";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Adds a tag to a specified revision of a spec.
               *
               * Create a request for the method "specs.tagRevision".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link TagRevision#execute()} method to invoke the remote
               * operation. <p> {@link
               * TagRevision#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the spec to be tagged, including the revision ID.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TagApiSpecRevisionRequest}
               * @since 1.13
               */
              protected TagRevision(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.TagApiSpecRevisionRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.ApiSpec.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public TagRevision set$Xgafv(java.lang.String $Xgafv) {
                return (TagRevision) super.set$Xgafv($Xgafv);
              }

              @Override
              public TagRevision setAccessToken(java.lang.String accessToken) {
                return (TagRevision) super.setAccessToken(accessToken);
              }

              @Override
              public TagRevision setAlt(java.lang.String alt) {
                return (TagRevision) super.setAlt(alt);
              }

              @Override
              public TagRevision setCallback(java.lang.String callback) {
                return (TagRevision) super.setCallback(callback);
              }

              @Override
              public TagRevision setFields(java.lang.String fields) {
                return (TagRevision) super.setFields(fields);
              }

              @Override
              public TagRevision setKey(java.lang.String key) {
                return (TagRevision) super.setKey(key);
              }

              @Override
              public TagRevision setOauthToken(java.lang.String oauthToken) {
                return (TagRevision) super.setOauthToken(oauthToken);
              }

              @Override
              public TagRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TagRevision) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TagRevision setQuotaUser(java.lang.String quotaUser) {
                return (TagRevision) super.setQuotaUser(quotaUser);
              }

              @Override
              public TagRevision setUploadType(java.lang.String uploadType) {
                return (TagRevision) super.setUploadType(uploadType);
              }

              @Override
              public TagRevision setUploadProtocol(java.lang.String uploadProtocol) {
                return (TagRevision) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the spec to be tagged, including the revision ID. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the spec to be tagged, including the revision ID.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the spec to be tagged, including the revision ID. */
              public TagRevision setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public TagRevision set(String parameterName, Object value) {
                return (TagRevision) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "specs.testIamPermissions".
             *
             * This request holds the parameters needed by the apigeeregistry server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "specs.testIamPermissions".
               *
               * This request holds the parameters needed by the the apigeeregistry server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
                super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Artifacts collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
             *   {@code ApigeeRegistry.Artifacts.List request = apigeeregistry.artifacts().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Artifacts artifacts() {
              return new Artifacts();
            }

            /**
             * The "artifacts" collection of methods.
             */
            public class Artifacts {

              /**
               * Creates a specified artifact.
               *
               * Create a request for the method "artifacts.create".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @return the request
               */
              public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
                Create result = new Create(parent, content);
                initialize(result);
                return result;
              }

              public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

                private static final String REST_PATH = "v1/{+parent}/artifacts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

                /**
                 * Creates a specified artifact.
                 *
                 * Create a request for the method "artifacts.create".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
                 * @since 1.13
                 */
                protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                  super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                  }
                }

                @Override
                public Create set$Xgafv(java.lang.String $Xgafv) {
                  return (Create) super.set$Xgafv($Xgafv);
                }

                @Override
                public Create setAccessToken(java.lang.String accessToken) {
                  return (Create) super.setAccessToken(accessToken);
                }

                @Override
                public Create setAlt(java.lang.String alt) {
                  return (Create) super.setAlt(alt);
                }

                @Override
                public Create setCallback(java.lang.String callback) {
                  return (Create) super.setCallback(callback);
                }

                @Override
                public Create setFields(java.lang.String fields) {
                  return (Create) super.setFields(fields);
                }

                @Override
                public Create setKey(java.lang.String key) {
                  return (Create) super.setKey(key);
                }

                @Override
                public Create setOauthToken(java.lang.String oauthToken) {
                  return (Create) super.setOauthToken(oauthToken);
                }

                @Override
                public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Create) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Create setQuotaUser(java.lang.String quotaUser) {
                  return (Create) super.setQuotaUser(quotaUser);
                }

                @Override
                public Create setUploadType(java.lang.String uploadType) {
                  return (Create) super.setUploadType(uploadType);
                }

                @Override
                public Create setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Create) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                public Create setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The ID to use for the artifact, which will become the final component
                 * of the artifact's resource name. This value should be 4-63 characters, and valid
                 * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
                 */
                @com.google.api.client.util.Key
                private java.lang.String artifactId;

                /** Required. The ID to use for the artifact, which will become the final component of the artifact's
               resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following
               AIP-162, IDs must not have the form of a UUID.
                 */
                public java.lang.String getArtifactId() {
                  return artifactId;
                }

                /**
                 * Required. The ID to use for the artifact, which will become the final component
                 * of the artifact's resource name. This value should be 4-63 characters, and valid
                 * characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
                 */
                public Create setArtifactId(java.lang.String artifactId) {
                  this.artifactId = artifactId;
                  return this;
                }

                @Override
                public Create set(String parameterName, Object value) {
                  return (Create) super.set(parameterName, value);
                }
              }
              /**
               * Removes a specified artifact.
               *
               * Create a request for the method "artifacts.delete".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
               * @return the request
               */
              public Delete delete(java.lang.String name) throws java.io.IOException {
                Delete result = new Delete(name);
                initialize(result);
                return result;
              }

              public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Removes a specified artifact.
                 *
                 * Create a request for the method "artifacts.delete".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
                 * @since 1.13
                 */
                protected Delete(java.lang.String name) {
                  super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the artifact to delete. Format: `{parent}/artifacts`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
                public Delete setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * Returns a specified artifact.
               *
               * Create a request for the method "artifacts.get".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Returns a specified artifact.
                 *
                 * Create a request for the method "artifacts.get".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
                 * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the
               * default behavior is to return the artifact uncompressed (the mime_type response field indicates
               * the exact format returned).
               *
               * Create a request for the method "artifacts.getContents".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
               * operation.
               *
               * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
               * @return the request
               */
              public GetContents getContents(java.lang.String name) throws java.io.IOException {
                GetContents result = new GetContents(name);
                initialize(result);
                return result;
              }

              public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

                private static final String REST_PATH = "v1/{+name}:getContents";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Returns the contents of a specified artifact. If artifacts are stored with GZip compression,
                 * the default behavior is to return the artifact uncompressed (the mime_type response field
                 * indicates the exact format returned).
                 *
                 * Create a request for the method "artifacts.getContents".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
                 * @since 1.13
                 */
                protected GetContents(java.lang.String name) {
                  super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public GetContents set$Xgafv(java.lang.String $Xgafv) {
                  return (GetContents) super.set$Xgafv($Xgafv);
                }

                @Override
                public GetContents setAccessToken(java.lang.String accessToken) {
                  return (GetContents) super.setAccessToken(accessToken);
                }

                @Override
                public GetContents setAlt(java.lang.String alt) {
                  return (GetContents) super.setAlt(alt);
                }

                @Override
                public GetContents setCallback(java.lang.String callback) {
                  return (GetContents) super.setCallback(callback);
                }

                @Override
                public GetContents setFields(java.lang.String fields) {
                  return (GetContents) super.setFields(fields);
                }

                @Override
                public GetContents setKey(java.lang.String key) {
                  return (GetContents) super.setKey(key);
                }

                @Override
                public GetContents setOauthToken(java.lang.String oauthToken) {
                  return (GetContents) super.setOauthToken(oauthToken);
                }

                @Override
                public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (GetContents) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public GetContents setQuotaUser(java.lang.String quotaUser) {
                  return (GetContents) super.setQuotaUser(quotaUser);
                }

                @Override
                public GetContents setUploadType(java.lang.String uploadType) {
                  return (GetContents) super.setUploadType(uploadType);
                }

                @Override
                public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
                  return (GetContents) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the artifact whose contents should be retrieved. Format:
                 * `{parent}/artifacts`
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the artifact whose contents should be retrieved. Format:
                 * `{parent}/artifacts`
                 */
                public GetContents setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public GetContents set(String parameterName, Object value) {
                  return (GetContents) super.set(parameterName, value);
                }
              }
              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
               * does not have a policy set.
               *
               * Create a request for the method "artifacts.getIamPolicy".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation.
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
               * @return the request
               */
              public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
                GetIamPolicy result = new GetIamPolicy(resource);
                initialize(result);
                return result;
              }

              public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

                private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

                private final java.util.regex.Pattern RESOURCE_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Gets the access control policy for a resource. Returns an empty policy if the resource exists
                 * and does not have a policy set.
                 *
                 * Create a request for the method "artifacts.getIamPolicy".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
                 * @since 1.13
                 */
                protected GetIamPolicy(java.lang.String resource) {
                  super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                  this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                  return (GetIamPolicy) super.set$Xgafv($Xgafv);
                }

                @Override
                public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                  return (GetIamPolicy) super.setAccessToken(accessToken);
                }

                @Override
                public GetIamPolicy setAlt(java.lang.String alt) {
                  return (GetIamPolicy) super.setAlt(alt);
                }

                @Override
                public GetIamPolicy setCallback(java.lang.String callback) {
                  return (GetIamPolicy) super.setCallback(callback);
                }

                @Override
                public GetIamPolicy setFields(java.lang.String fields) {
                  return (GetIamPolicy) super.setFields(fields);
                }

                @Override
                public GetIamPolicy setKey(java.lang.String key) {
                  return (GetIamPolicy) super.setKey(key);
                }

                @Override
                public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                  return (GetIamPolicy) super.setOauthToken(oauthToken);
                }

                @Override
                public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                  return (GetIamPolicy) super.setQuotaUser(quotaUser);
                }

                @Override
                public GetIamPolicy setUploadType(java.lang.String uploadType) {
                  return (GetIamPolicy) super.setUploadType(uploadType);
                }

                @Override
                public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                  return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * REQUIRED: The resource for which the policy is being requested. See [Resource
                 * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
                 * value for this field.
                 */
                @com.google.api.client.util.Key
                private java.lang.String resource;

                /** REQUIRED: The resource for which the policy is being requested. See [Resource
               names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
               field.
                 */
                public java.lang.String getResource() {
                  return resource;
                }

                /**
                 * REQUIRED: The resource for which the policy is being requested. See [Resource
                 * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
                 * value for this field.
                 */
                public GetIamPolicy setResource(java.lang.String resource) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.resource = resource;
                  return this;
                }

                /**
                 * Optional. The maximum policy version that will be used to format the policy.
                 * Valid values are 0, 1, and 3. Requests specifying an invalid value will be
                 * rejected. Requests for policies with any conditional role bindings must specify
                 * version 3. Policies with no conditional role bindings may specify any valid value
                 * or leave the field unset. The policy in the response might use the policy version
                 * that you specified, or it might use a lower policy version. For example, if you
                 * specify version 3, but the policy has no conditional role bindings, the response
                 * uses version 1. To learn which resources support conditions in their IAM
                 * policies, see the [IAM
                 * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                 */
                @com.google.api.client.util.Key("options.requestedPolicyVersion")
                private java.lang.Integer optionsRequestedPolicyVersion;

                /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
               and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
               conditional role bindings must specify version 3. Policies with no conditional role bindings may
               specify any valid value or leave the field unset. The policy in the response might use the policy
               version that you specified, or it might use a lower policy version. For example, if you specify
               version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
               which resources support conditions in their IAM policies, see the [IAM
               documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                 */
                public java.lang.Integer getOptionsRequestedPolicyVersion() {
                  return optionsRequestedPolicyVersion;
                }

                /**
                 * Optional. The maximum policy version that will be used to format the policy.
                 * Valid values are 0, 1, and 3. Requests specifying an invalid value will be
                 * rejected. Requests for policies with any conditional role bindings must specify
                 * version 3. Policies with no conditional role bindings may specify any valid value
                 * or leave the field unset. The policy in the response might use the policy version
                 * that you specified, or it might use a lower policy version. For example, if you
                 * specify version 3, but the policy has no conditional role bindings, the response
                 * uses version 1. To learn which resources support conditions in their IAM
                 * policies, see the [IAM
                 * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                 */
                public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                  this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                  return this;
                }

                @Override
                public GetIamPolicy set(String parameterName, Object value) {
                  return (GetIamPolicy) super.set(parameterName, value);
                }
              }
              /**
               * Returns matching artifacts.
               *
               * Create a request for the method "artifacts.list".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse> {

                private static final String REST_PATH = "v1/{+parent}/artifacts";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");

                /**
                 * Returns matching artifacts.
                 *
                 * Create a request for the method "artifacts.list".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
                 * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The parent, which owns this collection of artifacts. Format: `{parent}`
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * An expression that can be used to filter the list. Filters use the Common
                 * Expression Language and can refer to all message fields except contents.
                 */
                @com.google.api.client.util.Key
                private java.lang.String filter;

                /** An expression that can be used to filter the list. Filters use the Common Expression Language and
               can refer to all message fields except contents.
                 */
                public java.lang.String getFilter() {
                  return filter;
                }

                /**
                 * An expression that can be used to filter the list. Filters use the Common
                 * Expression Language and can refer to all message fields except contents.
                 */
                public List setFilter(java.lang.String filter) {
                  this.filter = filter;
                  return this;
                }

                /**
                 * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
                 * descending order using the "desc" identifier, e.g. "foo desc,bar"
                 */
                @com.google.api.client.util.Key
                private java.lang.String orderBy;

                /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
               "desc" identifier, e.g. "foo desc,bar"
                 */
                public java.lang.String getOrderBy() {
                  return orderBy;
                }

                /**
                 * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in
                 * descending order using the "desc" identifier, e.g. "foo desc,bar"
                 */
                public List setOrderBy(java.lang.String orderBy) {
                  this.orderBy = orderBy;
                  return this;
                }

                /**
                 * The maximum number of artifacts to return. The service may return fewer than this
                 * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
                 * values above 1000 will be coerced to 1000.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer pageSize;

                /** The maximum number of artifacts to return. The service may return fewer than this value. If
               unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
               coerced to 1000.
                 */
                public java.lang.Integer getPageSize() {
                  return pageSize;
                }

                /**
                 * The maximum number of artifacts to return. The service may return fewer than this
                 * value. If unspecified, at most 50 values will be returned. The maximum is 1000;
                 * values above 1000 will be coerced to 1000.
                 */
                public List setPageSize(java.lang.Integer pageSize) {
                  this.pageSize = pageSize;
                  return this;
                }

                /**
                 * A page token, received from a previous `ListArtifacts` call. Provide this to
                 * retrieve the subsequent page. When paginating, all other parameters provided to
                 * `ListArtifacts` must match the call that provided the page token.
                 */
                @com.google.api.client.util.Key
                private java.lang.String pageToken;

                /** A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the
               subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the
               call that provided the page token.
                 */
                public java.lang.String getPageToken() {
                  return pageToken;
                }

                /**
                 * A page token, received from a previous `ListArtifacts` call. Provide this to
                 * retrieve the subsequent page. When paginating, all other parameters provided to
                 * `ListArtifacts` must match the call that provided the page token.
                 */
                public List setPageToken(java.lang.String pageToken) {
                  this.pageToken = pageToken;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }
              /**
               * Used to replace a specified artifact.
               *
               * Create a request for the method "artifacts.replaceArtifact".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
               * operation.
               *
               * @param name Resource name.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
               * @return the request
               */
              public ReplaceArtifact replaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
                ReplaceArtifact result = new ReplaceArtifact(name, content);
                initialize(result);
                return result;
              }

              public class ReplaceArtifact extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Used to replace a specified artifact.
                 *
                 * Create a request for the method "artifacts.replaceArtifact".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
                 * operation. <p> {@link ReplaceArtifact#initialize(com.google.api.client.googleapis.services.Abst
                 * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                 * the constructor. </p>
                 *
                 * @param name Resource name.
                 * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
                 * @since 1.13
                 */
                protected ReplaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
                  super(ApigeeRegistry.this, "PUT", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public ReplaceArtifact set$Xgafv(java.lang.String $Xgafv) {
                  return (ReplaceArtifact) super.set$Xgafv($Xgafv);
                }

                @Override
                public ReplaceArtifact setAccessToken(java.lang.String accessToken) {
                  return (ReplaceArtifact) super.setAccessToken(accessToken);
                }

                @Override
                public ReplaceArtifact setAlt(java.lang.String alt) {
                  return (ReplaceArtifact) super.setAlt(alt);
                }

                @Override
                public ReplaceArtifact setCallback(java.lang.String callback) {
                  return (ReplaceArtifact) super.setCallback(callback);
                }

                @Override
                public ReplaceArtifact setFields(java.lang.String fields) {
                  return (ReplaceArtifact) super.setFields(fields);
                }

                @Override
                public ReplaceArtifact setKey(java.lang.String key) {
                  return (ReplaceArtifact) super.setKey(key);
                }

                @Override
                public ReplaceArtifact setOauthToken(java.lang.String oauthToken) {
                  return (ReplaceArtifact) super.setOauthToken(oauthToken);
                }

                @Override
                public ReplaceArtifact setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (ReplaceArtifact) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public ReplaceArtifact setQuotaUser(java.lang.String quotaUser) {
                  return (ReplaceArtifact) super.setQuotaUser(quotaUser);
                }

                @Override
                public ReplaceArtifact setUploadType(java.lang.String uploadType) {
                  return (ReplaceArtifact) super.setUploadType(uploadType);
                }

                @Override
                public ReplaceArtifact setUploadProtocol(java.lang.String uploadProtocol) {
                  return (ReplaceArtifact) super.setUploadProtocol(uploadProtocol);
                }

                /** Resource name. */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Resource name.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /** Resource name. */
                public ReplaceArtifact setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public ReplaceArtifact set(String parameterName, Object value) {
                  return (ReplaceArtifact) super.set(parameterName, value);
                }
              }
              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "artifacts.setIamPolicy".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation.
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
               * @return the request
               */
              public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
                SetIamPolicy result = new SetIamPolicy(resource, content);
                initialize(result);
                return result;
              }

              public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

                private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

                private final java.util.regex.Pattern RESOURCE_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Sets the access control policy on the specified resource. Replaces any existing policy. Can
                 * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                 *
                 * Create a request for the method "artifacts.setIamPolicy".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
                 * operation. <p> {@link
                 * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
                 * must be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
                 * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
                 * @since 1.13
                 */
                protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
                  super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
                  this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                  return (SetIamPolicy) super.set$Xgafv($Xgafv);
                }

                @Override
                public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                  return (SetIamPolicy) super.setAccessToken(accessToken);
                }

                @Override
                public SetIamPolicy setAlt(java.lang.String alt) {
                  return (SetIamPolicy) super.setAlt(alt);
                }

                @Override
                public SetIamPolicy setCallback(java.lang.String callback) {
                  return (SetIamPolicy) super.setCallback(callback);
                }

                @Override
                public SetIamPolicy setFields(java.lang.String fields) {
                  return (SetIamPolicy) super.setFields(fields);
                }

                @Override
                public SetIamPolicy setKey(java.lang.String key) {
                  return (SetIamPolicy) super.setKey(key);
                }

                @Override
                public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                  return (SetIamPolicy) super.setOauthToken(oauthToken);
                }

                @Override
                public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                  return (SetIamPolicy) super.setQuotaUser(quotaUser);
                }

                @Override
                public SetIamPolicy setUploadType(java.lang.String uploadType) {
                  return (SetIamPolicy) super.setUploadType(uploadType);
                }

                @Override
                public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                  return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * REQUIRED: The resource for which the policy is being specified. See [Resource
                 * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
                 * value for this field.
                 */
                @com.google.api.client.util.Key
                private java.lang.String resource;

                /** REQUIRED: The resource for which the policy is being specified. See [Resource
               names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
               field.
                 */
                public java.lang.String getResource() {
                  return resource;
                }

                /**
                 * REQUIRED: The resource for which the policy is being specified. See [Resource
                 * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
                 * value for this field.
                 */
                public SetIamPolicy setResource(java.lang.String resource) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.resource = resource;
                  return this;
                }

                @Override
                public SetIamPolicy set(String parameterName, Object value) {
                  return (SetIamPolicy) super.set(parameterName, value);
                }
              }
              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not exist,
               * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
               * designed to be used for building permission-aware UIs and command-line tools, not for
               * authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "artifacts.testIamPermissions".
               *
               * This request holds the parameters needed by the apigeeregistry server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation.
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
               * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
               * @return the request
               */
              public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
                TestIamPermissions result = new TestIamPermissions(resource, content);
                initialize(result);
                return result;
              }

              public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

                private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

                private final java.util.regex.Pattern RESOURCE_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");

                /**
                 * Returns permissions that a caller has on the specified resource. If the resource does not
                 * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
                 * operation is designed to be used for building permission-aware UIs and command-line tools, not
                 * for authorization checking. This operation may "fail open" without warning.
                 *
                 * Create a request for the method "artifacts.testIamPermissions".
                 *
                 * This request holds the parameters needed by the the apigeeregistry server.  After setting any
                 * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
                 * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
                 * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
                 * invoking the constructor. </p>
                 *
                 * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
               *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
               *        this field.
                 * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
                 * @since 1.13
                 */
                protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
                  super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
                  this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                }

                @Override
                public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                  return (TestIamPermissions) super.set$Xgafv($Xgafv);
                }

                @Override
                public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                  return (TestIamPermissions) super.setAccessToken(accessToken);
                }

                @Override
                public TestIamPermissions setAlt(java.lang.String alt) {
                  return (TestIamPermissions) super.setAlt(alt);
                }

                @Override
                public TestIamPermissions setCallback(java.lang.String callback) {
                  return (TestIamPermissions) super.setCallback(callback);
                }

                @Override
                public TestIamPermissions setFields(java.lang.String fields) {
                  return (TestIamPermissions) super.setFields(fields);
                }

                @Override
                public TestIamPermissions setKey(java.lang.String key) {
                  return (TestIamPermissions) super.setKey(key);
                }

                @Override
                public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                  return (TestIamPermissions) super.setOauthToken(oauthToken);
                }

                @Override
                public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                  return (TestIamPermissions) super.setQuotaUser(quotaUser);
                }

                @Override
                public TestIamPermissions setUploadType(java.lang.String uploadType) {
                  return (TestIamPermissions) super.setUploadType(uploadType);
                }

                @Override
                public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                  return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * REQUIRED: The resource for which the policy detail is being requested. See
                 * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
                 * appropriate value for this field.
                 */
                @com.google.api.client.util.Key
                private java.lang.String resource;

                /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
               names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
               field.
                 */
                public java.lang.String getResource() {
                  return resource;
                }

                /**
                 * REQUIRED: The resource for which the policy detail is being requested. See
                 * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
                 * appropriate value for this field.
                 */
                public TestIamPermissions setResource(java.lang.String resource) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+/specs/[^/]+/artifacts/[^/]+$");
                  }
                  this.resource = resource;
                  return this;
                }

                @Override
                public TestIamPermissions set(String parameterName, Object value) {
                  return (TestIamPermissions) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
      /**
       * An accessor for creating requests from the Artifacts collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
       *   {@code ApigeeRegistry.Artifacts.List request = apigeeregistry.artifacts().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Artifacts artifacts() {
        return new Artifacts();
      }

      /**
       * The "artifacts" collection of methods.
       */
      public class Artifacts {

        /**
         * Creates a specified artifact.
         *
         * Create a request for the method "artifacts.create".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

          private static final String REST_PATH = "v1/{+parent}/artifacts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a specified artifact.
           *
           * Create a request for the method "artifacts.create".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}` */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the artifact, which will become the final component of the
           * artifact's resource name. This value should be 4-63 characters, and valid characters
           * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
           */
          @com.google.api.client.util.Key
          private java.lang.String artifactId;

          /** Required. The ID to use for the artifact, which will become the final component of the artifact's
         resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following
         AIP-162, IDs must not have the form of a UUID.
           */
          public java.lang.String getArtifactId() {
            return artifactId;
          }

          /**
           * Required. The ID to use for the artifact, which will become the final component of the
           * artifact's resource name. This value should be 4-63 characters, and valid characters
           * are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
           */
          public Create setArtifactId(java.lang.String artifactId) {
            this.artifactId = artifactId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Removes a specified artifact.
         *
         * Create a request for the method "artifacts.delete".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Removes a specified artifact.
           *
           * Create a request for the method "artifacts.delete".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the artifact to delete. Format: `{parent}/artifacts`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the artifact to delete. Format: `{parent}/artifacts`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the artifact to delete. Format: `{parent}/artifacts` */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns a specified artifact.
         *
         * Create a request for the method "artifacts.get".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Returns a specified artifact.
           *
           * Create a request for the method "artifacts.get".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts`
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the artifact to retrieve. Format: `{parent}/artifacts` */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the
         * default behavior is to return the artifact uncompressed (the mime_type response field indicates
         * the exact format returned).
         *
         * Create a request for the method "artifacts.getContents".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
         * @return the request
         */
        public GetContents getContents(java.lang.String name) throws java.io.IOException {
          GetContents result = new GetContents(name);
          initialize(result);
          return result;
        }

        public class GetContents extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.HttpBody> {

          private static final String REST_PATH = "v1/{+name}:getContents";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Returns the contents of a specified artifact. If artifacts are stored with GZip compression,
           * the default behavior is to return the artifact uncompressed (the mime_type response field
           * indicates the exact format returned).
           *
           * Create a request for the method "artifacts.getContents".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetContents#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetContents#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
           * @since 1.13
           */
          protected GetContents(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.HttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetContents set$Xgafv(java.lang.String $Xgafv) {
            return (GetContents) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetContents setAccessToken(java.lang.String accessToken) {
            return (GetContents) super.setAccessToken(accessToken);
          }

          @Override
          public GetContents setAlt(java.lang.String alt) {
            return (GetContents) super.setAlt(alt);
          }

          @Override
          public GetContents setCallback(java.lang.String callback) {
            return (GetContents) super.setCallback(callback);
          }

          @Override
          public GetContents setFields(java.lang.String fields) {
            return (GetContents) super.setFields(fields);
          }

          @Override
          public GetContents setKey(java.lang.String key) {
            return (GetContents) super.setKey(key);
          }

          @Override
          public GetContents setOauthToken(java.lang.String oauthToken) {
            return (GetContents) super.setOauthToken(oauthToken);
          }

          @Override
          public GetContents setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetContents) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetContents setQuotaUser(java.lang.String quotaUser) {
            return (GetContents) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetContents setUploadType(java.lang.String uploadType) {
            return (GetContents) super.setUploadType(uploadType);
          }

          @Override
          public GetContents setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetContents) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the artifact whose contents should be retrieved. Format:
           * `{parent}/artifacts`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the artifact whose contents should be retrieved. Format:
           * `{parent}/artifacts`
           */
          public GetContents setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetContents set(String parameterName, Object value) {
            return (GetContents) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "artifacts.getIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "artifacts.getIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns matching artifacts.
         *
         * Create a request for the method "artifacts.list".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse> {

          private static final String REST_PATH = "v1/{+parent}/artifacts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Returns matching artifacts.
           *
           * Create a request for the method "artifacts.list".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListArtifactsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent, which owns this collection of artifacts. Format: `{parent}` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An expression that can be used to filter the list. Filters use the Common Expression
           * Language and can refer to all message fields except contents.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** An expression that can be used to filter the list. Filters use the Common Expression Language and
         can refer to all message fields except contents.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * An expression that can be used to filter the list. Filters use the Common Expression
           * Language and can refer to all message fields except contents.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
           * order using the "desc" identifier, e.g. "foo desc,bar"
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the
         "desc" identifier, e.g. "foo desc,bar"
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending
           * order using the "desc" identifier, e.g. "foo desc,bar"
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * The maximum number of artifacts to return. The service may return fewer than this
           * value. If unspecified, at most 50 values will be returned. The maximum is 1000; values
           * above 1000 will be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of artifacts to return. The service may return fewer than this value. If
         unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be
         coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of artifacts to return. The service may return fewer than this
           * value. If unspecified, at most 50 values will be returned. The maximum is 1000; values
           * above 1000 will be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListArtifacts` call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to `ListArtifacts`
           * must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListArtifacts` call. Provide this to retrieve
           * the subsequent page. When paginating, all other parameters provided to `ListArtifacts`
           * must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Used to replace a specified artifact.
         *
         * Create a request for the method "artifacts.replaceArtifact".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
         * operation.
         *
         * @param name Resource name.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
         * @return the request
         */
        public ReplaceArtifact replaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) throws java.io.IOException {
          ReplaceArtifact result = new ReplaceArtifact(name, content);
          initialize(result);
          return result;
        }

        public class ReplaceArtifact extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Artifact> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Used to replace a specified artifact.
           *
           * Create a request for the method "artifacts.replaceArtifact".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link ReplaceArtifact#execute()} method to invoke the remote
           * operation. <p> {@link ReplaceArtifact#initialize(com.google.api.client.googleapis.services.Abst
           * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Resource name.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Artifact}
           * @since 1.13
           */
          protected ReplaceArtifact(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.Artifact content) {
            super(ApigeeRegistry.this, "PUT", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Artifact.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public ReplaceArtifact set$Xgafv(java.lang.String $Xgafv) {
            return (ReplaceArtifact) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReplaceArtifact setAccessToken(java.lang.String accessToken) {
            return (ReplaceArtifact) super.setAccessToken(accessToken);
          }

          @Override
          public ReplaceArtifact setAlt(java.lang.String alt) {
            return (ReplaceArtifact) super.setAlt(alt);
          }

          @Override
          public ReplaceArtifact setCallback(java.lang.String callback) {
            return (ReplaceArtifact) super.setCallback(callback);
          }

          @Override
          public ReplaceArtifact setFields(java.lang.String fields) {
            return (ReplaceArtifact) super.setFields(fields);
          }

          @Override
          public ReplaceArtifact setKey(java.lang.String key) {
            return (ReplaceArtifact) super.setKey(key);
          }

          @Override
          public ReplaceArtifact setOauthToken(java.lang.String oauthToken) {
            return (ReplaceArtifact) super.setOauthToken(oauthToken);
          }

          @Override
          public ReplaceArtifact setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReplaceArtifact) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReplaceArtifact setQuotaUser(java.lang.String quotaUser) {
            return (ReplaceArtifact) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReplaceArtifact setUploadType(java.lang.String uploadType) {
            return (ReplaceArtifact) super.setUploadType(uploadType);
          }

          @Override
          public ReplaceArtifact setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReplaceArtifact) super.setUploadProtocol(uploadProtocol);
          }

          /** Resource name. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource name.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Resource name. */
          public ReplaceArtifact setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ReplaceArtifact set(String parameterName, Object value) {
            return (ReplaceArtifact) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "artifacts.setIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "artifacts.setIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "artifacts.testIamPermissions".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "artifacts.testIamPermissions".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Instances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
       *   {@code ApigeeRegistry.Instances.List request = apigeeregistry.instances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Instances instances() {
        return new Instances();
      }

      /**
       * The "instances" collection of methods.
       */
      public class Instances {

        /**
         * Provisions instance resources for the Registry.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent resource of the Instance, of the form: `projects/locations`
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Instance}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Instance content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Provisions instance resources for the Registry.
           *
           * Create a request for the method "instances.create".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent resource of the Instance, of the form: `projects/locations`
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.Instance}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigeeregistry.v1.model.Instance content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent resource of the Instance, of the form: `projects/locations` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent resource of the Instance, of the form: `projects/locations`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent resource of the Instance, of the form: `projects/locations` */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Identifier to assign to the Instance. Must be unique within scope of the
           * parent resource.
           */
          @com.google.api.client.util.Key
          private java.lang.String instanceId;

          /** Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.
           */
          public java.lang.String getInstanceId() {
            return instanceId;
          }

          /**
           * Required. Identifier to assign to the Instance. Must be unique within scope of the
           * parent resource.
           */
          public Create setInstanceId(java.lang.String instanceId) {
            this.instanceId = instanceId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the Registry instance.
         *
         * Create a request for the method "instances.delete".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Instance to delete. Format: `projects/locations/instances`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Deletes the Registry instance.
           *
           * Create a request for the method "instances.delete".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Instance to delete. Format: `projects/locations/instances`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Instance to delete. Format: `projects/locations/instances`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Instance to delete. Format: `projects/locations/instances`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Instance to delete. Format: `projects/locations/instances`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Instance.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Instance to retrieve. Format: `projects/locations/instances`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Instance> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Gets details of a single Instance.
           *
           * Create a request for the method "instances.get".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Instance to retrieve. Format: `projects/locations/instances`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Instance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Instance to retrieve. Format: `projects/locations/instances`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Instance to retrieve. Format: `projects/locations/instances`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Instance to retrieve. Format: `projects/locations/instances`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "instances.getIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "instances.getIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "instances.setIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "instances.setIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "instances.testIamPermissions".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "instances.testIamPermissions".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
       *   {@code ApigeeRegistry.Operations.List request = apigeeregistry.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.apigeeregistry.v1.model.CancelOperationRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ApigeeRegistry.this, "DELETE", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
         * the binding to use different resource name schemes, such as `users/operations`. To override the
         * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
           * override the binding to use different resource name schemes, such as `users/operations`. To
           * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
           * their service configuration. For backwards compatibility, the default name includes the
           * operations collection id, however overriding users must ensure the name binding is the parent
           * resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Runtime collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ApigeeRegistry apigeeregistry = new ApigeeRegistry(...);}
       *   {@code ApigeeRegistry.Runtime.List request = apigeeregistry.runtime().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Runtime runtime() {
        return new Runtime();
      }

      /**
       * The "runtime" collection of methods.
       */
      public class Runtime {

        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "runtime.getIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/runtime$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "runtime.getIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(ApigeeRegistry.this, "GET", REST_PATH, null, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "runtime.setIamPolicy".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/runtime$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "runtime.setIamPolicy".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.SetIamPolicyRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "runtime.testIamPermissions".
         *
         * This request holds the parameters needed by the apigeeregistry server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ApigeeRegistryRequest<com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/runtime$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "runtime.testIamPermissions".
           *
           * This request holds the parameters needed by the the apigeeregistry server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsRequest content) {
            super(ApigeeRegistry.this, "POST", REST_PATH, content, com.google.api.services.apigeeregistry.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/runtime$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link ApigeeRegistry}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ApigeeRegistry}. */
    @Override
    public ApigeeRegistry build() {
      return new ApigeeRegistry(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ApigeeRegistryRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setApigeeRegistryRequestInitializer(
        ApigeeRegistryRequestInitializer apigeeregistryRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(apigeeregistryRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
