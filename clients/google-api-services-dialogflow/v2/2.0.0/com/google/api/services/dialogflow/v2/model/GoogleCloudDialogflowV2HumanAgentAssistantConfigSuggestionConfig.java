/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v2.model;

/**
 * Detail human agent assistant config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. When disable_high_latency_features_sync_delivery is true and using the AnalyzeContent
   * API, we will not deliver the responses from high latency features in the API response. The
   * human_agent_assistant_config.notification_config must be configured and
   * enable_event_based_suggestion must be set to true to receive the responses from high latency
   * features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableHighLatencyFeaturesSyncDelivery;

  /**
   * Configuration of different suggestion features. One feature can have only one config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig> featureConfigs;

  /**
   * Optional. List of various generator resource names used in the conversation profile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> generators;

  /**
   * If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event
   * based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers
   * as soon as we get new suggestion. Different type of suggestions based on the same context will
   * be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If
   * `group_suggestion_responses` set to true. All the suggestions to the same participant based on
   * the same context will be grouped into a single Pub/Sub event or
   * StreamingAnalyzeContentResponse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean groupSuggestionResponses;

  /**
   * Optional. When disable_high_latency_features_sync_delivery is true and using the AnalyzeContent
   * API, we will not deliver the responses from high latency features in the API response. The
   * human_agent_assistant_config.notification_config must be configured and
   * enable_event_based_suggestion must be set to true to receive the responses from high latency
   * features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableHighLatencyFeaturesSyncDelivery() {
    return disableHighLatencyFeaturesSyncDelivery;
  }

  /**
   * Optional. When disable_high_latency_features_sync_delivery is true and using the AnalyzeContent
   * API, we will not deliver the responses from high latency features in the API response. The
   * human_agent_assistant_config.notification_config must be configured and
   * enable_event_based_suggestion must be set to true to receive the responses from high latency
   * features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
   * @param disableHighLatencyFeaturesSyncDelivery disableHighLatencyFeaturesSyncDelivery or {@code null} for none
   */
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig setDisableHighLatencyFeaturesSyncDelivery(java.lang.Boolean disableHighLatencyFeaturesSyncDelivery) {
    this.disableHighLatencyFeaturesSyncDelivery = disableHighLatencyFeaturesSyncDelivery;
    return this;
  }

  /**
   * Configuration of different suggestion features. One feature can have only one config.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig> getFeatureConfigs() {
    return featureConfigs;
  }

  /**
   * Configuration of different suggestion features. One feature can have only one config.
   * @param featureConfigs featureConfigs or {@code null} for none
   */
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig setFeatureConfigs(java.util.List<GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig> featureConfigs) {
    this.featureConfigs = featureConfigs;
    return this;
  }

  /**
   * Optional. List of various generator resource names used in the conversation profile.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getGenerators() {
    return generators;
  }

  /**
   * Optional. List of various generator resource names used in the conversation profile.
   * @param generators generators or {@code null} for none
   */
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig setGenerators(java.util.List<java.lang.String> generators) {
    this.generators = generators;
    return this;
  }

  /**
   * If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event
   * based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers
   * as soon as we get new suggestion. Different type of suggestions based on the same context will
   * be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If
   * `group_suggestion_responses` set to true. All the suggestions to the same participant based on
   * the same context will be grouped into a single Pub/Sub event or
   * StreamingAnalyzeContentResponse.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGroupSuggestionResponses() {
    return groupSuggestionResponses;
  }

  /**
   * If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event
   * based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers
   * as soon as we get new suggestion. Different type of suggestions based on the same context will
   * be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If
   * `group_suggestion_responses` set to true. All the suggestions to the same participant based on
   * the same context will be grouped into a single Pub/Sub event or
   * StreamingAnalyzeContentResponse.
   * @param groupSuggestionResponses groupSuggestionResponses or {@code null} for none
   */
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig setGroupSuggestionResponses(java.lang.Boolean groupSuggestionResponses) {
    this.groupSuggestionResponses = groupSuggestionResponses;
    return this;
  }

  @Override
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig set(String fieldName, Object value) {
    return (GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig clone() {
    return (GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig) super.clone();
  }

}
