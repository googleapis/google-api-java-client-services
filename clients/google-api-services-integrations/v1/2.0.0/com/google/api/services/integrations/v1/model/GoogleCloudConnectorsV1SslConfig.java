/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * SSL Configuration of a connection
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudConnectorsV1SslConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Additional SSL related field values
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudConnectorsV1ConfigVariable> additionalVariables;

  static {
    // hack to force ProGuard to consider GoogleCloudConnectorsV1ConfigVariable used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudConnectorsV1ConfigVariable.class);
  }

  /**
   * Optional. Type of Client Cert (PEM/JKS/.. etc.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientCertType;

  /**
   * Optional. Client Certificate
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1Secret clientCertificate;

  /**
   * Optional. Client Private Key
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1Secret clientPrivateKey;

  /**
   * Optional. Secret containing the passphrase protecting the Client Private Key
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1Secret clientPrivateKeyPass;

  /**
   * Optional. Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudConnectorsV1Secret privateServerCertificate;

  /**
   * Optional. Type of Server Cert (PEM/JKS/.. etc.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serverCertType;

  /**
   * Optional. Trust Model of the SSL connection
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trustModel;

  /**
   * Optional. Controls the ssl type for the given connector version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Optional. Bool for enabling SSL
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean useSsl;

  /**
   * Optional. Additional SSL related field values
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudConnectorsV1ConfigVariable> getAdditionalVariables() {
    return additionalVariables;
  }

  /**
   * Optional. Additional SSL related field values
   * @param additionalVariables additionalVariables or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setAdditionalVariables(java.util.List<GoogleCloudConnectorsV1ConfigVariable> additionalVariables) {
    this.additionalVariables = additionalVariables;
    return this;
  }

  /**
   * Optional. Type of Client Cert (PEM/JKS/.. etc.)
   * @return value or {@code null} for none
   */
  public java.lang.String getClientCertType() {
    return clientCertType;
  }

  /**
   * Optional. Type of Client Cert (PEM/JKS/.. etc.)
   * @param clientCertType clientCertType or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setClientCertType(java.lang.String clientCertType) {
    this.clientCertType = clientCertType;
    return this;
  }

  /**
   * Optional. Client Certificate
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1Secret getClientCertificate() {
    return clientCertificate;
  }

  /**
   * Optional. Client Certificate
   * @param clientCertificate clientCertificate or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setClientCertificate(GoogleCloudConnectorsV1Secret clientCertificate) {
    this.clientCertificate = clientCertificate;
    return this;
  }

  /**
   * Optional. Client Private Key
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1Secret getClientPrivateKey() {
    return clientPrivateKey;
  }

  /**
   * Optional. Client Private Key
   * @param clientPrivateKey clientPrivateKey or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setClientPrivateKey(GoogleCloudConnectorsV1Secret clientPrivateKey) {
    this.clientPrivateKey = clientPrivateKey;
    return this;
  }

  /**
   * Optional. Secret containing the passphrase protecting the Client Private Key
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1Secret getClientPrivateKeyPass() {
    return clientPrivateKeyPass;
  }

  /**
   * Optional. Secret containing the passphrase protecting the Client Private Key
   * @param clientPrivateKeyPass clientPrivateKeyPass or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setClientPrivateKeyPass(GoogleCloudConnectorsV1Secret clientPrivateKeyPass) {
    this.clientPrivateKeyPass = clientPrivateKeyPass;
    return this;
  }

  /**
   * Optional. Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.
   * @return value or {@code null} for none
   */
  public GoogleCloudConnectorsV1Secret getPrivateServerCertificate() {
    return privateServerCertificate;
  }

  /**
   * Optional. Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.
   * @param privateServerCertificate privateServerCertificate or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setPrivateServerCertificate(GoogleCloudConnectorsV1Secret privateServerCertificate) {
    this.privateServerCertificate = privateServerCertificate;
    return this;
  }

  /**
   * Optional. Type of Server Cert (PEM/JKS/.. etc.)
   * @return value or {@code null} for none
   */
  public java.lang.String getServerCertType() {
    return serverCertType;
  }

  /**
   * Optional. Type of Server Cert (PEM/JKS/.. etc.)
   * @param serverCertType serverCertType or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setServerCertType(java.lang.String serverCertType) {
    this.serverCertType = serverCertType;
    return this;
  }

  /**
   * Optional. Trust Model of the SSL connection
   * @return value or {@code null} for none
   */
  public java.lang.String getTrustModel() {
    return trustModel;
  }

  /**
   * Optional. Trust Model of the SSL connection
   * @param trustModel trustModel or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setTrustModel(java.lang.String trustModel) {
    this.trustModel = trustModel;
    return this;
  }

  /**
   * Optional. Controls the ssl type for the given connector version.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Optional. Controls the ssl type for the given connector version.
   * @param type type or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Optional. Bool for enabling SSL
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUseSsl() {
    return useSsl;
  }

  /**
   * Optional. Bool for enabling SSL
   * @param useSsl useSsl or {@code null} for none
   */
  public GoogleCloudConnectorsV1SslConfig setUseSsl(java.lang.Boolean useSsl) {
    this.useSsl = useSsl;
    return this;
  }

  @Override
  public GoogleCloudConnectorsV1SslConfig set(String fieldName, Object value) {
    return (GoogleCloudConnectorsV1SslConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudConnectorsV1SslConfig clone() {
    return (GoogleCloudConnectorsV1SslConfig) super.clone();
  }

}
