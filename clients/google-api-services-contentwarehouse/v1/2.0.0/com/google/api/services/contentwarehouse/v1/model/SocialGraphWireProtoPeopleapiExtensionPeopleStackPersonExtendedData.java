/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * NEXT_ID: 5
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData extends com.google.api.client.json.GenericJson {

  /**
   * Whether the person has birthday field populated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String birthdayStatus;

  /**
   * Whether the person is in the same family as the requesting user. Family here refers to
   * https://families.google.com/families. This information is read from SuperGlue, and can be
   * consumed by clients, e.g. Assistant and Photos. If this field is not set, the person is not in
   * the user's family.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String familyStatus;

  /**
   * The full list of hidden keys associated with this person. These are the external equivalent to
   * the keys stored by the ConnectionLabelService, and they can be passed to the
   * MutateConnectionLabel endpoint to unhide this person. This field will only be set if hide_type
   * is HIDDEN.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SocialDiscoveryExternalEntityKey> hiddenKeys;

  static {
    // hack to force ProGuard to consider SocialDiscoveryExternalEntityKey used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(SocialDiscoveryExternalEntityKey.class);
  }

  /**
   * If this field is not set, the person is visible (implicit).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hideType;

  /**
   * Whether the person has birthday field populated.
   * @return value or {@code null} for none
   */
  public java.lang.String getBirthdayStatus() {
    return birthdayStatus;
  }

  /**
   * Whether the person has birthday field populated.
   * @param birthdayStatus birthdayStatus or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData setBirthdayStatus(java.lang.String birthdayStatus) {
    this.birthdayStatus = birthdayStatus;
    return this;
  }

  /**
   * Whether the person is in the same family as the requesting user. Family here refers to
   * https://families.google.com/families. This information is read from SuperGlue, and can be
   * consumed by clients, e.g. Assistant and Photos. If this field is not set, the person is not in
   * the user's family.
   * @return value or {@code null} for none
   */
  public java.lang.String getFamilyStatus() {
    return familyStatus;
  }

  /**
   * Whether the person is in the same family as the requesting user. Family here refers to
   * https://families.google.com/families. This information is read from SuperGlue, and can be
   * consumed by clients, e.g. Assistant and Photos. If this field is not set, the person is not in
   * the user's family.
   * @param familyStatus familyStatus or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData setFamilyStatus(java.lang.String familyStatus) {
    this.familyStatus = familyStatus;
    return this;
  }

  /**
   * The full list of hidden keys associated with this person. These are the external equivalent to
   * the keys stored by the ConnectionLabelService, and they can be passed to the
   * MutateConnectionLabel endpoint to unhide this person. This field will only be set if hide_type
   * is HIDDEN.
   * @return value or {@code null} for none
   */
  public java.util.List<SocialDiscoveryExternalEntityKey> getHiddenKeys() {
    return hiddenKeys;
  }

  /**
   * The full list of hidden keys associated with this person. These are the external equivalent to
   * the keys stored by the ConnectionLabelService, and they can be passed to the
   * MutateConnectionLabel endpoint to unhide this person. This field will only be set if hide_type
   * is HIDDEN.
   * @param hiddenKeys hiddenKeys or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData setHiddenKeys(java.util.List<SocialDiscoveryExternalEntityKey> hiddenKeys) {
    this.hiddenKeys = hiddenKeys;
    return this;
  }

  /**
   * If this field is not set, the person is visible (implicit).
   * @return value or {@code null} for none
   */
  public java.lang.String getHideType() {
    return hideType;
  }

  /**
   * If this field is not set, the person is visible (implicit).
   * @param hideType hideType or {@code null} for none
   */
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData setHideType(java.lang.String hideType) {
    this.hideType = hideType;
    return this;
  }

  @Override
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData set(String fieldName, Object value) {
    return (SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData) super.set(fieldName, value);
  }

  @Override
  public SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData clone() {
    return (SocialGraphWireProtoPeopleapiExtensionPeopleStackPersonExtendedData) super.clone();
  }

}
