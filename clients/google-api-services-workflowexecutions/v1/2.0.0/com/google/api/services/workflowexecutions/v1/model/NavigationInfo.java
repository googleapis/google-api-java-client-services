/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workflowexecutions.v1.model;

/**
 * NavigationInfo describes what steps if any come before or after this step, or what steps are
 * parents or children of this step.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workflow Executions API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NavigationInfo extends com.google.api.client.json.GenericJson {

  /**
   * Step entries that can be reached by "stepping into" e.g. a subworkflow call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> children;

  /**
   * The index of the next step in the current workflow, if any.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long next;

  /**
   * The step entry, if any, that can be reached by "stepping out" of the current workflow being
   * executed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long parent;

  /**
   * The index of the previous step in the current workflow, if any.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long previous;

  /**
   * Step entries that can be reached by "stepping into" e.g. a subworkflow call.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getChildren() {
    return children;
  }

  /**
   * Step entries that can be reached by "stepping into" e.g. a subworkflow call.
   * @param children children or {@code null} for none
   */
  public NavigationInfo setChildren(java.util.List<java.lang.Long> children) {
    this.children = children;
    return this;
  }

  /**
   * The index of the next step in the current workflow, if any.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNext() {
    return next;
  }

  /**
   * The index of the next step in the current workflow, if any.
   * @param next next or {@code null} for none
   */
  public NavigationInfo setNext(java.lang.Long next) {
    this.next = next;
    return this;
  }

  /**
   * The step entry, if any, that can be reached by "stepping out" of the current workflow being
   * executed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getParent() {
    return parent;
  }

  /**
   * The step entry, if any, that can be reached by "stepping out" of the current workflow being
   * executed.
   * @param parent parent or {@code null} for none
   */
  public NavigationInfo setParent(java.lang.Long parent) {
    this.parent = parent;
    return this;
  }

  /**
   * The index of the previous step in the current workflow, if any.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPrevious() {
    return previous;
  }

  /**
   * The index of the previous step in the current workflow, if any.
   * @param previous previous or {@code null} for none
   */
  public NavigationInfo setPrevious(java.lang.Long previous) {
    this.previous = previous;
    return this;
  }

  @Override
  public NavigationInfo set(String fieldName, Object value) {
    return (NavigationInfo) super.set(fieldName, value);
  }

  @Override
  public NavigationInfo clone() {
    return (NavigationInfo) super.clone();
  }

}
