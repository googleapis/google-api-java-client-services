/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securesourcemanager.v1.model;

/**
 * A resource that represents a Secure Source Manager instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secure Source Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Create timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. A list of hostnames for this instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HostConfig hostConfig;

  /**
   * Optional. Immutable. Customer-managed encryption key name, in the format
   * projects/locations/keyRings/cryptoKeys.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsKey;

  /**
   * Optional. Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Optional. A unique identifier for an instance. The name should be of the format:
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` `project_number`:
   * Maps to a unique int64 id assigned to each project. `location_id`: Refers to the region where
   * the instance will be deployed. Since Secure Source Manager is a regional service, it must be
   * one of the valid GCP regions. `instance_id`: User provided name for the instance, must be
   * unique for a project_number and location_id combination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Private settings for private instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PrivateConfig privateConfig;

  /**
   * Output only. Current state of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. An optional field providing information about the current instance state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateNote;

  /**
   * Output only. Update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Configuration for Workforce Identity Federation to support third party identity
   * provider. If unset, defaults to the Google OIDC IdP.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private WorkforceIdentityFederationConfig workforceIdentityFederationConfig;

  /**
   * Output only. Create timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public Instance setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. A list of hostnames for this instance.
   * @return value or {@code null} for none
   */
  public HostConfig getHostConfig() {
    return hostConfig;
  }

  /**
   * Output only. A list of hostnames for this instance.
   * @param hostConfig hostConfig or {@code null} for none
   */
  public Instance setHostConfig(HostConfig hostConfig) {
    this.hostConfig = hostConfig;
    return this;
  }

  /**
   * Optional. Immutable. Customer-managed encryption key name, in the format
   * projects/locations/keyRings/cryptoKeys.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsKey() {
    return kmsKey;
  }

  /**
   * Optional. Immutable. Customer-managed encryption key name, in the format
   * projects/locations/keyRings/cryptoKeys.
   * @param kmsKey kmsKey or {@code null} for none
   */
  public Instance setKmsKey(java.lang.String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Optional. Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public Instance setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Optional. A unique identifier for an instance. The name should be of the format:
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` `project_number`:
   * Maps to a unique int64 id assigned to each project. `location_id`: Refers to the region where
   * the instance will be deployed. Since Secure Source Manager is a regional service, it must be
   * one of the valid GCP regions. `instance_id`: User provided name for the instance, must be
   * unique for a project_number and location_id combination.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. A unique identifier for an instance. The name should be of the format:
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` `project_number`:
   * Maps to a unique int64 id assigned to each project. `location_id`: Refers to the region where
   * the instance will be deployed. Since Secure Source Manager is a regional service, it must be
   * one of the valid GCP regions. `instance_id`: User provided name for the instance, must be
   * unique for a project_number and location_id combination.
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Private settings for private instance.
   * @return value or {@code null} for none
   */
  public PrivateConfig getPrivateConfig() {
    return privateConfig;
  }

  /**
   * Optional. Private settings for private instance.
   * @param privateConfig privateConfig or {@code null} for none
   */
  public Instance setPrivateConfig(PrivateConfig privateConfig) {
    this.privateConfig = privateConfig;
    return this;
  }

  /**
   * Output only. Current state of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the instance.
   * @param state state or {@code null} for none
   */
  public Instance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. An optional field providing information about the current instance state.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateNote() {
    return stateNote;
  }

  /**
   * Output only. An optional field providing information about the current instance state.
   * @param stateNote stateNote or {@code null} for none
   */
  public Instance setStateNote(java.lang.String stateNote) {
    this.stateNote = stateNote;
    return this;
  }

  /**
   * Output only. Update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Instance setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Optional. Configuration for Workforce Identity Federation to support third party identity
   * provider. If unset, defaults to the Google OIDC IdP.
   * @return value or {@code null} for none
   */
  public WorkforceIdentityFederationConfig getWorkforceIdentityFederationConfig() {
    return workforceIdentityFederationConfig;
  }

  /**
   * Optional. Configuration for Workforce Identity Federation to support third party identity
   * provider. If unset, defaults to the Google OIDC IdP.
   * @param workforceIdentityFederationConfig workforceIdentityFederationConfig or {@code null} for none
   */
  public Instance setWorkforceIdentityFederationConfig(WorkforceIdentityFederationConfig workforceIdentityFederationConfig) {
    this.workforceIdentityFederationConfig = workforceIdentityFederationConfig;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
