/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * State of visible/configured networks.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1NetworkStatusReport extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Current connection state of the network.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionState;

  /**
   * Output only. Network connection type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectionType;

  /**
   * Output only. Whether the wifi encryption key is turned off.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean encryptionOn;

  /**
   * Output only. Gateway IP address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gatewayIpAddress;

  /**
   * Output only. Network connection guid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String guid;

  /**
   * Output only. LAN IP address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lanIpAddress;

  /**
   * Output only. Receiving bit rate measured in megabytes per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long receivingBitRateMbps;

  /**
   * Output only. Time at which the network state was reported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reportTime;

  /**
   * Output only. Frequency the report is sampled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String sampleFrequency;

  /**
   * Output only. Signal strength for wireless networks measured in decibels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer signalStrengthDbm;

  /**
   * Output only. Transmission bit rate measured in megabytes per second.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long transmissionBitRateMbps;

  /**
   * Output only. Transmission power measured in decibels.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer transmissionPowerDbm;

  /**
   * Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70
   * indicates a strong signal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long wifiLinkQuality;

  /**
   * Output only. Wifi power management enabled
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean wifiPowerManagementEnabled;

  /**
   * Output only. Current connection state of the network.
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionState() {
    return connectionState;
  }

  /**
   * Output only. Current connection state of the network.
   * @param connectionState connectionState or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setConnectionState(java.lang.String connectionState) {
    this.connectionState = connectionState;
    return this;
  }

  /**
   * Output only. Network connection type.
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectionType() {
    return connectionType;
  }

  /**
   * Output only. Network connection type.
   * @param connectionType connectionType or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setConnectionType(java.lang.String connectionType) {
    this.connectionType = connectionType;
    return this;
  }

  /**
   * Output only. Whether the wifi encryption key is turned off.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEncryptionOn() {
    return encryptionOn;
  }

  /**
   * Output only. Whether the wifi encryption key is turned off.
   * @param encryptionOn encryptionOn or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setEncryptionOn(java.lang.Boolean encryptionOn) {
    this.encryptionOn = encryptionOn;
    return this;
  }

  /**
   * Output only. Gateway IP address.
   * @return value or {@code null} for none
   */
  public java.lang.String getGatewayIpAddress() {
    return gatewayIpAddress;
  }

  /**
   * Output only. Gateway IP address.
   * @param gatewayIpAddress gatewayIpAddress or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setGatewayIpAddress(java.lang.String gatewayIpAddress) {
    this.gatewayIpAddress = gatewayIpAddress;
    return this;
  }

  /**
   * Output only. Network connection guid.
   * @return value or {@code null} for none
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Output only. Network connection guid.
   * @param guid guid or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setGuid(java.lang.String guid) {
    this.guid = guid;
    return this;
  }

  /**
   * Output only. LAN IP address.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanIpAddress() {
    return lanIpAddress;
  }

  /**
   * Output only. LAN IP address.
   * @param lanIpAddress lanIpAddress or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setLanIpAddress(java.lang.String lanIpAddress) {
    this.lanIpAddress = lanIpAddress;
    return this;
  }

  /**
   * Output only. Receiving bit rate measured in megabytes per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getReceivingBitRateMbps() {
    return receivingBitRateMbps;
  }

  /**
   * Output only. Receiving bit rate measured in megabytes per second.
   * @param receivingBitRateMbps receivingBitRateMbps or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setReceivingBitRateMbps(java.lang.Long receivingBitRateMbps) {
    this.receivingBitRateMbps = receivingBitRateMbps;
    return this;
  }

  /**
   * Output only. Time at which the network state was reported.
   * @return value or {@code null} for none
   */
  public String getReportTime() {
    return reportTime;
  }

  /**
   * Output only. Time at which the network state was reported.
   * @param reportTime reportTime or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setReportTime(String reportTime) {
    this.reportTime = reportTime;
    return this;
  }

  /**
   * Output only. Frequency the report is sampled.
   * @return value or {@code null} for none
   */
  public String getSampleFrequency() {
    return sampleFrequency;
  }

  /**
   * Output only. Frequency the report is sampled.
   * @param sampleFrequency sampleFrequency or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setSampleFrequency(String sampleFrequency) {
    this.sampleFrequency = sampleFrequency;
    return this;
  }

  /**
   * Output only. Signal strength for wireless networks measured in decibels.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSignalStrengthDbm() {
    return signalStrengthDbm;
  }

  /**
   * Output only. Signal strength for wireless networks measured in decibels.
   * @param signalStrengthDbm signalStrengthDbm or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setSignalStrengthDbm(java.lang.Integer signalStrengthDbm) {
    this.signalStrengthDbm = signalStrengthDbm;
    return this;
  }

  /**
   * Output only. Transmission bit rate measured in megabytes per second.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTransmissionBitRateMbps() {
    return transmissionBitRateMbps;
  }

  /**
   * Output only. Transmission bit rate measured in megabytes per second.
   * @param transmissionBitRateMbps transmissionBitRateMbps or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setTransmissionBitRateMbps(java.lang.Long transmissionBitRateMbps) {
    this.transmissionBitRateMbps = transmissionBitRateMbps;
    return this;
  }

  /**
   * Output only. Transmission power measured in decibels.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTransmissionPowerDbm() {
    return transmissionPowerDbm;
  }

  /**
   * Output only. Transmission power measured in decibels.
   * @param transmissionPowerDbm transmissionPowerDbm or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setTransmissionPowerDbm(java.lang.Integer transmissionPowerDbm) {
    this.transmissionPowerDbm = transmissionPowerDbm;
    return this;
  }

  /**
   * Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70
   * indicates a strong signal.
   * @return value or {@code null} for none
   */
  public java.lang.Long getWifiLinkQuality() {
    return wifiLinkQuality;
  }

  /**
   * Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70
   * indicates a strong signal.
   * @param wifiLinkQuality wifiLinkQuality or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setWifiLinkQuality(java.lang.Long wifiLinkQuality) {
    this.wifiLinkQuality = wifiLinkQuality;
    return this;
  }

  /**
   * Output only. Wifi power management enabled
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWifiPowerManagementEnabled() {
    return wifiPowerManagementEnabled;
  }

  /**
   * Output only. Wifi power management enabled
   * @param wifiPowerManagementEnabled wifiPowerManagementEnabled or {@code null} for none
   */
  public GoogleChromeManagementV1NetworkStatusReport setWifiPowerManagementEnabled(java.lang.Boolean wifiPowerManagementEnabled) {
    this.wifiPowerManagementEnabled = wifiPowerManagementEnabled;
    return this;
  }

  @Override
  public GoogleChromeManagementV1NetworkStatusReport set(String fieldName, Object value) {
    return (GoogleChromeManagementV1NetworkStatusReport) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1NetworkStatusReport clone() {
    return (GoogleChromeManagementV1NetworkStatusReport) super.clone();
  }

}
