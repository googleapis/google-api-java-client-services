/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1beta1.model;

/**
 * A cluster instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Memorystore for Redis API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Cluster extends com.google.api.client.json.GenericJson {

  /**
   * Optional. If true, cluster endpoints that are created and registered by customers can be
   * deleted asynchronously. That is, such a cluster endpoint can be de-registered before the
   * forwarding rules in the cluster endpoint are deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean asyncClusterEndpointsDeletionEnabled;

  /**
   * Optional. The authorization mode of the Redis cluster. If not provided, auth feature is
   * disabled for the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorizationMode;

  /**
   * Optional. The automated backup config for the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AutomatedBackupConfig automatedBackupConfig;

  /**
   * Optional. Output only. The backup collection full resource name. Example:
   * projects/{project}/locations/{location}/backupCollections/{collection}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupCollection;

  /**
   * Optional. A list of cluster enpoints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ClusterEndpoint> clusterEndpoints;

  /**
   * Output only. The timestamp associated with the cluster creation request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Cross cluster replication config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CrossClusterReplicationConfig crossClusterReplicationConfig;

  /**
   * Optional. The delete operation will fail when the value is set to true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deletionProtectionEnabled;

  /**
   * Output only. Endpoints created on each given network, for Redis clients to connect to the
   * cluster. Currently only one discovery endpoint is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DiscoveryEndpoint> discoveryEndpoints;

  /**
   * Output only. Encryption information of the data at rest of the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EncryptionInfo encryptionInfo;

  /**
   * Optional. Backups stored in Cloud Storage buckets. The Cloud Storage buckets need to be the
   * same region as the clusters. Read permission is required to import from the provided Cloud
   * Storage objects.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GcsBackupSource gcsSource;

  /**
   * Optional. The KMS key used to encrypt the at-rest data of the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsKey;

  /**
   * Optional. ClusterMaintenancePolicy determines when to allow or deny updates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClusterMaintenancePolicy maintenancePolicy;

  /**
   * Output only. ClusterMaintenanceSchedule Output only Published maintenance schedule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClusterMaintenanceSchedule maintenanceSchedule;

  /**
   * Optional. Backups generated and managed by memorystore service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ManagedBackupSource managedBackupSource;

  /**
   * Required. Identifier. Unique name of the resource in this scope including project and location
   * using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-
   * type of a redis node.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nodeType;

  /**
   * Optional. Persistence config (RDB, AOF) for the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClusterPersistenceConfig persistenceConfig;

  /**
   * Output only. Precise value of redis memory size in GB for the entire cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double preciseSizeGb;

  /**
   * Optional. Each PscConfig configures the consumer network where IPs will be designated to the
   * cluster for client access through Private Service Connect Automation. Currently, only one
   * PscConfig is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PscConfig> pscConfigs;

  /**
   * Output only. The list of PSC connections that are auto-created through service connectivity
   * automation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PscConnection> pscConnections;

  /**
   * Output only. Service attachment details to configure Psc connections
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PscServiceAttachment> pscServiceAttachments;

  /**
   * Optional. Key/Value pairs of customer overrides for mutable Redis Configs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> redisConfigs;

  /**
   * Optional. The number of replica nodes per shard.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer replicaCount;

  /**
   * Optional. Number of shards for the Redis cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer shardCount;

  /**
   * Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sizeGb;

  /**
   * Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and
   * SUSPENDED
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Additional information about the current state of the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StateInfo stateInfo;

  /**
   * Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is
   * disabled for the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String transitEncryptionMode;

  /**
   * Output only. System assigned, unique identifier for the cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Optional. This config will be used to determine how the customer wants us to distribute cluster
   * resources within the region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ZoneDistributionConfig zoneDistributionConfig;

  /**
   * Optional. If true, cluster endpoints that are created and registered by customers can be
   * deleted asynchronously. That is, such a cluster endpoint can be de-registered before the
   * forwarding rules in the cluster endpoint are deleted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAsyncClusterEndpointsDeletionEnabled() {
    return asyncClusterEndpointsDeletionEnabled;
  }

  /**
   * Optional. If true, cluster endpoints that are created and registered by customers can be
   * deleted asynchronously. That is, such a cluster endpoint can be de-registered before the
   * forwarding rules in the cluster endpoint are deleted.
   * @param asyncClusterEndpointsDeletionEnabled asyncClusterEndpointsDeletionEnabled or {@code null} for none
   */
  public Cluster setAsyncClusterEndpointsDeletionEnabled(java.lang.Boolean asyncClusterEndpointsDeletionEnabled) {
    this.asyncClusterEndpointsDeletionEnabled = asyncClusterEndpointsDeletionEnabled;
    return this;
  }

  /**
   * Optional. The authorization mode of the Redis cluster. If not provided, auth feature is
   * disabled for the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorizationMode() {
    return authorizationMode;
  }

  /**
   * Optional. The authorization mode of the Redis cluster. If not provided, auth feature is
   * disabled for the cluster.
   * @param authorizationMode authorizationMode or {@code null} for none
   */
  public Cluster setAuthorizationMode(java.lang.String authorizationMode) {
    this.authorizationMode = authorizationMode;
    return this;
  }

  /**
   * Optional. The automated backup config for the cluster.
   * @return value or {@code null} for none
   */
  public AutomatedBackupConfig getAutomatedBackupConfig() {
    return automatedBackupConfig;
  }

  /**
   * Optional. The automated backup config for the cluster.
   * @param automatedBackupConfig automatedBackupConfig or {@code null} for none
   */
  public Cluster setAutomatedBackupConfig(AutomatedBackupConfig automatedBackupConfig) {
    this.automatedBackupConfig = automatedBackupConfig;
    return this;
  }

  /**
   * Optional. Output only. The backup collection full resource name. Example:
   * projects/{project}/locations/{location}/backupCollections/{collection}
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupCollection() {
    return backupCollection;
  }

  /**
   * Optional. Output only. The backup collection full resource name. Example:
   * projects/{project}/locations/{location}/backupCollections/{collection}
   * @param backupCollection backupCollection or {@code null} for none
   */
  public Cluster setBackupCollection(java.lang.String backupCollection) {
    this.backupCollection = backupCollection;
    return this;
  }

  /**
   * Optional. A list of cluster enpoints.
   * @return value or {@code null} for none
   */
  public java.util.List<ClusterEndpoint> getClusterEndpoints() {
    return clusterEndpoints;
  }

  /**
   * Optional. A list of cluster enpoints.
   * @param clusterEndpoints clusterEndpoints or {@code null} for none
   */
  public Cluster setClusterEndpoints(java.util.List<ClusterEndpoint> clusterEndpoints) {
    this.clusterEndpoints = clusterEndpoints;
    return this;
  }

  /**
   * Output only. The timestamp associated with the cluster creation request.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp associated with the cluster creation request.
   * @param createTime createTime or {@code null} for none
   */
  public Cluster setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Cross cluster replication config.
   * @return value or {@code null} for none
   */
  public CrossClusterReplicationConfig getCrossClusterReplicationConfig() {
    return crossClusterReplicationConfig;
  }

  /**
   * Optional. Cross cluster replication config.
   * @param crossClusterReplicationConfig crossClusterReplicationConfig or {@code null} for none
   */
  public Cluster setCrossClusterReplicationConfig(CrossClusterReplicationConfig crossClusterReplicationConfig) {
    this.crossClusterReplicationConfig = crossClusterReplicationConfig;
    return this;
  }

  /**
   * Optional. The delete operation will fail when the value is set to true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeletionProtectionEnabled() {
    return deletionProtectionEnabled;
  }

  /**
   * Optional. The delete operation will fail when the value is set to true.
   * @param deletionProtectionEnabled deletionProtectionEnabled or {@code null} for none
   */
  public Cluster setDeletionProtectionEnabled(java.lang.Boolean deletionProtectionEnabled) {
    this.deletionProtectionEnabled = deletionProtectionEnabled;
    return this;
  }

  /**
   * Output only. Endpoints created on each given network, for Redis clients to connect to the
   * cluster. Currently only one discovery endpoint is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<DiscoveryEndpoint> getDiscoveryEndpoints() {
    return discoveryEndpoints;
  }

  /**
   * Output only. Endpoints created on each given network, for Redis clients to connect to the
   * cluster. Currently only one discovery endpoint is supported.
   * @param discoveryEndpoints discoveryEndpoints or {@code null} for none
   */
  public Cluster setDiscoveryEndpoints(java.util.List<DiscoveryEndpoint> discoveryEndpoints) {
    this.discoveryEndpoints = discoveryEndpoints;
    return this;
  }

  /**
   * Output only. Encryption information of the data at rest of the cluster.
   * @return value or {@code null} for none
   */
  public EncryptionInfo getEncryptionInfo() {
    return encryptionInfo;
  }

  /**
   * Output only. Encryption information of the data at rest of the cluster.
   * @param encryptionInfo encryptionInfo or {@code null} for none
   */
  public Cluster setEncryptionInfo(EncryptionInfo encryptionInfo) {
    this.encryptionInfo = encryptionInfo;
    return this;
  }

  /**
   * Optional. Backups stored in Cloud Storage buckets. The Cloud Storage buckets need to be the
   * same region as the clusters. Read permission is required to import from the provided Cloud
   * Storage objects.
   * @return value or {@code null} for none
   */
  public GcsBackupSource getGcsSource() {
    return gcsSource;
  }

  /**
   * Optional. Backups stored in Cloud Storage buckets. The Cloud Storage buckets need to be the
   * same region as the clusters. Read permission is required to import from the provided Cloud
   * Storage objects.
   * @param gcsSource gcsSource or {@code null} for none
   */
  public Cluster setGcsSource(GcsBackupSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Optional. The KMS key used to encrypt the at-rest data of the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsKey() {
    return kmsKey;
  }

  /**
   * Optional. The KMS key used to encrypt the at-rest data of the cluster.
   * @param kmsKey kmsKey or {@code null} for none
   */
  public Cluster setKmsKey(java.lang.String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Optional. ClusterMaintenancePolicy determines when to allow or deny updates.
   * @return value or {@code null} for none
   */
  public ClusterMaintenancePolicy getMaintenancePolicy() {
    return maintenancePolicy;
  }

  /**
   * Optional. ClusterMaintenancePolicy determines when to allow or deny updates.
   * @param maintenancePolicy maintenancePolicy or {@code null} for none
   */
  public Cluster setMaintenancePolicy(ClusterMaintenancePolicy maintenancePolicy) {
    this.maintenancePolicy = maintenancePolicy;
    return this;
  }

  /**
   * Output only. ClusterMaintenanceSchedule Output only Published maintenance schedule.
   * @return value or {@code null} for none
   */
  public ClusterMaintenanceSchedule getMaintenanceSchedule() {
    return maintenanceSchedule;
  }

  /**
   * Output only. ClusterMaintenanceSchedule Output only Published maintenance schedule.
   * @param maintenanceSchedule maintenanceSchedule or {@code null} for none
   */
  public Cluster setMaintenanceSchedule(ClusterMaintenanceSchedule maintenanceSchedule) {
    this.maintenanceSchedule = maintenanceSchedule;
    return this;
  }

  /**
   * Optional. Backups generated and managed by memorystore service.
   * @return value or {@code null} for none
   */
  public ManagedBackupSource getManagedBackupSource() {
    return managedBackupSource;
  }

  /**
   * Optional. Backups generated and managed by memorystore service.
   * @param managedBackupSource managedBackupSource or {@code null} for none
   */
  public Cluster setManagedBackupSource(ManagedBackupSource managedBackupSource) {
    this.managedBackupSource = managedBackupSource;
    return this;
  }

  /**
   * Required. Identifier. Unique name of the resource in this scope including project and location
   * using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Identifier. Unique name of the resource in this scope including project and location
   * using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`
   * @param name name or {@code null} for none
   */
  public Cluster setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-
   * type of a redis node.
   * @return value or {@code null} for none
   */
  public java.lang.String getNodeType() {
    return nodeType;
  }

  /**
   * Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-
   * type of a redis node.
   * @param nodeType nodeType or {@code null} for none
   */
  public Cluster setNodeType(java.lang.String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Optional. Persistence config (RDB, AOF) for the cluster.
   * @return value or {@code null} for none
   */
  public ClusterPersistenceConfig getPersistenceConfig() {
    return persistenceConfig;
  }

  /**
   * Optional. Persistence config (RDB, AOF) for the cluster.
   * @param persistenceConfig persistenceConfig or {@code null} for none
   */
  public Cluster setPersistenceConfig(ClusterPersistenceConfig persistenceConfig) {
    this.persistenceConfig = persistenceConfig;
    return this;
  }

  /**
   * Output only. Precise value of redis memory size in GB for the entire cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Double getPreciseSizeGb() {
    return preciseSizeGb;
  }

  /**
   * Output only. Precise value of redis memory size in GB for the entire cluster.
   * @param preciseSizeGb preciseSizeGb or {@code null} for none
   */
  public Cluster setPreciseSizeGb(java.lang.Double preciseSizeGb) {
    this.preciseSizeGb = preciseSizeGb;
    return this;
  }

  /**
   * Optional. Each PscConfig configures the consumer network where IPs will be designated to the
   * cluster for client access through Private Service Connect Automation. Currently, only one
   * PscConfig is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<PscConfig> getPscConfigs() {
    return pscConfigs;
  }

  /**
   * Optional. Each PscConfig configures the consumer network where IPs will be designated to the
   * cluster for client access through Private Service Connect Automation. Currently, only one
   * PscConfig is supported.
   * @param pscConfigs pscConfigs or {@code null} for none
   */
  public Cluster setPscConfigs(java.util.List<PscConfig> pscConfigs) {
    this.pscConfigs = pscConfigs;
    return this;
  }

  /**
   * Output only. The list of PSC connections that are auto-created through service connectivity
   * automation.
   * @return value or {@code null} for none
   */
  public java.util.List<PscConnection> getPscConnections() {
    return pscConnections;
  }

  /**
   * Output only. The list of PSC connections that are auto-created through service connectivity
   * automation.
   * @param pscConnections pscConnections or {@code null} for none
   */
  public Cluster setPscConnections(java.util.List<PscConnection> pscConnections) {
    this.pscConnections = pscConnections;
    return this;
  }

  /**
   * Output only. Service attachment details to configure Psc connections
   * @return value or {@code null} for none
   */
  public java.util.List<PscServiceAttachment> getPscServiceAttachments() {
    return pscServiceAttachments;
  }

  /**
   * Output only. Service attachment details to configure Psc connections
   * @param pscServiceAttachments pscServiceAttachments or {@code null} for none
   */
  public Cluster setPscServiceAttachments(java.util.List<PscServiceAttachment> pscServiceAttachments) {
    this.pscServiceAttachments = pscServiceAttachments;
    return this;
  }

  /**
   * Optional. Key/Value pairs of customer overrides for mutable Redis Configs
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getRedisConfigs() {
    return redisConfigs;
  }

  /**
   * Optional. Key/Value pairs of customer overrides for mutable Redis Configs
   * @param redisConfigs redisConfigs or {@code null} for none
   */
  public Cluster setRedisConfigs(java.util.Map<String, java.lang.String> redisConfigs) {
    this.redisConfigs = redisConfigs;
    return this;
  }

  /**
   * Optional. The number of replica nodes per shard.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getReplicaCount() {
    return replicaCount;
  }

  /**
   * Optional. The number of replica nodes per shard.
   * @param replicaCount replicaCount or {@code null} for none
   */
  public Cluster setReplicaCount(java.lang.Integer replicaCount) {
    this.replicaCount = replicaCount;
    return this;
  }

  /**
   * Optional. Number of shards for the Redis cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getShardCount() {
    return shardCount;
  }

  /**
   * Optional. Number of shards for the Redis cluster.
   * @param shardCount shardCount or {@code null} for none
   */
  public Cluster setShardCount(java.lang.Integer shardCount) {
    this.shardCount = shardCount;
    return this;
  }

  /**
   * Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSizeGb() {
    return sizeGb;
  }

  /**
   * Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.
   * @param sizeGb sizeGb or {@code null} for none
   */
  public Cluster setSizeGb(java.lang.Integer sizeGb) {
    this.sizeGb = sizeGb;
    return this;
  }

  /**
   * Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and
   * SUSPENDED
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and
   * SUSPENDED
   * @param state state or {@code null} for none
   */
  public Cluster setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Additional information about the current state of the cluster.
   * @return value or {@code null} for none
   */
  public StateInfo getStateInfo() {
    return stateInfo;
  }

  /**
   * Output only. Additional information about the current state of the cluster.
   * @param stateInfo stateInfo or {@code null} for none
   */
  public Cluster setStateInfo(StateInfo stateInfo) {
    this.stateInfo = stateInfo;
    return this;
  }

  /**
   * Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is
   * disabled for the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getTransitEncryptionMode() {
    return transitEncryptionMode;
  }

  /**
   * Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is
   * disabled for the cluster.
   * @param transitEncryptionMode transitEncryptionMode or {@code null} for none
   */
  public Cluster setTransitEncryptionMode(java.lang.String transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
    return this;
  }

  /**
   * Output only. System assigned, unique identifier for the cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. System assigned, unique identifier for the cluster.
   * @param uid uid or {@code null} for none
   */
  public Cluster setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Optional. This config will be used to determine how the customer wants us to distribute cluster
   * resources within the region.
   * @return value or {@code null} for none
   */
  public ZoneDistributionConfig getZoneDistributionConfig() {
    return zoneDistributionConfig;
  }

  /**
   * Optional. This config will be used to determine how the customer wants us to distribute cluster
   * resources within the region.
   * @param zoneDistributionConfig zoneDistributionConfig or {@code null} for none
   */
  public Cluster setZoneDistributionConfig(ZoneDistributionConfig zoneDistributionConfig) {
    this.zoneDistributionConfig = zoneDistributionConfig;
    return this;
  }

  @Override
  public Cluster set(String fieldName, Object value) {
    return (Cluster) super.set(fieldName, value);
  }

  @Override
  public Cluster clone() {
    return (Cluster) super.clone();
  }

}
