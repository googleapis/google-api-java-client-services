/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudshell.v1alpha1;

/**
 * Service definition for CloudShell (v1alpha1).
 *
 * <p>
 * Allows users to start, configure, and connect to interactive shell sessions running in the cloud.

 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/shell/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudShellRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudShell extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Cloud Shell API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudshell.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudShell(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudShell(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Users collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudShell cloudshell = new CloudShell(...);}
   *   {@code CloudShell.Users.List request = cloudshell.users().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Users users() {
    return new Users();
  }

  /**
   * The "users" collection of methods.
   */
  public class Users {

    /**
     * An accessor for creating requests from the Environments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudShell cloudshell = new CloudShell(...);}
     *   {@code CloudShell.Environments.List request = cloudshell.environments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Environments environments() {
      return new Environments();
    }

    /**
     * The "environments" collection of methods.
     */
    public class Environments {

      /**
       * Sends an access token to a running environment on behalf of a user. When this completes, the
       * environment will be authorized to run gcloud commands without requiring the user to manually
       * authenticate.
       *
       * Create a request for the method "environments.authorize".
       *
       * This request holds the parameters needed by the cloudshell server.  After setting any optional
       * parameters, call the {@link Authorize#execute()} method to invoke the remote operation.
       *
       * @param name Name of the resource that should receive the token, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
       * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.AuthorizeEnvironmentRequest}
       * @return the request
       */
      public Authorize authorize(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.AuthorizeEnvironmentRequest content) throws java.io.IOException {
        Authorize result = new Authorize(name, content);
        initialize(result);
        return result;
      }

      public class Authorize extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.Empty> {

        private static final String REST_PATH = "v1alpha1/{+name}:authorize";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+$");

        /**
         * Sends an access token to a running environment on behalf of a user. When this completes, the
         * environment will be authorized to run gcloud commands without requiring the user to manually
         * authenticate.
         *
         * Create a request for the method "environments.authorize".
         *
         * This request holds the parameters needed by the the cloudshell server.  After setting any
         * optional parameters, call the {@link Authorize#execute()} method to invoke the remote
         * operation. <p> {@link
         * Authorize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the resource that should receive the token, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
         * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.AuthorizeEnvironmentRequest}
         * @since 1.13
         */
        protected Authorize(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.AuthorizeEnvironmentRequest content) {
          super(CloudShell.this, "POST", REST_PATH, content, com.google.api.services.cloudshell.v1alpha1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Authorize set$Xgafv(java.lang.String $Xgafv) {
          return (Authorize) super.set$Xgafv($Xgafv);
        }

        @Override
        public Authorize setAccessToken(java.lang.String accessToken) {
          return (Authorize) super.setAccessToken(accessToken);
        }

        @Override
        public Authorize setAlt(java.lang.String alt) {
          return (Authorize) super.setAlt(alt);
        }

        @Override
        public Authorize setCallback(java.lang.String callback) {
          return (Authorize) super.setCallback(callback);
        }

        @Override
        public Authorize setFields(java.lang.String fields) {
          return (Authorize) super.setFields(fields);
        }

        @Override
        public Authorize setKey(java.lang.String key) {
          return (Authorize) super.setKey(key);
        }

        @Override
        public Authorize setOauthToken(java.lang.String oauthToken) {
          return (Authorize) super.setOauthToken(oauthToken);
        }

        @Override
        public Authorize setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Authorize) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Authorize setQuotaUser(java.lang.String quotaUser) {
          return (Authorize) super.setQuotaUser(quotaUser);
        }

        @Override
        public Authorize setUploadType(java.lang.String uploadType) {
          return (Authorize) super.setUploadType(uploadType);
        }

        @Override
        public Authorize setUploadProtocol(java.lang.String uploadProtocol) {
          return (Authorize) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the resource that should receive the token, for example
         * `users/me/environments/default` or `users/someone@example.com/environments/default`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the resource that should receive the token, for example `users/me/environments/default` or
       `users/someone@example.com/environments/default`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the resource that should receive the token, for example
         * `users/me/environments/default` or `users/someone@example.com/environments/default`.
         */
        public Authorize setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Authorize set(String parameterName, Object value) {
          return (Authorize) super.set(parameterName, value);
        }
      }
      /**
       * Gets an environment. Returns NOT_FOUND if the environment does not exist.
       *
       * Create a request for the method "environments.get".
       *
       * This request holds the parameters needed by the cloudshell server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Name of the requested resource, for example `users/me/environments/default`
      or
       *        `users/someone@example.com/environments/default`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.Environment> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+$");

        /**
         * Gets an environment. Returns NOT_FOUND if the environment does not exist.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the the cloudshell server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the requested resource, for example `users/me/environments/default`
      or
       *        `users/someone@example.com/environments/default`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudShell.this, "GET", REST_PATH, null, com.google.api.services.cloudshell.v1alpha1.model.Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the requested resource, for example `users/me/environments/default` or
         * `users/someone@example.com/environments/default`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the requested resource, for example `users/me/environments/default` or
       `users/someone@example.com/environments/default`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the requested resource, for example `users/me/environments/default` or
         * `users/someone@example.com/environments/default`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing environment.
       *
       * Create a request for the method "environments.patch".
       *
       * This request holds the parameters needed by the cloudshell server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Name of the resource to be updated, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
       * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.Environment}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.Environment content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.Environment> {

        private static final String REST_PATH = "v1alpha1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing environment.
         *
         * Create a request for the method "environments.patch".
         *
         * This request holds the parameters needed by the the cloudshell server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the resource to be updated, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
         * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.Environment}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.Environment content) {
          super(CloudShell.this, "PATCH", REST_PATH, content, com.google.api.services.cloudshell.v1alpha1.model.Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the resource to be updated, for example `users/me/environments/default` or
         * `users/someone@example.com/environments/default`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the resource to be updated, for example `users/me/environments/default` or
       `users/someone@example.com/environments/default`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the resource to be updated, for example `users/me/environments/default` or
         * `users/someone@example.com/environments/default`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Mask specifying which fields in the environment should be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Mask specifying which fields in the environment should be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Mask specifying which fields in the environment should be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Starts an existing environment, allowing clients to connect to it. The returned operation will
       * contain an instance of StartEnvironmentMetadata in its metadata field. Users can wait for the
       * environment to start by polling this operation via GetOperation. Once the environment has
       * finished starting and is ready to accept connections, the operation will contain a
       * StartEnvironmentResponse in its response field.
       *
       * Create a request for the method "environments.start".
       *
       * This request holds the parameters needed by the cloudshell server.  After setting any optional
       * parameters, call the {@link Start#execute()} method to invoke the remote operation.
       *
       * @param name Name of the resource that should be started, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
       * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.StartEnvironmentRequest}
       * @return the request
       */
      public Start start(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.StartEnvironmentRequest content) throws java.io.IOException {
        Start result = new Start(name, content);
        initialize(result);
        return result;
      }

      public class Start extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.Operation> {

        private static final String REST_PATH = "v1alpha1/{+name}:start";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+$");

        /**
         * Starts an existing environment, allowing clients to connect to it. The returned operation will
         * contain an instance of StartEnvironmentMetadata in its metadata field. Users can wait for the
         * environment to start by polling this operation via GetOperation. Once the environment has
         * finished starting and is ready to accept connections, the operation will contain a
         * StartEnvironmentResponse in its response field.
         *
         * Create a request for the method "environments.start".
         *
         * This request holds the parameters needed by the the cloudshell server.  After setting any
         * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
         * <p> {@link
         * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the resource that should be started, for example
      `users/me/environments/default` or
       *        `users/someone@example.com/environments/default`.
         * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.StartEnvironmentRequest}
         * @since 1.13
         */
        protected Start(java.lang.String name, com.google.api.services.cloudshell.v1alpha1.model.StartEnvironmentRequest content) {
          super(CloudShell.this, "POST", REST_PATH, content, com.google.api.services.cloudshell.v1alpha1.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Start set$Xgafv(java.lang.String $Xgafv) {
          return (Start) super.set$Xgafv($Xgafv);
        }

        @Override
        public Start setAccessToken(java.lang.String accessToken) {
          return (Start) super.setAccessToken(accessToken);
        }

        @Override
        public Start setAlt(java.lang.String alt) {
          return (Start) super.setAlt(alt);
        }

        @Override
        public Start setCallback(java.lang.String callback) {
          return (Start) super.setCallback(callback);
        }

        @Override
        public Start setFields(java.lang.String fields) {
          return (Start) super.setFields(fields);
        }

        @Override
        public Start setKey(java.lang.String key) {
          return (Start) super.setKey(key);
        }

        @Override
        public Start setOauthToken(java.lang.String oauthToken) {
          return (Start) super.setOauthToken(oauthToken);
        }

        @Override
        public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Start) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Start setQuotaUser(java.lang.String quotaUser) {
          return (Start) super.setQuotaUser(quotaUser);
        }

        @Override
        public Start setUploadType(java.lang.String uploadType) {
          return (Start) super.setUploadType(uploadType);
        }

        @Override
        public Start setUploadProtocol(java.lang.String uploadProtocol) {
          return (Start) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the resource that should be started, for example `users/me/environments/default`
         * or `users/someone@example.com/environments/default`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the resource that should be started, for example `users/me/environments/default` or
       `users/someone@example.com/environments/default`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the resource that should be started, for example `users/me/environments/default`
         * or `users/someone@example.com/environments/default`.
         */
        public Start setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^users/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Start set(String parameterName, Object value) {
          return (Start) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the PublicKeys collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudShell cloudshell = new CloudShell(...);}
       *   {@code CloudShell.PublicKeys.List request = cloudshell.publicKeys().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public PublicKeys publicKeys() {
        return new PublicKeys();
      }

      /**
       * The "publicKeys" collection of methods.
       */
      public class PublicKeys {

        /**
         * Adds a public SSH key to an environment, allowing clients with the corresponding private key to
         * connect to that environment via SSH. If a key with the same format and content already exists,
         * this will return the existing key.
         *
         * Create a request for the method "publicKeys.create".
         *
         * This request holds the parameters needed by the cloudshell server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Parent resource name, e.g. `users/me/environments/default`.
         * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.CreatePublicKeyRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.cloudshell.v1alpha1.model.CreatePublicKeyRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.PublicKey> {

          private static final String REST_PATH = "v1alpha1/{+parent}/publicKeys";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+$");

          /**
           * Adds a public SSH key to an environment, allowing clients with the corresponding private key to
           * connect to that environment via SSH. If a key with the same format and content already exists,
           * this will return the existing key.
           *
           * Create a request for the method "publicKeys.create".
           *
           * This request holds the parameters needed by the the cloudshell server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Parent resource name, e.g. `users/me/environments/default`.
           * @param content the {@link com.google.api.services.cloudshell.v1alpha1.model.CreatePublicKeyRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.cloudshell.v1alpha1.model.CreatePublicKeyRequest content) {
            super(CloudShell.this, "POST", REST_PATH, content, com.google.api.services.cloudshell.v1alpha1.model.PublicKey.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^users/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Parent resource name, e.g. `users/me/environments/default`. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Parent resource name, e.g. `users/me/environments/default`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Parent resource name, e.g. `users/me/environments/default`. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^users/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Removes a public SSH key from an environment. Clients will no longer be able to connect to the
         * environment using the corresponding private key.
         *
         * Create a request for the method "publicKeys.delete".
         *
         * This request holds the parameters needed by the cloudshell server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Name of the resource to be deleted, e.g.
        `users/me/environments/default/publicKeys/my-key`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudShellRequest<com.google.api.services.cloudshell.v1alpha1.model.Empty> {

          private static final String REST_PATH = "v1alpha1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^users/[^/]+/environments/[^/]+/publicKeys/[^/]+$");

          /**
           * Removes a public SSH key from an environment. Clients will no longer be able to connect to the
           * environment using the corresponding private key.
           *
           * Create a request for the method "publicKeys.delete".
           *
           * This request holds the parameters needed by the the cloudshell server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Name of the resource to be deleted, e.g.
        `users/me/environments/default/publicKeys/my-key`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudShell.this, "DELETE", REST_PATH, null, com.google.api.services.cloudshell.v1alpha1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^users/[^/]+/environments/[^/]+/publicKeys/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the resource to be deleted, e.g. `users/me/environments/default/publicKeys/my-
           * key`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Name of the resource to be deleted, e.g. `users/me/environments/default/publicKeys/my-key`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Name of the resource to be deleted, e.g. `users/me/environments/default/publicKeys/my-
           * key`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^users/[^/]+/environments/[^/]+/publicKeys/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudShell}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudShell}. */
    @Override
    public CloudShell build() {
      return new CloudShell(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudShellRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudShellRequestInitializer(
        CloudShellRequestInitializer cloudshellRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudshellRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
