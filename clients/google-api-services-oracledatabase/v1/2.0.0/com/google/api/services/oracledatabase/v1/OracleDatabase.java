/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.oracledatabase.v1;

/**
 * Service definition for OracleDatabase (v1).
 *
 * <p>
 * The Oracle Database@Google Cloud API provides a set of APIs to manage Oracle database services, such as Exadata and Autonomous Databases.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/oracle/database/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link OracleDatabaseRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class OracleDatabase extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Oracle Database@Google Cloud API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://oracledatabase.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://oracledatabase.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public OracleDatabase(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  OracleDatabase(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
   *   {@code OracleDatabase.Projects.List request = oracledatabase.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
     *   {@code OracleDatabase.Locations.List request = oracledatabase.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the oracledatabase server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the oracledatabase server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the oracledatabase server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the AutonomousDatabaseBackups collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.AutonomousDatabaseBackups.List request = oracledatabase.autonomousDatabaseBackups().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutonomousDatabaseBackups autonomousDatabaseBackups() {
        return new AutonomousDatabaseBackups();
      }

      /**
       * The "autonomousDatabaseBackups" collection of methods.
       */
      public class AutonomousDatabaseBackups {

        /**
         * Lists the long-term and automatic backups of an Autonomous Database.
         *
         * Create a request for the method "autonomousDatabaseBackups.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for ListAutonomousDatabaseBackups in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabaseBackupsResponse> {

          private static final String REST_PATH = "v1/{+parent}/autonomousDatabaseBackups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the long-term and automatic backups of an Autonomous Database.
           *
           * Create a request for the method "autonomousDatabaseBackups.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for ListAutonomousDatabaseBackups in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabaseBackupsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for ListAutonomousDatabaseBackups in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for ListAutonomousDatabaseBackups in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for ListAutonomousDatabaseBackups in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. Only the
           * **autonomous_database_id** field is supported in the following format:
           * `autonomous_database_id="{autonomous_database_id}"`. The accepted values must be a
           * valid Autonomous Database ID, limited to the naming restrictions of the ID:
           * ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$). The ID must start with a letter, end with a letter
           * or a number, and be a maximum of 63 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. Only the
         **autonomous_database_id** field is supported in the following format:
         `autonomous_database_id="{autonomous_database_id}"`. The accepted values must be a valid Autonomous
         Database ID, limited to the naming restrictions of the ID: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$). The
         ID must start with a letter, end with a letter or a number, and be a maximum of 63 characters.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. Only the
           * **autonomous_database_id** field is supported in the following format:
           * `autonomous_database_id="{autonomous_database_id}"`. The accepted values must be a
           * valid Autonomous Database ID, limited to the naming restrictions of the ID:
           * ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$). The ID must start with a letter, end with a letter
           * or a number, and be a maximum of 63 characters.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Backups will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Backups
         will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Backups will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AutonomousDatabaseCharacterSets collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.AutonomousDatabaseCharacterSets.List request = oracledatabase.autonomousDatabaseCharacterSets().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutonomousDatabaseCharacterSets autonomousDatabaseCharacterSets() {
        return new AutonomousDatabaseCharacterSets();
      }

      /**
       * The "autonomousDatabaseCharacterSets" collection of methods.
       */
      public class AutonomousDatabaseCharacterSets {

        /**
         * Lists Autonomous Database Character Sets in a given project and location.
         *
         * Create a request for the method "autonomousDatabaseCharacterSets.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabaseCharacterSetsResponse> {

          private static final String REST_PATH = "v1/{+parent}/autonomousDatabaseCharacterSets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Autonomous Database Character Sets in a given project and location.
           *
           * Create a request for the method "autonomousDatabaseCharacterSets.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabaseCharacterSetsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for the Autonomous Database in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An expression for filtering the results of the request. Only the
           * **character_set_type** field is supported in the following format:
           * `character_set_type="{characterSetType}"`. Accepted values include `DATABASE` and
           * `NATIONAL`.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request. Only the **character_set_type**
         field is supported in the following format: `character_set_type="{characterSetType}"`. Accepted
         values include `DATABASE` and `NATIONAL`.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An expression for filtering the results of the request. Only the
           * **character_set_type** field is supported in the following format:
           * `character_set_type="{characterSetType}"`. Accepted values include `DATABASE` and
           * `NATIONAL`.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Character Sets will be returned. The maximum value is 1000; values above 1000 will
           * be coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Character
         Sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Character Sets will be returned. The maximum value is 1000; values above 1000 will
           * be coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AutonomousDatabases collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.AutonomousDatabases.List request = oracledatabase.autonomousDatabases().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutonomousDatabases autonomousDatabases() {
        return new AutonomousDatabases();
      }

      /**
       * The "autonomousDatabases" collection of methods.
       */
      public class AutonomousDatabases {

        /**
         * Creates a new Autonomous Database in a given project and location.
         *
         * Create a request for the method "autonomousDatabases.create".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.AutonomousDatabase}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.AutonomousDatabase content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/autonomousDatabases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Autonomous Database in a given project and location.
           *
           * Create a request for the method "autonomousDatabases.create".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.AutonomousDatabase}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.AutonomousDatabase content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID of the Autonomous Database to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          @com.google.api.client.util.Key
          private java.lang.String autonomousDatabaseId;

          /** Required. The ID of the Autonomous Database to create. This value is restricted to
         (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value
         must start with a letter and end with a letter or a number.
           */
          public java.lang.String getAutonomousDatabaseId() {
            return autonomousDatabaseId;
          }

          /**
           * Required. The ID of the Autonomous Database to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          public Create setAutonomousDatabaseId(java.lang.String autonomousDatabaseId) {
            this.autonomousDatabaseId = autonomousDatabaseId;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Autonomous Database.
         *
         * Create a request for the method "autonomousDatabases.delete".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the resource in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");

          /**
           * Deletes a single Autonomous Database.
           *
           * Create a request for the method "autonomousDatabases.delete".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the resource in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(OracleDatabase.this, "DELETE", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the resource in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the resource in the following format:
         projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the resource in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Generates a wallet for an Autonomous Database.
         *
         * Create a request for the method "autonomousDatabases.generateWallet".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link GenerateWallet#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletRequest}
         * @return the request
         */
        public GenerateWallet generateWallet(java.lang.String name, com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletRequest content) throws java.io.IOException {
          GenerateWallet result = new GenerateWallet(name, content);
          initialize(result);
          return result;
        }

        public class GenerateWallet extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletResponse> {

          private static final String REST_PATH = "v1/{+name}:generateWallet";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");

          /**
           * Generates a wallet for an Autonomous Database.
           *
           * Create a request for the method "autonomousDatabases.generateWallet".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link GenerateWallet#execute()} method to invoke the remote
           * operation. <p> {@link GenerateWallet#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletRequest}
           * @since 1.13
           */
          protected GenerateWallet(java.lang.String name, com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletRequest content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.GenerateAutonomousDatabaseWalletResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
          }

          @Override
          public GenerateWallet set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateWallet) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateWallet setAccessToken(java.lang.String accessToken) {
            return (GenerateWallet) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateWallet setAlt(java.lang.String alt) {
            return (GenerateWallet) super.setAlt(alt);
          }

          @Override
          public GenerateWallet setCallback(java.lang.String callback) {
            return (GenerateWallet) super.setCallback(callback);
          }

          @Override
          public GenerateWallet setFields(java.lang.String fields) {
            return (GenerateWallet) super.setFields(fields);
          }

          @Override
          public GenerateWallet setKey(java.lang.String key) {
            return (GenerateWallet) super.setKey(key);
          }

          @Override
          public GenerateWallet setOauthToken(java.lang.String oauthToken) {
            return (GenerateWallet) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateWallet setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateWallet) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateWallet setQuotaUser(java.lang.String quotaUser) {
            return (GenerateWallet) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateWallet setUploadType(java.lang.String uploadType) {
            return (GenerateWallet) super.setUploadType(uploadType);
          }

          @Override
          public GenerateWallet setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateWallet) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Autonomous Database in the following format:
         projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public GenerateWallet setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GenerateWallet set(String parameterName, Object value) {
            return (GenerateWallet) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a single Autonomous Database.
         *
         * Create a request for the method "autonomousDatabases.get".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.AutonomousDatabase> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");

          /**
           * Gets the details of a single Autonomous Database.
           *
           * Create a request for the method "autonomousDatabases.get".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.AutonomousDatabase.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Autonomous Database in the following format:
         projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the Autonomous Databases in a given project and location.
         *
         * Create a request for the method "autonomousDatabases.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabasesResponse> {

          private static final String REST_PATH = "v1/{+parent}/autonomousDatabases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the Autonomous Databases in a given project and location.
           *
           * Create a request for the method "autonomousDatabases.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListAutonomousDatabasesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for the Autonomous Database in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. An expression for filtering the results of the request. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. An expression for filtering the results of the request. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Optional. An expression for ordering the results of the request. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. An expression for ordering the results of the request.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Optional. An expression for ordering the results of the request. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * Database will be returned. The maximum value is 1000; values above 1000 will be coerced
           * to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous Database
         will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * Database will be returned. The maximum value is 1000; values above 1000 will be coerced
           * to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Restores a single Autonomous Database.
         *
         * Create a request for the method "autonomousDatabases.restore".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.RestoreAutonomousDatabaseRequest}
         * @return the request
         */
        public Restore restore(java.lang.String name, com.google.api.services.oracledatabase.v1.model.RestoreAutonomousDatabaseRequest content) throws java.io.IOException {
          Restore result = new Restore(name, content);
          initialize(result);
          return result;
        }

        public class Restore extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:restore";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");

          /**
           * Restores a single Autonomous Database.
           *
           * Create a request for the method "autonomousDatabases.restore".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Restore#execute()} method to invoke the remote operation.
           * <p> {@link
           * Restore#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.RestoreAutonomousDatabaseRequest}
           * @since 1.13
           */
          protected Restore(java.lang.String name, com.google.api.services.oracledatabase.v1.model.RestoreAutonomousDatabaseRequest content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
          }

          @Override
          public Restore set$Xgafv(java.lang.String $Xgafv) {
            return (Restore) super.set$Xgafv($Xgafv);
          }

          @Override
          public Restore setAccessToken(java.lang.String accessToken) {
            return (Restore) super.setAccessToken(accessToken);
          }

          @Override
          public Restore setAlt(java.lang.String alt) {
            return (Restore) super.setAlt(alt);
          }

          @Override
          public Restore setCallback(java.lang.String callback) {
            return (Restore) super.setCallback(callback);
          }

          @Override
          public Restore setFields(java.lang.String fields) {
            return (Restore) super.setFields(fields);
          }

          @Override
          public Restore setKey(java.lang.String key) {
            return (Restore) super.setKey(key);
          }

          @Override
          public Restore setOauthToken(java.lang.String oauthToken) {
            return (Restore) super.setOauthToken(oauthToken);
          }

          @Override
          public Restore setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Restore) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Restore setQuotaUser(java.lang.String quotaUser) {
            return (Restore) super.setQuotaUser(quotaUser);
          }

          @Override
          public Restore setUploadType(java.lang.String uploadType) {
            return (Restore) super.setUploadType(uploadType);
          }

          @Override
          public Restore setUploadProtocol(java.lang.String uploadProtocol) {
            return (Restore) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Autonomous Database in the following format:
         projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Autonomous Database in the following format:
           * projects/{project}/locations/{location}/autonomousDatabases/{autonomous_database}.
           */
          public Restore setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/autonomousDatabases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Restore set(String parameterName, Object value) {
            return (Restore) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AutonomousDbVersions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.AutonomousDbVersions.List request = oracledatabase.autonomousDbVersions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AutonomousDbVersions autonomousDbVersions() {
        return new AutonomousDbVersions();
      }

      /**
       * The "autonomousDbVersions" collection of methods.
       */
      public class AutonomousDbVersions {

        /**
         * Lists all the available Autonomous Database versions for a project and location.
         *
         * Create a request for the method "autonomousDbVersions.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListAutonomousDbVersionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/autonomousDbVersions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the available Autonomous Database versions for a project and location.
           *
           * Create a request for the method "autonomousDbVersions.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for the Autonomous Database in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListAutonomousDbVersionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for the Autonomous Database in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for the Autonomous Database in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Versions will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous DB Versions
         will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Autonomous
           * DB Versions will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the CloudExadataInfrastructures collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.CloudExadataInfrastructures.List request = oracledatabase.cloudExadataInfrastructures().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public CloudExadataInfrastructures cloudExadataInfrastructures() {
        return new CloudExadataInfrastructures();
      }

      /**
       * The "cloudExadataInfrastructures" collection of methods.
       */
      public class CloudExadataInfrastructures {

        /**
         * Creates a new Exadata Infrastructure in a given project and location.
         *
         * Create a request for the method "cloudExadataInfrastructures.create".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for CloudExadataInfrastructure in the following format:
         *        projects/{project}/locations/{location}.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/cloudExadataInfrastructures";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new Exadata Infrastructure in a given project and location.
           *
           * Create a request for the method "cloudExadataInfrastructures.create".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for CloudExadataInfrastructure in the following format:
         *        projects/{project}/locations/{location}.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for CloudExadataInfrastructure in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for CloudExadataInfrastructure in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for CloudExadataInfrastructure in the following format:
           * projects/{project}/locations/{location}.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID of the Exadata Infrastructure to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          @com.google.api.client.util.Key
          private java.lang.String cloudExadataInfrastructureId;

          /** Required. The ID of the Exadata Infrastructure to create. This value is restricted to
         (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value
         must start with a letter and end with a letter or a number.
           */
          public java.lang.String getCloudExadataInfrastructureId() {
            return cloudExadataInfrastructureId;
          }

          /**
           * Required. The ID of the Exadata Infrastructure to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          public Create setCloudExadataInfrastructureId(java.lang.String cloudExadataInfrastructureId) {
            this.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single Exadata Infrastructure.
         *
         * Create a request for the method "cloudExadataInfrastructures.delete".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Cloud Exadata Infrastructure in the following format:
         *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrast
         *        ructure}.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");

          /**
           * Deletes a single Exadata Infrastructure.
           *
           * Create a request for the method "cloudExadataInfrastructures.delete".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Cloud Exadata Infrastructure in the following format:
         *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrast
         *        ructure}.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(OracleDatabase.this, "DELETE", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Cloud Exadata Infrastructure in the following format: project
           * s/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastruct
           * ure}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Cloud Exadata Infrastructure in the following format:
         projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Cloud Exadata Infrastructure in the following format: project
           * s/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastruct
           * ure}.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. If set to true, all VM clusters for this Exadata Infrastructure will be
           * deleted. An Exadata Infrastructure can only be deleted once all its VM clusters have
           * been deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. If set to true, all VM clusters for this Exadata Infrastructure will be deleted. An
         Exadata Infrastructure can only be deleted once all its VM clusters have been deleted.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. If set to true, all VM clusters for this Exadata Infrastructure will be
           * deleted. An Exadata Infrastructure can only be deleted once all its VM clusters have
           * been deleted.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single Exadata Infrastructure.
         *
         * Create a request for the method "cloudExadataInfrastructures.get".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Cloud Exadata Infrastructure in the following format:
         *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrast
         *        ructure}.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");

          /**
           * Gets details of a single Exadata Infrastructure.
           *
           * Create a request for the method "cloudExadataInfrastructures.get".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Cloud Exadata Infrastructure in the following format:
         *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrast
         *        ructure}.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.CloudExadataInfrastructure.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Cloud Exadata Infrastructure in the following format: project
           * s/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastruct
           * ure}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Cloud Exadata Infrastructure in the following format:
         projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Cloud Exadata Infrastructure in the following format: project
           * s/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastruct
           * ure}.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Exadata Infrastructures in a given project and location.
         *
         * Create a request for the method "cloudExadataInfrastructures.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for CloudExadataInfrastructure in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListCloudExadataInfrastructuresResponse> {

          private static final String REST_PATH = "v1/{+parent}/cloudExadataInfrastructures";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists Exadata Infrastructures in a given project and location.
           *
           * Create a request for the method "cloudExadataInfrastructures.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for CloudExadataInfrastructure in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListCloudExadataInfrastructuresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for CloudExadataInfrastructure in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for CloudExadataInfrastructure in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for CloudExadataInfrastructure in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Exadata
           * infrastructures will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 Exadata infrastructures
         will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 Exadata
           * infrastructures will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the DbServers collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
         *   {@code OracleDatabase.DbServers.List request = oracledatabase.dbServers().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DbServers dbServers() {
          return new DbServers();
        }

        /**
         * The "dbServers" collection of methods.
         */
        public class DbServers {

          /**
           * Lists the database servers of an Exadata Infrastructure instance.
           *
           * Create a request for the method "dbServers.list".
           *
           * This request holds the parameters needed by the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent value for database server in the following format:
           *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastru
           *        cture}.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListDbServersResponse> {

            private static final String REST_PATH = "v1/{+parent}/dbServers";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");

            /**
             * Lists the database servers of an Exadata Infrastructure instance.
             *
             * Create a request for the method "dbServers.list".
             *
             * This request holds the parameters needed by the the oracledatabase server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent value for database server in the following format:
           *        projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastru
           *        cture}.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListDbServersResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent value for database server in the following format: projects/{pro
             * ject}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent value for database server in the following format:
           projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent value for database server in the following format: projects/{pro
             * ject}/locations/{location}/cloudExadataInfrastructures/{cloudExadataInfrastructure}.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/cloudExadataInfrastructures/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return. If unspecified, a maximum of 50 db
             * servers will be returned. The maximum value is 1000; values above 1000 will be reset
             * to 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 db servers will be
           returned. The maximum value is 1000; values above 1000 will be reset to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return. If unspecified, a maximum of 50 db
             * servers will be returned. The maximum value is 1000; values above 1000 will be reset
             * to 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. A token identifying a page of results the server should return. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A token identifying a page of results the server should return.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. A token identifying a page of results the server should return. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the CloudVmClusters collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.CloudVmClusters.List request = oracledatabase.cloudVmClusters().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public CloudVmClusters cloudVmClusters() {
        return new CloudVmClusters();
      }

      /**
       * The "cloudVmClusters" collection of methods.
       */
      public class CloudVmClusters {

        /**
         * Creates a new VM Cluster in a given project and location.
         *
         * Create a request for the method "cloudVmClusters.create".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.CloudVmCluster}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.CloudVmCluster content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/cloudVmClusters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new VM Cluster in a given project and location.
           *
           * Create a request for the method "cloudVmClusters.create".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.CloudVmCluster}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.oracledatabase.v1.model.CloudVmCluster content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID of the VM Cluster to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          @com.google.api.client.util.Key
          private java.lang.String cloudVmClusterId;

          /** Required. The ID of the VM Cluster to create. This value is restricted to
         (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length. The value
         must start with a letter and end with a letter or a number.
           */
          public java.lang.String getCloudVmClusterId() {
            return cloudVmClusterId;
          }

          /**
           * Required. The ID of the VM Cluster to create. This value is restricted to
           * (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$) and must be a maximum of 63 characters in length.
           * The value must start with a letter and end with a letter or a number.
           */
          public Create setCloudVmClusterId(java.lang.String cloudVmClusterId) {
            this.cloudVmClusterId = cloudVmClusterId;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single VM Cluster.
         *
         * Create a request for the method "cloudVmClusters.delete".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Cloud VM Cluster in the following format:
         *        projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");

          /**
           * Deletes a single VM Cluster.
           *
           * Create a request for the method "cloudVmClusters.delete".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Cloud VM Cluster in the following format:
         *        projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(OracleDatabase.this, "DELETE", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Cloud VM Cluster in the following format:
           * projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Cloud VM Cluster in the following format:
         projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Cloud VM Cluster in the following format:
           * projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. If set to true, all child resources for the VM Cluster will be deleted. A VM
           * Cluster can only be deleted once all its child resources have been deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. If set to true, all child resources for the VM Cluster will be deleted. A VM Cluster can
         only be deleted once all its child resources have been deleted.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Optional. If set to true, all child resources for the VM Cluster will be deleted. A VM
           * Cluster can only be deleted once all its child resources have been deleted.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional ID to identify the request. This value is used to identify duplicate
         requests. If you make a request with the same request ID and the original request is still in
         progress or completed, the server ignores the second request. This prevents clients from
         accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception
         that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional ID to identify the request. This value is used to identify
           * duplicate requests. If you make a request with the same request ID and the original
           * request is still in progress or completed, the server ignores the second request. This
           * prevents clients from accidentally creating duplicate commitments. The request ID must
           * be a valid UUID with the exception that zero UUID is not supported
           * (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single VM Cluster.
         *
         * Create a request for the method "cloudVmClusters.get".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Cloud VM Cluster in the following format:
         *        projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.CloudVmCluster> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");

          /**
           * Gets details of a single VM Cluster.
           *
           * Create a request for the method "cloudVmClusters.get".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Cloud VM Cluster in the following format:
         *        projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.CloudVmCluster.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Cloud VM Cluster in the following format:
           * projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Cloud VM Cluster in the following format:
         projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Cloud VM Cluster in the following format:
           * projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the VM Clusters in a given project and location.
         *
         * Create a request for the method "cloudVmClusters.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListCloudVmClustersResponse> {

          private static final String REST_PATH = "v1/{+parent}/cloudVmClusters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the VM Clusters in a given project and location.
           *
           * Create a request for the method "cloudVmClusters.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListCloudVmClustersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent in the following format: projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. An expression for filtering the results of the request. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An expression for filtering the results of the request.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. An expression for filtering the results of the request. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The number of VM clusters to return. If unspecified, at most 50 VM clusters
           * will be returned. The maximum value is 1,000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The number of VM clusters to return. If unspecified, at most 50 VM clusters will be
         returned. The maximum value is 1,000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The number of VM clusters to return. If unspecified, at most 50 VM clusters
           * will be returned. The maximum value is 1,000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying the page of results the server returns. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying the page of results the server returns.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying the page of results the server returns. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the DbNodes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
         *   {@code OracleDatabase.DbNodes.List request = oracledatabase.dbNodes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DbNodes dbNodes() {
          return new DbNodes();
        }

        /**
         * The "dbNodes" collection of methods.
         */
        public class DbNodes {

          /**
           * Lists the database nodes of a VM Cluster.
           *
           * Create a request for the method "dbNodes.list".
           *
           * This request holds the parameters needed by the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent value for database node in the following format:
           *        projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListDbNodesResponse> {

            private static final String REST_PATH = "v1/{+parent}/dbNodes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");

            /**
             * Lists the database nodes of a VM Cluster.
             *
             * Create a request for the method "dbNodes.list".
             *
             * This request holds the parameters needed by the the oracledatabase server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent value for database node in the following format:
           *        projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListDbNodesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent value for database node in the following format:
             * projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent value for database node in the following format:
           projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent value for database node in the following format:
             * projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/cloudVmClusters/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. The maximum number of items to return. If unspecified, at most 50 db nodes
             * will be returned. The maximum value is 1000; values above 1000 will be coerced to
             * 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return. If unspecified, at most 50 db nodes will be
           returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return. If unspecified, at most 50 db nodes
             * will be returned. The maximum value is 1000; values above 1000 will be coerced to
             * 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. A token identifying a page of results the node should return. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. A token identifying a page of results the node should return.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. A token identifying a page of results the node should return. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the DbSystemShapes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.DbSystemShapes.List request = oracledatabase.dbSystemShapes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public DbSystemShapes dbSystemShapes() {
        return new DbSystemShapes();
      }

      /**
       * The "dbSystemShapes" collection of methods.
       */
      public class DbSystemShapes {

        /**
         * Lists the database system shapes available for the project and location.
         *
         * Create a request for the method "dbSystemShapes.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for Database System Shapes in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListDbSystemShapesResponse> {

          private static final String REST_PATH = "v1/{+parent}/dbSystemShapes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the database system shapes available for the project and location.
           *
           * Create a request for the method "dbSystemShapes.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for Database System Shapes in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListDbSystemShapesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for Database System Shapes in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for Database System Shapes in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for Database System Shapes in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 database
           * system shapes will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, at most 50 database system shapes
         will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, at most 50 database
           * system shapes will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Entitlements collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.Entitlements.List request = oracledatabase.entitlements().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Entitlements entitlements() {
        return new Entitlements();
      }

      /**
       * The "entitlements" collection of methods.
       */
      public class Entitlements {

        /**
         * Lists the entitlements in a given project.
         *
         * Create a request for the method "entitlements.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for the entitlement in the following format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListEntitlementsResponse> {

          private static final String REST_PATH = "v1/{+parent}/entitlements";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the entitlements in a given project.
           *
           * Create a request for the method "entitlements.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for the entitlement in the following format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListEntitlementsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for the entitlement in the following format:
           * projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for the entitlement in the following format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for the entitlement in the following format:
           * projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, a maximum of 50
           * entitlements will be returned. The maximum value is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 entitlements will
         be returned. The maximum value is 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, a maximum of 50
           * entitlements will be returned. The maximum value is 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the GiVersions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.GiVersions.List request = oracledatabase.giVersions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public GiVersions giVersions() {
        return new GiVersions();
      }

      /**
       * The "giVersions" collection of methods.
       */
      public class GiVersions {

        /**
         * Lists all the valid Oracle Grid Infrastructure (GI) versions for the given project and location.
         *
         * Create a request for the method "giVersions.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent value for Grid Infrastructure Version in the following format: Format:
         *        projects/{project}/locations/{location}.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListGiVersionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/giVersions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all the valid Oracle Grid Infrastructure (GI) versions for the given project and
           * location.
           *
           * Create a request for the method "giVersions.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent value for Grid Infrastructure Version in the following format: Format:
         *        projects/{project}/locations/{location}.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListGiVersionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent value for Grid Infrastructure Version in the following format:
           * Format: projects/{project}/locations/{location}.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent value for Grid Infrastructure Version in the following format: Format:
         projects/{project}/locations/{location}.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent value for Grid Infrastructure Version in the following format:
           * Format: projects/{project}/locations/{location}.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, a maximum of 50 Oracle
           * Grid Infrastructure (GI) versions will be returned. The maximum value is 1000; values
           * above 1000 will be reset to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If unspecified, a maximum of 50 Oracle Grid
         Infrastructure (GI) versions will be returned. The maximum value is 1000; values above 1000 will be
         reset to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If unspecified, a maximum of 50 Oracle
           * Grid Infrastructure (GI) versions will be returned. The maximum value is 1000; values
           * above 1000 will be reset to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Optional. A token identifying a page of results the server should return. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A token identifying a page of results the server should return.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Optional. A token identifying a page of results the server should return. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code OracleDatabase oracledatabase = new OracleDatabase(...);}
       *   {@code OracleDatabase.Operations.List request = oracledatabase.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.oracledatabase.v1.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.oracledatabase.v1.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.oracledatabase.v1.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.oracledatabase.v1.model.CancelOperationRequest content) {
            super(OracleDatabase.this, "POST", REST_PATH, content, com.google.api.services.oracledatabase.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(OracleDatabase.this, "DELETE", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the oracledatabase server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends OracleDatabaseRequest<com.google.api.services.oracledatabase.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the oracledatabase server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(OracleDatabase.this, "GET", REST_PATH, null, com.google.api.services.oracledatabase.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link OracleDatabase}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link OracleDatabase}. */
    @Override
    public OracleDatabase build() {
      return new OracleDatabase(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link OracleDatabaseRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setOracleDatabaseRequestInitializer(
        OracleDatabaseRequestInitializer oracledatabaseRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(oracledatabaseRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
