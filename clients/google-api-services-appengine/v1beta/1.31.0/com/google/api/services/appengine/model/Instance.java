/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.appengine.model;

/**
 * An Instance resource is the computing unit that App Engine uses to automatically scale an
 * application.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the App Engine Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * Output only. App Engine release this instance is running on.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appEngineRelease;

  /**
   * Output only. Availability of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String availability;

  /**
   * Output only. Average latency (ms) over the last minute.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer averageLatency;

  /**
   * Output only. Number of errors since this instance was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer errors;

  /**
   * Output only. Relative name of the instance within the version. Example: instance-1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Output only. Total memory in use (bytes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long memoryUsage;

  /**
   * Output only. Full path to the Instance resource in the API. Example:
   * apps/myapp/services/default/versions/v1/instances/instance-1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Average queries per second (QPS) over the last minute.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float qps;

  /**
   * Output only. Number of requests since this instance was started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer requests;

  /**
   * Output only. Time that this instance was started.@OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. Whether this instance is in debug mode. Only applicable for instances in App
   * Engine flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean vmDebugEnabled;

  /**
   * Output only. Virtual machine ID of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmId;

  /**
   * Output only. The IP address of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmIp;

  /**
   * Output only. The liveness health check of this instance. Only applicable for instances in App
   * Engine flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmLiveness;

  /**
   * Output only. Name of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmName;

  /**
   * Output only. Status of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmStatus;

  /**
   * Output only. Zone where the virtual machine is located. Only applicable for instances in App
   * Engine flexible environment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vmZoneName;

  /**
   * Output only. App Engine release this instance is running on.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppEngineRelease() {
    return appEngineRelease;
  }

  /**
   * Output only. App Engine release this instance is running on.
   * @param appEngineRelease appEngineRelease or {@code null} for none
   */
  public Instance setAppEngineRelease(java.lang.String appEngineRelease) {
    this.appEngineRelease = appEngineRelease;
    return this;
  }

  /**
   * Output only. Availability of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getAvailability() {
    return availability;
  }

  /**
   * Output only. Availability of the instance.
   * @param availability availability or {@code null} for none
   */
  public Instance setAvailability(java.lang.String availability) {
    this.availability = availability;
    return this;
  }

  /**
   * Output only. Average latency (ms) over the last minute.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAverageLatency() {
    return averageLatency;
  }

  /**
   * Output only. Average latency (ms) over the last minute.
   * @param averageLatency averageLatency or {@code null} for none
   */
  public Instance setAverageLatency(java.lang.Integer averageLatency) {
    this.averageLatency = averageLatency;
    return this;
  }

  /**
   * Output only. Number of errors since this instance was started.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getErrors() {
    return errors;
  }

  /**
   * Output only. Number of errors since this instance was started.
   * @param errors errors or {@code null} for none
   */
  public Instance setErrors(java.lang.Integer errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Output only. Relative name of the instance within the version. Example: instance-1.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Output only. Relative name of the instance within the version. Example: instance-1.
   * @param id id or {@code null} for none
   */
  public Instance setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. Total memory in use (bytes).
   * @return value or {@code null} for none
   */
  public java.lang.Long getMemoryUsage() {
    return memoryUsage;
  }

  /**
   * Output only. Total memory in use (bytes).
   * @param memoryUsage memoryUsage or {@code null} for none
   */
  public Instance setMemoryUsage(java.lang.Long memoryUsage) {
    this.memoryUsage = memoryUsage;
    return this;
  }

  /**
   * Output only. Full path to the Instance resource in the API. Example:
   * apps/myapp/services/default/versions/v1/instances/instance-1.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Full path to the Instance resource in the API. Example:
   * apps/myapp/services/default/versions/v1/instances/instance-1.
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Average queries per second (QPS) over the last minute.
   * @return value or {@code null} for none
   */
  public java.lang.Float getQps() {
    return qps;
  }

  /**
   * Output only. Average queries per second (QPS) over the last minute.
   * @param qps qps or {@code null} for none
   */
  public Instance setQps(java.lang.Float qps) {
    this.qps = qps;
    return this;
  }

  /**
   * Output only. Number of requests since this instance was started.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRequests() {
    return requests;
  }

  /**
   * Output only. Number of requests since this instance was started.
   * @param requests requests or {@code null} for none
   */
  public Instance setRequests(java.lang.Integer requests) {
    this.requests = requests;
    return this;
  }

  /**
   * Output only. Time that this instance was started.@OutputOnly
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. Time that this instance was started.@OutputOnly
   * @param startTime startTime or {@code null} for none
   */
  public Instance setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. Whether this instance is in debug mode. Only applicable for instances in App
   * Engine flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVmDebugEnabled() {
    return vmDebugEnabled;
  }

  /**
   * Output only. Whether this instance is in debug mode. Only applicable for instances in App
   * Engine flexible environment.
   * @param vmDebugEnabled vmDebugEnabled or {@code null} for none
   */
  public Instance setVmDebugEnabled(java.lang.Boolean vmDebugEnabled) {
    this.vmDebugEnabled = vmDebugEnabled;
    return this;
  }

  /**
   * Output only. Virtual machine ID of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmId() {
    return vmId;
  }

  /**
   * Output only. Virtual machine ID of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * @param vmId vmId or {@code null} for none
   */
  public Instance setVmId(java.lang.String vmId) {
    this.vmId = vmId;
    return this;
  }

  /**
   * Output only. The IP address of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmIp() {
    return vmIp;
  }

  /**
   * Output only. The IP address of this instance. Only applicable for instances in App Engine
   * flexible environment.
   * @param vmIp vmIp or {@code null} for none
   */
  public Instance setVmIp(java.lang.String vmIp) {
    this.vmIp = vmIp;
    return this;
  }

  /**
   * Output only. The liveness health check of this instance. Only applicable for instances in App
   * Engine flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmLiveness() {
    return vmLiveness;
  }

  /**
   * Output only. The liveness health check of this instance. Only applicable for instances in App
   * Engine flexible environment.
   * @param vmLiveness vmLiveness or {@code null} for none
   */
  public Instance setVmLiveness(java.lang.String vmLiveness) {
    this.vmLiveness = vmLiveness;
    return this;
  }

  /**
   * Output only. Name of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmName() {
    return vmName;
  }

  /**
   * Output only. Name of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * @param vmName vmName or {@code null} for none
   */
  public Instance setVmName(java.lang.String vmName) {
    this.vmName = vmName;
    return this;
  }

  /**
   * Output only. Status of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmStatus() {
    return vmStatus;
  }

  /**
   * Output only. Status of the virtual machine where this instance lives. Only applicable for
   * instances in App Engine flexible environment.
   * @param vmStatus vmStatus or {@code null} for none
   */
  public Instance setVmStatus(java.lang.String vmStatus) {
    this.vmStatus = vmStatus;
    return this;
  }

  /**
   * Output only. Zone where the virtual machine is located. Only applicable for instances in App
   * Engine flexible environment.
   * @return value or {@code null} for none
   */
  public java.lang.String getVmZoneName() {
    return vmZoneName;
  }

  /**
   * Output only. Zone where the virtual machine is located. Only applicable for instances in App
   * Engine flexible environment.
   * @param vmZoneName vmZoneName or {@code null} for none
   */
  public Instance setVmZoneName(java.lang.String vmZoneName) {
    this.vmZoneName = vmZoneName;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
