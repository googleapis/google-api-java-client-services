/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.trafficdirector.v3.model;

/**
 * GenericXdsConfig is used to specify the config status and the dump of any xDS resource identified
 * by their type URL. It is the generalized version of the now deprecated ListenersConfigDump,
 * ClustersConfigDump etc [#next-free-field: 10]
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Traffic Director API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GenericXdsConfig extends com.google.api.client.json.GenericJson {

  /**
   * Per xDS resource status from the view of a xDS client
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientStatus;

  /**
   * Per xDS resource config status. It is generated by management servers. It will not be present
   * if the CSDS server is an xDS client.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String configStatus;

  /**
   * Set if the last update failed, cleared after the next successful update. The *error_state*
   * field contains the rejected version of this particular resource along with the reason and
   * timestamp. For successfully updated or acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UpdateFailureState errorState;

  /**
   * Is static resource is true if it is specified in the config supplied through the file at the
   * startup.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isStaticResource;

  /**
   * Timestamp when the xDS resource was last updated
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastUpdated;

  /**
   * Name of the xDS resource
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Type_url represents the fully qualified name of xDS resource type like envoy.v3.Cluster,
   * envoy.v3.ClusterLoadAssignment etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String typeUrl;

  /**
   * This is the :ref:`version_info ` in the last processed xDS discovery response. If there are
   * only static bootstrap listeners, this field will be ""
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String versionInfo;

  /**
   * The xDS resource config. Actual content depends on the type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> xdsConfig;

  /**
   * Per xDS resource status from the view of a xDS client
   * @return value or {@code null} for none
   */
  public java.lang.String getClientStatus() {
    return clientStatus;
  }

  /**
   * Per xDS resource status from the view of a xDS client
   * @param clientStatus clientStatus or {@code null} for none
   */
  public GenericXdsConfig setClientStatus(java.lang.String clientStatus) {
    this.clientStatus = clientStatus;
    return this;
  }

  /**
   * Per xDS resource config status. It is generated by management servers. It will not be present
   * if the CSDS server is an xDS client.
   * @return value or {@code null} for none
   */
  public java.lang.String getConfigStatus() {
    return configStatus;
  }

  /**
   * Per xDS resource config status. It is generated by management servers. It will not be present
   * if the CSDS server is an xDS client.
   * @param configStatus configStatus or {@code null} for none
   */
  public GenericXdsConfig setConfigStatus(java.lang.String configStatus) {
    this.configStatus = configStatus;
    return this;
  }

  /**
   * Set if the last update failed, cleared after the next successful update. The *error_state*
   * field contains the rejected version of this particular resource along with the reason and
   * timestamp. For successfully updated or acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   * @return value or {@code null} for none
   */
  public UpdateFailureState getErrorState() {
    return errorState;
  }

  /**
   * Set if the last update failed, cleared after the next successful update. The *error_state*
   * field contains the rejected version of this particular resource along with the reason and
   * timestamp. For successfully updated or acknowledged resource, this field should be empty.
   * [#not-implemented-hide:]
   * @param errorState errorState or {@code null} for none
   */
  public GenericXdsConfig setErrorState(UpdateFailureState errorState) {
    this.errorState = errorState;
    return this;
  }

  /**
   * Is static resource is true if it is specified in the config supplied through the file at the
   * startup.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsStaticResource() {
    return isStaticResource;
  }

  /**
   * Is static resource is true if it is specified in the config supplied through the file at the
   * startup.
   * @param isStaticResource isStaticResource or {@code null} for none
   */
  public GenericXdsConfig setIsStaticResource(java.lang.Boolean isStaticResource) {
    this.isStaticResource = isStaticResource;
    return this;
  }

  /**
   * Timestamp when the xDS resource was last updated
   * @return value or {@code null} for none
   */
  public String getLastUpdated() {
    return lastUpdated;
  }

  /**
   * Timestamp when the xDS resource was last updated
   * @param lastUpdated lastUpdated or {@code null} for none
   */
  public GenericXdsConfig setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Name of the xDS resource
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the xDS resource
   * @param name name or {@code null} for none
   */
  public GenericXdsConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Type_url represents the fully qualified name of xDS resource type like envoy.v3.Cluster,
   * envoy.v3.ClusterLoadAssignment etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getTypeUrl() {
    return typeUrl;
  }

  /**
   * Type_url represents the fully qualified name of xDS resource type like envoy.v3.Cluster,
   * envoy.v3.ClusterLoadAssignment etc.
   * @param typeUrl typeUrl or {@code null} for none
   */
  public GenericXdsConfig setTypeUrl(java.lang.String typeUrl) {
    this.typeUrl = typeUrl;
    return this;
  }

  /**
   * This is the :ref:`version_info ` in the last processed xDS discovery response. If there are
   * only static bootstrap listeners, this field will be ""
   * @return value or {@code null} for none
   */
  public java.lang.String getVersionInfo() {
    return versionInfo;
  }

  /**
   * This is the :ref:`version_info ` in the last processed xDS discovery response. If there are
   * only static bootstrap listeners, this field will be ""
   * @param versionInfo versionInfo or {@code null} for none
   */
  public GenericXdsConfig setVersionInfo(java.lang.String versionInfo) {
    this.versionInfo = versionInfo;
    return this;
  }

  /**
   * The xDS resource config. Actual content depends on the type
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getXdsConfig() {
    return xdsConfig;
  }

  /**
   * The xDS resource config. Actual content depends on the type
   * @param xdsConfig xdsConfig or {@code null} for none
   */
  public GenericXdsConfig setXdsConfig(java.util.Map<String, java.lang.Object> xdsConfig) {
    this.xdsConfig = xdsConfig;
    return this;
  }

  @Override
  public GenericXdsConfig set(String fieldName, Object value) {
    return (GenericXdsConfig) super.set(fieldName, value);
  }

  @Override
  public GenericXdsConfig clone() {
    return (GenericXdsConfig) super.clone();
  }

}
