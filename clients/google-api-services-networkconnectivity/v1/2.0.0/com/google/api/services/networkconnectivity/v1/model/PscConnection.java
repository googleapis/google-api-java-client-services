/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networkconnectivity.v1.model;

/**
 * Information about a specific Private Service Connect connection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Connectivity API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PscConnection extends com.google.api.client.json.GenericJson {

  /**
   * The resource reference of the consumer address.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String consumerAddress;

  /**
   * The resource reference of the PSC Forwarding Rule within the consumer VPC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String consumerForwardingRule;

  /**
   * The project where the PSC connection is created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String consumerTargetProject;

  /**
   * The most recent error during operating this connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleRpcStatus error;

  /**
   * The error type indicates whether the error is consumer facing, producer facing or system
   * internal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorType;

  /**
   * The last Compute Engine operation to setup PSC connection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gceOperation;

  /**
   * The PSC connection id of the PSC forwarding rule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pscConnectionId;

  /**
   * State of the PSC Connection
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The resource reference of the consumer address.
   * @return value or {@code null} for none
   */
  public java.lang.String getConsumerAddress() {
    return consumerAddress;
  }

  /**
   * The resource reference of the consumer address.
   * @param consumerAddress consumerAddress or {@code null} for none
   */
  public PscConnection setConsumerAddress(java.lang.String consumerAddress) {
    this.consumerAddress = consumerAddress;
    return this;
  }

  /**
   * The resource reference of the PSC Forwarding Rule within the consumer VPC.
   * @return value or {@code null} for none
   */
  public java.lang.String getConsumerForwardingRule() {
    return consumerForwardingRule;
  }

  /**
   * The resource reference of the PSC Forwarding Rule within the consumer VPC.
   * @param consumerForwardingRule consumerForwardingRule or {@code null} for none
   */
  public PscConnection setConsumerForwardingRule(java.lang.String consumerForwardingRule) {
    this.consumerForwardingRule = consumerForwardingRule;
    return this;
  }

  /**
   * The project where the PSC connection is created.
   * @return value or {@code null} for none
   */
  public java.lang.String getConsumerTargetProject() {
    return consumerTargetProject;
  }

  /**
   * The project where the PSC connection is created.
   * @param consumerTargetProject consumerTargetProject or {@code null} for none
   */
  public PscConnection setConsumerTargetProject(java.lang.String consumerTargetProject) {
    this.consumerTargetProject = consumerTargetProject;
    return this;
  }

  /**
   * The most recent error during operating this connection.
   * @return value or {@code null} for none
   */
  public GoogleRpcStatus getError() {
    return error;
  }

  /**
   * The most recent error during operating this connection.
   * @param error error or {@code null} for none
   */
  public PscConnection setError(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * The error type indicates whether the error is consumer facing, producer facing or system
   * internal.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorType() {
    return errorType;
  }

  /**
   * The error type indicates whether the error is consumer facing, producer facing or system
   * internal.
   * @param errorType errorType or {@code null} for none
   */
  public PscConnection setErrorType(java.lang.String errorType) {
    this.errorType = errorType;
    return this;
  }

  /**
   * The last Compute Engine operation to setup PSC connection.
   * @return value or {@code null} for none
   */
  public java.lang.String getGceOperation() {
    return gceOperation;
  }

  /**
   * The last Compute Engine operation to setup PSC connection.
   * @param gceOperation gceOperation or {@code null} for none
   */
  public PscConnection setGceOperation(java.lang.String gceOperation) {
    this.gceOperation = gceOperation;
    return this;
  }

  /**
   * The PSC connection id of the PSC forwarding rule.
   * @return value or {@code null} for none
   */
  public java.lang.String getPscConnectionId() {
    return pscConnectionId;
  }

  /**
   * The PSC connection id of the PSC forwarding rule.
   * @param pscConnectionId pscConnectionId or {@code null} for none
   */
  public PscConnection setPscConnectionId(java.lang.String pscConnectionId) {
    this.pscConnectionId = pscConnectionId;
    return this;
  }

  /**
   * State of the PSC Connection
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * State of the PSC Connection
   * @param state state or {@code null} for none
   */
  public PscConnection setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public PscConnection set(String fieldName, Object value) {
    return (PscConnection) super.set(fieldName, value);
  }

  @Override
  public PscConnection clone() {
    return (PscConnection) super.clone();
  }

}
