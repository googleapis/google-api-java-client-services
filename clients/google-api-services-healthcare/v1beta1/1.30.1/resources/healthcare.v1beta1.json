{
  "title": "Cloud Healthcare API",
  "baseUrl": "https://healthcare.googleapis.com/",
  "servicePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "schemas": {
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "GoogleCloudHealthcareV1beta1DeidentifyDeidentifyDicomStoreSummary": {
      "id": "GoogleCloudHealthcareV1beta1DeidentifyDeidentifyDicomStoreSummary",
      "type": "object",
      "properties": {
        "successResourceCount": {
          "type": "string",
          "description": "Number of objects successfully processed.",
          "format": "int64"
        },
        "failureResourceCount": {
          "format": "int64",
          "description": "Number of objects that processing failed for.",
          "type": "string"
        }
      },
      "description": "Contains a summary of the DeidentifyDicomStore operation."
    },
    "ListFhirStoresResponse": {
      "properties": {
        "fhirStores": {
          "items": {
            "$ref": "FhirStore"
          },
          "type": "array",
          "description": "The returned FHIR stores. Won't be more FHIR stores than the value of\npage_size in the request."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      },
      "description": "Lists the FHIR stores in the given dataset.",
      "id": "ListFhirStoresResponse",
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1AnnotationGcsSource": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Points to a Cloud Storage URI containing file(s) with\ncontent only. The URI must be in the following format:\n`gs://{bucket_id}/{object_id}`. The URI can include wildcards in\n`object_id` and thus identify multiple files. Supported wildcards:\n '*' to match 0 or more non-separator characters\n '**' to match 0 or more characters (including separators). Must be used\n at\n      the end of a path and with no other wildcards in the\n      path. Can also be used with a file extension (such as .dcm), which\n      imports all files with the extension in the specified directory and\n      its sub-directories. For example,\n      `gs://my-bucket/my-directory/**.json` imports all files with .json\n      extensions in `my-directory/` and its sub-directories.\n '?' to match 1 character\nAll other URI formats are invalid.\nFiles matching the wildcard are expected to contain content only, no\nmetadata.",
          "type": "string"
        }
      },
      "description": "Specifies the configuration for importing data from Cloud Storage.",
      "id": "GoogleCloudHealthcareV1beta1AnnotationGcsSource"
    },
    "Hl7V2NotificationConfig": {
      "type": "object",
      "id": "Hl7V2NotificationConfig",
      "description": "Specifies where and whether to send notifications upon changes to a\ndata store.",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Restricts notifications sent for messages matching a filter. If this is\nempty, all messages are matched. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\n\nThe following fields and functions are available for filtering:\n\n*  `message_type`, from the MSH-9.1 field. For example,\n`NOT message_type = \"ADT\"`.\n*  `send_date` or `sendDate`, the YYYY-MM-DD date the message was sent in\nthe dataset's time_zone, from the MSH-7 segment. For example,\n`send_date \u003c \"2017-01-02\"`.\n*  `send_time`, the timestamp when the message was sent, using the\nRFC3339 time format for comparisons, from the MSH-7 segment. For example,\n`send_time \u003c \"2017-01-02T00:00:00-05:00\"`.\n*  `send_facility`, the care center that the message came from, from the\nMSH-4 segment. For example, `send_facility = \"ABC\"`.\n*  `PatientId(value, type)`, which matches if the message lists a patient\nhaving an ID of the given value and type in the PID-2, PID-3, or PID-4\nsegments. For example, `PatientId(\"123456\", \"MRN\")`.\n*  `labels.x`, a string value of the label with key `x` as set using the\nMessage.labels\nmap. For example, `labels.\"priority\"=\"high\"`. The operator `:*` can be\nused to assert the existence of a label. For example,\n`labels.\"priority\":*`."
        },
        "pubsubTopic": {
          "type": "string",
          "description": "The [Cloud Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that\nnotifications of changes are published on. Supplied by the client. The\nnotification is a `PubsubMessage` with the following fields:\n\n*  `PubsubMessage.Data` contains the resource name.\n*  `PubsubMessage.MessageId` is the ID of this notification. It is\nguaranteed to be unique within the topic.\n*  `PubsubMessage.PublishTime` is the time when the message was\npublished.\n\nNote that notifications are only sent if the topic is non-empty. [Topic\nnames](https://cloud.google.com/pubsub/docs/overview#names) must be\nscoped to a project. Cloud Healthcare API service account must have\npublisher permissions on the given Pub/Sub topic. Not having adequate\npermissions causes the calls that send notifications to fail.\n\nIf a notification can't be published to Cloud Pub/Sub, errors are\nlogged to Cloud Logging. For more information, see\n[Viewing error logs in Cloud Logging](/healthcare/docs/how-tos/logging)."
        }
      }
    },
    "ExportResourcesRequest": {
      "id": "ExportResourcesRequest",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage output destination.\n\nThe Cloud Storage location requires the `roles/storage.objectAdmin` Cloud\nIAM role.\n\nThe exported outputs are\norganized by FHIR resource types. The server creates one object per\nresource type. Each object contains newline delimited JSON, and each line\nis a FHIR resource.",
          "$ref": "GoogleCloudHealthcareV1beta1FhirRestGcsDestination"
        },
        "bigqueryDestination": {
          "description": "The BigQuery output destination.\n\nThe BigQuery location requires two IAM roles:\n`roles/bigquery.dataEditor` and `roles/bigquery.jobUser`.\n\nThe output is one BigQuery table per resource type.",
          "$ref": "GoogleCloudHealthcareV1beta1FhirBigQueryDestination"
        }
      },
      "description": "Request to export resources.",
      "type": "object"
    },
    "FieldMetadata": {
      "id": "FieldMetadata",
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of paths to FHIR fields to redact. Each path is a\nperiod-separated list where each component is either a field name or\nFHIR type name. All types begin with an upper case letter. For example,\nthe resource field \"Patient.Address.city\", which uses a string type,\ncan be matched by \"Patient.Address.String\". Path also supports partial\nmatching. For example, \"Patient.Address.city\" can be matched by\n\"Address.city\" (Patient omitted). Partial matching and type matching\ncan be combined. For example, \"Patient.Address.city\" can be matched by\n\"Address.String\". For \"choice\" types (those defined in the FHIR spec\nwith the form: field[x]), use two separate components. For example,\n\"deceasedAge.unit\" is matched by \"Deceased.Age.unit\". Supported types\nare: AdministrativeGenderCode, Code, Date, DateTime, Decimal,\nHumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.\nThe sub-type for HumanName, such as HumanName.given or\nHumanName.family, can be omitted.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "action": {
          "enum": [
            "ACTION_UNSPECIFIED",
            "TRANSFORM",
            "INSPECT_AND_TRANSFORM",
            "DO_NOT_TRANSFORM"
          ],
          "description": "Deidentify action for one field.",
          "enumDescriptions": [
            "No action specified.",
            "Transform the entire field based on transformations specified in\nTextConfig. When the specified transformation cannot be applied to a\nfield, RedactConfig is used. For example, a Crypto Hash\ntransformation can't be applied to a FHIR Date field.",
            "Inspect and transform any found PHI.",
            "Do not transform."
          ],
          "type": "string"
        }
      },
      "description": "Specifies FHIR paths to match, and how to handle de-identification of\nmatching fields."
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "DeidentifyDicomStoreRequest": {
      "properties": {
        "filterConfig": {
          "description": "Filter configuration.",
          "$ref": "DicomFilterConfig"
        },
        "config": {
          "$ref": "DeidentifyConfig",
          "description": "De-identify configuration."
        },
        "destinationStore": {
          "type": "string",
          "description": "The name of the DICOM store to create and write the redacted data to.\nFor example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n\n * The destination dataset must exist.\n * The source dataset and destination dataset must both reside in the same\n   project. De-identifying data across multiple projects is not supported.\n * The destination DICOM store must not exist.\n * The caller must have the necessary permissions to create the destination\n   DICOM store."
        }
      },
      "type": "object",
      "description": "Creates a new DICOM store with sensitive information de-identified.",
      "id": "DeidentifyDicomStoreRequest"
    },
    "AnnotationSource": {
      "id": "AnnotationSource",
      "type": "object",
      "properties": {
        "cloudHealthcareSource": {
          "$ref": "CloudHealthcareSource",
          "description": "Cloud Healthcare API resource."
        }
      },
      "description": "AnnotationSource holds the source information of the annotation."
    },
    "Policy": {
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy"
    },
    "SchemaPackage": {
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "$ref": "Hl7TypesConfig"
          },
          "description": "Schema type definitions that are layered based on their VersionSources\nthat match the incoming message. Type definitions present in higher indices\noverride those in lower indices with the same type name if their\nVersionSources all match an incoming message."
        },
        "ignoreMinOccurs": {
          "type": "boolean",
          "description": "Flag to ignore all min_occurs restrictions in the schema. This means that\nincoming messages can omit any group, segment, field, component, or\nsubcomponent."
        },
        "schematizedParsingType": {
          "enum": [
            "SCHEMATIZED_PARSING_TYPE_UNSPECIFIED",
            "SOFT_FAIL",
            "HARD_FAIL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified schematized parsing type, equivalent to `SOFT_FAIL`.",
            "Messages that fail to parse are still stored and ACKed but a parser error\nis stored in place of the schematized data.",
            "Messages that fail to parse are rejected from ingestion/insertion and\nreturn an error code."
          ],
          "description": "Determines how messages that don't parse successfully are handled."
        },
        "schemas": {
          "description": "Schema configs that are layered based on their VersionSources that\nmatch the incoming message. Schema configs present in higher indices\noverride those in lower indices with the same message type and trigger\nevent if their VersionSources all match an incoming message.",
          "items": {
            "$ref": "Hl7SchemaConfig"
          },
          "type": "array"
        }
      },
      "description": "A schema package contains a set of schemas and type definitions.",
      "id": "SchemaPackage",
      "type": "object"
    },
    "ExportDicomDataResponse": {
      "type": "object",
      "id": "ExportDicomDataResponse",
      "properties": {},
      "description": "Returns additional information in regards to a completed DICOM store export."
    },
    "Segment": {
      "id": "Segment",
      "properties": {
        "setId": {
          "description": "Set ID for segments that can be in a set. This can be empty if it's\nmissing or isn't applicable.",
          "type": "string"
        },
        "segmentId": {
          "type": "string",
          "description": "A string that indicates the type of segment. For example, EVN or PID."
        },
        "fields": {
          "description": "A mapping from the positional location to the value.\nThe key string uses zero-based indexes separated by dots to identify\nFields, components and sub-components. A bracket notation is also used to\nidentify different instances of a repeated field.\nRegex for key: (\\d+)(\\[\\d+\\])?(.\\d+)?(.\\d+)?\n\nExamples of (key, value) pairs:\n\n* (0.1, \"hemoglobin\") denotes that the first component of Field 0 has the\n  value \"hemoglobin\".\n\n* (1.1.2, \"CBC\") denotes that the second sub-component of the first\n  component of Field 1 has the value \"CBC\".\n\n* (1[0].1, \"HbA1c\") denotes that the first component of the\n  first Instance of Field 1, which is repeated, has the value \"HbA1c\".",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "A segment in a structured format.",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\"."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object"
        }
      }
    },
    "ImportResourcesRequest": {
      "id": "ImportResourcesRequest",
      "description": "Request to import resources.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudHealthcareV1beta1FhirRestGcsSource",
          "description": "Cloud Storage source data location and import configuration.\n\nThe Cloud Storage location requires the `roles/storage.objectViewer`\nCloud IAM role.\n\nEach Cloud Storage object should be a text file that contains the format\nspecified in ContentStructure."
        },
        "contentStructure": {
          "enum": [
            "CONTENT_STRUCTURE_UNSPECIFIED",
            "BUNDLE",
            "RESOURCE",
            "BUNDLE_PRETTY",
            "RESOURCE_PRETTY"
          ],
          "enumDescriptions": [
            "If the content structure is not specified, the default value `BUNDLE`\nis used.",
            "The source file contains one or more lines of newline-delimited JSON\n(ndjson). Each line is a bundle that contains one or more resources.\nSet the bundle type to `history` to import resource versions.",
            "The source file contains one or more lines of newline-delimited JSON\n(ndjson). Each line is a single resource.",
            "The entire file is one JSON bundle. The JSON can span multiple lines.",
            "The entire file is one JSON resource. The JSON can span multiple lines."
          ],
          "type": "string",
          "description": "The content structure in the source location. If not specified, the server\ntreats the input source files as BUNDLE."
        }
      }
    },
    "ReplaceWithInfoTypeConfig": {
      "properties": {},
      "description": "When using the\nINSPECT_AND_TRANSFORM\naction, each match is replaced with the name of the info_type. For example,\n\"My name is Jane\" becomes \"My name is [PERSON_NAME].\" The\nTRANSFORM\naction is equivalent to redacting.",
      "id": "ReplaceWithInfoTypeConfig",
      "type": "object"
    },
    "SensitiveTextAnnotation": {
      "id": "SensitiveTextAnnotation",
      "properties": {
        "details": {
          "description": "Maps from a resource slice. For example, FHIR resource field path to a set\nof sensitive text findings. For example,\nAppointment.Narrative text1 --\u003e {findings_1, findings_2, findings_3}",
          "additionalProperties": {
            "$ref": "Detail"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "A TextAnnotation specifies a text range that includes sensitive information."
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ImportAnnotationsResponse": {
      "id": "ImportAnnotationsResponse",
      "type": "object",
      "properties": {
        "annotationStore": {
          "type": "string",
          "description": "The annotation_store that the annotations were imported to. The name\nis in the format\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`."
        },
        "successCount": {
          "description": "The number of the input annotations. All input have been imported\nsuccessfully.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Final response of importing\nAnnotations in\nsuccessful case. This structure is included in the\nresponse. It is only included\nwhen the operation finishes."
    },
    "RedactConfig": {
      "description": "Define how to redact sensitive values. Default behaviour is erase.\nFor example, \"My name is Jane.\" becomes \"My name is .\"",
      "properties": {},
      "type": "object",
      "id": "RedactConfig"
    },
    "GoogleCloudHealthcareV1beta1FhirBigQueryDestination": {
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If this flag is `TRUE`, all tables will be deleted from the dataset before\nthe new exported tables are written. If the flag is not set and the\ndestination dataset contains tables, the export call returns an error."
        },
        "schemaConfig": {
          "$ref": "SchemaConfig",
          "description": "The configuration for the exported BigQuery schema."
        },
        "datasetUri": {
          "type": "string",
          "description": "BigQuery URI to a dataset, up to 2000 characters long, in the format\n`bq://projectId.bqDatasetId`"
        }
      },
      "description": "The configuration for exporting to BigQuery.",
      "id": "GoogleCloudHealthcareV1beta1FhirBigQueryDestination",
      "type": "object"
    },
    "BoundingPoly": {
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "vertices": {
          "type": "array",
          "description": "List of the vertices of this polygon.",
          "items": {
            "$ref": "Vertex"
          }
        },
        "label": {
          "description": "A description of this polygon.",
          "type": "string"
        }
      },
      "id": "BoundingPoly"
    },
    "Message": {
      "description": "A complete HL7v2 message.\nSee [Introduction to HL7 Standards]\n(https://www.hl7.org/implement/standards/index.cfm?ref=common) for\ndetails on the standard.",
      "properties": {
        "parsedData": {
          "description": "Output only. The parsed version of the raw message data.",
          "$ref": "ParsedData"
        },
        "patientIds": {
          "type": "array",
          "description": "All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this\nmessage.",
          "items": {
            "$ref": "PatientId"
          }
        },
        "schematizedData": {
          "description": "The parsed version of the raw message data schematized according to this\nstore's schemas and type definitions.",
          "$ref": "SchematizedData"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The datetime when the message was created. Set by the server.",
          "format": "google-datetime"
        },
        "data": {
          "description": "Raw message bytes.",
          "format": "byte",
          "type": "string"
        },
        "sendFacility": {
          "description": "The hospital that this message came from. MSH-4.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-supplied key-value pairs used to organize HL7v2 stores.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression:\n\\p{Ll}\\p{Lo}{0,62}\n\nLabel values are optional, must be between 1 and 63 characters long, have\na UTF-8 encoding of maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n\nNo more than 64 labels can be associated with a given store."
        },
        "sendTime": {
          "type": "string",
          "description": "The datetime the sending application sent this message. MSH-7.",
          "format": "google-datetime"
        },
        "messageType": {
          "description": "The message type for this message. MSH-9.1.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name of the Message, of the form\n`projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.\nAssigned by the server."
        }
      },
      "id": "Message",
      "type": "object"
    },
    "AnnotationStore": {
      "id": "AnnotationStore",
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Optional. User-supplied key-value pairs used to organize Annotation stores.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression:\n\\p{Ll}\\p{Lo}{0,62}\n\nLabel values must be between 1 and 63 characters long, have\na UTF-8 encoding of maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n\nNo more than 64 labels can be associated with a given store.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Resource name of the Annotation store, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
          "type": "string"
        }
      },
      "description": "An Annotation store that can store annotation resources such as\nlabels and tags for text, image and audio."
    },
    "AnnotationConfig": {
      "type": "object",
      "id": "AnnotationConfig",
      "description": "Specifies how to store annotations during de-identification operation.",
      "properties": {
        "storeQuote": {
          "type": "boolean",
          "description": "If set to true, the sensitive texts are included in\nSensitiveTextAnnotation\nof Annotation."
        },
        "annotationStoreName": {
          "description": "The name of the annotation store, in the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`).\n\n * The destination annotation store must be in the same project as the\n   source data. De-identifying data across multiple projects is not\n   supported.\n * The destination annotation store must exist when using\n   DeidentifyDicomStore or\n   DeidentifyFhirStore.\n   DeidentifyDataset\n   automatically creates the destination annotation store.",
          "type": "string"
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      }
    },
    "ListHl7V2StoresResponse": {
      "description": "Lists the HL7v2 stores in the given dataset.",
      "properties": {
        "hl7V2Stores": {
          "type": "array",
          "description": "The returned HL7v2 stores. Won't be more HL7v2 stores than the value of\npage_size in the request.",
          "items": {
            "$ref": "Hl7V2Store"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list."
        }
      },
      "id": "ListHl7V2StoresResponse",
      "type": "object"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "ParserConfig": {
      "id": "ParserConfig",
      "properties": {
        "segmentTerminator": {
          "description": "Byte(s) to use as the segment terminator. If this is unset, '\\r' is\nused as segment terminator, matching the HL7 version 2\nspecification.",
          "type": "string",
          "format": "byte"
        },
        "schema": {
          "$ref": "SchemaPackage",
          "description": "Schemas used to parse messages in this store, if schematized parsing is\ndesired."
        },
        "allowNullHeader": {
          "description": "Determines whether messages with no header are allowed.",
          "type": "boolean"
        }
      },
      "description": "The configuration for the parser. It determines how the server parses the\nmessages.",
      "type": "object"
    },
    "DicomConfig": {
      "id": "DicomConfig",
      "properties": {
        "filterProfile": {
          "description": "Tag filtering profile that determines which tags to keep/remove.",
          "enumDescriptions": [
            "No tag filtration profile provided. Same as KEEP_ALL_PROFILE.",
            "Keep only tags required to produce valid DICOM.",
            "Remove tags based on DICOM Standard's Attribute Confidentiality Basic\nProfile (DICOM Standard Edition 2018e)\nhttp://dicom.nema.org/medical/dicom/2018e/output/chtml/part15/chapter_E.html.",
            "Keep all tags.",
            "Inspects within tag contents and replaces sensitive text. The process\ncan be configured using the TextConfig.\nApplies to all tags with the following Value Representation names:\nAE, LO, LT, PN, SH, ST, UC, UT, DA, DT, AS"
          ],
          "type": "string",
          "enum": [
            "TAG_FILTER_PROFILE_UNSPECIFIED",
            "MINIMAL_KEEP_LIST_PROFILE",
            "ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE",
            "KEEP_ALL_PROFILE",
            "DEIDENTIFY_TAG_CONTENTS"
          ]
        },
        "removeList": {
          "$ref": "TagFilterList",
          "description": "List of tags to remove. Keep all other tags."
        },
        "skipIdRedaction": {
          "type": "boolean",
          "description": "If true, skip replacing StudyInstanceUID, SeriesInstanceUID,\nSOPInstanceUID, and MediaStorageSOPInstanceUID and leave them untouched.\nThe Cloud Healthcare API regenerates these UIDs by default based on the\nDICOM Standard's reasoning: \"Whilst these UIDs cannot be mapped directly\nto an individual out of context, given access to the original images, or\nto a database of the original images containing the UIDs, it would be\npossible to recover the individual's identity.\"\nhttp://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html"
        },
        "keepList": {
          "$ref": "TagFilterList",
          "description": "List of tags to keep. Remove all other tags."
        }
      },
      "type": "object",
      "description": "Specifies the parameters needed for de-identification of DICOM stores."
    },
    "DateShiftConfig": {
      "properties": {
        "cryptoKey": {
          "format": "byte",
          "type": "string",
          "description": "An AES 128/192/256 bit key. Causes the shift to be computed based on this\nkey and the patient ID. A default key is generated for each\nDeidentify operation and is used wherever crypto_key is not specified."
        }
      },
      "description": "Shift a date forward or backward in time by a random amount which is\nconsistent for a given patient and crypto key combination.",
      "type": "object",
      "id": "DateShiftConfig"
    },
    "PatientId": {
      "description": "A patient identifier and associated type.",
      "type": "object",
      "id": "PatientId",
      "properties": {
        "value": {
          "description": "The patient's unique identifier.",
          "type": "string"
        },
        "type": {
          "description": "ID type. For example, MRN or NHS.",
          "type": "string"
        }
      }
    },
    "DeidentifyErrorDetails": {
      "id": "DeidentifyErrorDetails",
      "properties": {
        "successStoreCount": {
          "type": "string",
          "description": "Number of stores successfully processed.",
          "format": "int64"
        },
        "failureStoreCount": {
          "type": "string",
          "description": "Number of stores that failed to process.",
          "format": "int64"
        },
        "failureResourceCount": {
          "format": "int64",
          "description": "Number of resources that failed to process.",
          "type": "string"
        },
        "successResourceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of resources successfully processed."
        }
      },
      "description": "Contains the status of the Deidentify operation.",
      "type": "object"
    },
    "ErrorDetail": {
      "description": "Structure to describe the error encountered during batch operation on one\nresource. This is used both for sample errors in operation response, and\nfor format of errors in error reports.",
      "id": "ErrorDetail",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The identifier of the resource.",
          "type": "string"
        },
        "error": {
          "description": "The status of the error.",
          "$ref": "Status"
        }
      }
    },
    "GoogleCloudHealthcareV1beta1DicomGcsSource": {
      "description": "Specifies the configuration for importing data from Cloud Storage.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Points to a Cloud Storage URI containing file(s) with\ncontent only. The URI must be in the following format:\n`gs://{bucket_id}/{object_id}`. The URI can include wildcards in\n`object_id` and thus identify multiple files. Supported wildcards:\n '*' to match 0 or more non-separator characters\n '**' to match 0 or more characters (including separators). Must be used at\n      the end of a path and with no other wildcards in the\n      path. Can also be used with a file extension (such as .dcm), which\n      imports all files with the extension in the specified directory and\n      its sub-directories. For example,\n      `gs://my-bucket/my-directory/**.dcm` imports all files with .dcm\n      extensions in `my-directory/` and its sub-directories.\n '?' to match 1 character\nAll other URI formats are invalid.\nFiles matching the wildcard are expected to contain content only, no\nmetadata.",
          "type": "string"
        }
      },
      "id": "GoogleCloudHealthcareV1beta1DicomGcsSource"
    },
    "GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination": {
      "type": "object",
      "description": "The BigQuery table for export.",
      "properties": {
        "schemaType": {
          "enum": [
            "SCHEMA_TYPE_UNSPECIFIED",
            "SIMPLE"
          ],
          "enumDescriptions": [
            "Same as SIMPLE.",
            "A flatterned version of\nAnnotation."
          ],
          "description": "Specifies the schema format to export.",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If the destination table already exists and this flag is `TRUE`, the table\nis overwritten by the contents of the input store. If the flag is not\nset and the destination table already exists, the export call returns an\nerror."
        },
        "tableUri": {
          "description": "BigQuery URI to a table, up to 2000 characters long, must be of the form\nbq://projectId.bqDatasetId.tableId.",
          "type": "string"
        }
      },
      "id": "GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination"
    },
    "ExportDicomDataRequest": {
      "properties": {
        "bigqueryDestination": {
          "$ref": "GoogleCloudHealthcareV1beta1DicomBigQueryDestination",
          "description": "The BigQuery output destination.\n\nYou can only export to a BigQuery dataset that's in the same project as\nthe DICOM store you're exporting from.\n\nThe BigQuery location requires two IAM roles:\n`roles/bigquery.dataEditor` and `roles/bigquery.jobUser`."
        },
        "gcsDestination": {
          "description": "The Cloud Storage output destination.\n\nThe Cloud Storage location requires the `roles/storage.objectAdmin` Cloud\nIAM role.",
          "$ref": "GoogleCloudHealthcareV1beta1DicomGcsDestination"
        }
      },
      "description": "Exports data from the specified DICOM store.\nIf a given resource, such as a DICOM object with the same SOPInstance UID,\nalready exists in the output, it is overwritten with the version\nin the source dataset.\nExported DICOM data persists when the DICOM store from which it was\nexported is deleted.",
      "id": "ExportDicomDataRequest",
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1FhirRestImportResourcesResponse": {
      "description": "Final response of importing resources.\nThis structure is included in the\nresponse to describe the detailed\noutcome after the operation finishes successfully.",
      "properties": {
        "fhirStore": {
          "type": "string",
          "description": "The name of the FHIR store where the resources have been imported, in the\nformat\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
        },
        "inputSize": {
          "type": "string",
          "format": "int64",
          "description": "The total number of resources included in the source data."
        }
      },
      "id": "GoogleCloudHealthcareV1beta1FhirRestImportResourcesResponse",
      "type": "object"
    },
    "ProgressCounter": {
      "properties": {
        "pending": {
          "type": "string",
          "description": "The number of units that are pending in the operation.",
          "format": "int64"
        },
        "failure": {
          "type": "string",
          "format": "int64",
          "description": "The number of units that failed in the operation."
        },
        "success": {
          "format": "int64",
          "type": "string",
          "description": "The number of units that succeeded in the operation."
        }
      },
      "id": "ProgressCounter",
      "description": "ProgressCounter provides counters to describe an operation's progress.",
      "type": "object"
    },
    "ListDatasetsResponse": {
      "type": "object",
      "description": "Lists the available datasets.",
      "properties": {
        "datasets": {
          "items": {
            "$ref": "Dataset"
          },
          "type": "array",
          "description": "The first page of datasets."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "id": "ListDatasetsResponse"
    },
    "Finding": {
      "type": "object",
      "properties": {
        "quote": {
          "description": "The snippet of the sensitive text. This field is only populated during\ndeidentification if `store_quote` is set to true in DeidentifyConfig.",
          "type": "string"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "description": "Zero-based ending index of the found text, exclusively."
        },
        "infoType": {
          "description": "The type of information stored in this text range. For example,\nHumanName, BirthDate, or Address.",
          "type": "string"
        },
        "start": {
          "format": "int64",
          "type": "string",
          "description": "Zero-based starting index of the found text, inclusively."
        }
      },
      "id": "Finding"
    },
    "ImageConfig": {
      "id": "ImageConfig",
      "description": "Specifies how to handle de-identification of image pixels.",
      "properties": {
        "textRedactionMode": {
          "enumDescriptions": [
            "No text redaction specified. Same as REDACT_NO_TEXT.",
            "Redact all text.",
            "Redact sensitive text.",
            "Do not redact text."
          ],
          "enum": [
            "TEXT_REDACTION_MODE_UNSPECIFIED",
            "REDACT_ALL_TEXT",
            "REDACT_SENSITIVE_TEXT",
            "REDACT_NO_TEXT"
          ],
          "type": "string",
          "description": "Determines how to redact text from image."
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "GoogleCloudHealthcareV1beta1FhirRestExportResourcesResponse": {
      "id": "GoogleCloudHealthcareV1beta1FhirRestExportResourcesResponse",
      "properties": {
        "fhirStore": {
          "type": "string",
          "description": "The name of the FHIR store where resources have been exported, in the\nformat\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
        },
        "resourceCount": {
          "type": "string",
          "description": "The total number of resources exported from the requested FHIR store.",
          "format": "int64"
        }
      },
      "description": "Response when all resources export successfully.\nThis structure is included in the\nresponse to describe the detailed\noutcome after the operation finishes successfully.",
      "type": "object"
    },
    "TextConfig": {
      "id": "TextConfig",
      "properties": {
        "transformations": {
          "description": "The transformations to apply to the detected data.",
          "items": {
            "$ref": "InfoTypeTransformation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InfoTypeConfig": {
      "properties": {
        "ignoreList": {
          "$ref": "FilterList"
        },
        "strictMatching": {
          "description": "If `TRUE`, infoTypes described by `filter` are used for evaluation.\nOtherwise, infoTypes are not considered for evaluation.\nFor example:\n\n* Annotated text:\n  \"Toronto is a location\"\n* Finding 1:\n  `{\"infoType\": \"PERSON\", \"quote\": \"Toronto\", \"start\": 0, \"end\": 7}`\n* Finding 2:\n  `{\"infoType\": \"CITY\", \"quote\": \"Toronto\", \"start\": 0, \"end\": 7}`\n* Finding 3:\n  `{}`\n* Ground truth:\n  `{\"infoType\": \"LOCATION\", \"quote\": \"Toronto\", \"start\": 0, \"end\": 7}`\n\nWhen `strict_matching` is `TRUE`:\n\n* Finding 1: 1 false positive\n* Finding 2: 1 false positive\n* Finding 3: 1 false negative\n\nWhen `strict_matching` is `FALSE`:\n\n* Finding 1: 1 true positive\n* Finding 2: 1 true positive\n* Finding 3: 1 false negative",
          "type": "boolean"
        },
        "evaluateList": {
          "$ref": "FilterList"
        }
      },
      "id": "InfoTypeConfig",
      "type": "object",
      "description": "Specifies how to use infoTypes for evaluation. For example, a user might\nonly want to evaluate `PERSON`, `LOCATION`, and `AGE`."
    },
    "GroupOrSegment": {
      "id": "GroupOrSegment",
      "type": "object",
      "description": "Construct representing a logical group or a segment.",
      "properties": {
        "group": {
          "$ref": "SchemaGroup"
        },
        "segment": {
          "$ref": "SchemaSegment"
        }
      }
    },
    "ImportDicomDataResponse": {
      "properties": {},
      "id": "ImportDicomDataResponse",
      "type": "object",
      "description": "Returns additional information in regards to a completed DICOM store import."
    },
    "ImportAnnotationsErrorDetails": {
      "properties": {
        "successCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of annotations that have been imported."
        },
        "errorCount": {
          "description": "The number of annotations that had errors.",
          "format": "int64",
          "type": "string"
        },
        "annotationStore": {
          "description": "The annotation_store that the annotations were imported to. The name\nis in the format\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Final response of importing\nAnnotations in\npartial or total failure case. This structure is included in the\nerror\ndetails. It is only included when the operation\nfinishes.",
      "id": "ImportAnnotationsErrorDetails"
    },
    "Detail": {
      "type": "object",
      "description": "Contains multiple sensitive information findings for each resource slice.",
      "properties": {
        "findings": {
          "type": "array",
          "items": {
            "$ref": "Finding"
          }
        }
      },
      "id": "Detail"
    },
    "ListAnnotationStoresResponse": {
      "id": "ListAnnotationStoresResponse",
      "description": "Lists the Annotation stores\nin the given dataset.",
      "type": "object",
      "properties": {
        "annotationStores": {
          "description": "The returned Annotation stores. Won't be more Annotation stores than the\nvalue of page_size in the request.",
          "items": {
            "$ref": "AnnotationStore"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      }
    },
    "ResourceAnnotation": {
      "properties": {
        "label": {
          "type": "string",
          "description": "A description of the annotation record."
        }
      },
      "description": "Resource level annotation.",
      "type": "object",
      "id": "ResourceAnnotation"
    },
    "GoogleCloudHealthcareV1beta1DicomBigQueryDestination": {
      "id": "GoogleCloudHealthcareV1beta1DicomBigQueryDestination",
      "description": "The BigQuery table where the server writes the output.",
      "properties": {
        "tableUri": {
          "description": "BigQuery URI to a table, up to 2000 characters long, in the format\n`bq://projectId.bqDatasetId.tableId`",
          "type": "string"
        },
        "force": {
          "description": "If the destination table already exists and this flag is `TRUE`, the table\nis overwritten by the contents of the DICOM store. If the flag is not\nset and the destination table already exists, the export call returns an\nerror.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HttpBody": {
      "id": "HttpBody",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
      "type": "object",
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs."
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The HTTP request/response body as raw binary."
        },
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        }
      }
    },
    "Dataset": {
      "description": "A message representing a health dataset.\n\nA health dataset represents a collection of healthcare data pertaining to one\nor more patients. This may include multiple modalities of healthcare data,\nsuch as electronic medical records or medical imaging data.",
      "properties": {
        "timeZone": {
          "description": "The default timezone used by this dataset. Must be a either a valid IANA\ntime zone name such as \"America/New_York\" or empty, which defaults to UTC.\nThis is used for parsing times in resources, such as HL7 messages, where no\nexplicit timezone is specified.",
          "type": "string"
        },
        "name": {
          "description": "Resource name of the dataset, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Dataset"
    },
    "DeidentifyFhirStoreRequest": {
      "id": "DeidentifyFhirStoreRequest",
      "type": "object",
      "properties": {
        "destinationStore": {
          "type": "string",
          "description": "The name of the FHIR store to create and write the redacted data to.\nFor example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.\n\n * The destination dataset must exist.\n * The source dataset and destination dataset must both reside in the same\n   project. De-identifying data across multiple projects is not supported.\n * The destination FHIR store must exist.\n * The caller must have the healthcare.fhirResources.update permission to\n   write to the destination FHIR store."
        },
        "config": {
          "description": "Deidentify configuration.",
          "$ref": "DeidentifyConfig"
        },
        "resourceFilter": {
          "description": "A filter specifying the resources to include in the output. If not\nspecified, all resources are included in the output.",
          "$ref": "FhirFilter"
        }
      },
      "description": "Creates a new FHIR store with sensitive information de-identified."
    },
    "Hl7TypesConfig": {
      "properties": {
        "version": {
          "type": "array",
          "description": "The version selectors that this config applies to. A message must match\nALL version sources to apply.",
          "items": {
            "$ref": "VersionSource"
          }
        },
        "type": {
          "items": {
            "$ref": "Type"
          },
          "type": "array",
          "description": "The HL7v2 type definitions."
        }
      },
      "type": "object",
      "description": "Root config for HL7v2 datatype definitions for a specific HL7v2 version.",
      "id": "Hl7TypesConfig"
    },
    "GoogleCloudHealthcareV1beta1FhirRestGcsSource": {
      "description": "Specifies the configuration for importing data from Cloud Storage.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Points to a Cloud Storage URI containing file(s) to import.\n\nThe URI must be in the following format: `gs://{bucket_id}/{object_id}`.\nThe URI can include wildcards in `object_id` and thus identify multiple\nfiles. Supported wildcards:\n\n*  `*` to match 0 or more non-separator characters\n*  `**` to match 0 or more characters (including separators). Must be used\nat the end of a path and with no other wildcards in the\npath. Can also be used with a file extension (such as .ndjson), which\nimports all files with the extension in the specified directory and\nits sub-directories. For example, `gs://my-bucket/my-directory/**.ndjson`\nimports all files with `.ndjson` extensions in `my-directory/` and its\nsub-directories.\n*  `?` to match 1 character\n\nFiles matching the wildcard are expected to contain content only, no\nmetadata."
        }
      },
      "type": "object",
      "id": "GoogleCloudHealthcareV1beta1FhirRestGcsSource"
    },
    "Resources": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of resources IDs. For example, \"Patient/1234\"."
        }
      },
      "id": "Resources",
      "description": "A list of FHIR resources.",
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1FhirRestImportResourcesErrorDetails": {
      "properties": {
        "inputSize": {
          "format": "int64",
          "type": "string",
          "description": "The total number of resources included in the source data. This is the sum\nof the success and error counts."
        },
        "successCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of resources that have been imported."
        },
        "fhirStore": {
          "type": "string",
          "description": "The name of the FHIR store where resources have been imported, in the\nformat\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
        },
        "errorCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of resources that had errors."
        }
      },
      "id": "GoogleCloudHealthcareV1beta1FhirRestImportResourcesErrorDetails",
      "description": "Error response of importing resources.\nThis structure is included in the\nerror\ndetails to describe the detailed error\nafter the operation finishes with some failure.",
      "type": "object"
    },
    "ImportDicomDataRequest": {
      "properties": {
        "gcsSource": {
          "description": "Cloud Storage source data location and import configuration.\n\nThe Cloud Storage location requires the `roles/storage.objectViewer`\nCloud IAM role.",
          "$ref": "GoogleCloudHealthcareV1beta1DicomGcsSource"
        }
      },
      "type": "object",
      "id": "ImportDicomDataRequest",
      "description": "Imports data into the specified DICOM store.\nReturns an error if any of the files to import are not DICOM files. This\nAPI accepts duplicate DICOM instances by ignoring the newly-pushed instance.\nIt does not overwrite."
    },
    "IngestMessageRequest": {
      "description": "Ingests a message into the specified HL7v2 store.",
      "properties": {
        "message": {
          "$ref": "Message",
          "description": "HL7v2 message to ingest."
        }
      },
      "id": "IngestMessageRequest",
      "type": "object"
    },
    "ListAnnotationsResponse": {
      "description": "Lists the Annotations in the specified\nAnnotation store.",
      "type": "object",
      "id": "ListAnnotationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "annotations": {
          "description": "The returned Annotations. Won't be more values than the value of\npage_size in the request. See `AnnotationView` in the request for\npopulated fields.",
          "type": "array",
          "items": {
            "$ref": "Annotation"
          }
        }
      }
    },
    "FhirConfig": {
      "description": "Specifies how to handle de-identification of a FHIR store.",
      "properties": {
        "fieldMetadataList": {
          "description": "Specifies FHIR paths to match and how to transform them. Any field that\nis not matched by a FieldMetadata is passed through to the output\ndataset unmodified. All extensions are removed in the output.\nIf a field can be matched by more than one FieldMetadata, the first\nFieldMetadata.Action is applied.",
          "type": "array",
          "items": {
            "$ref": "FieldMetadata"
          }
        }
      },
      "id": "FhirConfig",
      "type": "object"
    },
    "ExportAnnotationsErrorDetails": {
      "type": "object",
      "id": "ExportAnnotationsErrorDetails",
      "description": "Response for failed annotation export operations. This structure is\nincluded in error\ndetails upon operation completion.",
      "properties": {
        "successCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of annotations successfully exported."
        },
        "annotationStore": {
          "type": "string",
          "description": "The annotation_store used for the export operation, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`."
        },
        "errorCount": {
          "type": "string",
          "description": "The number of annotations that had error.",
          "format": "int64"
        }
      }
    },
    "SearchResourcesRequest": {
      "id": "SearchResourcesRequest",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The FHIR resource type to search, such as Patient or Observation. For a\ncomplete list, see the FHIR Resource Index\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).",
          "type": "string"
        }
      },
      "description": "Request to search the resources in the specified FHIR store."
    },
    "SchemaGroup": {
      "properties": {
        "choice": {
          "type": "boolean",
          "description": "True indicates that this is a choice group, meaning that only one of its\nsegments can exist in a given message."
        },
        "maxOccurs": {
          "description": "The maximum number of times this group can be repeated. 0 or -1 means\nunbounded.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "The name of this group. For example, \"ORDER_DETAIL\".",
          "type": "string"
        },
        "minOccurs": {
          "format": "int32",
          "type": "integer",
          "description": "The minimum number of times this group must be present/repeated."
        },
        "members": {
          "items": {
            "$ref": "GroupOrSegment"
          },
          "description": "Nested groups and/or segments.",
          "type": "array"
        }
      },
      "description": "An HL7v2 logical group construct.",
      "type": "object",
      "id": "SchemaGroup"
    },
    "ExportAnnotationsRequest": {
      "description": "Request to export\nAnnotations. The\nexport operation is not atomic. If a\nfailure occurs, any annotations already exported are not removed.",
      "id": "ExportAnnotationsRequest",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage destination, which requires the\n`roles/storage.objectAdmin` Cloud IAM role.",
          "$ref": "GoogleCloudHealthcareV1beta1AnnotationGcsDestination"
        },
        "bigqueryDestination": {
          "$ref": "GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination",
          "description": "The BigQuery output destination, which requires two IAM roles:\n  `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`."
        }
      },
      "type": "object"
    },
    "Vertex": {
      "type": "object",
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        },
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        }
      },
      "description": "A 2D coordinate in an image. The origin is the top-left.",
      "id": "Vertex"
    },
    "CryptoHashConfig": {
      "properties": {
        "cryptoKey": {
          "type": "string",
          "format": "byte",
          "description": "An AES 128/192/256 bit key. Causes the hash to be computed based on this\nkey. A default key is generated for each Deidentify operation and is used\nwherever crypto_key is not specified."
        }
      },
      "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nOutputs a base64-encoded representation of the hashed output.\nFor example, `L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=`.",
      "type": "object",
      "id": "CryptoHashConfig"
    },
    "SchematizedData": {
      "description": "The content of an HL7v2 message in a structured format as specified by a\nschema.",
      "id": "SchematizedData",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error output of the parser.",
          "type": "string"
        },
        "data": {
          "description": "JSON output of the parser.",
          "type": "string"
        }
      }
    },
    "DeidentifySummary": {
      "properties": {
        "failureResourceCount": {
          "format": "int64",
          "description": "Number of resources that failed to process.\nThe failures might be caused by:\n\n  * Invalid user input data\n  * Transient errors that could be skipped",
          "type": "string"
        },
        "successStoreCount": {
          "description": "Number of stores successfully processed.",
          "type": "string",
          "format": "int64"
        },
        "successResourceCount": {
          "format": "int64",
          "description": "Number of resources successfully processed.",
          "type": "string"
        }
      },
      "description": "Contains a detailed summary of the Deidentify operation.",
      "id": "DeidentifySummary",
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "SchemaConfig": {
      "id": "SchemaConfig",
      "type": "object",
      "description": "Configuration for the FHIR BigQuery schema. Determines how the server\ngenerates the schema.",
      "properties": {
        "recursiveStructureDepth": {
          "description": "The depth for all recursive structures in the output analytics\nschema. For example, `concept` in the CodeSystem resource is a recursive\nstructure; when the depth is 2, the CodeSystem table will have a column\ncalled `concept.concept` but not `concept.concept.concept`. If not\nspecified or set to 0, the server will use the default value 2. The\nmaximum depth allowed is 5.",
          "format": "int64",
          "type": "string"
        },
        "schemaType": {
          "enumDescriptions": [
            "No schema type specified. Same as `LOSSLESS`.",
            "A data-driven schema generated from the fields present in the FHIR data\nbeing exported, with no additional simplification.",
            "Analytics schema defined by the FHIR community.\nSee https://github.com/FHIR/sql-on-fhir/blob/master/sql-on-fhir.md.\n\nBigQuery only allows a maximum of 10,000 columns per table. Due to this\nlimitation, the server will not generate schemas for fields of type\n`Resource`, which can hold any resource type. The affected fields are\n`Parameters.parameter.resource`, `Bundle.entry.resource`, and\n`Bundle.entry.response.outcome`."
          ],
          "enum": [
            "SCHEMA_TYPE_UNSPECIFIED",
            "LOSSLESS",
            "ANALYTICS"
          ],
          "description": "Specifies the output schema type. If unspecified, the default is\n`LOSSLESS`.",
          "type": "string"
        }
      }
    },
    "CharacterMaskConfig": {
      "properties": {
        "maskingCharacter": {
          "description": "Character to mask the sensitive values. If not supplied, defaults to \"*\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CharacterMaskConfig",
      "description": "Mask a string by replacing its characters with a fixed character."
    },
    "OperationMetadata": {
      "description": "OperationMetadata provides information about the operation execution.\nReturned in the long-running operation's metadata field.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the operation was created by the API."
        },
        "logsUrl": {
          "description": "A link to audit and error logs in the log viewer. Error logs are generated\nonly by some operations, listed at\n[Viewing logs](/healthcare/docs/how-tos/logging).",
          "type": "string"
        },
        "apiMethodName": {
          "description": "The name of the API method that initiated the operation.",
          "type": "string"
        },
        "counter": {
          "$ref": "ProgressCounter"
        },
        "cancelRequested": {
          "description": "Specifies if cancellation was requested for the operation.",
          "type": "boolean"
        },
        "endTime": {
          "type": "string",
          "description": "The time at which execution was completed.",
          "format": "google-datetime"
        }
      },
      "id": "OperationMetadata"
    },
    "DicomStore": {
      "type": "object",
      "description": "Represents a DICOM store.",
      "id": "DicomStore",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "User-supplied key-value pairs used to organize DICOM stores.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression:\n\\p{Ll}\\p{Lo}{0,62}\n\nLabel values are optional, must be between 1 and 63 characters long, have\na UTF-8 encoding of maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n\nNo more than 64 labels can be associated with a given store."
        },
        "name": {
          "description": "Resource name of the DICOM store, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
          "type": "string"
        },
        "notificationConfig": {
          "description": "Notification destination for new DICOM instances.\nSupplied by the client.",
          "$ref": "NotificationConfig"
        }
      }
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      }
    },
    "TagFilterList": {
      "type": "object",
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Tags to be filtered. Tags must be DICOM Data Elements, File Meta\nElements, or Directory Structuring Elements, as defined at:\nhttp://dicom.nema.org/medical/dicom/current/output/html/part06.html#table_6-1,.\nThey may be provided by \"Keyword\" or \"Tag\". For example, \"PatientID\",\n\"00100010\"."
        }
      },
      "description": "List of tags to be filtered.",
      "id": "TagFilterList"
    },
    "InfoTypeTransformation": {
      "properties": {
        "characterMaskConfig": {
          "$ref": "CharacterMaskConfig",
          "description": "Config for character mask."
        },
        "replaceWithInfoTypeConfig": {
          "$ref": "ReplaceWithInfoTypeConfig",
          "description": "Config for replace with InfoType."
        },
        "dateShiftConfig": {
          "$ref": "DateShiftConfig",
          "description": "Config for date shift."
        },
        "redactConfig": {
          "$ref": "RedactConfig",
          "description": "Config for text redaction."
        },
        "cryptoHashConfig": {
          "$ref": "CryptoHashConfig",
          "description": "Config for crypto hash."
        },
        "infoTypes": {
          "type": "array",
          "description": "InfoTypes to apply this transformation to. If this is not specified, this\ntransformation becomes the default transformation, and is used for any\ninfo_type that is not specified in another transformation.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "A transformation to apply to text that is identified as a specific\ninfo_type.",
      "id": "InfoTypeTransformation"
    },
    "NotificationConfig": {
      "id": "NotificationConfig",
      "properties": {
        "pubsubTopic": {
          "description": "The [Cloud Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that\nnotifications of changes are published on. Supplied by the client.\nPubsubMessage.Data contains the resource name.\nPubsubMessage.MessageId is the ID of this message. It is guaranteed to be\nunique within the topic.\nPubsubMessage.PublishTime is the time at which the message was published.\nNotifications are only sent if the topic is\nnon-empty. [Topic\nnames](https://cloud.google.com/pubsub/docs/overview#names) must be scoped\nto a project. Cloud Healthcare API service account must have publisher\npermissions on the given Cloud Pub/Sub topic. Not having adequate\npermissions causes the calls that send notifications to fail.\n\nIf a notification can't be published to Cloud Pub/Sub, errors are logged to\nCloud Logging (see [Viewing\nlogs](/healthcare/docs/how-tos/logging)). If the number of\nerrors exceeds a certain rate, some aren't submitted.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Specifies where to send notifications upon changes to a data store."
    },
    "GoogleCloudHealthcareV1beta1FhirRestGcsDestination": {
      "description": "The configuration for exporting to Cloud Storage.",
      "type": "object",
      "id": "GoogleCloudHealthcareV1beta1FhirRestGcsDestination",
      "properties": {
        "uriPrefix": {
          "description": "URI for a Cloud Storage directory where result files should be written (in\nthe format `gs://{bucket-id}/{path/to/destination/dir}`). If there is no\ntrailing slash, the service appends one when composing the object path.\nThe user is responsible for creating the Cloud Storage bucket referenced in\n`uri_prefix`.",
          "type": "string"
        }
      }
    },
    "Field": {
      "id": "Field",
      "type": "object",
      "properties": {
        "minOccurs": {
          "format": "int32",
          "description": "The minimum number of times this field must be present/repeated.",
          "type": "integer"
        },
        "maxOccurs": {
          "description": "The maximum number of times this field can be repeated. 0 or -1 means\nunbounded.",
          "type": "integer",
          "format": "int32"
        },
        "table": {
          "description": "The HL7v2 table this field refers to. For example, PID-15 (Patient's\nPrimary Language) usually refers to table \"0296\".",
          "type": "string"
        },
        "type": {
          "description": "The type of this field. A Type with this name must be defined in an\nHl7TypesConfig.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the field. For example, \"PID-1\" or just \"1\"."
        }
      },
      "description": "A (sub) field of a type."
    },
    "GoogleCloudHealthcareV1beta1FhirRestExportResourcesErrorDetails": {
      "properties": {
        "fhirStore": {
          "type": "string",
          "description": "The name of the FHIR store where resources have been exported, in the\nformat\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
        },
        "errorCount": {
          "format": "int64",
          "description": "The number of resources that had errors.",
          "type": "string"
        },
        "successCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of resources that were exported."
        },
        "resourceCount": {
          "format": "int64",
          "description": "The total number of resources included in the export operation. This is\nthe sum of the success and error counts.",
          "type": "string"
        }
      },
      "description": "Response when errors occur while exporting resources.\nThis structure is included in the\nerror\ndetails to describe the detailed outcome. It is\nonly included when the operation finishes with errors.",
      "id": "GoogleCloudHealthcareV1beta1FhirRestExportResourcesErrorDetails",
      "type": "object"
    },
    "Hl7SchemaConfig": {
      "description": "Root config message for HL7v2 schema. This contains a schema structure of\ngroups and segments, and filters that determine which messages to apply the\nschema structure to.",
      "id": "Hl7SchemaConfig",
      "properties": {
        "messageSchemaConfigs": {
          "description": "Map from each HL7v2 message type and trigger event pair, such as ADT_A04,\nto its schema configuration root group.",
          "additionalProperties": {
            "$ref": "SchemaGroup"
          },
          "type": "object"
        },
        "version": {
          "items": {
            "$ref": "VersionSource"
          },
          "description": "Each VersionSource is tested and only if they all match is the schema used\nfor the message.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1DicomGcsDestination": {
      "type": "object",
      "id": "GoogleCloudHealthcareV1beta1DicomGcsDestination",
      "description": "The Cloud Storage location where the server writes the output and the export\nconfiguration.",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "MIME types supported by DICOM spec.\nEach file is written in the following format:\n`.../{study_id}/{series_id}/{instance_id}[/{frame_number}].{extension}`\nThe frame_number component exists only for multi-frame instances.\n\nSupported MIME types are consistent with supported formats in DICOMweb:\nhttps://cloud.google.com/healthcare/docs/dicom#retrieve_transaction.\nSpecifically, the following are supported:\n\n  - application/dicom; transfer-syntax=1.2.840.10008.1.2.1\n    (uncompressed DICOM)\n  - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.50\n    (DICOM with embedded JPEG Baseline)\n  - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.90\n    (DICOM with embedded JPEG 2000 Lossless Only)\n  - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.91\n    (DICOM with embedded JPEG 2000)h\n  - application/dicom; transfer-syntax=*\n    (DICOM with no transcoding)\n  - application/octet-stream; transfer-syntax=1.2.840.10008.1.2.1\n    (raw uncompressed PixelData)\n  - application/octet-stream; transfer-syntax=*\n    (raw PixelData in whatever format it was uploaded in)\n  - image/jpeg; transfer-syntax=1.2.840.10008.1.2.4.50\n    (Consumer JPEG)\n  - image/png\n\nThe following extensions are used for output files:\n\n - application/dicom -\u003e .dcm\n - image/jpeg -\u003e .jpg\n - image/png -\u003e .png\n - application/octet-stream -\u003e no extension\n\nIf unspecified, the instances are exported in the original\nDICOM format they were uploaded in."
        },
        "uriPrefix": {
          "type": "string",
          "description": "The Cloud Storage destination to export to.\n\nURI for a Cloud Storage directory where the server writes the result files,\nin the format `gs://{bucket-id}/{path/to/destination/dir}`). If there is no\ntrailing slash, the service appends one when composing the object path.\nThe user is responsible for creating the Cloud Storage bucket referenced in\n`uri_prefix`."
        }
      }
    },
    "FhirFilter": {
      "description": "Filter configuration.",
      "id": "FhirFilter",
      "type": "object",
      "properties": {
        "resources": {
          "$ref": "Resources",
          "description": "List of resources to include in the output. If this list is empty or\nnot specified, all resources are included in the output."
        }
      }
    },
    "CloudHealthcareSource": {
      "description": "Cloud Healthcare API resource.",
      "properties": {
        "name": {
          "description": "Full path of a Cloud Healthcare API resource.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CloudHealthcareSource"
    },
    "ImportAnnotationsRequest": {
      "description": "Request to import\nAnnotations. The\nAnnotations to be imported must have client-supplied resource names which\nindicate the annotation resource. The import operation is not atomic. If a\nfailure occurs, any annotations already imported are not removed.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudHealthcareV1beta1AnnotationGcsSource"
        }
      },
      "id": "ImportAnnotationsRequest",
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1DeidentifyDeidentifyFhirStoreSummary": {
      "id": "GoogleCloudHealthcareV1beta1DeidentifyDeidentifyFhirStoreSummary",
      "properties": {
        "successResourceCount": {
          "format": "int64",
          "description": "Number of resources successfully processed.",
          "type": "string"
        }
      },
      "description": "Contains a summary of the DeidentifyFhirStore operation.",
      "type": "object"
    },
    "EvaluateAnnotationStoreResponse": {
      "description": "Response for successful Annotation store evaluation operations. This\nstructure is included in the\nresponse upon operation completion.",
      "type": "object",
      "properties": {
        "goldenStore": {
          "type": "string",
          "description": "The ground truth Annotation store, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`."
        },
        "matchedCount": {
          "type": "string",
          "description": "The number of Annotations\nin the eval store that match with corresponding annotations\nin the ground truth Annotation store. Two matched\nannotations both annotate the same resource defined in\nAnnotationSource.",
          "format": "int64"
        },
        "evalStore": {
          "type": "string",
          "description": "The evaluated Annotation store, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`."
        },
        "goldenCount": {
          "description": "The number of Annotations in the ground\ntruth Annotation store successfully\nprocessed.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "EvaluateAnnotationStoreResponse"
    },
    "Binding": {
      "properties": {
        "members": {
          "type": "array",
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      },
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "Binding"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ExportAnnotationsResponse": {
      "description": "Response for successful annotation export operations. This structure is\nincluded in response upon operation\ncompletion.",
      "type": "object",
      "properties": {
        "successCount": {
          "description": "The total number of annotations successfully exported.",
          "format": "int64",
          "type": "string"
        },
        "annotationStore": {
          "description": "The annotation_store used for the export operation, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
          "type": "string"
        }
      },
      "id": "ExportAnnotationsResponse"
    },
    "Operation": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "id": "Operation"
    },
    "DeidentifyDatasetRequest": {
      "type": "object",
      "id": "DeidentifyDatasetRequest",
      "description": "Redacts identifying information from the specified dataset.",
      "properties": {
        "destinationDataset": {
          "description": "The name of the dataset resource to create and write the redacted data to.\n\n * The destination dataset must not exist.\n * The destination dataset must be in the same project and location as the\n source dataset. De-identifying data across multiple projects or locations\n is not supported.",
          "type": "string"
        },
        "config": {
          "description": "Deidentify configuration.",
          "$ref": "DeidentifyConfig"
        }
      }
    },
    "DicomFilterConfig": {
      "id": "DicomFilterConfig",
      "properties": {
        "resourcePathsGcsUri": {
          "description": "The Cloud Storage location of the filter configuration file.\nThe `gcs_uri` must be in the format `gs://bucket/path/to/object`.\nThe filter configuration file must contain a list of resource paths\nseparated by newline characters (\\n or \\r\\n). Each resource path\nmust be in the format\n\"/studies/{studyUID}[/series/{seriesUID}[/instances/{instanceUID}]]\"\n\nThe Cloud Healthcare API service account must have the\n`roles/storage.objectViewer` Cloud IAM role for this Cloud Storage\nlocation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Specifies the filter configuration for DICOM resources."
    },
    "ListMessagesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list."
        },
        "hl7V2Messages": {
          "description": "The returned Messages. Won't be more Messages than the value of\npage_size in the request. See\nview for\npopulated fields.",
          "type": "array",
          "items": {
            "$ref": "Message"
          }
        }
      },
      "description": "Lists the messages in the specified HL7v2 store.",
      "type": "object",
      "id": "ListMessagesResponse"
    },
    "StreamConfig": {
      "description": "Contains configuration for streaming FHIR export.",
      "id": "StreamConfig",
      "type": "object",
      "properties": {
        "resourceTypes": {
          "description": "Supply a FHIR resource type (such as \"Patient\" or \"Observation\").\nSee https://www.hl7.org/fhir/valueset-resource-types.html for a list of\nall FHIR resource types.\nThe server treats an empty list as an intent to stream all the\nsupported resource types in this FHIR store.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bigqueryDestination": {
          "description": "The destination BigQuery structure that contains both the dataset\nlocation and corresponding schema config.\n\nThe output is organized in one table per resource type. The server\nreuses the existing tables (if any) that are named after the resource\ntypes, e.g. \"Patient\", \"Observation\". When there is no existing table\nfor a given resource type, the server attempts to create one.\n\nWhen a table schema doesn't align with the schema config, either\nbecause of existing incompatible schema or out of band incompatible\nmodification, the server does not stream in new data.\n\nOne resolution in this case is to delete the incompatible\ntable and let the server recreate one, though the newly created table\nonly contains data after the table recreation.\n\nBigQuery imposes a 1 MB limit on streaming insert row size, therefore\nany resource mutation that generates more than 1 MB of BigQuery data\nwill not be streamed.\n\nResults are appended to the corresponding BigQuery tables. Different\nversions of the same resource are distinguishable by the meta.versionId\nand meta.lastUpdated columns. The operation (CREATE/UPDATE/DELETE) that\nresults in the new version is recorded in the meta.tag.\n\nThe tables contain all historical resource versions since streaming was\nenabled. For query convenience, the server also creates one view per\ntable of the same name containing only the current resource version.\n\nThe streamed data in the BigQuery dataset is not guaranteed to be\ncompletely unique. The combination of the id and meta.versionId columns\nshould ideally identify a single unique row. But in rare cases,\nduplicates may exist. At query time, users may use the SQL select\nstatement to keep only one of the duplicate rows given an id and\nmeta.versionId pair. Alternatively, the server created view mentioned\nabove also filters out duplicates.\n\nIf a resource mutation cannot be streamed to BigQuery, errors will be\nlogged to Cloud Logging (see [Viewing logs](/healthcare/docs/how-\ntos/logging)).",
          "$ref": "GoogleCloudHealthcareV1beta1FhirBigQueryDestination"
        }
      }
    },
    "IngestMessageResponse": {
      "properties": {
        "hl7Ack": {
          "type": "string",
          "description": "HL7v2 ACK message.",
          "format": "byte"
        },
        "message": {
          "$ref": "Message",
          "description": "Created message resource."
        }
      },
      "id": "IngestMessageResponse",
      "description": "Acknowledges that a message has been ingested into the specified\nHL7v2 store.",
      "type": "object"
    },
    "ParsedData": {
      "description": "The content of an HL7v2 message in a structured format.",
      "properties": {
        "segments": {
          "items": {
            "$ref": "Segment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ParsedData"
    },
    "SchemaSegment": {
      "description": "An HL7v2 Segment.",
      "id": "SchemaSegment",
      "type": "object",
      "properties": {
        "type": {
          "description": "The Segment type. For example, \"PID\".",
          "type": "string"
        },
        "minOccurs": {
          "format": "int32",
          "type": "integer",
          "description": "The minimum number of times this segment can be present in this group."
        },
        "maxOccurs": {
          "description": "The maximum number of times this segment can be present in this group.\n0 or -1 means unbounded.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Annotation": {
      "id": "Annotation",
      "type": "object",
      "properties": {
        "annotationSource": {
          "description": "Details of the source.",
          "$ref": "AnnotationSource"
        },
        "customData": {
          "description": "Additional information for this annotation record, such as annotator and\nverifier information or study campaign.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageAnnotation": {
          "$ref": "ImageAnnotation",
          "description": "Annotations for images. For example, bounding polygons."
        },
        "resourceAnnotation": {
          "$ref": "ResourceAnnotation",
          "description": "Annotations for resource. For example, classification tags."
        },
        "textAnnotation": {
          "description": "Annotations for sensitive texts. For example, a range that describes the\nlocation of sensitive text.",
          "$ref": "SensitiveTextAnnotation"
        },
        "name": {
          "description": "Resource name of the Annotation, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.",
          "type": "string"
        }
      },
      "description": "An annotation record."
    },
    "DeidentifyConfig": {
      "description": "Configures de-id options specific to different types of content.\nEach submessage customizes the handling of an\nhttps://tools.ietf.org/html/rfc6838 media type or subtype. Configs are\napplied in a nested manner at runtime.",
      "properties": {
        "annotation": {
          "description": "Configures how annotations, meaning that the location and infoType\nof sensitive information findings, are created during de-identification.\nIf unspecified, no annotations are created.",
          "$ref": "AnnotationConfig"
        },
        "image": {
          "$ref": "ImageConfig",
          "description": "Configures de-identification of image pixels wherever they are found in the\nsource_dataset."
        },
        "dicom": {
          "description": "Configures de-id of application/DICOM content.",
          "$ref": "DicomConfig"
        },
        "text": {
          "$ref": "TextConfig",
          "description": "Configures de-identification of text wherever it is found in the\nsource_dataset."
        },
        "fhir": {
          "description": "Configures de-id of application/FHIR content.",
          "$ref": "FhirConfig"
        }
      },
      "id": "DeidentifyConfig",
      "type": "object"
    },
    "ImportDicomDataErrorDetails": {
      "id": "ImportDicomDataErrorDetails",
      "properties": {
        "sampleErrors": {
          "type": "array",
          "description": "Deprecated. Use only for debugging purposes.\n\nContains sample errors encountered in imports of individual resources.\nFor example, a Cloud Storage object.",
          "items": {
            "$ref": "ErrorDetail"
          }
        }
      },
      "type": "object",
      "description": "Returns the errors encountered during DICOM store import."
    },
    "ImageAnnotation": {
      "description": "Image annotation.",
      "type": "object",
      "properties": {
        "frameIndex": {
          "description": "0-based index of the image frame. For example, an image frame in a DICOM\ninstance.",
          "type": "integer",
          "format": "int32"
        },
        "boundingPolys": {
          "type": "array",
          "description": "The list of polygons outlining the sensitive regions in the image.",
          "items": {
            "$ref": "BoundingPoly"
          }
        }
      },
      "id": "ImageAnnotation"
    },
    "FhirStore": {
      "description": "Represents a FHIR store.",
      "id": "FhirStore",
      "type": "object",
      "properties": {
        "disableResourceVersioning": {
          "type": "boolean",
          "description": "Whether to disable resource versioning for this FHIR store. This field can\nnot be changed after the creation of FHIR store.\nIf set to false, which is the default behavior, all write operations\ncause historical versions to be recorded automatically. The historical\nversions can be fetched through the history APIs, but cannot be updated.\nIf set to true, no historical versions are kept. The server sends\nerrors for attempts to read the historical versions."
        },
        "disableReferentialIntegrity": {
          "description": "Whether to disable referential integrity in this FHIR store. This field is\nimmutable after FHIR store creation.\nThe default value is false, meaning that the API enforces referential\nintegrity and fails the requests that result in inconsistent state in\nthe FHIR store.\nWhen this field is set to true, the API skips referential integrity\nchecks. Consequently, operations that rely on references, such as\nGetPatientEverything, do not return all the results if broken references\nexist.",
          "type": "boolean"
        },
        "streamConfigs": {
          "description": "A list of streaming configs that configure the destinations of streaming\nexport for every resource mutation in this FHIR store. Each store is\nallowed to have up to 10 streaming configs.\nAfter a new config is added, the next resource mutation is streamed to\nthe new location in addition to the existing ones.\nWhen a location is removed from the list, the server stops\nstreaming to that location. Before adding a new config, you must add the\nrequired\n[`bigquery.dataEditor`](https://cloud.google.com/bigquery/docs/access-control#bigquery.dataEditor)\nrole to your project's **Cloud Healthcare Service Agent**\n[service account](https://cloud.google.com/iam/docs/service-accounts).\nSome lag (typically on the order of dozens of seconds) is expected before\nthe results show up in the streaming destination.",
          "type": "array",
          "items": {
            "$ref": "StreamConfig"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the FHIR store, of the form\n`projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
        },
        "defaultSearchHandlingStrict": {
          "type": "boolean",
          "description": "If true, overrides the default search behavior for this FHIR store to\n`handling=strict` which returns an error for unrecognized search\nparameters. If false, uses the FHIR specification default\n`handling=lenient` which ignores unrecognized search parameters.\nThe handling can always be changed from the default on an individual API\ncall by setting the HTTP header `Prefer: handling=strict` or\n`Prefer: handling=lenient`."
        },
        "notificationConfig": {
          "$ref": "NotificationConfig",
          "description": "If non-empty, publish all resource modifications of this FHIR store to\nthis destination. The Cloud Pub/Sub message attributes contain a map\nwith a string describing the action that has triggered the notification.\nFor example, \"action\":\"CreateResource\"."
        },
        "version": {
          "type": "string",
          "enumDescriptions": [
            "VERSION_UNSPECIFIED is treated as STU3 to accommodate the existing FHIR\nstores.",
            "Draft Standard for Trial Use, [Release 2](https://www.hl7.org/fhir/DSTU2)",
            "Standard for Trial Use, [Release 3](https://www.hl7.org/fhir/STU3)",
            "[Release 4](https://www.hl7.org/fhir/R4)"
          ],
          "enum": [
            "VERSION_UNSPECIFIED",
            "DSTU2",
            "STU3",
            "R4"
          ],
          "description": "The FHIR specification version that this FHIR store supports natively. This\nfield is immutable after store creation. Requests are rejected if they\ncontain FHIR resources of a different version.\nAn empty value is treated as STU3."
        },
        "enableUpdateCreate": {
          "type": "boolean",
          "description": "Whether this FHIR store has the [updateCreate\ncapability](https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.updateCreate).\nThis determines if the client can use an Update operation to create a new\nresource with a client-specified ID. If false, all IDs are server-assigned\nthrough the Create operation and attempts to update a non-existent resource\nreturn errors. Please treat the audit logs with appropriate levels of\ncare if client-specified resource IDs contain sensitive data such as\npatient identifiers, those IDs are part of the FHIR resource path\nrecorded in Cloud audit logs and Cloud Pub/Sub notifications."
        },
        "labels": {
          "type": "object",
          "description": "User-supplied key-value pairs used to organize FHIR stores.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression:\n\\p{Ll}\\p{Lo}{0,62}\n\nLabel values are optional, must be between 1 and 63 characters long, have\na UTF-8 encoding of maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n\nNo more than 64 labels can be associated with a given store.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EvaluateAnnotationStoreRequest": {
      "id": "EvaluateAnnotationStoreRequest",
      "description": "Request to evaluate an Annotation store against a\nground truth [Annotation store].",
      "type": "object",
      "properties": {
        "goldenStore": {
          "type": "string",
          "description": "The Annotation store to use as ground truth, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`."
        },
        "evalInfoTypeMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. InfoType mapping for `eval_store`. Different resources can map to\nthe same infoType. For example, `PERSON_NAME`, `PERSON`, `NAME`, and\n`HUMAN` are different. To map all of these into a single\ninfoType (such as `PERSON_NAME`), specify the following mapping:\n```\n  info_type_mapping[\"PERSON\"] = \"PERSON_NAME\"\n  info_type_mapping[\"NAME\"] = \"PERSON_NAME\"\n  info_type_mapping[\"HUMAN\"] = \"PERSON_NAME\"\n```\nUnmentioned infoTypes, such as `DATE`, are treated as identity\nmapping. For example:\n```\n  info_type_mapping[\"DATE\"] = \"DATE\"\n```\nInfoTypes are case-insensitive."
        },
        "bigqueryDestination": {
          "$ref": "GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination",
          "description": "The BigQuery table where the server writes the output.\nBigQueryDestination requires the `roles/bigquery.dataEditor` and\n`roles/bigquery.jobUser` Cloud IAM roles."
        },
        "goldenInfoTypeMapping": {
          "type": "object",
          "description": "Optional. Similar to `eval_info_type_mapping`, infoType mapping for\n`golden_store`.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "infoTypeConfig": {
          "$ref": "InfoTypeConfig"
        }
      }
    },
    "Expr": {
      "properties": {
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language\nsyntax."
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "id": "Expr"
    },
    "FilterList": {
      "id": "FilterList",
      "type": "object",
      "description": "List of infoTypes to be filtered.",
      "properties": {
        "infoTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "These infoTypes are based on after the `eval_info_type_mapping` and\n`golden_info_type_mapping`."
        }
      }
    },
    "Type": {
      "properties": {
        "primitive": {
          "enum": [
            "PRIMITIVE_UNSPECIFIED",
            "STRING",
            "VARIES",
            "UNESCAPED_STRING"
          ],
          "description": "If this is a primitive type then this field is the type of the primitive\nFor example, STRING. Leave unspecified for composite types.",
          "type": "string",
          "enumDescriptions": [
            "Not a primitive.",
            "String primitive.",
            "Element that can have unschematized children.",
            "Like STRING, but all delimiters below this element are ignored."
          ]
        },
        "name": {
          "description": "The name of this type. This would be the segment or datatype name.\nFor example, \"PID\" or \"XPN\".",
          "type": "string"
        },
        "fields": {
          "description": "The (sub) fields this type has (if not primitive).",
          "type": "array",
          "items": {
            "$ref": "Field"
          }
        }
      },
      "id": "Type",
      "description": "A type definition for some HL7v2 type (incl. Segments and Datatypes).",
      "type": "object"
    },
    "GoogleCloudHealthcareV1beta1AnnotationGcsDestination": {
      "description": "The Cloud Storage location for export.",
      "properties": {
        "uriPrefix": {
          "type": "string",
          "description": "The Cloud Storage destination to export to.\nURI for a Cloud Storage directory where the server writes result files, in\nthe format `gs://{bucket-id}/{path/to/destination/dir}`. If there is no\ntrailing slash, the service appends one when composing the object path.\nThe user is responsible for creating the Cloud Storage bucket referenced in\n`uri_prefix`."
        }
      },
      "id": "GoogleCloudHealthcareV1beta1AnnotationGcsDestination",
      "type": "object"
    },
    "ListDicomStoresResponse": {
      "description": "Lists the DICOM stores in the given dataset.",
      "properties": {
        "dicomStores": {
          "description": "The returned DICOM stores. Won't be more DICOM stores than the value of\npage_size in the request.",
          "items": {
            "$ref": "DicomStore"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are no more\nresults in the list."
        }
      },
      "id": "ListDicomStoresResponse",
      "type": "object"
    },
    "VersionSource": {
      "id": "VersionSource",
      "type": "object",
      "description": "Describes a selector for extracting and matching an MSH field to a value.",
      "properties": {
        "value": {
          "description": "The value to match with the field. For example, \"My Application Name\" or\n\"2.3\".",
          "type": "string"
        },
        "mshField": {
          "type": "string",
          "description": "The field to extract from the MSH segment. For example, \"3.1\" or \"18[1].1\"."
        }
      }
    },
    "Hl7V2Store": {
      "id": "Hl7V2Store",
      "type": "object",
      "properties": {
        "parserConfig": {
          "description": "The configuration for the parser. It determines how the server parses the\nmessages.",
          "$ref": "ParserConfig"
        },
        "rejectDuplicateMessage": {
          "type": "boolean",
          "description": "Determines whether to reject duplicate messages. A duplicate\nmessage is a message with the same raw bytes as a message that has already\nbeen ingested/created in this HL7v2 store.\nThe default value is false, meaning that the store accepts the duplicate\nmessages and it also returns the same ACK message in the\nIngestMessageResponse as has been returned previously. Note that only\none resource is created in the store.\nWhen this field is set to true,\nCreateMessage/IngestMessage\nrequests with a duplicate message will be rejected by the store, and\nIngestMessageErrorDetail returns a NACK message upon rejection."
        },
        "notificationConfigs": {
          "items": {
            "$ref": "Hl7V2NotificationConfig"
          },
          "description": "A list of notification configs. Each configuration uses a filter to\ndetermine whether to publish a message (both Ingest & Create) on\nthe corresponding notification destination. Only the message name is sent\nas part of the notification. Supplied by the client.",
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "User-supplied key-value pairs used to organize HL7v2 stores.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression:\n\\p{Ll}\\p{Lo}{0,62}\n\nLabel values are optional, must be between 1 and 63 characters long, have\na UTF-8 encoding of maximum 128 bytes, and must conform to the\nfollowing PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n\nNo more than 64 labels can be associated with a given store."
        },
        "name": {
          "description": "Resource name of the HL7v2 store, of the form\n`projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.",
          "type": "string"
        },
        "notificationConfig": {
          "$ref": "NotificationConfig",
          "description": "The notification destination all messages (both Ingest & Create) are\npublished on. Only the message name is sent as part of the notification. If\nthis is unset, no notifications are sent. Supplied by the client."
        }
      },
      "description": "Represents an HL7v2 store."
    },
    "AuditConfig": {
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services."
        }
      },
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig"
    },
    "CreateMessageRequest": {
      "description": "Creates a new message.",
      "id": "CreateMessageRequest",
      "type": "object",
      "properties": {
        "message": {
          "$ref": "Message",
          "description": "HL7v2 message."
        }
      }
    }
  },
  "protocol": "rest",
  "name": "healthcare",
  "id": "healthcare:v1beta1",
  "mtlsRootUrl": "https://healthcare.mtls.googleapis.com/",
  "basePath": "",
  "kind": "discovery#restDescription",
  "version": "v1beta1",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "datasets": {
              "resources": {
                "annotationStores": {
                  "methods": {
                    "export": {
                      "parameters": {
                        "annotationStore": {
                          "description": "The name of the Annotation store to export annotations to, in\nthe format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Export\nAnnotations from\nthe Annotation\nstore.\nIf the request is successful, a detailed response is returned of type\nExportAnnotationsResponse, contained in the\nresponse field when the\noperation finishes.\nThe metadata field type is\nOperationMetadata.\nIf errors occur, the error\nfield type is ImportAnnotationsErrorDetails.\nErrors are also logged to Cloud Logging\n(see [Viewing logs](/healthcare/docs/how-tos/logging)).",
                      "parameterOrder": [
                        "annotationStore"
                      ],
                      "path": "v1beta1/{+annotationStore}:export",
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:export",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "healthcare.projects.locations.datasets.annotationStores.export",
                      "request": {
                        "$ref": "ExportAnnotationsRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "healthcare.projects.locations.datasets.annotationStores.getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:getIamPolicy"
                    },
                    "list": {
                      "description": "Lists the Annotation stores in the given dataset for a source store.",
                      "path": "v1beta1/{+parent}/annotationStores",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Name of the dataset.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from the previous List request, if any."
                        },
                        "pageSize": {
                          "description": "Limit on the number of Annotation stores to return in a single response.\nIf zero the default page size of 100 is used.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Restricts stores returned to those matching a filter. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\nOnly filtering on labels is supported, for example `labels.key=value`.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "healthcare.projects.locations.datasets.annotationStores.list",
                      "response": {
                        "$ref": "ListAnnotationStoresResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified Annotation store and removes all annotations that are\ncontained within it.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE",
                      "path": "v1beta1/{+name}",
                      "id": "healthcare.projects.locations.datasets.annotationStores.delete",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "The resource name of the Annotation store to delete."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:setIamPolicy",
                      "id": "healthcare.projects.locations.datasets.annotationStores.setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "path": "v1beta1/{+resource}:setIamPolicy"
                    },
                    "create": {
                      "response": {
                        "$ref": "AnnotationStore"
                      },
                      "request": {
                        "$ref": "AnnotationStore"
                      },
                      "parameters": {
                        "annotationStoreId": {
                          "location": "query",
                          "description": "The ID of the Annotation store that is being created.\nThe string must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "The name of the dataset this Annotation store belongs to.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "healthcare.projects.locations.datasets.annotationStores.create",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores",
                      "path": "v1beta1/{+parent}/annotationStores",
                      "description": "Creates a new Annotation store within the parent dataset.",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "patch": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}",
                      "parameters": {
                        "name": {
                          "description": "Resource name of the Annotation store, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "updateMask": {
                          "type": "string",
                          "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                          "location": "query",
                          "format": "google-fieldmask"
                        }
                      },
                      "id": "healthcare.projects.locations.datasets.annotationStores.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates the specified Annotation store.",
                      "response": {
                        "$ref": "AnnotationStore"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "AnnotationStore"
                      }
                    },
                    "evaluate": {
                      "id": "healthcare.projects.locations.datasets.annotationStores.evaluate",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Evaluate an Annotation store against a\nground truth Annotation store.\nWhen the operation finishes successfully, a detailed response is returned\nof type EvaluateAnnotationStoreResponse, contained in the response. The metadata field type is\nOperationMetadata.\nErrors are logged to Cloud Logging\n(see [Viewing logs](/healthcare/docs/how-tos/logging)).",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:evaluate",
                      "parameterOrder": [
                        "evalStore"
                      ],
                      "request": {
                        "$ref": "EvaluateAnnotationStoreRequest"
                      },
                      "parameters": {
                        "evalStore": {
                          "location": "path",
                          "description": "The Annotation store to compare against `golden_store`, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+evalStore}:evaluate"
                    },
                    "import": {
                      "path": "v1beta1/{+annotationStore}:import",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "annotationStore"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:import",
                      "description": "Import\nAnnotations to\nthe Annotation\nstore by\nloading data from the specified sources.\nIf the request is successful, a detailed response is returned as of type\nImportAnnotationsResponse, contained in the\nresponse field when the\noperation finishes.\nThe metadata field type is\nOperationMetadata.\nIf errors occur, the error\nfield type is ImportAnnotationsErrorDetails.\nErrors are also logged to Cloud Logging\n(see [Viewing logs](/healthcare/docs/how-tos/logging)).",
                      "request": {
                        "$ref": "ImportAnnotationsRequest"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "annotationStore": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "type": "string",
                          "description": "The name of the Annotation store to which the server imports annotations,\nin the format\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "healthcare.projects.locations.datasets.annotationStores.import"
                    },
                    "get": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}",
                      "id": "healthcare.projects.locations.datasets.annotationStores.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "The resource name of the Annotation store to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "AnnotationStore"
                      },
                      "description": "Gets the specified Annotation store or returns NOT_FOUND if it does not\nexist.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}:testIamPermissions",
                      "id": "healthcare.projects.locations.datasets.annotationStores.testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    }
                  },
                  "resources": {
                    "annotations": {
                      "methods": {
                        "patch": {
                          "response": {
                            "$ref": "Annotation"
                          },
                          "parameters": {
                            "updateMask": {
                              "location": "query",
                              "format": "google-fieldmask",
                              "type": "string",
                              "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                            },
                            "name": {
                              "description": "Resource name of the Annotation, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}/annotations/{annotationsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "Annotation"
                          },
                          "id": "healthcare.projects.locations.datasets.annotationStores.annotations.patch",
                          "path": "v1beta1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH",
                          "description": "Updates the Annotation."
                        },
                        "delete": {
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}/annotations/{annotationsId}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$",
                              "description": "The resource name of the Annotation to delete.",
                              "location": "path"
                            }
                          },
                          "description": "Deletes an Annotation or returns\nNOT_FOUND if it does not exist.",
                          "id": "healthcare.projects.locations.datasets.annotationStores.annotations.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "DELETE",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "get": {
                          "httpMethod": "GET",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}/annotations/{annotationsId}",
                          "parameters": {
                            "name": {
                              "description": "The resource name of the Annotation to retrieve.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+/annotations/[^/]+$",
                              "type": "string",
                              "required": true
                            }
                          },
                          "description": "Gets an Annotation.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta1/{+name}",
                          "response": {
                            "$ref": "Annotation"
                          },
                          "id": "healthcare.projects.locations.datasets.annotationStores.annotations.get",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ListAnnotationsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}/annotations",
                          "description": "Lists the Annotations in the given\nAnnotation store for a source\nresource.",
                          "parameters": {
                            "parent": {
                              "description": "Name of the Annotation store to retrieve Annotations from.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$",
                              "type": "string",
                              "required": true
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "Limit on the number of Annotations to return in a single response.\nIf zero the default page size of 100 is used.",
                              "location": "query",
                              "type": "integer"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Restricts Annotations returned to those matching a filter. Functions\navailable for filtering are:\n\n- `matches(\"annotation_source.cloud_healthcare_source.name\", substring)`.\nFilter on `cloud_healthcare_source.name`. For example:\n`matches(\"annotation_source.cloud_healthcare_source.name\", \"some source\")`.\n\n- `matches(\"annotation\", substring)`. Filter on all fields of annotation.\nFor example: `matches(\"annotation\", \"some-content\")`.\n\n- `type(\"text\")`, `type(\"image\")`, `type(\"resource\")`. Filter on the type\nof annotation `data`."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The next_page_token value returned from the previous List request, if any."
                            },
                            "view": {
                              "type": "string",
                              "location": "query",
                              "enum": [
                                "ANNOTATION_VIEW_UNSPECIFIED",
                                "ANNOTATION_VIEW_BASIC",
                                "ANNOTATION_VIEW_FULL"
                              ],
                              "description": "Controls which fields are populated in the response."
                            }
                          },
                          "path": "v1beta1/{+parent}/annotations",
                          "id": "healthcare.projects.locations.datasets.annotationStores.annotations.list",
                          "httpMethod": "GET"
                        },
                        "create": {
                          "httpMethod": "POST",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationStores/{annotationStoresId}/annotations",
                          "request": {
                            "$ref": "Annotation"
                          },
                          "id": "healthcare.projects.locations.datasets.annotationStores.annotations.create",
                          "description": "Creates a new Annotation record. It is\nvalid to create Annotation objects for the same source more than once since\na unique ID is assigned to each record by this service.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Annotation"
                          },
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "required": true,
                              "description": "The name of the Annotation store this annotation belongs to. For example,\n`projects/my-project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationStores/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1beta1/{+parent}/annotations"
                        }
                      }
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The standard list page size."
                        },
                        "name": {
                          "location": "path",
                          "description": "The name of the operation's parent resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "type": "string"
                        },
                        "filter": {
                          "description": "The standard list filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list page token."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                      "path": "v1beta1/{+name}/operations",
                      "id": "healthcare.projects.locations.datasets.operations.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "cancel": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
                      "path": "v1beta1/{+name}:cancel",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "The name of the operation resource to be cancelled.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$"
                        }
                      },
                      "id": "healthcare.projects.locations.datasets.operations.cancel",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}:cancel",
                      "request": {
                        "$ref": "CancelOperationRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "id": "healthcare.projects.locations.datasets.operations.get",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "The name of the operation resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/operations/{operationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                      "httpMethod": "GET",
                      "path": "v1beta1/{+name}"
                    }
                  }
                },
                "fhirStores": {
                  "methods": {
                    "getIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "location": "path"
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query"
                        }
                      },
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "httpMethod": "GET",
                      "id": "healthcare.projects.locations.datasets.fhirStores.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "id": "healthcare.projects.locations.datasets.fhirStores.setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "The resource name of the FHIR store to get.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "FhirStore"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "httpMethod": "GET",
                      "id": "healthcare.projects.locations.datasets.fhirStores.get",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}",
                      "description": "Gets the configuration of the specified FHIR store.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "deidentify": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "sourceStore": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Source FHIR store resource name. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "DeidentifyFhirStoreRequest"
                      },
                      "path": "v1beta1/{+sourceStore}:deidentify",
                      "description": "De-identifies data from the source store and writes it to the destination\nstore. The metadata field type\nis OperationMetadata.\nIf the request is successful, the\nresponse field type is\nDeidentifyFhirStoreSummary. If errors occur,\nerror\ndetails field type is\nDeidentifyErrorDetails.\nErrors are also logged to Cloud Logging\n(see [Viewing logs](/healthcare/docs/how-tos/logging)).",
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:deidentify",
                      "parameterOrder": [
                        "sourceStore"
                      ],
                      "id": "healthcare.projects.locations.datasets.fhirStores.deidentify"
                    },
                    "create": {
                      "id": "healthcare.projects.locations.datasets.fhirStores.create",
                      "request": {
                        "$ref": "FhirStore"
                      },
                      "httpMethod": "POST",
                      "path": "v1beta1/{+parent}/fhirStores",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "fhirStoreId": {
                          "description": "The ID of the FHIR store that is being created.\nThe string must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "The name of the dataset this FHIR store belongs to.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores",
                      "description": "Creates a new FHIR store within the parent dataset.",
                      "response": {
                        "$ref": "FhirStore"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "export": {
                      "request": {
                        "$ref": "ExportResourcesRequest"
                      },
                      "httpMethod": "POST",
                      "path": "v1beta1/{+name}:export",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "healthcare.projects.locations.datasets.fhirStores.export",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Export resources from the FHIR store to the specified destination.\n\nThis method returns an Operation that can\nbe used to track the status of the export by calling\nGetOperation.\n\nImmediate fatal errors appear in the\nerror field, errors are also logged\nto Cloud Logging (see [Viewing\nlogs](/healthcare/docs/how-tos/logging)).\nOtherwise, when the operation finishes, a detailed response of type\nExportResourcesResponse is returned in the\nresponse field.\nThe metadata field type for this\noperation is OperationMetadata.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The name of the FHIR store to export resource from, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:export"
                    },
                    "import": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The name of the FHIR store to import FHIR resources to, in the format of\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:import",
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "ImportResourcesRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "healthcare.projects.locations.datasets.fhirStores.import",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "description": "Import resources to the FHIR store by loading data from the specified\nsources. This method is optimized to load large quantities of data using\nimport semantics that ignore some FHIR store configuration options and are\nnot suitable for all use cases. It is primarily intended to load data into\nan empty FHIR store that is not being used by other clients. In cases\nwhere this method is not appropriate, consider using ExecuteBundle to\nload data.\n\nEvery resource in the input must contain a client-supplied ID. Each\nresource is stored using the supplied ID regardless of the\nenable_update_create setting on the FHIR\nstore.\n\nThe import process does not enforce referential integrity, regardless of\nthe\ndisable_referential_integrity\nsetting on the FHIR store. This allows the import of resources with\narbitrary interdependencies without considering grouping or ordering, but\nif the input data contains invalid references or if some resources fail to\nbe imported, the FHIR store might be left in a state that violates\nreferential integrity.\n\nThe import process does not trigger Cloud Pub/Sub notification or BigQuery\nstreaming update, regardless of how those are configured on the FHIR store.\n\nIf a resource with the specified ID already exists, the most recent\nversion of the resource is overwritten without creating a new historical\nversion, regardless of the\ndisable_resource_versioning\nsetting on the FHIR store. If transient failures occur during the import,\nit is possible that successfully imported resources will be overwritten\nmore than once.\n\nThe import operation is idempotent unless the input data contains multiple\nvalid resources with the same ID but different contents. In that case,\nafter the import completes, the store contains exactly one resource\nwith that ID but there is no ordering guarantee on which version of the\ncontents it will have. The operation result counters do not count\nduplicate IDs as an error and count one success for each resource in\nthe input, which might result in a success count larger than the number\nof resources in the FHIR store. This often occurs when importing data\norganized in bundles produced by Patient-everything\nwhere each bundle contains its own copy of a resource such as Practitioner\nthat might be referred to by many patients.\n\nIf some resources fail to import, for example due to parsing errors,\nsuccessfully imported resources are not rolled back.\n\nThe location and format of the input data is specified by the parameters\nbelow. Note that if no format is specified, this method assumes the\n`BUNDLE` format. When using the `BUNDLE` format this method ignores the\n`Bundle.type` field, except that `history` bundles are rejected, and does\nnot apply any of the bundle processing semantics for batch or transaction\nbundles. Unlike in ExecuteBundle, transaction bundles are not executed\nas a single transaction and bundle-internal references are not rewritten.\nThe bundle is treated as a collection of resources to be written as\nprovided in `Bundle.entry.resource`, ignoring `Bundle.entry.request`. As\nan example, this allows the import of `searchset` bundles produced by a\nFHIR search or\nPatient-everything operation.\n\nThis method returns an Operation that can\nbe used to track the status of the import by calling\nGetOperation.\n\nImmediate fatal errors appear in the\nerror field, errors are also logged\nto Cloud Logging (see [Viewing\nlogs](/healthcare/docs/how-tos/logging)). Otherwise, when the\noperation finishes, a detailed response of type ImportResourcesResponse\nis returned in the response field.\nThe metadata field type for this\noperation is OperationMetadata.",
                      "path": "v1beta1/{+name}:import"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}",
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified FHIR store and removes all resources within it.",
                      "path": "v1beta1/{+name}",
                      "id": "healthcare.projects.locations.datasets.fhirStores.delete",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                          "description": "The resource name of the FHIR store to delete.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the FHIR stores in the given dataset.",
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from the previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Limit on the number of FHIR stores to return in a single response.  If zero\nthe default page size of 100 is used.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "required": true,
                          "description": "Name of the dataset.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Restricts stores returned to those matching a filter. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\nOnly filtering on labels is supported, for example `labels.key=value`.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v1beta1/{+parent}/fhirStores",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListFhirStoresResponse"
                      },
                      "id": "healthcare.projects.locations.datasets.fhirStores.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the configuration of the specified FHIR store.",
                      "id": "healthcare.projects.locations.datasets.fhirStores.patch",
                      "request": {
                        "$ref": "FhirStore"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}",
                      "path": "v1beta1/{+name}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "FhirStore"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "description": "Output only. Resource name of the FHIR store, of the form\n`projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$"
                        }
                      }
                    },
                    "testIamPermissions": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "id": "healthcare.projects.locations.datasets.fhirStores.testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    }
                  },
                  "resources": {
                    "fhir": {
                      "methods": {
                        "conditionalDelete": {
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1beta1/{+parent}/fhir/{+type}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}",
                          "httpMethod": "DELETE",
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalDelete",
                          "parameterOrder": [
                            "parent",
                            "type"
                          ],
                          "description": "Deletes FHIR resources that match a search query.\n\nImplements the FHIR standard conditional delete interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.12.1),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.13.1),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#3.1.0.7.1)).\nIf multiple resources match, all matching resources are deleted.\n\nSearch terms are provided as query parameters following the same pattern as\nthe search method.\n\nNote: Unless resource versioning is disabled by setting the\ndisable_resource_versioning flag\non the FHIR store, the deleted resources are moved to a history\nrepository that can still be retrieved through vread\nand related methods, unless they are removed by the\npurge method.\n\nThis method requires the`healthcare.fhirStores.searchResources` and\n`healthcare.fhirResources.delete` permissions on the parent FHIR store.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "description": "The name of the FHIR store this resource belongs to.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "type": {
                              "location": "path",
                              "pattern": "^[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "The FHIR resource type to delete, such as Patient or Observation. For a\ncomplete list, see the FHIR Resource Index\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html))."
                            }
                          }
                        },
                        "search": {
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "required": true,
                              "description": "Name of the FHIR store to retrieve resources from."
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1beta1/{+parent}/fhir/_search",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "SearchResourcesRequest"
                          },
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.search",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/_search",
                          "description": "Searches for resources in the given FHIR store according to criteria\nspecified as query parameters.\n\nImplements the FHIR standard search interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#search),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#search),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#search))\nusing the search semantics described in the FHIR Search specification\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/search.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/search.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/search.html)).\n\nSupports three methods of search defined by the specification:\n\n*  `GET [base]?[parameters]` to search across all resources.\n*  `GET [base]/[type]?[parameters]` to search resources of a specified\ntype.\n*  `POST [base]/[type]/_search?[parameters]` as an alternate form having\nthe same semantics as the `GET` method.\n\nThe `GET` methods do not support compartment searches. The `POST` method\ndoes not support `application/x-www-form-urlencoded` search parameters.\n\nOn success, the response body contains a JSON-encoded representation\nof a `Bundle` resource of type `searchset`, containing the results of the\nsearch.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.\n\nThe server's capability statement, retrieved through\ncapabilities, indicates what search parameters\nare supported on each FHIR resource. A list of all search parameters\ndefined by the specification can be found in the FHIR Search Parameter\nRegistry\n([STU3](https://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)).\nFHIR search parameters for DSTU2 can be found on each resource's definition\npage.\n\nSupported search modifiers: `:missing`, `:exact`, `:contains`, `:text`,\n`:in`, `:not-in`, `:above`, `:below`, `:[type]`, `:not`, and `:recurse`.\n\nSupported search result parameters: `_sort`, `_count`, `_include`,\n`_revinclude`, `_summary=text`, `_summary=data`, and `_elements`.\n\nThe maximum number of search results returned defaults to 100, which can\nbe overridden by the `_count` parameter up to a maximum limit of 1000. If\nthere are additional results, the returned `Bundle` contains\npagination links.\n\nResources with a total size larger than 5MB or a field count larger than\n50,000 might not be fully searchable as the server might trim its generated\nsearch index in those cases.\n\nNote: FHIR resources are indexed asynchronously, so there might be a slight\ndelay between the time a resource is created or changes and when the change\nis reflected in search results."
                        },
                        "ConceptMap-translate": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/ConceptMap/{ConceptMapId}/$translate",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta1/{+name}/$translate",
                          "parameters": {
                            "code": {
                              "type": "string",
                              "location": "query",
                              "description": "The code to translate."
                            },
                            "system": {
                              "location": "query",
                              "description": "The system for the code to be translated.",
                              "type": "string"
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/ConceptMap/[^/]+$",
                              "description": "The URL for the concept map to use for the translation.",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "conceptMapVersion": {
                              "location": "query",
                              "description": "The version of the concept map to use. If unset, the most current version\nis used.",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-translate",
                          "description": "Translates a code from one value set to another using a concept map.\n\nImplements the FHIR standard $translate operation\n([DSTU2](https://www.hl7.org/fhir/DSTU2/operation-conceptmap-translate.html),\n[STU3](https://www.hl7.org/fhir/STU3/operation-conceptmap-translate.html),\n[R4](https://www.hl7.org/fhir/R4/operation-conceptmap-translate.html)).\n\nOn success, the response body contains a JSON-encoded representation\nof a FHIR Parameters resource, which includes the translation result.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead."
                        },
                        "Resource-purge": {
                          "description": "Deletes all the historical versions of a resource (excluding the current\nversion) from the FHIR store. To remove all versions of a resource, first\ndelete the current version and then call this method.\n\nThis is not a FHIR standard operation.",
                          "httpMethod": "DELETE",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}/$purge",
                          "response": {
                            "$ref": "Empty"
                          },
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "The name of the resource to purge.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta1/{+name}/$purge",
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge"
                        },
                        "patch": {
                          "description": "Updates part of an existing resource by applying the operations specified\nin a [JSON Patch](http://jsonpatch.com/) document.\n\nImplements the FHIR standard patch interaction\n([STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#patch),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#patch)).\n\nDSTU2 doesn't define a patch method, but the server supports it in the same\nway it supports STU3.\n\nThe request body must contain a JSON Patch document, and the request\nheaders must contain `Content-Type: application/json-patch+json`.\n\nOn success, the response body contains a JSON-encoded representation\nof the updated resource, including the server-assigned version ID.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}",
                          "httpMethod": "PATCH",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                              "description": "The name of the resource to update.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.patch",
                          "path": "v1beta1/{+name}"
                        },
                        "vread": {
                          "httpMethod": "GET",
                          "description": "Gets the contents of a version (current or historical) of a FHIR resource\nby version ID.\n\nImplements the FHIR standard vread interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#vread),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#vread),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#vread)).\n\nOn success, the response body contains a JSON-encoded representation\nof the resource.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "path": "v1beta1/{+name}",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.vread",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+/_history/[^/]+$",
                              "description": "The name of the resource version to retrieve.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}/_history/{_historyId}"
                        },
                        "create": {
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1beta1/{+parent}/fhir/{+type}",
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.create",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameterOrder": [
                            "parent",
                            "type"
                          ],
                          "parameters": {
                            "type": {
                              "description": "The FHIR resource type to create, such as Patient or Observation. For a\ncomplete list, see the FHIR Resource Index\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\nMust match the resource type in the provided content.",
                              "required": true,
                              "pattern": "^[^/]+$",
                              "location": "path",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "description": "The name of the FHIR store this resource belongs to.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates a FHIR resource.\n\nImplements the FHIR standard create interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#create),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#create),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#create)),\nwhich creates a new resource with a server-assigned resource ID.\n\nAlso supports the FHIR standard conditional create interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)),\nspecified by supplying an `If-None-Exist` header containing a FHIR search\nquery. If no resources match this search query, the server processes the\ncreate operation as normal.\n\nThe request body must contain a JSON-encoded FHIR resource, and the request\nheaders must contain `Content-Type: application/fhir+json`.\n\nOn success, the response body contains a JSON-encoded representation\nof the resource as it was created on the server, including the\nserver-assigned resource ID and version ID.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead."
                        },
                        "update": {
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "description": "The name of the resource to update.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.update",
                          "httpMethod": "PUT",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1beta1/{+name}",
                          "description": "Updates the entire contents of a resource.\n\nImplements the FHIR standard update interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#update),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#update),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#update)).\n\nIf the specified resource does\nnot exist and the FHIR store has\nenable_update_create set, creates the\nresource with the client-specified ID.\n\nThe request body must contain a JSON-encoded FHIR resource, and the request\nheaders must contain `Content-Type: application/fhir+json`. The resource\nmust contain an `id` element having an identical value to the ID in the\nREST path of the request.\n\nOn success, the response body contains a JSON-encoded representation\nof the updated resource, including the server-assigned version ID.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}"
                        },
                        "Observation-lastn": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.Observation-lastn",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/Observation/$lastn",
                          "path": "v1beta1/{+parent}/fhir/Observation/$lastn",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "type": "string",
                              "description": "Name of the FHIR store to retrieve resources from.",
                              "required": true
                            }
                          },
                          "httpMethod": "GET",
                          "description": "Retrieves the N most recent `Observation` resources for a subject matching\nsearch criteria specified as query parameters, grouped by\n`Observation.code`, sorted from most recent to oldest.\n\nImplements the FHIR extended operation Observation-lastn\n([STU3](https://hl7.org/implement/standards/fhir/STU3/observation-operations.html#lastn),\n[R4](https://hl7.org/implement/standards/fhir/R4/observation-operations.html#lastn)).\n\nDSTU2 doesn't define the Observation-lastn method, but the server supports\nit the same way it supports STU3.\n\nSearch terms are provided as query parameters following the same pattern as\nthe search method. The following search parameters must\nbe provided:\n\n    - `subject` or `patient` to specify a subject for the Observation.\n    - `code`, `category` or any of the composite parameters that include\n      `code`.\n\nAny other valid Observation search parameters can also be provided. This\noperation accepts an additional query parameter `max`, which specifies N,\nthe maximum number of Observations to return from each group, with a\ndefault of 1.\n\nSearches with over 1000 results are rejected. Results are counted before\ngrouping and limiting the results with `max`. To stay within the limit,\nconstrain these searches using Observation search parameters such as\n`_lastUpdated` or `date`.\n\nOn success, the response body contains a JSON-encoded representation\nof a `Bundle` resource of type `searchset`, containing the results of the\noperation.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead."
                        },
                        "Patient-everything": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/Patient/{PatientId}/$everything",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameters": {
                            "end": {
                              "type": "string",
                              "location": "query",
                              "description": "The response includes records prior to the end date. If no end date is\nprovided, all records subsequent to the start date are in scope."
                            },
                            "_page_token": {
                              "location": "query",
                              "description": "Used to retrieve the next or previous page of results\nwhen using pagination. Value should be set to the value of `page_token` set\nin next or previous page links' URLs. Next and previous page are returned\nin the response bundle's links field, where `link.relation` is \"previous\"\nor \"next\".\n\nOmit `page_token` if no previous request has been made.",
                              "type": "string"
                            },
                            "name": {
                              "required": true,
                              "location": "path",
                              "description": "Name of the `Patient` resource for which the information is required.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$"
                            },
                            "_count": {
                              "location": "query",
                              "format": "int32",
                              "type": "integer",
                              "description": "Maximum number of resources in a page. Defaults to 100."
                            },
                            "start": {
                              "location": "query",
                              "type": "string",
                              "description": "The response includes records subsequent to the start date. If no start\ndate is provided, all records prior to the end date are in scope."
                            }
                          },
                          "path": "v1beta1/{+name}/$everything",
                          "description": "Retrieves a Patient resource and resources related to that patient.\n\nImplements the FHIR extended operation Patient-everything\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/patient-operations.html#everything),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything),\n[R4](https://hl7.org/implement/standards/fhir/R4/patient-operations.html#everything)).\n\nOn success, the response body contains a JSON-encoded representation\nof a `Bundle` resource of type `searchset`, containing the results of the\noperation.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.\n\nThe resources in scope for the response are:\n\n* The patient resource itself.\n* All the resources directly referenced by the patient resource.\n* Resources directly referencing the patient resource that meet the\n  inclusion criteria. The inclusion criteria are based on the membership\n  rules in the patient compartment definition\n  ([DSTU2](https://hl7.org/fhir/DSTU2/compartment-patient.html),\n  [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html),\n  [R4](https://hl7.org/fhir/R4/compartmentdefinition-patient.html)), which\n  details the eligible resource types and referencing search parameters.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "read": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta1/{+name}",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                              "type": "string",
                              "description": "The name of the resource to retrieve.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "description": "Gets the contents of a FHIR resource.\n\nImplements the FHIR standard read interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#read),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#read),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#read)).\n\nAlso supports the FHIR standard conditional read interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#cread),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#cread),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#cread))\nspecified by supplying an `If-Modified-Since` header with a date/time value\nor an `If-None-Match` header with an ETag value.\n\nOn success, the response body contains a JSON-encoded representation\nof the resource.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.read"
                        },
                        "history": {
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.history",
                          "parameters": {
                            "_count": {
                              "type": "integer",
                              "location": "query",
                              "description": "The maximum number of search results on a page. Defaults to 1000.",
                              "format": "int32"
                            },
                            "_at": {
                              "location": "query",
                              "type": "string",
                              "description": "Only include resource versions that were current at some point during the\ntime period specified in the date time value. The date parameter format is\nyyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm]\n\nClients may specify any of the following:\n\n*  An entire year: `_at=2019`\n*  An entire month: `_at=2019-01`\n*  A specific day: `_at=2019-01-20`\n*  A specific second: `_at=2018-12-31T23:59:58Z`"
                            },
                            "_since": {
                              "description": "Only include resource versions that were created at or after the given\ninstant in time. The instant in time uses the format\nYYYY-MM-DDThh:mm:ss.sss+zz:zz (for example 2015-02-07T13:28:17.239+02:00 or\n2017-01-01T00:00:00Z). The time must be specified to the second and\ninclude a time zone.",
                              "type": "string",
                              "location": "query"
                            },
                            "_page_token": {
                              "type": "string",
                              "location": "query",
                              "description": "Used to retrieve the first, previous, next, or last page of resource\nversions when using pagination. Value should be set to the value of\n`_page_token` set in next or previous page links' URLs. Next and previous\npage are returned in the response bundle's links field, where\n`link.relation` is \"previous\" or \"next\".\n\nOmit `_page_token` if no previous request has been made."
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "The name of the resource to retrieve.",
                              "type": "string"
                            }
                          },
                          "path": "v1beta1/{+name}/_history",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}/_history",
                          "description": "Lists all the versions of a resource (including the current version and\ndeleted versions) from the FHIR store.\n\nImplements the per-resource form of the FHIR standard history interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#history),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#history),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#history)).\n\nOn success, the response body contains a JSON-encoded representation\nof a `Bundle` resource of type `history`, containing the version history\nsorted from most recent to oldest versions.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "capabilities": {
                          "parameters": {
                            "name": {
                              "description": "Name of the FHIR store to retrieve the capabilities for.",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the FHIR capability statement\n([STU3](https://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)),\nor the [conformance\nstatement](https://hl7.org/implement/standards/fhir/DSTU2/conformance.html)\nin the DSTU2 case for the store, which contains a description of\nfunctionality supported by the server.\n\nImplements the FHIR standard capabilities interaction\n([STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#capabilities)),\nor the [conformance\ninteraction](https://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance)\nin the DSTU2 case.\n\nOn success, the response body contains a JSON-encoded representation\nof a `CapabilityStatement` resource.",
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.capabilities",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/metadata",
                          "path": "v1beta1/{+name}/fhir/metadata",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "GET"
                        },
                        "executeBundle": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "description": "Name of the FHIR store in which this bundle will be executed.",
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "POST",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir",
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "description": "Executes all the requests in the given Bundle.\n\nImplements the FHIR standard batch/transaction interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)).\n\nSupports all interactions within a bundle, except search. This method\naccepts Bundles of type `batch` and `transaction`, processing them\naccording to the batch processing rules\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules))\nand transaction processing rules\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)).\n\nThe request body must contain a JSON-encoded FHIR `Bundle` resource, and\nthe request headers must contain `Content-Type: application/fhir+json`.\n\nFor a batch bundle or a successful transaction the response body\ncontains a JSON-encoded representation of a `Bundle` resource of type\n`batch-response` or `transaction-response` containing one entry for each\nentry in the request, with the outcome of processing the entry. In the\ncase of an error for a transaction bundle, the response body contains\na JSON-encoded `OperationOutcome` resource describing the reason for the\nerror. If the request cannot be mapped to a valid API method on a FHIR\nstore, a generic GCP error might be returned instead.\n\nThis method requires permission for executing the requests in the bundle.\nThe `executeBundle` permission grants permission to execute the request in\nthe bundle but you must grant sufficient permissions to execute the\nindividual requests in the bundle. For example, if the bundle contains a\n`create` request, you must have permission to execute the `create` request.\n\nLogging is available for the `executeBundle` permission.",
                          "path": "v1beta1/{+parent}/fhir",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle"
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "The name of the resource to delete.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}/{fhirId1}",
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.delete",
                          "httpMethod": "DELETE",
                          "description": "Deletes a FHIR resource.\n\nImplements the FHIR standard delete interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#delete),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#delete),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#delete)).\n\nNote: Unless resource versioning is disabled by setting the\ndisable_resource_versioning flag\non the FHIR store, the deleted resources are moved to a history\nrepository that can still be retrieved through vread\nand related methods, unless they are removed by the\npurge method."
                        },
                        "ConceptMap-search-translate": {
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1beta1/{+parent}/fhir/ConceptMap/$translate",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/ConceptMap/$translate",
                          "description": "Translates a code from one value set to another by searching for\nappropriate concept maps.\n\nImplements the FHIR standard $translate operation\n([DSTU2](https://www.hl7.org/fhir/DSTU2/operation-conceptmap-translate.html),\n[STU3](https://www.hl7.org/fhir/STU3/operation-conceptmap-translate.html),\n[R4](https://www.hl7.org/fhir/R4/operation-conceptmap-translate.html)).\n\nOn success, the response body contains a JSON-encoded representation\nof a FHIR Parameters resource, which includes the translation result.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-search-translate",
                          "parameters": {
                            "url": {
                              "location": "query",
                              "type": "string",
                              "description": "The canonical url of the concept map to use. If unset, the source and\ntarget is used to search for concept maps."
                            },
                            "target": {
                              "location": "query",
                              "type": "string",
                              "description": "The target value set of the concept map to be used. If unset, source is\nused to search for concept maps."
                            },
                            "parent": {
                              "description": "The name for the FHIR store containing the concept map(s) to use for the\ntranslation.",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$"
                            },
                            "code": {
                              "location": "query",
                              "description": "The code to translate.",
                              "type": "string"
                            },
                            "system": {
                              "location": "query",
                              "description": "The system for the code to be translated.",
                              "type": "string"
                            },
                            "source": {
                              "location": "query",
                              "type": "string",
                              "description": "The source value set of the concept map to be used. If unset, target is\nused to search for concept maps."
                            },
                            "conceptMapVersion": {
                              "location": "query",
                              "type": "string",
                              "description": "The version of the concept map to use. If unset, the most current version\nis used."
                            }
                          }
                        },
                        "conditionalUpdate": {
                          "path": "v1beta1/{+parent}/fhir/{+type}",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "The name of the FHIR store this resource belongs to."
                            },
                            "type": {
                              "location": "path",
                              "description": "The FHIR resource type to update, such as Patient or Observation. For a\ncomplete list, see the FHIR Resource Index\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\nMust match the resource type in the provided content.",
                              "required": true,
                              "type": "string",
                              "pattern": "^[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameterOrder": [
                            "parent",
                            "type"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalUpdate",
                          "httpMethod": "PUT",
                          "description": "If a resource is found based on the search criteria specified in the query\nparameters, updates the entire contents of that resource.\n\nImplements the FHIR standard conditional update interaction\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.10.2),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#cond-update),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#cond-update)).\n\nSearch terms are provided as query parameters following the same pattern as\nthe search method.\n\nIf the search criteria identify more than one match, the request\nreturns a `412 Precondition Failed` error.\nIf the search criteria identify zero matches, and the supplied resource\nbody contains an `id`, and the FHIR store has\nenable_update_create set, creates the\nresource with the client-specified ID. If the search criteria identify zero\nmatches, and the supplied resource body does not contain an `id`, the\nresource is created with a server-assigned ID as per the\ncreate method.\n\nThe request body must contain a JSON-encoded FHIR resource, and the request\nheaders must contain `Content-Type: application/fhir+json`.\n\nOn success, the response body contains a JSON-encoded representation\nof the updated resource, including the server-assigned version ID.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.\n\nThis method requires the`healthcare.fhirStores.searchResources` and\n`healthcare.fhirResources.update` permissions on the parent FHIR store.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}"
                        },
                        "conditionalPatch": {
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1beta1/{+parent}/fhir/{+type}",
                          "httpMethod": "PATCH",
                          "parameterOrder": [
                            "parent",
                            "type"
                          ],
                          "parameters": {
                            "type": {
                              "description": "The FHIR resource type to update, such as Patient or Observation. For a\ncomplete list, see the FHIR Resource Index\n([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n[STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n[R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).",
                              "location": "path",
                              "required": true,
                              "pattern": "^[^/]+$",
                              "type": "string"
                            },
                            "parent": {
                              "description": "The name of the FHIR store this resource belongs to.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalPatch",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/fhirStores/{fhirStoresId}/fhir/{fhirId}",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "description": "If a resource is found based on the search criteria specified in the query\nparameters, updates part of that resource by applying the operations\nspecified in a [JSON Patch](http://jsonpatch.com/) document.\n\nImplements the FHIR standard conditional patch interaction\n([STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#patch),\n[R4](https://hl7.org/implement/standards/fhir/R4/http.html#patch)).\n\nDSTU2 doesn't define a conditional patch method, but the server supports it\nin the same way it supports STU3.\n\nSearch terms are provided as query parameters following the same pattern as\nthe search method.\n\nIf the search criteria identify more than one match, the request\nreturns a `412 Precondition Failed` error.\n\nThe request body must contain a JSON Patch document, and the request\nheaders must contain `Content-Type: application/json-patch+json`.\n\nOn success, the response body contains a JSON-encoded representation\nof the updated resource, including the server-assigned version ID.\nErrors generated by the FHIR store contain a JSON-encoded\n`OperationOutcome` resource describing the reason for the error. If the\nrequest cannot be mapped to a valid API method on a FHIR store, a generic\nGCP error might be returned instead.\n\nThis method requires the`healthcare.fhirStores.searchResources` permission\non the parent FHIR store and the `healthcare.fhirResources.patch`\npermission on the requested FHIR store resource."
                        }
                      }
                    }
                  }
                },
                "dicomStores": {
                  "resources": {
                    "studies": {
                      "resources": {
                        "series": {
                          "methods": {
                            "searchForInstances": {
                              "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.searchForInstances",
                              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances",
                              "description": "SearchForInstances returns a list of matching instances. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                              "parameterOrder": [
                                "parent",
                                "dicomWebPath"
                              ],
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "parameters": {
                                "parent": {
                                  "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                },
                                "dicomWebPath": {
                                  "required": true,
                                  "type": "string",
                                  "description": "The path of the SearchForInstancesRequest DICOMweb request. For example,\n`instances`, `series/{series_uid}/instances`, or\n`studies/{study_uid}/instances`.",
                                  "pattern": "^studies/[^/]+/series/[^/]+/instances$",
                                  "location": "path"
                                }
                              },
                              "httpMethod": "GET"
                            },
                            "retrieveSeries": {
                              "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                              "parameterOrder": [
                                "parent",
                                "dicomWebPath"
                              ],
                              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}",
                              "description": "RetrieveSeries returns all instances within the given study and series. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                              "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.retrieveSeries",
                              "httpMethod": "GET",
                              "parameters": {
                                "dicomWebPath": {
                                  "description": "The path of the RetrieveSeries DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}`.",
                                  "pattern": "^studies/[^/]+/series/[^/]+$",
                                  "type": "string",
                                  "location": "path",
                                  "required": true
                                },
                                "parent": {
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                  "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                  "location": "path",
                                  "required": true
                                }
                              },
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ]
                            },
                            "delete": {
                              "parameters": {
                                "parent": {
                                  "type": "string",
                                  "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                  "required": true
                                },
                                "dicomWebPath": {
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^studies/[^/]+/series/[^/]+$",
                                  "type": "string",
                                  "description": "The path of the DeleteSeries request. For example,\n`studies/{study_uid}/series/{series_uid}`."
                                }
                              },
                              "httpMethod": "DELETE",
                              "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.delete",
                              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                              "parameterOrder": [
                                "parent",
                                "dicomWebPath"
                              ],
                              "description": "DeleteSeries deletes all instances within the given study and series.\nDelete requests are equivalent to the GET requests specified in the\nRetrieve transaction.",
                              "response": {
                                "$ref": "Empty"
                              }
                            },
                            "retrieveMetadata": {
                              "httpMethod": "GET",
                              "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.retrieveMetadata",
                              "parameterOrder": [
                                "parent",
                                "dicomWebPath"
                              ],
                              "description": "RetrieveSeriesMetadata returns instance associated with the given study and\nseries, presented as metadata with the bulk data removed. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/metadata",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                              "parameters": {
                                "parent": {
                                  "type": "string",
                                  "location": "path",
                                  "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                  "required": true
                                },
                                "dicomWebPath": {
                                  "required": true,
                                  "location": "path",
                                  "description": "The path of the RetrieveSeriesMetadata DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/metadata`.",
                                  "type": "string",
                                  "pattern": "^studies/[^/]+/series/[^/]+/metadata$"
                                }
                              }
                            }
                          },
                          "resources": {
                            "instances": {
                              "methods": {
                                "retrieveMetadata": {
                                  "parameters": {
                                    "parent": {
                                      "location": "path",
                                      "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                      "type": "string"
                                    },
                                    "dicomWebPath": {
                                      "type": "string",
                                      "description": "The path of the RetrieveInstanceMetadata DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.",
                                      "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+/metadata$",
                                      "location": "path",
                                      "required": true
                                    }
                                  },
                                  "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                  "response": {
                                    "$ref": "HttpBody"
                                  },
                                  "httpMethod": "GET",
                                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}/metadata",
                                  "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveMetadata",
                                  "parameterOrder": [
                                    "parent",
                                    "dicomWebPath"
                                  ],
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform"
                                  ],
                                  "description": "RetrieveInstanceMetadata returns instance associated with the given study,\nseries, and SOP Instance UID presented as metadata with the bulk data\nremoved. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4)."
                                },
                                "delete": {
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform"
                                  ],
                                  "parameterOrder": [
                                    "parent",
                                    "dicomWebPath"
                                  ],
                                  "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.delete",
                                  "parameters": {
                                    "parent": {
                                      "location": "path",
                                      "type": "string",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                      "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                                    },
                                    "dicomWebPath": {
                                      "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+$",
                                      "description": "The path of the DeleteInstance request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.",
                                      "type": "string",
                                      "location": "path",
                                      "required": true
                                    }
                                  },
                                  "description": "DeleteInstance deletes an instance associated with the given study, series,\nand SOP Instance UID. Delete requests are equivalent to the GET requests\nspecified in the Retrieve transaction.\nStudy and series search results can take a few seconds to be updated after\nan instance is deleted using DeleteInstance.",
                                  "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                  "httpMethod": "DELETE",
                                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}",
                                  "response": {
                                    "$ref": "Empty"
                                  }
                                },
                                "retrieveRendered": {
                                  "parameters": {
                                    "parent": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                      "type": "string",
                                      "location": "path",
                                      "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                      "required": true
                                    },
                                    "dicomWebPath": {
                                      "required": true,
                                      "type": "string",
                                      "location": "path",
                                      "description": "The path of the RetrieveRenderedInstance DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.",
                                      "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+/rendered$"
                                    }
                                  },
                                  "description": "RetrieveRenderedInstance returns instance associated with the given study,\nseries, and SOP Instance UID in an acceptable Rendered Media Type. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                                  "httpMethod": "GET",
                                  "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveRendered",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform"
                                  ],
                                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}/rendered",
                                  "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                  "parameterOrder": [
                                    "parent",
                                    "dicomWebPath"
                                  ],
                                  "response": {
                                    "$ref": "HttpBody"
                                  }
                                },
                                "retrieveInstance": {
                                  "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                  "httpMethod": "GET",
                                  "response": {
                                    "$ref": "HttpBody"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform"
                                  ],
                                  "description": "RetrieveInstance returns instance associated with the given study, series,\nand SOP Instance UID. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                                  "parameters": {
                                    "dicomWebPath": {
                                      "type": "string",
                                      "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+$",
                                      "required": true,
                                      "location": "path",
                                      "description": "The path of the RetrieveInstance DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`."
                                    },
                                    "parent": {
                                      "required": true,
                                      "location": "path",
                                      "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                      "type": "string"
                                    }
                                  },
                                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}",
                                  "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.retrieveInstance",
                                  "parameterOrder": [
                                    "parent",
                                    "dicomWebPath"
                                  ]
                                }
                              },
                              "resources": {
                                "frames": {
                                  "methods": {
                                    "retrieveRendered": {
                                      "response": {
                                        "$ref": "HttpBody"
                                      },
                                      "parameterOrder": [
                                        "parent",
                                        "dicomWebPath"
                                      ],
                                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}/frames/{framesId}/rendered",
                                      "httpMethod": "GET",
                                      "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveRendered",
                                      "parameters": {
                                        "parent": {
                                          "location": "path",
                                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                          "type": "string",
                                          "required": true
                                        },
                                        "dicomWebPath": {
                                          "description": "The path of the RetrieveRenderedFrames DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rendered`.",
                                          "required": true,
                                          "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+/rendered$",
                                          "location": "path",
                                          "type": "string"
                                        }
                                      },
                                      "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                      ],
                                      "description": "RetrieveRenderedFrames returns instances associated with the given study,\nseries, SOP Instance UID and frame numbers in an acceptable Rendered Media\nType. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4)."
                                    },
                                    "retrieveFrames": {
                                      "parameterOrder": [
                                        "parent",
                                        "dicomWebPath"
                                      ],
                                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series/{seriesId}/instances/{instancesId}/frames/{framesId}",
                                      "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                      ],
                                      "parameters": {
                                        "dicomWebPath": {
                                          "location": "path",
                                          "description": "The path of the RetrieveFrames DICOMweb request. For example,\n`studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.",
                                          "pattern": "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+$",
                                          "type": "string",
                                          "required": true
                                        },
                                        "parent": {
                                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                          "type": "string",
                                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                                          "location": "path",
                                          "required": true
                                        }
                                      },
                                      "httpMethod": "GET",
                                      "description": "RetrieveFrames returns instances associated with the given study, series,\nSOP Instance UID and frame numbers. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                                      "id": "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveFrames",
                                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                                      "response": {
                                        "$ref": "HttpBody"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "searchForSeries": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "SearchForSeries returns a list of matching series. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.searchForSeries",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/series",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                            },
                            "dicomWebPath": {
                              "required": true,
                              "location": "path",
                              "description": "The path of the SearchForSeries DICOMweb request. For example, `series` or\n`studies/{study_uid}/series`.",
                              "pattern": "^studies/[^/]+/series$",
                              "type": "string"
                            }
                          },
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "httpMethod": "GET"
                        },
                        "delete": {
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$"
                            },
                            "dicomWebPath": {
                              "location": "path",
                              "pattern": "^studies/[^/]+$",
                              "description": "The path of the DeleteStudy request. For example, `studies/{study_uid}`.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "DeleteStudy deletes all instances within the given study. Delete requests\nare equivalent to the GET requests specified in the Retrieve transaction.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}",
                          "httpMethod": "DELETE",
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.delete",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ]
                        },
                        "searchForInstances": {
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameters": {
                            "dicomWebPath": {
                              "pattern": "^studies/[^/]+/instances$",
                              "location": "path",
                              "required": true,
                              "description": "The path of the SearchForInstancesRequest DICOMweb request. For example,\n`instances`, `series/{series_uid}/instances`, or\n`studies/{study_uid}/instances`.",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                              "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "description": "SearchForInstances returns a list of matching instances. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/instances",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.searchForInstances"
                        },
                        "retrieveStudy": {
                          "parameters": {
                            "dicomWebPath": {
                              "required": true,
                              "location": "path",
                              "description": "The path of the RetrieveStudy DICOMweb request. For example,\n`studies/{study_uid}`.",
                              "pattern": "^studies/[^/]+$",
                              "type": "string"
                            },
                            "parent": {
                              "required": true,
                              "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}",
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.retrieveStudy",
                          "description": "RetrieveStudy returns all instances within the given study. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ]
                        },
                        "storeInstances": {
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                            },
                            "dicomWebPath": {
                              "type": "string",
                              "description": "The path of the StoreInstances DICOMweb request. For example,\n`studies/[{study_uid}]`. Note that the `study_uid` is optional.",
                              "pattern": "^studies/[^/]+$",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "description": "StoreInstances stores DICOM instances associated with study instance unique\nidentifiers (SUID). See\n[Store\nTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5).",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "HttpBody"
                          },
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.storeInstances"
                        },
                        "retrieveMetadata": {
                          "parameters": {
                            "dicomWebPath": {
                              "required": true,
                              "pattern": "^studies/[^/]+/metadata$",
                              "location": "path",
                              "description": "The path of the RetrieveStudyMetadata DICOMweb request. For example,\n`studies/{study_uid}/metadata`.",
                              "type": "string"
                            },
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                              "location": "path",
                              "required": true,
                              "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                            }
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent",
                            "dicomWebPath"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "description": "RetrieveStudyMetadata returns instance associated with the given study\npresented as metadata with the bulk data removed. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                          "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies/{studiesId}/metadata",
                          "id": "healthcare.projects.locations.datasets.dicomStores.studies.retrieveMetadata"
                        }
                      }
                    }
                  },
                  "methods": {
                    "deidentify": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:deidentify",
                      "parameterOrder": [
                        "sourceStore"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "healthcare.projects.locations.datasets.dicomStores.deidentify",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "DeidentifyDicomStoreRequest"
                      },
                      "path": "v1beta1/{+sourceStore}:deidentify",
                      "description": "De-identifies data from the source store and writes it to the destination\nstore. The metadata field type\nis OperationMetadata.\nIf the request is successful, the\nresponse field type is\nDeidentifyDicomStoreSummary. If errors occur,\nerror\ndetails field type is\nDeidentifyErrorDetails.\nThe LRO result may still be successful if de-identification fails for some\nDICOM instances. The output DICOM store will not contain\nthese failed resources. Failed resource totals are tracked in\nDeidentifySummary.failure_resource_count.\nError details are also logged to Cloud Logging\n(see [Viewing logs](/healthcare/docs/how-tos/logging)).",
                      "parameters": {
                        "sourceStore": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "description": "Source DICOM store resource name. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "required": true
                        }
                      }
                    },
                    "import": {
                      "request": {
                        "$ref": "ImportDicomDataRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Imports data into the DICOM store by copying it from the specified source.\nFor errors, the Operation is populated with error details (in the form\nof ImportDicomDataErrorDetails in error.details), which hold\nfiner-grained error information. Errors are also logged to Cloud Logging.\nFor more information, see [Viewing logs](/healthcare/docs/how-tos/logging).\nThe metadata field type is\nOperationMetadata.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:import",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "description": "The name of the DICOM store resource into which the data is imported.\nFor example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "healthcare.projects.locations.datasets.dicomStores.import",
                      "path": "v1beta1/{+name}:import"
                    },
                    "list": {
                      "id": "healthcare.projects.locations.datasets.dicomStores.list",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores",
                      "description": "Lists the DICOM stores in the given dataset.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDicomStoresResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "description": "Name of the dataset.",
                          "location": "path",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Restricts stores returned to those matching a filter. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\nOnly filtering on labels is supported. For example, `labels.key=value`."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Limit on the number of DICOM stores to return in a single response.\nIf zero the default page size of 100 is used."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from the previous List request, if any."
                        }
                      },
                      "path": "v1beta1/{+parent}/dicomStores"
                    },
                    "get": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the specified DICOM store.",
                      "response": {
                        "$ref": "DicomStore"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1beta1/{+name}",
                      "id": "healthcare.projects.locations.datasets.dicomStores.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The resource name of the DICOM store to get.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$"
                        }
                      }
                    },
                    "testIamPermissions": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "id": "healthcare.projects.locations.datasets.dicomStores.testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:testIamPermissions",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field."
                        }
                      },
                      "path": "v1beta1/{+resource}:testIamPermissions"
                    },
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "id": "healthcare.projects.locations.datasets.dicomStores.getIamPolicy",
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:getIamPolicy"
                    },
                    "searchForStudies": {
                      "id": "healthcare.projects.locations.datasets.dicomStores.searchForStudies",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "dicomWebPath": {
                          "location": "path",
                          "required": true,
                          "description": "The path of the SearchForStudies DICOMweb request. For example, `studies`.",
                          "type": "string",
                          "pattern": "^studies$"
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "HttpBody"
                      },
                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies",
                      "description": "SearchForStudies returns a list of matching studies. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent",
                        "dicomWebPath"
                      ]
                    },
                    "setIamPolicy": {
                      "httpMethod": "POST",
                      "id": "healthcare.projects.locations.datasets.dicomStores.setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "searchForSeries": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent",
                        "dicomWebPath"
                      ],
                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/series",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                        },
                        "dicomWebPath": {
                          "type": "string",
                          "location": "path",
                          "description": "The path of the SearchForSeries DICOMweb request. For example, `series` or\n`studies/{study_uid}/series`.",
                          "required": true,
                          "pattern": "^series$"
                        }
                      },
                      "response": {
                        "$ref": "HttpBody"
                      },
                      "description": "SearchForSeries returns a list of matching series. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                      "id": "healthcare.projects.locations.datasets.dicomStores.searchForSeries"
                    },
                    "create": {
                      "request": {
                        "$ref": "DicomStore"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "The name of the dataset this DICOM store belongs to.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "required": true
                        },
                        "dicomStoreId": {
                          "location": "query",
                          "type": "string",
                          "description": "The ID of the DICOM store that is being created.\nAny string value up to 256 characters in length."
                        }
                      },
                      "path": "v1beta1/{+parent}/dicomStores",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "healthcare.projects.locations.datasets.dicomStores.create",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores",
                      "response": {
                        "$ref": "DicomStore"
                      },
                      "description": "Creates a new DICOM store within the parent dataset.",
                      "httpMethod": "POST"
                    },
                    "searchForInstances": {
                      "httpMethod": "GET",
                      "description": "SearchForInstances returns a list of matching instances. See\n[RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).",
                      "id": "healthcare.projects.locations.datasets.dicomStores.searchForInstances",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "location": "path"
                        },
                        "dicomWebPath": {
                          "required": true,
                          "description": "The path of the SearchForInstancesRequest DICOMweb request. For example,\n`instances`, `series/{series_uid}/instances`, or\n`studies/{study_uid}/instances`.",
                          "pattern": "^instances$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent",
                        "dicomWebPath"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/instances",
                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                      "response": {
                        "$ref": "HttpBody"
                      }
                    },
                    "patch": {
                      "request": {
                        "$ref": "DicomStore"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "healthcare.projects.locations.datasets.dicomStores.patch",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}",
                      "httpMethod": "PATCH",
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "DicomStore"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Resource name of the DICOM store, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`."
                        },
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                        }
                      },
                      "description": "Updates the specified DICOM store."
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "healthcare.projects.locations.datasets.dicomStores.delete",
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified DICOM store and removes all images that are contained\nwithin it.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "The resource name of the DICOM store to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$"
                        }
                      },
                      "path": "v1beta1/{+name}"
                    },
                    "export": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "healthcare.projects.locations.datasets.dicomStores.export",
                      "description": "Exports data to the specified destination by copying it from the DICOM\nstore.\nErrors are also logged to Cloud Logging. For more information,\nsee [Viewing logs](/healthcare/docs/how-tos/logging).\nThe metadata field type is\nOperationMetadata.",
                      "parameters": {
                        "name": {
                          "description": "The DICOM store resource name from which to export the data. For\nexample,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "ExportDicomDataRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}:export",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}:export"
                    },
                    "storeInstances": {
                      "path": "v1beta1/{+parent}/dicomWeb/{+dicomWebPath}",
                      "description": "StoreInstances stores DICOM instances associated with study instance unique\nidentifiers (SUID). See\n[Store\nTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5).",
                      "id": "healthcare.projects.locations.datasets.dicomStores.storeInstances",
                      "parameters": {
                        "dicomWebPath": {
                          "type": "string",
                          "pattern": "^studies$",
                          "description": "The path of the StoreInstances DICOMweb request. For example,\n`studies/[{study_uid}]`. Note that the `study_uid` is optional.",
                          "required": true,
                          "location": "path"
                        },
                        "parent": {
                          "location": "path",
                          "description": "The name of the DICOM store that is being accessed. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "HttpBody"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent",
                        "dicomWebPath"
                      ],
                      "response": {
                        "$ref": "HttpBody"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dicomStores/{dicomStoresId}/dicomWeb/studies"
                    }
                  }
                },
                "hl7V2Stores": {
                  "resources": {
                    "messages": {
                      "methods": {
                        "patch": {
                          "request": {
                            "$ref": "Message"
                          },
                          "parameters": {
                            "name": {
                              "description": "Resource name of the Message, of the form\n`projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.\nAssigned by the server.",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$"
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "path": "v1beta1/{+name}",
                          "httpMethod": "PATCH",
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.patch",
                          "description": "Update the message.\n\nThe contents of the message in Message.data and data extracted from\nthe contents such as Message.create_time can't be altered. Only the\nMessage.labels field is allowed to be updated. The labels in the\nrequest are merged with the existing set of labels. Existing labels with\nthe same keys are updated.",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages/{messagesId}",
                          "response": {
                            "$ref": "Message"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "create": {
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "Message"
                          },
                          "parameters": {
                            "parent": {
                              "required": true,
                              "type": "string",
                              "description": "The name of the dataset this message belongs to.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates a message and sends a notification to the Cloud Pub/Sub topic. If\nconfigured, the MLLP adapter listens to messages created by this method and\nsends those back to the hospital. A successful response indicates the\nmessage has been persisted to storage and a Cloud Pub/Sub notification has\nbeen sent. Sending to the hospital by the MLLP adapter happens\nasynchronously.",
                          "path": "v1beta1/{+parent}/messages",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages",
                          "request": {
                            "$ref": "CreateMessageRequest"
                          },
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.create",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "delete": {
                          "path": "v1beta1/{+name}",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$",
                              "description": "The resource name of the HL7v2 message to delete.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "httpMethod": "DELETE",
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.delete",
                          "response": {
                            "$ref": "Empty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages/{messagesId}",
                          "description": "Deletes an HL7v2 message.",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "get": {
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets an HL7v2 message.",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "The resource name of the HL7v2 message to retrieve.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$",
                              "type": "string"
                            },
                            "view": {
                              "type": "string",
                              "description": "Specifies which parts of the Message resource to return in the response.\nWhen unspecified, equivalent to FULL.",
                              "enum": [
                                "MESSAGE_VIEW_UNSPECIFIED",
                                "RAW_ONLY",
                                "PARSED_ONLY",
                                "FULL",
                                "BASIC"
                              ],
                              "location": "query"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages/{messagesId}",
                          "httpMethod": "GET",
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.get",
                          "response": {
                            "$ref": "Message"
                          }
                        },
                        "list": {
                          "path": "v1beta1/{+parent}/messages",
                          "description": "Lists all the messages in the given HL7v2 store with support for filtering.\n\nNote: HL7v2 messages are indexed asynchronously, so there might be a slight\ndelay between the time a message is created and when it can be found\nthrough a filter.",
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.list",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListMessagesResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Orders messages returned by the specified order_by clause.\nSyntax: https://cloud.google.com/apis/design/design_patterns#sorting_order\n\nFields available for ordering are:\n\n*  `send_time`"
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                              "location": "path",
                              "description": "Name of the HL7v2 store to retrieve messages from.",
                              "type": "string"
                            },
                            "view": {
                              "location": "query",
                              "enum": [
                                "MESSAGE_VIEW_UNSPECIFIED",
                                "RAW_ONLY",
                                "PARSED_ONLY",
                                "FULL",
                                "BASIC"
                              ],
                              "type": "string",
                              "description": "Specifies the parts of the Message to return in the response.\nWhen unspecified, equivalent to BASIC. Setting this to anything other than\nBASIC with a `page_size` larger than the default can generate a large\nresponse, which impacts the performance of this method."
                            },
                            "pageSize": {
                              "description": "Limit on the number of messages to return in a single response.\nIf zero the default page size of 100 is used.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "filter": {
                              "description": "Restricts messages returned to those matching a filter. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\n\nThe following fields and functions are available for filtering:\n\n*  `message_type`, from the MSH-9.1 field. For example,\n`NOT message_type = \"ADT\"`.\n*  `send_date` or `sendDate`, the YYYY-MM-DD date the message was sent in\nthe dataset's time_zone, from the MSH-7 segment. For example,\n`send_date \u003c \"2017-01-02\"`.\n*  `send_time`, the timestamp when the message was sent, using the\nRFC3339 time format for comparisons, from the MSH-7 segment. For example,\n`send_time \u003c \"2017-01-02T00:00:00-05:00\"`.\n*  `send_facility`, the care center that the message came from, from the\nMSH-4 segment. For example, `send_facility = \"ABC\"`.\n*  `PatientId(value, type)`, which matches if the message lists a patient\nhaving an ID of the given value and type in the PID-2, PID-3, or PID-4\nsegments. For example, `PatientId(\"123456\", \"MRN\")`.\n*  `labels.x`, a string value of the label with key `x` as set using the\nMessage.labels\nmap. For example, `labels.\"priority\"=\"high\"`. The operator `:*` can be used\nto assert the existence of a label. For example, `labels.\"priority\":*`.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "The next_page_token value returned from the previous List request, if any.",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages"
                        },
                        "ingest": {
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                              "description": "The name of the HL7v2 store this message belongs to.",
                              "required": true
                            }
                          },
                          "request": {
                            "$ref": "IngestMessageRequest"
                          },
                          "id": "healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest",
                          "httpMethod": "POST",
                          "description": "Ingests a new HL7v2 message from the hospital and sends a notification to\nthe Cloud Pub/Sub topic. Return is an HL7v2 ACK message if the message was\nsuccessfully stored. Otherwise an error is returned.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}/messages:ingest",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta1/{+parent}/messages:ingest",
                          "response": {
                            "$ref": "IngestMessageResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}:getIamPolicy"
                    },
                    "delete": {
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.delete",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The resource name of the HL7v2 store to delete."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified HL7v2 store and removes all messages that it\ncontains."
                    },
                    "create": {
                      "path": "v1beta1/{+parent}/hl7V2Stores",
                      "description": "Creates a new HL7v2 store within the parent dataset.",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Hl7V2Store"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores",
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Hl7V2Store"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The name of the dataset this HL7v2 store belongs to."
                        },
                        "hl7V2StoreId": {
                          "location": "query",
                          "type": "string",
                          "description": "The ID of the HL7v2 store that is being created.\nThe string must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`."
                        }
                      }
                    },
                    "setIamPolicy": {
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}:setIamPolicy",
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "response": {
                        "$ref": "Policy"
                      },
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$"
                        }
                      }
                    },
                    "get": {
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.get",
                      "response": {
                        "$ref": "Hl7V2Store"
                      },
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                          "location": "path",
                          "description": "The resource name of the HL7v2 store to get.",
                          "required": true
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the specified HL7v2 store.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    },
                    "testIamPermissions": {
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}:testIamPermissions"
                    },
                    "list": {
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.list",
                      "response": {
                        "$ref": "ListHl7V2StoresResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores",
                      "httpMethod": "GET",
                      "path": "v1beta1/{+parent}/hl7V2Stores",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Restricts stores returned to those matching a filter. Syntax:\nhttps://cloud.google.com/appengine/docs/standard/python/search/query_strings\nOnly filtering on labels is supported. For example, `labels.key=value`.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                          "required": true,
                          "description": "Name of the dataset.",
                          "location": "path",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from the previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Limit on the number of HL7v2 stores to return in a single response.\nIf zero the default page size of 100 is used.",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "description": "Lists the HL7v2 stores in the given dataset."
                    },
                    "patch": {
                      "id": "healthcare.projects.locations.datasets.hl7V2Stores.patch",
                      "request": {
                        "$ref": "Hl7V2Store"
                      },
                      "httpMethod": "PATCH",
                      "description": "Updates the HL7v2 store.",
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Resource name of the HL7v2 store, of the form\n`projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                          "format": "google-fieldmask",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Hl7V2Store"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/hl7V2Stores/{hl7V2StoresId}"
                    }
                  }
                }
              },
              "methods": {
                "setIamPolicy": {
                  "id": "healthcare.projects.locations.datasets.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "datasetId": {
                      "type": "string",
                      "location": "query",
                      "description": "The ID of the dataset that is being created.\nThe string must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the project where the server creates the dataset. For\nexample, `projects/{project_id}/locations/{location_id}`.",
                      "required": true
                    }
                  },
                  "path": "v1beta1/{+parent}/datasets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "healthcare.projects.locations.datasets.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Dataset"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "description": "Creates a new health dataset. Results are returned through the\nOperation interface which returns either an\n`Operation.response` which contains a Dataset or\n`Operation.error`. The metadata\nfield type is OperationMetadata.\nA Google Cloud Platform project can contain up to 500 datasets across all\nregions."
                },
                "testIamPermissions": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:testIamPermissions",
                  "id": "healthcare.projects.locations.datasets.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "deidentify": {
                  "parameterOrder": [
                    "sourceDataset"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "healthcare.projects.locations.datasets.deidentify",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:deidentify",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+sourceDataset}:deidentify",
                  "parameters": {
                    "sourceDataset": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Source dataset resource name. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`."
                    }
                  },
                  "description": "Creates a new dataset containing de-identified data from the source\ndataset. The metadata field type\nis OperationMetadata.\nIf the request is successful, the\nresponse field type is\nDeidentifySummary.\nIf errors occur,\nerror\ndetails field type is\nDeidentifyErrorDetails.\nThe LRO result may still be successful if de-identification fails for some\nDICOM instances. The new de-identified dataset will not contain these\nfailed resources. Failed resource totals are tracked in\nDeidentifySummary.failure_resource_count.\nError details are also logged to Cloud Logging. For more information,\nsee [Viewing logs](/healthcare/docs/how-tos/logging).",
                  "request": {
                    "$ref": "DeidentifyDatasetRequest"
                  },
                  "httpMethod": "POST"
                },
                "getIamPolicy": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    }
                  },
                  "id": "healthcare.projects.locations.datasets.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "path": "v1beta1/{+resource}:getIamPolicy"
                },
                "get": {
                  "response": {
                    "$ref": "Dataset"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "description": "The name of the dataset to read. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "id": "healthcare.projects.locations.datasets.get",
                  "description": "Gets any metadata associated with a dataset.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return. Capped to 100 if not specified.\nMay not be larger than 1000.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the project whose datasets should be listed.\nFor example, `projects/{project_id}/locations/{location_id}`."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "path": "v1beta1/{+parent}/datasets",
                  "description": "Lists the health datasets in the current project.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListDatasetsResponse"
                  },
                  "id": "healthcare.projects.locations.datasets.list"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates dataset metadata.",
                  "id": "healthcare.projects.locations.datasets.patch",
                  "response": {
                    "$ref": "Dataset"
                  },
                  "request": {
                    "$ref": "Dataset"
                  },
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Resource name of the dataset, of the form\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition,\nsee\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "location": "query"
                    }
                  }
                },
                "delete": {
                  "id": "healthcare.projects.locations.datasets.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes the specified health dataset and all data contained in the dataset.\nDeleting a dataset does not affect the sources from which the dataset was\nimported (if any).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the dataset to delete. For example,\n`projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1beta1/{+name}",
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}"
                }
              }
            }
          },
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "id": "healthcare.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              }
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "id": "healthcare.projects.locations.list",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta1/{+name}/locations",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard list page size.",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "revision": "20200605",
  "batchPath": "batch",
  "rootUrl": "https://healthcare.googleapis.com/",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "canonicalName": "Cloud Healthcare",
  "description": "Manage, store, and access healthcare data in Google Cloud Platform.",
  "documentationLink": "https://cloud.google.com/healthcare",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
