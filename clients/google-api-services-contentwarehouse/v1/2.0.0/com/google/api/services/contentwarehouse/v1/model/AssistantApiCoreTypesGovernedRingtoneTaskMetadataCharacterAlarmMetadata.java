/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata extends com.google.api.client.json.GenericJson {

  /**
   * For character alarm, the media resources are provided through AOG apps. During alarm trigger
   * phase, aog apps with the specified agent_ids are used to get the media resources. Multiple "AoG
   * agents" can satisfy a character_tag. So the user will select the agents they want at alarm
   * creation time. The chosen agents will be recorded so that the resources only from those agents
   * will be used at trigger time. The number of selected agent_ids will not exceed 3. See go
   * /character-alarm-aog.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> agentIds;

  /**
   * The Character Alarm tag. Tags are needed to identify the theme of the alarm. For example, if
   * the tag is 'astronaut', astronaut based audio is played during alarm ring. Note : We have made
   * it repeated so that the user can choose multiple character alarm themes at one go. At present,
   * the user is allowed to choose only one theme during alarm creation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> characterTags;

  /**
   * Icons urls corresponding to a character. Note : We have made it repeated so that we can show
   * different images when the alarm rings. At present, we only support only one image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> iconUrls;

  /**
   * For character alarm, the media resources are provided through AOG apps. During alarm trigger
   * phase, aog apps with the specified agent_ids are used to get the media resources. Multiple "AoG
   * agents" can satisfy a character_tag. So the user will select the agents they want at alarm
   * creation time. The chosen agents will be recorded so that the resources only from those agents
   * will be used at trigger time. The number of selected agent_ids will not exceed 3. See go
   * /character-alarm-aog.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAgentIds() {
    return agentIds;
  }

  /**
   * For character alarm, the media resources are provided through AOG apps. During alarm trigger
   * phase, aog apps with the specified agent_ids are used to get the media resources. Multiple "AoG
   * agents" can satisfy a character_tag. So the user will select the agents they want at alarm
   * creation time. The chosen agents will be recorded so that the resources only from those agents
   * will be used at trigger time. The number of selected agent_ids will not exceed 3. See go
   * /character-alarm-aog.
   * @param agentIds agentIds or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata setAgentIds(java.util.List<java.lang.String> agentIds) {
    this.agentIds = agentIds;
    return this;
  }

  /**
   * The Character Alarm tag. Tags are needed to identify the theme of the alarm. For example, if
   * the tag is 'astronaut', astronaut based audio is played during alarm ring. Note : We have made
   * it repeated so that the user can choose multiple character alarm themes at one go. At present,
   * the user is allowed to choose only one theme during alarm creation.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCharacterTags() {
    return characterTags;
  }

  /**
   * The Character Alarm tag. Tags are needed to identify the theme of the alarm. For example, if
   * the tag is 'astronaut', astronaut based audio is played during alarm ring. Note : We have made
   * it repeated so that the user can choose multiple character alarm themes at one go. At present,
   * the user is allowed to choose only one theme during alarm creation.
   * @param characterTags characterTags or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata setCharacterTags(java.util.List<java.lang.String> characterTags) {
    this.characterTags = characterTags;
    return this;
  }

  /**
   * Icons urls corresponding to a character. Note : We have made it repeated so that we can show
   * different images when the alarm rings. At present, we only support only one image.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIconUrls() {
    return iconUrls;
  }

  /**
   * Icons urls corresponding to a character. Note : We have made it repeated so that we can show
   * different images when the alarm rings. At present, we only support only one image.
   * @param iconUrls iconUrls or {@code null} for none
   */
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata setIconUrls(java.util.List<java.lang.String> iconUrls) {
    this.iconUrls = iconUrls;
    return this;
  }

  @Override
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata set(String fieldName, Object value) {
    return (AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata clone() {
    return (AssistantApiCoreTypesGovernedRingtoneTaskMetadataCharacterAlarmMetadata) super.clone();
  }

}
