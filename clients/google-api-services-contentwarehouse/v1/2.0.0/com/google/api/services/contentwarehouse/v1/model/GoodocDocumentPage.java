/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for GoodocDocumentPage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoodocDocumentPage extends com.google.api.client.json.GenericJson {

  /**
   * If the garbage text detector was run, the changelist that the binary was sync'ed to (or -1 if
   * unknown), and whether the settings had their production values (or false if unknown).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("GarbageDetectorChangeList")
  private java.lang.Integer garbageDetectorChangeList;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("GarbageDetectorWasProduction")
  private java.lang.Boolean garbageDetectorWasProduction;

  /**
   * Height in pixels
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Height")
  private java.lang.Integer height;

  /**
   * Horizontal resolution in DPI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("HorizontalDpi")
  private java.lang.Integer horizontalDpi;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Label")
  private GoodocLabel label;

  /**
   * Score of porn classifier from analyzing images on page. Note: This should be named porn_score,
   * but we use PornScore as the name in order to be consistent with the rest of this proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("PornScore")
  private java.lang.Double pornScore;

  /**
   * Page text recognition confidence. Range depends on the algorithm but should be consistent in a
   * given volume. 0 is bad, 100 is good.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("TextConfidence")
  private java.lang.Integer textConfidence;

  /**
   * Vertical resolution in DPI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("VerticalDpi")
  private java.lang.Integer verticalDpi;

  /**
   * Width in pixels
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Width")
  private java.lang.Integer width;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoodocDocumentPageBlock> block;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoodocDocumentPageMergedPageInfo> mergedpageinfo;

  /**
   * Whether page-level text confidences and other summary data were computed by PostOcrUtils
   * instead of the now-obsolete GarbageTextDetector
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean postOcrConfidence;

  /**
   * Page level stats (font size, line spacing, etc.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocSummaryStats stats;

  /**
   * If the garbage text detector was run, the changelist that the binary was sync'ed to (or -1 if
   * unknown), and whether the settings had their production values (or false if unknown).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getGarbageDetectorChangeList() {
    return garbageDetectorChangeList;
  }

  /**
   * If the garbage text detector was run, the changelist that the binary was sync'ed to (or -1 if
   * unknown), and whether the settings had their production values (or false if unknown).
   * @param garbageDetectorChangeList garbageDetectorChangeList or {@code null} for none
   */
  public GoodocDocumentPage setGarbageDetectorChangeList(java.lang.Integer garbageDetectorChangeList) {
    this.garbageDetectorChangeList = garbageDetectorChangeList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGarbageDetectorWasProduction() {
    return garbageDetectorWasProduction;
  }

  /**
   * @param garbageDetectorWasProduction garbageDetectorWasProduction or {@code null} for none
   */
  public GoodocDocumentPage setGarbageDetectorWasProduction(java.lang.Boolean garbageDetectorWasProduction) {
    this.garbageDetectorWasProduction = garbageDetectorWasProduction;
    return this;
  }

  /**
   * Height in pixels
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeight() {
    return height;
  }

  /**
   * Height in pixels
   * @param height height or {@code null} for none
   */
  public GoodocDocumentPage setHeight(java.lang.Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Horizontal resolution in DPI.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHorizontalDpi() {
    return horizontalDpi;
  }

  /**
   * Horizontal resolution in DPI.
   * @param horizontalDpi horizontalDpi or {@code null} for none
   */
  public GoodocDocumentPage setHorizontalDpi(java.lang.Integer horizontalDpi) {
    this.horizontalDpi = horizontalDpi;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GoodocLabel getLabel() {
    return label;
  }

  /**
   * @param label label or {@code null} for none
   */
  public GoodocDocumentPage setLabel(GoodocLabel label) {
    this.label = label;
    return this;
  }

  /**
   * Score of porn classifier from analyzing images on page. Note: This should be named porn_score,
   * but we use PornScore as the name in order to be consistent with the rest of this proto.
   * @return value or {@code null} for none
   */
  public java.lang.Double getPornScore() {
    return pornScore;
  }

  /**
   * Score of porn classifier from analyzing images on page. Note: This should be named porn_score,
   * but we use PornScore as the name in order to be consistent with the rest of this proto.
   * @param pornScore pornScore or {@code null} for none
   */
  public GoodocDocumentPage setPornScore(java.lang.Double pornScore) {
    this.pornScore = pornScore;
    return this;
  }

  /**
   * Page text recognition confidence. Range depends on the algorithm but should be consistent in a
   * given volume. 0 is bad, 100 is good.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTextConfidence() {
    return textConfidence;
  }

  /**
   * Page text recognition confidence. Range depends on the algorithm but should be consistent in a
   * given volume. 0 is bad, 100 is good.
   * @param textConfidence textConfidence or {@code null} for none
   */
  public GoodocDocumentPage setTextConfidence(java.lang.Integer textConfidence) {
    this.textConfidence = textConfidence;
    return this;
  }

  /**
   * Vertical resolution in DPI.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVerticalDpi() {
    return verticalDpi;
  }

  /**
   * Vertical resolution in DPI.
   * @param verticalDpi verticalDpi or {@code null} for none
   */
  public GoodocDocumentPage setVerticalDpi(java.lang.Integer verticalDpi) {
    this.verticalDpi = verticalDpi;
    return this;
  }

  /**
   * Width in pixels
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWidth() {
    return width;
  }

  /**
   * Width in pixels
   * @param width width or {@code null} for none
   */
  public GoodocDocumentPage setWidth(java.lang.Integer width) {
    this.width = width;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<GoodocDocumentPageBlock> getBlock() {
    return block;
  }

  /**
   * @param block block or {@code null} for none
   */
  public GoodocDocumentPage setBlock(java.util.List<GoodocDocumentPageBlock> block) {
    this.block = block;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<GoodocDocumentPageMergedPageInfo> getMergedpageinfo() {
    return mergedpageinfo;
  }

  /**
   * @param mergedpageinfo mergedpageinfo or {@code null} for none
   */
  public GoodocDocumentPage setMergedpageinfo(java.util.List<GoodocDocumentPageMergedPageInfo> mergedpageinfo) {
    this.mergedpageinfo = mergedpageinfo;
    return this;
  }

  /**
   * Whether page-level text confidences and other summary data were computed by PostOcrUtils
   * instead of the now-obsolete GarbageTextDetector
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPostOcrConfidence() {
    return postOcrConfidence;
  }

  /**
   * Whether page-level text confidences and other summary data were computed by PostOcrUtils
   * instead of the now-obsolete GarbageTextDetector
   * @param postOcrConfidence postOcrConfidence or {@code null} for none
   */
  public GoodocDocumentPage setPostOcrConfidence(java.lang.Boolean postOcrConfidence) {
    this.postOcrConfidence = postOcrConfidence;
    return this;
  }

  /**
   * Page level stats (font size, line spacing, etc.)
   * @return value or {@code null} for none
   */
  public GoodocSummaryStats getStats() {
    return stats;
  }

  /**
   * Page level stats (font size, line spacing, etc.)
   * @param stats stats or {@code null} for none
   */
  public GoodocDocumentPage setStats(GoodocSummaryStats stats) {
    this.stats = stats;
    return this;
  }

  @Override
  public GoodocDocumentPage set(String fieldName, Object value) {
    return (GoodocDocumentPage) super.set(fieldName, value);
  }

  @Override
  public GoodocDocumentPage clone() {
    return (GoodocDocumentPage) super.clone();
  }

}
