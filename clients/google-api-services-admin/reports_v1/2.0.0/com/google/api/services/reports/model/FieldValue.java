/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.reports.model;

/**
 * Details of the field value set by the user for the particular label.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FieldValue extends com.google.api.client.json.GenericJson {

  /**
   * Setting a date value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date dateValue;

  /**
   * Display name of the field
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Identifier of the field
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Setting an integer value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long integerValue;

  /**
   * Setting a long text value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String longTextValue;

  /**
   * The reason why the field was applied to the label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Reason reason;

  /**
   * Setting a selection list value by selecting multiple values from a dropdown.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FieldValueSelectionListValue selectionListValue;

  /**
   * Setting a selection value by selecting a single value from a dropdown.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FieldValueSelectionValue selectionValue;

  /**
   * Setting a text list value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FieldValueTextListValue textListValue;

  /**
   * Setting a text value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String textValue;

  /**
   * Type of the field
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * If the field is unset, this will be true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unsetValue;

  /**
   * Setting a user list value by selecting multiple users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FieldValueUserListValue userListValue;

  /**
   * Setting a user value by selecting a single user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FieldValueUserValue userValue;

  /**
   * Setting a date value.
   * @return value or {@code null} for none
   */
  public Date getDateValue() {
    return dateValue;
  }

  /**
   * Setting a date value.
   * @param dateValue dateValue or {@code null} for none
   */
  public FieldValue setDateValue(Date dateValue) {
    this.dateValue = dateValue;
    return this;
  }

  /**
   * Display name of the field
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display name of the field
   * @param displayName displayName or {@code null} for none
   */
  public FieldValue setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Identifier of the field
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Identifier of the field
   * @param id id or {@code null} for none
   */
  public FieldValue setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Setting an integer value.
   * @return value or {@code null} for none
   */
  public java.lang.Long getIntegerValue() {
    return integerValue;
  }

  /**
   * Setting an integer value.
   * @param integerValue integerValue or {@code null} for none
   */
  public FieldValue setIntegerValue(java.lang.Long integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * Setting a long text value.
   * @return value or {@code null} for none
   */
  public java.lang.String getLongTextValue() {
    return longTextValue;
  }

  /**
   * Setting a long text value.
   * @param longTextValue longTextValue or {@code null} for none
   */
  public FieldValue setLongTextValue(java.lang.String longTextValue) {
    this.longTextValue = longTextValue;
    return this;
  }

  /**
   * The reason why the field was applied to the label.
   * @return value or {@code null} for none
   */
  public Reason getReason() {
    return reason;
  }

  /**
   * The reason why the field was applied to the label.
   * @param reason reason or {@code null} for none
   */
  public FieldValue setReason(Reason reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Setting a selection list value by selecting multiple values from a dropdown.
   * @return value or {@code null} for none
   */
  public FieldValueSelectionListValue getSelectionListValue() {
    return selectionListValue;
  }

  /**
   * Setting a selection list value by selecting multiple values from a dropdown.
   * @param selectionListValue selectionListValue or {@code null} for none
   */
  public FieldValue setSelectionListValue(FieldValueSelectionListValue selectionListValue) {
    this.selectionListValue = selectionListValue;
    return this;
  }

  /**
   * Setting a selection value by selecting a single value from a dropdown.
   * @return value or {@code null} for none
   */
  public FieldValueSelectionValue getSelectionValue() {
    return selectionValue;
  }

  /**
   * Setting a selection value by selecting a single value from a dropdown.
   * @param selectionValue selectionValue or {@code null} for none
   */
  public FieldValue setSelectionValue(FieldValueSelectionValue selectionValue) {
    this.selectionValue = selectionValue;
    return this;
  }

  /**
   * Setting a text list value.
   * @return value or {@code null} for none
   */
  public FieldValueTextListValue getTextListValue() {
    return textListValue;
  }

  /**
   * Setting a text list value.
   * @param textListValue textListValue or {@code null} for none
   */
  public FieldValue setTextListValue(FieldValueTextListValue textListValue) {
    this.textListValue = textListValue;
    return this;
  }

  /**
   * Setting a text value.
   * @return value or {@code null} for none
   */
  public java.lang.String getTextValue() {
    return textValue;
  }

  /**
   * Setting a text value.
   * @param textValue textValue or {@code null} for none
   */
  public FieldValue setTextValue(java.lang.String textValue) {
    this.textValue = textValue;
    return this;
  }

  /**
   * Type of the field
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the field
   * @param type type or {@code null} for none
   */
  public FieldValue setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * If the field is unset, this will be true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnsetValue() {
    return unsetValue;
  }

  /**
   * If the field is unset, this will be true.
   * @param unsetValue unsetValue or {@code null} for none
   */
  public FieldValue setUnsetValue(java.lang.Boolean unsetValue) {
    this.unsetValue = unsetValue;
    return this;
  }

  /**
   * Setting a user list value by selecting multiple users.
   * @return value or {@code null} for none
   */
  public FieldValueUserListValue getUserListValue() {
    return userListValue;
  }

  /**
   * Setting a user list value by selecting multiple users.
   * @param userListValue userListValue or {@code null} for none
   */
  public FieldValue setUserListValue(FieldValueUserListValue userListValue) {
    this.userListValue = userListValue;
    return this;
  }

  /**
   * Setting a user value by selecting a single user.
   * @return value or {@code null} for none
   */
  public FieldValueUserValue getUserValue() {
    return userValue;
  }

  /**
   * Setting a user value by selecting a single user.
   * @param userValue userValue or {@code null} for none
   */
  public FieldValue setUserValue(FieldValueUserValue userValue) {
    this.userValue = userValue;
    return this;
  }

  @Override
  public FieldValue set(String fieldName, Object value) {
    return (FieldValue) super.set(fieldName, value);
  }

  @Override
  public FieldValue clone() {
    return (FieldValue) super.clone();
  }

}
