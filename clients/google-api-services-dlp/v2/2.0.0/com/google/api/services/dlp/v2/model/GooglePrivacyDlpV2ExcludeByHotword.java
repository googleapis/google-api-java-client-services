/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * The rule to exclude findings based on a hotword. For record inspection of tables, column names
 * are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery
 * column that matches a specific pattern.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2ExcludeByHotword extends com.google.api.client.json.GenericJson {

  /**
   * Regular expression pattern defining what qualifies as a hotword.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2Regex hotwordRegex;

  /**
   * Range of characters within which the entire hotword must reside. The total length of the window
   * cannot exceed 1000 characters. The windowBefore property in proximity should be set to 1 if the
   * hotword needs to be included in a column header.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2Proximity proximity;

  /**
   * Regular expression pattern defining what qualifies as a hotword.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2Regex getHotwordRegex() {
    return hotwordRegex;
  }

  /**
   * Regular expression pattern defining what qualifies as a hotword.
   * @param hotwordRegex hotwordRegex or {@code null} for none
   */
  public GooglePrivacyDlpV2ExcludeByHotword setHotwordRegex(GooglePrivacyDlpV2Regex hotwordRegex) {
    this.hotwordRegex = hotwordRegex;
    return this;
  }

  /**
   * Range of characters within which the entire hotword must reside. The total length of the window
   * cannot exceed 1000 characters. The windowBefore property in proximity should be set to 1 if the
   * hotword needs to be included in a column header.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2Proximity getProximity() {
    return proximity;
  }

  /**
   * Range of characters within which the entire hotword must reside. The total length of the window
   * cannot exceed 1000 characters. The windowBefore property in proximity should be set to 1 if the
   * hotword needs to be included in a column header.
   * @param proximity proximity or {@code null} for none
   */
  public GooglePrivacyDlpV2ExcludeByHotword setProximity(GooglePrivacyDlpV2Proximity proximity) {
    this.proximity = proximity;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2ExcludeByHotword set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2ExcludeByHotword) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2ExcludeByHotword clone() {
    return (GooglePrivacyDlpV2ExcludeByHotword) super.clone();
  }

}
