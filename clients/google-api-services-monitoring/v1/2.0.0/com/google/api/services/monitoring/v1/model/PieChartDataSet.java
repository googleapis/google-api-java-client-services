/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Groups a time series query definition.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PieChartDataSet extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The lower bound on data point frequency for this data set, implemented by specifying
   * the minimum alignment period to use in a time series query. For example, if the data is
   * published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It
   * would not make sense to fetch and align data at one minute intervals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String minAlignmentPeriod;

  /**
   * Optional. A template for the name of the slice. This name will be displayed in the legend and
   * the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example,
   * if the template is set to ${resource.labels.zone}, the zone's value will be used for the name
   * instead of the default name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sliceNameTemplate;

  /**
   * Required. The query for the PieChart. See, google.monitoring.dashboard.v1.TimeSeriesQuery.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeSeriesQuery timeSeriesQuery;

  /**
   * Optional. The lower bound on data point frequency for this data set, implemented by specifying
   * the minimum alignment period to use in a time series query. For example, if the data is
   * published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It
   * would not make sense to fetch and align data at one minute intervals.
   * @return value or {@code null} for none
   */
  public String getMinAlignmentPeriod() {
    return minAlignmentPeriod;
  }

  /**
   * Optional. The lower bound on data point frequency for this data set, implemented by specifying
   * the minimum alignment period to use in a time series query. For example, if the data is
   * published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It
   * would not make sense to fetch and align data at one minute intervals.
   * @param minAlignmentPeriod minAlignmentPeriod or {@code null} for none
   */
  public PieChartDataSet setMinAlignmentPeriod(String minAlignmentPeriod) {
    this.minAlignmentPeriod = minAlignmentPeriod;
    return this;
  }

  /**
   * Optional. A template for the name of the slice. This name will be displayed in the legend and
   * the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example,
   * if the template is set to ${resource.labels.zone}, the zone's value will be used for the name
   * instead of the default name.
   * @return value or {@code null} for none
   */
  public java.lang.String getSliceNameTemplate() {
    return sliceNameTemplate;
  }

  /**
   * Optional. A template for the name of the slice. This name will be displayed in the legend and
   * the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example,
   * if the template is set to ${resource.labels.zone}, the zone's value will be used for the name
   * instead of the default name.
   * @param sliceNameTemplate sliceNameTemplate or {@code null} for none
   */
  public PieChartDataSet setSliceNameTemplate(java.lang.String sliceNameTemplate) {
    this.sliceNameTemplate = sliceNameTemplate;
    return this;
  }

  /**
   * Required. The query for the PieChart. See, google.monitoring.dashboard.v1.TimeSeriesQuery.
   * @return value or {@code null} for none
   */
  public TimeSeriesQuery getTimeSeriesQuery() {
    return timeSeriesQuery;
  }

  /**
   * Required. The query for the PieChart. See, google.monitoring.dashboard.v1.TimeSeriesQuery.
   * @param timeSeriesQuery timeSeriesQuery or {@code null} for none
   */
  public PieChartDataSet setTimeSeriesQuery(TimeSeriesQuery timeSeriesQuery) {
    this.timeSeriesQuery = timeSeriesQuery;
    return this;
  }

  @Override
  public PieChartDataSet set(String fieldName, Object value) {
    return (PieChartDataSet) super.set(fieldName, value);
  }

  @Override
  public PieChartDataSet clone() {
    return (PieChartDataSet) super.clone();
  }

}
