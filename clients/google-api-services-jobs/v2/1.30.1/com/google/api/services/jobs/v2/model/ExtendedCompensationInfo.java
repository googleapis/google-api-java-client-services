/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.jobs.v2.model;

/**
 * Deprecated. Use CompensationInfo.
 *
 * Describes job compensation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Talent Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExtendedCompensationInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Annualized base compensation range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExtendedCompensationInfoCompensationRange annualizedBaseCompensationRange;

  /**
   * Output only. Indicates annualized base compensation range cannot be derived, due to the job's
   * base compensation entry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean annualizedBaseCompensationUnspecified;

  /**
   * Output only. Annualized total compensation range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExtendedCompensationInfoCompensationRange annualizedTotalCompensationRange;

  /**
   * Output only. Indicates annualized total compensation range cannot be derived, due to the job's
   * all CompensationEntry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean annualizedTotalCompensationUnspecified;

  /**
   * Optional. A 3-letter [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency
   * code.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currency;

  /**
   * Optional. Job compensation information.
   *
   * At most one entry can be of type ExtendedCompensationInfo.CompensationType.BASE, which is
   * referred as ** base compensation entry ** for the job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ExtendedCompensationInfoCompensationEntry> entries;

  /**
   * Output only. Annualized base compensation range.
   * @return value or {@code null} for none
   */
  public ExtendedCompensationInfoCompensationRange getAnnualizedBaseCompensationRange() {
    return annualizedBaseCompensationRange;
  }

  /**
   * Output only. Annualized base compensation range.
   * @param annualizedBaseCompensationRange annualizedBaseCompensationRange or {@code null} for none
   */
  public ExtendedCompensationInfo setAnnualizedBaseCompensationRange(ExtendedCompensationInfoCompensationRange annualizedBaseCompensationRange) {
    this.annualizedBaseCompensationRange = annualizedBaseCompensationRange;
    return this;
  }

  /**
   * Output only. Indicates annualized base compensation range cannot be derived, due to the job's
   * base compensation entry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAnnualizedBaseCompensationUnspecified() {
    return annualizedBaseCompensationUnspecified;
  }

  /**
   * Output only. Indicates annualized base compensation range cannot be derived, due to the job's
   * base compensation entry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * @param annualizedBaseCompensationUnspecified annualizedBaseCompensationUnspecified or {@code null} for none
   */
  public ExtendedCompensationInfo setAnnualizedBaseCompensationUnspecified(java.lang.Boolean annualizedBaseCompensationUnspecified) {
    this.annualizedBaseCompensationUnspecified = annualizedBaseCompensationUnspecified;
    return this;
  }

  /**
   * Output only. Annualized total compensation range.
   * @return value or {@code null} for none
   */
  public ExtendedCompensationInfoCompensationRange getAnnualizedTotalCompensationRange() {
    return annualizedTotalCompensationRange;
  }

  /**
   * Output only. Annualized total compensation range.
   * @param annualizedTotalCompensationRange annualizedTotalCompensationRange or {@code null} for none
   */
  public ExtendedCompensationInfo setAnnualizedTotalCompensationRange(ExtendedCompensationInfoCompensationRange annualizedTotalCompensationRange) {
    this.annualizedTotalCompensationRange = annualizedTotalCompensationRange;
    return this;
  }

  /**
   * Output only. Indicates annualized total compensation range cannot be derived, due to the job's
   * all CompensationEntry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAnnualizedTotalCompensationUnspecified() {
    return annualizedTotalCompensationUnspecified;
  }

  /**
   * Output only. Indicates annualized total compensation range cannot be derived, due to the job's
   * all CompensationEntry cannot be annualized. See CompensationEntry for explanation on
   * annualization and base compensation entry.
   * @param annualizedTotalCompensationUnspecified annualizedTotalCompensationUnspecified or {@code null} for none
   */
  public ExtendedCompensationInfo setAnnualizedTotalCompensationUnspecified(java.lang.Boolean annualizedTotalCompensationUnspecified) {
    this.annualizedTotalCompensationUnspecified = annualizedTotalCompensationUnspecified;
    return this;
  }

  /**
   * Optional. A 3-letter [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency
   * code.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrency() {
    return currency;
  }

  /**
   * Optional. A 3-letter [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency
   * code.
   * @param currency currency or {@code null} for none
   */
  public ExtendedCompensationInfo setCurrency(java.lang.String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Optional. Job compensation information.
   *
   * At most one entry can be of type ExtendedCompensationInfo.CompensationType.BASE, which is
   * referred as ** base compensation entry ** for the job.
   * @return value or {@code null} for none
   */
  public java.util.List<ExtendedCompensationInfoCompensationEntry> getEntries() {
    return entries;
  }

  /**
   * Optional. Job compensation information.
   *
   * At most one entry can be of type ExtendedCompensationInfo.CompensationType.BASE, which is
   * referred as ** base compensation entry ** for the job.
   * @param entries entries or {@code null} for none
   */
  public ExtendedCompensationInfo setEntries(java.util.List<ExtendedCompensationInfoCompensationEntry> entries) {
    this.entries = entries;
    return this;
  }

  @Override
  public ExtendedCompensationInfo set(String fieldName, Object value) {
    return (ExtendedCompensationInfo) super.set(fieldName, value);
  }

  @Override
  public ExtendedCompensationInfo clone() {
    return (ExtendedCompensationInfo) super.clone();
  }

}
