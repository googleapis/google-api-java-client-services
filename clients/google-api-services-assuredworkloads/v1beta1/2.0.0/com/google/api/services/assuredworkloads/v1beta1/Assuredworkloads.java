/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.assuredworkloads.v1beta1;

/**
 * Service definition for Assuredworkloads (v1beta1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/learnmoreurl" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AssuredworkloadsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Assuredworkloads extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Assured Workloads API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://assuredworkloads.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://assuredworkloads.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Assuredworkloads(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Assuredworkloads(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
   *   {@code Assuredworkloads.Organizations.List request = assuredworkloads.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
     *   {@code Assuredworkloads.Locations.List request = assuredworkloads.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
       *   {@code Assuredworkloads.Operations.List request = assuredworkloads.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
         * the binding to use different resource name schemes, such as `users/operations`. To override the
         * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1beta1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
           * override the binding to use different resource name schemes, such as `users/operations`. To
           * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
           * their service configuration. For backwards compatibility, the default name includes the
           * operations collection id, however overriding users must ensure the name binding is the parent
           * resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Workloads collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
       *   {@code Assuredworkloads.Workloads.List request = assuredworkloads.workloads().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Workloads workloads() {
        return new Workloads();
      }

      /**
       * The "workloads" collection of methods.
       */
      public class Workloads {

        /**
         * Creates Assured Workload.
         *
         * Create a request for the method "workloads.create".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the new Workload's parent. Must be of the form
         *        `organizations/{org_id}/locations/{location_id}`.
         * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1beta1/{+parent}/workloads";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+$");

          /**
           * Creates Assured Workload.
           *
           * Create a request for the method "workloads.create".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the new Workload's parent. Must be of the form
         *        `organizations/{org_id}/locations/{location_id}`.
           * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload content) {
            super(Assuredworkloads.this, "POST", REST_PATH, content, com.google.api.services.assuredworkloads.v1beta1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the new Workload's parent. Must be of the form
           * `organizations/{org_id}/locations/{location_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the new Workload's parent. Must be of the form
         `organizations/{org_id}/locations/{location_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the new Workload's parent. Must be of the form
           * `organizations/{org_id}/locations/{location_id}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A identifier associated with the workload and underlying projects which
           * allows for the break down of billing costs for a workload. The value provided for the
           * identifier will add a label to the workload and contained projects with the identifier
           * as the value.
           */
          @com.google.api.client.util.Key
          private java.lang.String externalId;

          /** Optional. A identifier associated with the workload and underlying projects which allows for the
         break down of billing costs for a workload. The value provided for the identifier will add a label
         to the workload and contained projects with the identifier as the value.
           */
          public java.lang.String getExternalId() {
            return externalId;
          }

          /**
           * Optional. A identifier associated with the workload and underlying projects which
           * allows for the break down of billing costs for a workload. The value provided for the
           * identifier will add a label to the workload and contained projects with the identifier
           * as the value.
           */
          public Create setExternalId(java.lang.String externalId) {
            this.externalId = externalId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the workload. Make sure that workload's direct children are already in a deleted state,
         * otherwise the request will fail with a FAILED_PRECONDITION error. In addition to
         * assuredworkloads.workload.delete permission, the user should also have orgpolicy.policy.set
         * permission on the deleted folder to remove Assured Workloads OrgPolicies.
         *
         * Create a request for the method "workloads.delete".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The `name` field is used to identify the workload. Format:
         *        organizations/{org_id}/locations/{location_id}/workloads/{workload_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

          /**
           * Deletes the workload. Make sure that workload's direct children are already in a deleted state,
           * otherwise the request will fail with a FAILED_PRECONDITION error. In addition to
           * assuredworkloads.workload.delete permission, the user should also have orgpolicy.policy.set
           * permission on the deleted folder to remove Assured Workloads OrgPolicies.
           *
           * Create a request for the method "workloads.delete".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The `name` field is used to identify the workload. Format:
         *        organizations/{org_id}/locations/{location_id}/workloads/{workload_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Assuredworkloads.this, "DELETE", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The `name` field is used to identify the workload. Format:
           * organizations/{org_id}/locations/{location_id}/workloads/{workload_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The `name` field is used to identify the workload. Format:
         organizations/{org_id}/locations/{location_id}/workloads/{workload_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The `name` field is used to identify the workload. Format:
           * organizations/{org_id}/locations/{location_id}/workloads/{workload_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. The etag of the workload. If this is provided, it must match the server's
           * etag.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** Optional. The etag of the workload. If this is provided, it must match the server's etag.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * Optional. The etag of the workload. If this is provided, it must match the server's
           * etag.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets Assured Workload associated with a CRM Node
         *
         * Create a request for the method "workloads.get".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the Workload to fetch. This is the workloads's relative path in the
         *        API, formatted as
         *        "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
         *        example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

          /**
           * Gets Assured Workload associated with a CRM Node
           *
           * Create a request for the method "workloads.get".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the Workload to fetch. This is the workloads's relative path in the
         *        API, formatted as
         *        "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
         *        example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Workload to fetch. This is the workloads's relative
           * path in the API, formatted as
           * "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
           * example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the Workload to fetch. This is the workloads's relative path in the
         API, formatted as
         "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For example,
         "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the Workload to fetch. This is the workloads's relative
           * path in the API, formatted as
           * "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
           * example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists Assured Workloads under a CRM Node.
         *
         * Create a request for the method "workloads.list".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent Resource to list workloads from. Must be of the form
         *        `organizations/{org_id}/locations/{location}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1ListWorkloadsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/workloads";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+$");

          /**
           * Lists Assured Workloads under a CRM Node.
           *
           * Create a request for the method "workloads.list".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent Resource to list workloads from. Must be of the form
         *        `organizations/{org_id}/locations/{location}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1ListWorkloadsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Parent Resource to list workloads from. Must be of the form
           * `organizations/{org_id}/locations/{location}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent Resource to list workloads from. Must be of the form
         `organizations/{org_id}/locations/{location}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Parent Resource to list workloads from. Must be of the form
           * `organizations/{org_id}/locations/{location}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A custom filter for filtering by properties of a workload. At this time, only filtering
           * by labels is supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A custom filter for filtering by properties of a workload. At this time, only filtering by labels
         is supported.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * A custom filter for filtering by properties of a workload. At this time, only filtering
           * by labels is supported.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Page token returned from previous request. Page token contains context from previous
           * request. Page token needs to be passed in the second and following requests.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token returned from previous request. Page token contains context from previous request. Page
         token needs to be passed in the second and following requests.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Page token returned from previous request. Page token contains context from previous
           * request. Page token needs to be passed in the second and following requests.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing workload. Currently allows updating of workload display_name and labels. For
         * force updates don't set etag field in the Workload. Only one update operation per workload can be
         * in progress.
         *
         * Create a request for the method "workloads.patch".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Optional. The resource name of the workload. Format:
         *        organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
         * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

          /**
           * Updates an existing workload. Currently allows updating of workload display_name and labels.
           * For force updates don't set etag field in the Workload. Only one update operation per workload
           * can be in progress.
           *
           * Create a request for the method "workloads.patch".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Optional. The resource name of the workload. Format:
         *        organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
           * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload content) {
            super(Assuredworkloads.this, "PATCH", REST_PATH, content, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Workload.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Optional. The resource name of the workload. Format:
           * organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The resource name of the workload. Format:
         organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The resource name of the workload. Format:
           * organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Restrict the list of resources allowed in the Workload environment. The current list of allowed
         * products can be found at https://cloud.google.com/assured-workloads/docs/supported-products In
         * addition to assuredworkloads.workload.update permission, the user should also have
         * orgpolicy.policy.set permission on the folder resource to use this functionality.
         *
         * Create a request for the method "workloads.restrictAllowedResources".
         *
         * This request holds the parameters needed by the assuredworkloads server.  After setting any
         * optional parameters, call the {@link RestrictAllowedResources#execute()} method to invoke the
         * remote operation.
         *
         * @param name Required. The resource name of the Workload. This is the workloads's relative path in the API,
         *        formatted as
         *        "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
         *        example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
         * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesRequest}
         * @return the request
         */
        public RestrictAllowedResources restrictAllowedResources(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesRequest content) throws java.io.IOException {
          RestrictAllowedResources result = new RestrictAllowedResources(name, content);
          initialize(result);
          return result;
        }

        public class RestrictAllowedResources extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesResponse> {

          private static final String REST_PATH = "v1beta1/{+name}:restrictAllowedResources";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

          /**
           * Restrict the list of resources allowed in the Workload environment. The current list of allowed
           * products can be found at https://cloud.google.com/assured-workloads/docs/supported-products In
           * addition to assuredworkloads.workload.update permission, the user should also have
           * orgpolicy.policy.set permission on the folder resource to use this functionality.
           *
           * Create a request for the method "workloads.restrictAllowedResources".
           *
           * This request holds the parameters needed by the the assuredworkloads server.  After setting any
           * optional parameters, call the {@link RestrictAllowedResources#execute()} method to invoke the
           * remote operation. <p> {@link RestrictAllowedResources#initialize(com.google.api.client.googleap
           * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the Workload. This is the workloads's relative path in the API,
         *        formatted as
         *        "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
         *        example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesRequest}
           * @since 1.13
           */
          protected RestrictAllowedResources(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesRequest content) {
            super(Assuredworkloads.this, "POST", REST_PATH, content, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1RestrictAllowedResourcesResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
          }

          @Override
          public RestrictAllowedResources set$Xgafv(java.lang.String $Xgafv) {
            return (RestrictAllowedResources) super.set$Xgafv($Xgafv);
          }

          @Override
          public RestrictAllowedResources setAccessToken(java.lang.String accessToken) {
            return (RestrictAllowedResources) super.setAccessToken(accessToken);
          }

          @Override
          public RestrictAllowedResources setAlt(java.lang.String alt) {
            return (RestrictAllowedResources) super.setAlt(alt);
          }

          @Override
          public RestrictAllowedResources setCallback(java.lang.String callback) {
            return (RestrictAllowedResources) super.setCallback(callback);
          }

          @Override
          public RestrictAllowedResources setFields(java.lang.String fields) {
            return (RestrictAllowedResources) super.setFields(fields);
          }

          @Override
          public RestrictAllowedResources setKey(java.lang.String key) {
            return (RestrictAllowedResources) super.setKey(key);
          }

          @Override
          public RestrictAllowedResources setOauthToken(java.lang.String oauthToken) {
            return (RestrictAllowedResources) super.setOauthToken(oauthToken);
          }

          @Override
          public RestrictAllowedResources setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (RestrictAllowedResources) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public RestrictAllowedResources setQuotaUser(java.lang.String quotaUser) {
            return (RestrictAllowedResources) super.setQuotaUser(quotaUser);
          }

          @Override
          public RestrictAllowedResources setUploadType(java.lang.String uploadType) {
            return (RestrictAllowedResources) super.setUploadType(uploadType);
          }

          @Override
          public RestrictAllowedResources setUploadProtocol(java.lang.String uploadProtocol) {
            return (RestrictAllowedResources) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the Workload. This is the workloads's relative path in
           * the API, formatted as
           * "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
           * example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the Workload. This is the workloads's relative path in the API,
         formatted as "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
         example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the Workload. This is the workloads's relative path in
           * the API, formatted as
           * "organizations/{organization_id}/locations/{location_id}/workloads/{workload_id}". For
           * example, "organizations/123/locations/us-east1/workloads/assured-workload-1".
           */
          public RestrictAllowedResources setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public RestrictAllowedResources set(String parameterName, Object value) {
            return (RestrictAllowedResources) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Organizations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
         *   {@code Assuredworkloads.Organizations.List request = assuredworkloads.organizations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Organizations organizations() {
          return new Organizations();
        }

        /**
         * The "organizations" collection of methods.
         */
        public class Organizations {

          /**
           * An accessor for creating requests from the Locations collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
           *   {@code Assuredworkloads.Locations.List request = assuredworkloads.locations().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Locations locations() {
            return new Locations();
          }

          /**
           * The "locations" collection of methods.
           */
          public class Locations {

            /**
             * An accessor for creating requests from the Workloads collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
             *   {@code Assuredworkloads.Workloads.List request = assuredworkloads.workloads().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Workloads workloads() {
              return new Workloads();
            }

            /**
             * The "workloads" collection of methods.
             */
            public class Workloads {

              /**
               * Analyzes a hypothetical move of a source project or project-based workload to a target
               * (destination) folder-based workload.
               *
               * Create a request for the method "workloads.analyzeWorkloadMove".
               *
               * This request holds the parameters needed by the assuredworkloads server.  After setting any
               * optional parameters, call the {@link AnalyzeWorkloadMove#execute()} method to invoke the remote
               * operation.
               *
               * @param source The source type is a project-based workload. Specify the workloads's relative resource name,
               *        formatted as:
               *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               *        example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
               * @param target Required. The resource ID of the folder-based destination workload. This workload is where the
               *        source project will hypothetically be moved to. Specify the workload's relative resource
               *        name, formatted as:
               *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               *        example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
               * @return the request
               */
              public AnalyzeWorkloadMove analyzeWorkloadMove(java.lang.String source, java.lang.String target) throws java.io.IOException {
                AnalyzeWorkloadMove result = new AnalyzeWorkloadMove(source, target);
                initialize(result);
                return result;
              }

              public class AnalyzeWorkloadMove extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AnalyzeWorkloadMoveResponse> {

                private static final String REST_PATH = "v1beta1/{+source}/{+target}:analyzeWorkloadMove";

                private final java.util.regex.Pattern SOURCE_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

                private final java.util.regex.Pattern TARGET_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

                /**
                 * Analyzes a hypothetical move of a source project or project-based workload to a target
                 * (destination) folder-based workload.
                 *
                 * Create a request for the method "workloads.analyzeWorkloadMove".
                 *
                 * This request holds the parameters needed by the the assuredworkloads server.  After setting any
                 * optional parameters, call the {@link AnalyzeWorkloadMove#execute()} method to invoke the remote
                 * operation. <p> {@link AnalyzeWorkloadMove#initialize(com.google.api.client.googleapis.services.
                 * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
                 * invoking the constructor. </p>
                 *
                 * @param source The source type is a project-based workload. Specify the workloads's relative resource name,
               *        formatted as:
               *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               *        example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
                 * @param target Required. The resource ID of the folder-based destination workload. This workload is where the
               *        source project will hypothetically be moved to. Specify the workload's relative resource
               *        name, formatted as:
               *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               *        example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
                 * @since 1.13
                 */
                protected AnalyzeWorkloadMove(java.lang.String source, java.lang.String target) {
                  super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AnalyzeWorkloadMoveResponse.class);
                  this.source = com.google.api.client.util.Preconditions.checkNotNull(source, "Required parameter source must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(SOURCE_PATTERN.matcher(source).matches(),
                        "Parameter source must conform to the pattern " +
                        "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
                  }
                  this.target = com.google.api.client.util.Preconditions.checkNotNull(target, "Required parameter target must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TARGET_PATTERN.matcher(target).matches(),
                        "Parameter target must conform to the pattern " +
                        "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public AnalyzeWorkloadMove set$Xgafv(java.lang.String $Xgafv) {
                  return (AnalyzeWorkloadMove) super.set$Xgafv($Xgafv);
                }

                @Override
                public AnalyzeWorkloadMove setAccessToken(java.lang.String accessToken) {
                  return (AnalyzeWorkloadMove) super.setAccessToken(accessToken);
                }

                @Override
                public AnalyzeWorkloadMove setAlt(java.lang.String alt) {
                  return (AnalyzeWorkloadMove) super.setAlt(alt);
                }

                @Override
                public AnalyzeWorkloadMove setCallback(java.lang.String callback) {
                  return (AnalyzeWorkloadMove) super.setCallback(callback);
                }

                @Override
                public AnalyzeWorkloadMove setFields(java.lang.String fields) {
                  return (AnalyzeWorkloadMove) super.setFields(fields);
                }

                @Override
                public AnalyzeWorkloadMove setKey(java.lang.String key) {
                  return (AnalyzeWorkloadMove) super.setKey(key);
                }

                @Override
                public AnalyzeWorkloadMove setOauthToken(java.lang.String oauthToken) {
                  return (AnalyzeWorkloadMove) super.setOauthToken(oauthToken);
                }

                @Override
                public AnalyzeWorkloadMove setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (AnalyzeWorkloadMove) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public AnalyzeWorkloadMove setQuotaUser(java.lang.String quotaUser) {
                  return (AnalyzeWorkloadMove) super.setQuotaUser(quotaUser);
                }

                @Override
                public AnalyzeWorkloadMove setUploadType(java.lang.String uploadType) {
                  return (AnalyzeWorkloadMove) super.setUploadType(uploadType);
                }

                @Override
                public AnalyzeWorkloadMove setUploadProtocol(java.lang.String uploadProtocol) {
                  return (AnalyzeWorkloadMove) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * The source type is a project-based workload. Specify the workloads's relative
                 * resource name, formatted as:
                 * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}"
                 * For example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
                 */
                @com.google.api.client.util.Key
                private java.lang.String source;

                /** The source type is a project-based workload. Specify the workloads's relative resource name,
               formatted as: "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
                 */
                public java.lang.String getSource() {
                  return source;
                }

                /**
                 * The source type is a project-based workload. Specify the workloads's relative
                 * resource name, formatted as:
                 * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}"
                 * For example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
                 */
                public AnalyzeWorkloadMove setSource(java.lang.String source) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(SOURCE_PATTERN.matcher(source).matches(),
                        "Parameter source must conform to the pattern " +
                        "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
                  }
                  this.source = source;
                  return this;
                }

                /**
                 * Required. The resource ID of the folder-based destination workload. This workload
                 * is where the source project will hypothetically be moved to. Specify the
                 * workload's relative resource name, formatted as:
                 * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}"
                 * For example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
                 */
                @com.google.api.client.util.Key
                private java.lang.String target;

                /** Required. The resource ID of the folder-based destination workload. This workload is where the
               source project will hypothetically be moved to. Specify the workload's relative resource name,
               formatted as: "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
               example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
                 */
                public java.lang.String getTarget() {
                  return target;
                }

                /**
                 * Required. The resource ID of the folder-based destination workload. This workload
                 * is where the source project will hypothetically be moved to. Specify the
                 * workload's relative resource name, formatted as:
                 * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}"
                 * For example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
                 */
                public AnalyzeWorkloadMove setTarget(java.lang.String target) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(TARGET_PATTERN.matcher(target).matches(),
                        "Parameter target must conform to the pattern " +
                        "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
                  }
                  this.target = target;
                  return this;
                }

                /**
                 * The source type is a project. Specify the project's relative resource name,
                 * formatted as either a project number or a project ID: "projects/{PROJECT_NUMBER}"
                 * or "projects/{PROJECT_ID}" For example: "projects/951040570662" when specifying a
                 * project number, or "projects/my-project-123" when specifying a project ID.
                 */
                @com.google.api.client.util.Key
                private java.lang.String project;

                /** The source type is a project. Specify the project's relative resource name, formatted as either a
               project number or a project ID: "projects/{PROJECT_NUMBER}" or "projects/{PROJECT_ID}" For example:
               "projects/951040570662" when specifying a project number, or "projects/my-project-123" when
               specifying a project ID.
                 */
                public java.lang.String getProject() {
                  return project;
                }

                /**
                 * The source type is a project. Specify the project's relative resource name,
                 * formatted as either a project number or a project ID: "projects/{PROJECT_NUMBER}"
                 * or "projects/{PROJECT_ID}" For example: "projects/951040570662" when specifying a
                 * project number, or "projects/my-project-123" when specifying a project ID.
                 */
                public AnalyzeWorkloadMove setProject(java.lang.String project) {
                  this.project = project;
                  return this;
                }

                @Override
                public AnalyzeWorkloadMove set(String parameterName, Object value) {
                  return (AnalyzeWorkloadMove) super.set(parameterName, value);
                }
              }

            }
          }
        }
        /**
         * An accessor for creating requests from the Violations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
         *   {@code Assuredworkloads.Violations.List request = assuredworkloads.violations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Violations violations() {
          return new Violations();
        }

        /**
         * The "violations" collection of methods.
         */
        public class Violations {

          /**
           * Acknowledges an existing violation. By acknowledging a violation, users acknowledge the existence
           * of a compliance violation in their workload and decide to ignore it due to a valid business
           * justification. Acknowledgement is a permanent operation and it cannot be reverted.
           *
           * Create a request for the method "violations.acknowledge".
           *
           * This request holds the parameters needed by the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Acknowledge#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The resource name of the Violation to acknowledge. Format:
           *        organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violati
           *        on}
           * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationRequest}
           * @return the request
           */
          public Acknowledge acknowledge(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationRequest content) throws java.io.IOException {
            Acknowledge result = new Acknowledge(name, content);
            initialize(result);
            return result;
          }

          public class Acknowledge extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationResponse> {

            private static final String REST_PATH = "v1beta1/{+name}:acknowledge";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");

            /**
             * Acknowledges an existing violation. By acknowledging a violation, users acknowledge the
             * existence of a compliance violation in their workload and decide to ignore it due to a valid
             * business justification. Acknowledgement is a permanent operation and it cannot be reverted.
             *
             * Create a request for the method "violations.acknowledge".
             *
             * This request holds the parameters needed by the the assuredworkloads server.  After setting any
             * optional parameters, call the {@link Acknowledge#execute()} method to invoke the remote
             * operation. <p> {@link
             * Acknowledge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Violation to acknowledge. Format:
           *        organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violati
           *        on}
             * @param content the {@link com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationRequest}
             * @since 1.13
             */
            protected Acknowledge(java.lang.String name, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationRequest content) {
              super(Assuredworkloads.this, "POST", REST_PATH, content, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AcknowledgeViolationResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");
              }
            }

            @Override
            public Acknowledge set$Xgafv(java.lang.String $Xgafv) {
              return (Acknowledge) super.set$Xgafv($Xgafv);
            }

            @Override
            public Acknowledge setAccessToken(java.lang.String accessToken) {
              return (Acknowledge) super.setAccessToken(accessToken);
            }

            @Override
            public Acknowledge setAlt(java.lang.String alt) {
              return (Acknowledge) super.setAlt(alt);
            }

            @Override
            public Acknowledge setCallback(java.lang.String callback) {
              return (Acknowledge) super.setCallback(callback);
            }

            @Override
            public Acknowledge setFields(java.lang.String fields) {
              return (Acknowledge) super.setFields(fields);
            }

            @Override
            public Acknowledge setKey(java.lang.String key) {
              return (Acknowledge) super.setKey(key);
            }

            @Override
            public Acknowledge setOauthToken(java.lang.String oauthToken) {
              return (Acknowledge) super.setOauthToken(oauthToken);
            }

            @Override
            public Acknowledge setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Acknowledge) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Acknowledge setQuotaUser(java.lang.String quotaUser) {
              return (Acknowledge) super.setQuotaUser(quotaUser);
            }

            @Override
            public Acknowledge setUploadType(java.lang.String uploadType) {
              return (Acknowledge) super.setUploadType(uploadType);
            }

            @Override
            public Acknowledge setUploadProtocol(java.lang.String uploadProtocol) {
              return (Acknowledge) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Violation to acknowledge. Format: organizations/{o
             * rganization}/locations/{location}/workloads/{workload}/violations/{violation}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Violation to acknowledge. Format:
           organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violation}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Violation to acknowledge. Format: organizations/{o
             * rganization}/locations/{location}/workloads/{workload}/violations/{violation}
             */
            public Acknowledge setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Acknowledge set(String parameterName, Object value) {
              return (Acknowledge) super.set(parameterName, value);
            }
          }
          /**
           * Retrieves Assured Workload Violation based on ID.
           *
           * Create a request for the method "violations.get".
           *
           * This request holds the parameters needed by the assuredworkloads server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Violation to fetch (ie. Violation.name). Format:
           *        organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violati
           *        on}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Violation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");

            /**
             * Retrieves Assured Workload Violation based on ID.
             *
             * Create a request for the method "violations.get".
             *
             * This request holds the parameters needed by the the assuredworkloads server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Violation to fetch (ie. Violation.name). Format:
           *        organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violati
           *        on}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1Violation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Violation to fetch (ie. Violation.name). Format: o
             * rganizations/{organization}/locations/{location}/workloads/{workload}/violations/{vio
             * lation}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Violation to fetch (ie. Violation.name). Format:
           organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violation}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Violation to fetch (ie. Violation.name). Format: o
             * rganizations/{organization}/locations/{location}/workloads/{workload}/violations/{vio
             * lation}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+/violations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists the Violations in the AssuredWorkload Environment. Callers may also choose to read across
           * multiple Workloads as per [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
           * character) as a wildcard character instead of workload-id in the parent. Format
           * `organizations/{org_id}/locations/{location}/workloads/-`
           *
           * Create a request for the method "violations.list".
           *
           * This request holds the parameters needed by the assuredworkloads server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The Workload name. Format
           *        `organizations/{org_id}/locations/{location}/workloads/{workload}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1ListViolationsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/violations";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

            /**
             * Lists the Violations in the AssuredWorkload Environment. Callers may also choose to read across
             * multiple Workloads as per [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or
             * dash character) as a wildcard character instead of workload-id in the parent. Format
             * `organizations/{org_id}/locations/{location}/workloads/-`
             *
             * Create a request for the method "violations.list".
             *
             * This request holds the parameters needed by the the assuredworkloads server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The Workload name. Format
           *        `organizations/{org_id}/locations/{location}/workloads/{workload}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1ListViolationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The Workload name. Format
             * `organizations/{org_id}/locations/{location}/workloads/{workload}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The Workload name. Format
           `organizations/{org_id}/locations/{location}/workloads/{workload}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The Workload name. Format
             * `organizations/{org_id}/locations/{location}/workloads/{workload}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Optional. A custom filter for filtering by the Violations properties. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. A custom filter for filtering by the Violations properties.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** Optional. A custom filter for filtering by the Violations properties. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The end of the time window. */
            @com.google.api.client.util.Key("interval.endTime")
            private String intervalEndTime;

            /** The end of the time window.
             */
            public String getIntervalEndTime() {
              return intervalEndTime;
            }

            /** The end of the time window. */
            public List setIntervalEndTime(String intervalEndTime) {
              this.intervalEndTime = intervalEndTime;
              return this;
            }

            /** The start of the time window. */
            @com.google.api.client.util.Key("interval.startTime")
            private String intervalStartTime;

            /** The start of the time window.
             */
            public String getIntervalStartTime() {
              return intervalStartTime;
            }

            /** The start of the time window. */
            public List setIntervalStartTime(String intervalStartTime) {
              this.intervalStartTime = intervalStartTime;
              return this;
            }

            /** Optional. Page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Optional. Page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Optional. Page token returned from previous request. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. Page token returned from previous request.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Optional. Page token returned from previous request. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
   *   {@code Assuredworkloads.Projects.List request = assuredworkloads.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Organizations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
     *   {@code Assuredworkloads.Organizations.List request = assuredworkloads.organizations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Organizations organizations() {
      return new Organizations();
    }

    /**
     * The "organizations" collection of methods.
     */
    public class Organizations {

      /**
       * An accessor for creating requests from the Locations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
       *   {@code Assuredworkloads.Locations.List request = assuredworkloads.locations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Locations locations() {
        return new Locations();
      }

      /**
       * The "locations" collection of methods.
       */
      public class Locations {

        /**
         * An accessor for creating requests from the Workloads collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Assuredworkloads assuredworkloads = new Assuredworkloads(...);}
         *   {@code Assuredworkloads.Workloads.List request = assuredworkloads.workloads().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Workloads workloads() {
          return new Workloads();
        }

        /**
         * The "workloads" collection of methods.
         */
        public class Workloads {

          /**
           * Analyzes a hypothetical move of a source project or project-based workload to a target
           * (destination) folder-based workload.
           *
           * Create a request for the method "workloads.analyzeWorkloadMove".
           *
           * This request holds the parameters needed by the assuredworkloads server.  After setting any
           * optional parameters, call the {@link AnalyzeWorkloadMove#execute()} method to invoke the remote
           * operation.
           *
           * @param project The source type is a project. Specify the project's relative resource name, formatted as either a
           *        project number or a project ID: "projects/{PROJECT_NUMBER}" or "projects/{PROJECT_ID}" For
           *        example: "projects/951040570662" when specifying a project number, or "projects/my-
           *        project-123" when specifying a project ID.
           * @param target Required. The resource ID of the folder-based destination workload. This workload is where the
           *        source project will hypothetically be moved to. Specify the workload's relative resource
           *        name, formatted as:
           *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
           *        example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
           * @return the request
           */
          public AnalyzeWorkloadMove analyzeWorkloadMove(java.lang.String project, java.lang.String target) throws java.io.IOException {
            AnalyzeWorkloadMove result = new AnalyzeWorkloadMove(project, target);
            initialize(result);
            return result;
          }

          public class AnalyzeWorkloadMove extends AssuredworkloadsRequest<com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AnalyzeWorkloadMoveResponse> {

            private static final String REST_PATH = "v1beta1/{+project}/{+target}:analyzeWorkloadMove";

            private final java.util.regex.Pattern PROJECT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+$");

            private final java.util.regex.Pattern TARGET_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");

            /**
             * Analyzes a hypothetical move of a source project or project-based workload to a target
             * (destination) folder-based workload.
             *
             * Create a request for the method "workloads.analyzeWorkloadMove".
             *
             * This request holds the parameters needed by the the assuredworkloads server.  After setting any
             * optional parameters, call the {@link AnalyzeWorkloadMove#execute()} method to invoke the remote
             * operation. <p> {@link AnalyzeWorkloadMove#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param project The source type is a project. Specify the project's relative resource name, formatted as either a
           *        project number or a project ID: "projects/{PROJECT_NUMBER}" or "projects/{PROJECT_ID}" For
           *        example: "projects/951040570662" when specifying a project number, or "projects/my-
           *        project-123" when specifying a project ID.
             * @param target Required. The resource ID of the folder-based destination workload. This workload is where the
           *        source project will hypothetically be moved to. Specify the workload's relative resource
           *        name, formatted as:
           *        "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
           *        example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
             * @since 1.13
             */
            protected AnalyzeWorkloadMove(java.lang.String project, java.lang.String target) {
              super(Assuredworkloads.this, "GET", REST_PATH, null, com.google.api.services.assuredworkloads.v1beta1.model.GoogleCloudAssuredworkloadsV1beta1AnalyzeWorkloadMoveResponse.class);
              this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                    "Parameter project must conform to the pattern " +
                    "^projects/[^/]+$");
              }
              this.target = com.google.api.client.util.Preconditions.checkNotNull(target, "Required parameter target must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TARGET_PATTERN.matcher(target).matches(),
                    "Parameter target must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public AnalyzeWorkloadMove set$Xgafv(java.lang.String $Xgafv) {
              return (AnalyzeWorkloadMove) super.set$Xgafv($Xgafv);
            }

            @Override
            public AnalyzeWorkloadMove setAccessToken(java.lang.String accessToken) {
              return (AnalyzeWorkloadMove) super.setAccessToken(accessToken);
            }

            @Override
            public AnalyzeWorkloadMove setAlt(java.lang.String alt) {
              return (AnalyzeWorkloadMove) super.setAlt(alt);
            }

            @Override
            public AnalyzeWorkloadMove setCallback(java.lang.String callback) {
              return (AnalyzeWorkloadMove) super.setCallback(callback);
            }

            @Override
            public AnalyzeWorkloadMove setFields(java.lang.String fields) {
              return (AnalyzeWorkloadMove) super.setFields(fields);
            }

            @Override
            public AnalyzeWorkloadMove setKey(java.lang.String key) {
              return (AnalyzeWorkloadMove) super.setKey(key);
            }

            @Override
            public AnalyzeWorkloadMove setOauthToken(java.lang.String oauthToken) {
              return (AnalyzeWorkloadMove) super.setOauthToken(oauthToken);
            }

            @Override
            public AnalyzeWorkloadMove setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AnalyzeWorkloadMove) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AnalyzeWorkloadMove setQuotaUser(java.lang.String quotaUser) {
              return (AnalyzeWorkloadMove) super.setQuotaUser(quotaUser);
            }

            @Override
            public AnalyzeWorkloadMove setUploadType(java.lang.String uploadType) {
              return (AnalyzeWorkloadMove) super.setUploadType(uploadType);
            }

            @Override
            public AnalyzeWorkloadMove setUploadProtocol(java.lang.String uploadProtocol) {
              return (AnalyzeWorkloadMove) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The source type is a project. Specify the project's relative resource name, formatted
             * as either a project number or a project ID: "projects/{PROJECT_NUMBER}" or
             * "projects/{PROJECT_ID}" For example: "projects/951040570662" when specifying a
             * project number, or "projects/my-project-123" when specifying a project ID.
             */
            @com.google.api.client.util.Key
            private java.lang.String project;

            /** The source type is a project. Specify the project's relative resource name, formatted as either a
           project number or a project ID: "projects/{PROJECT_NUMBER}" or "projects/{PROJECT_ID}" For example:
           "projects/951040570662" when specifying a project number, or "projects/my-project-123" when
           specifying a project ID.
             */
            public java.lang.String getProject() {
              return project;
            }

            /**
             * The source type is a project. Specify the project's relative resource name, formatted
             * as either a project number or a project ID: "projects/{PROJECT_NUMBER}" or
             * "projects/{PROJECT_ID}" For example: "projects/951040570662" when specifying a
             * project number, or "projects/my-project-123" when specifying a project ID.
             */
            public AnalyzeWorkloadMove setProject(java.lang.String project) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
                    "Parameter project must conform to the pattern " +
                    "^projects/[^/]+$");
              }
              this.project = project;
              return this;
            }

            /**
             * Required. The resource ID of the folder-based destination workload. This workload is
             * where the source project will hypothetically be moved to. Specify the workload's
             * relative resource name, formatted as:
             * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
             * example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
             */
            @com.google.api.client.util.Key
            private java.lang.String target;

            /** Required. The resource ID of the folder-based destination workload. This workload is where the
           source project will hypothetically be moved to. Specify the workload's relative resource name,
           formatted as: "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
           example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
             */
            public java.lang.String getTarget() {
              return target;
            }

            /**
             * Required. The resource ID of the folder-based destination workload. This workload is
             * where the source project will hypothetically be moved to. Specify the workload's
             * relative resource name, formatted as:
             * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
             * example: "organizations/123/locations/us-east1/workloads/assured-workload-2"
             */
            public AnalyzeWorkloadMove setTarget(java.lang.String target) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(TARGET_PATTERN.matcher(target).matches(),
                    "Parameter target must conform to the pattern " +
                    "^organizations/[^/]+/locations/[^/]+/workloads/[^/]+$");
              }
              this.target = target;
              return this;
            }

            /**
             * The source type is a project-based workload. Specify the workloads's relative
             * resource name, formatted as:
             * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
             * example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
             */
            @com.google.api.client.util.Key
            private java.lang.String source;

            /** The source type is a project-based workload. Specify the workloads's relative resource name,
           formatted as: "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
           example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
             */
            public java.lang.String getSource() {
              return source;
            }

            /**
             * The source type is a project-based workload. Specify the workloads's relative
             * resource name, formatted as:
             * "organizations/{ORGANIZATION_ID}/locations/{LOCATION_ID}/workloads/{WORKLOAD_ID}" For
             * example: "organizations/123/locations/us-east1/workloads/assured-workload-1"
             */
            public AnalyzeWorkloadMove setSource(java.lang.String source) {
              this.source = source;
              return this;
            }

            @Override
            public AnalyzeWorkloadMove set(String parameterName, Object value) {
              return (AnalyzeWorkloadMove) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link Assuredworkloads}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Assuredworkloads}. */
    @Override
    public Assuredworkloads build() {
      return new Assuredworkloads(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AssuredworkloadsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAssuredworkloadsRequestInitializer(
        AssuredworkloadsRequestInitializer assuredworkloadsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(assuredworkloadsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
