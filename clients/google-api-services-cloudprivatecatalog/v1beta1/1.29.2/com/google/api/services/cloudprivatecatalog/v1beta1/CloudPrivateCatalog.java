/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudprivatecatalog.v1beta1;

/**
 * Service definition for CloudPrivateCatalog (v1beta1).
 *
 * <p>
 * Enable cloud users to discover enterprise catalogs and products in their organizations.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/private-catalog/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudPrivateCatalogRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudPrivateCatalog extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Cloud Private Catalog API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudprivatecatalog.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudPrivateCatalog(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudPrivateCatalog(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
   *   {@code CloudPrivateCatalog.Folders.List request = cloudprivatecatalog.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * An accessor for creating requests from the Catalogs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Catalogs.List request = cloudprivatecatalog.catalogs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Catalogs catalogs() {
      return new Catalogs();
    }

    /**
     * The "catalogs" collection of methods.
     */
    public class Catalogs {

      /**
       * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "catalogs.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/catalogs:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "catalogs.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. It can be in following formats:

       * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchCatalogs that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the catalogs. The supported queries are:

       * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Products collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Products.List request = cloudprivatecatalog.products().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Products products() {
      return new Products();
    }

    /**
     * The "products" collection of methods.
     */
    public class Products {

      /**
       * Search Product resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "products.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/products:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Search Product resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "products.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchProducts that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the products.

       The supported queries are: * List products of all catalogs: empty * List products under a catalog:
       `parent=catalogs/{catalog_id}` * Get a product by name:
       `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Versions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Versions.List request = cloudprivatecatalog.versions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Versions versions() {
      return new Versions();
    }

    /**
     * The "versions" collection of methods.
     */
    public class Versions {

      /**
       * Search Version resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "versions.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/versions:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^folders/[^/]+$");

        /**
         * Search Version resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "versions.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^folders/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchVersions that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the versions. Required.

       The supported queries are: * List versions under a product:
       `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
       `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
   *   {@code CloudPrivateCatalog.Organizations.List request = cloudprivatecatalog.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Catalogs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Catalogs.List request = cloudprivatecatalog.catalogs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Catalogs catalogs() {
      return new Catalogs();
    }

    /**
     * The "catalogs" collection of methods.
     */
    public class Catalogs {

      /**
       * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "catalogs.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/catalogs:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "catalogs.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. It can be in following formats:

       * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchCatalogs that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the catalogs. The supported queries are:

       * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Products collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Products.List request = cloudprivatecatalog.products().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Products products() {
      return new Products();
    }

    /**
     * The "products" collection of methods.
     */
    public class Products {

      /**
       * Search Product resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "products.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/products:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Search Product resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "products.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchProducts that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the products.

       The supported queries are: * List products of all catalogs: empty * List products under a catalog:
       `parent=catalogs/{catalog_id}` * Get a product by name:
       `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Versions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Versions.List request = cloudprivatecatalog.versions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Versions versions() {
      return new Versions();
    }

    /**
     * The "versions" collection of methods.
     */
    public class Versions {

      /**
       * Search Version resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "versions.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/versions:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Search Version resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "versions.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchVersions that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the versions. Required.

       The supported queries are: * List versions under a product:
       `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
       `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
   *   {@code CloudPrivateCatalog.Projects.List request = cloudprivatecatalog.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Catalogs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Catalogs.List request = cloudprivatecatalog.catalogs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Catalogs catalogs() {
      return new Catalogs();
    }

    /**
     * The "catalogs" collection of methods.
     */
    public class Catalogs {

      /**
       * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "catalogs.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/catalogs:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Search Catalog resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "catalogs.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. It can be in following formats:
      *
       *        `projects/{project_id}`
      * `folders/{folder_id}`
      * `organizations/{organization_id}`
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. It can be in following formats:

       * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. It can be in following formats:
         *
         * * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchCatalogs that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchCatalogs that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the catalogs. The supported queries are:

       * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the catalogs. The supported queries are:
         *
         * * Get a single catalog: `name=catalogs/{catalog_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Products collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Products.List request = cloudprivatecatalog.products().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Products products() {
      return new Products();
    }

    /**
     * The "products" collection of methods.
     */
    public class Products {

      /**
       * Search Product resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "products.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/products:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Search Product resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "products.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchProductsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchProducts that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchProducts that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the products.

       The supported queries are: * List products of all catalogs: empty * List products under a catalog:
       `parent=catalogs/{catalog_id}` * Get a product by name:
       `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the products.
         *
         * The supported queries are: * List products of all catalogs: empty * List products under a
         * catalog: `parent=catalogs/{catalog_id}` * Get a product by name:
         * `name=catalogs/{catalog_id}/products/{product_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Versions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudPrivateCatalog cloudprivatecatalog = new CloudPrivateCatalog(...);}
     *   {@code CloudPrivateCatalog.Versions.List request = cloudprivatecatalog.versions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Versions versions() {
      return new Versions();
    }

    /**
     * The "versions" collection of methods.
     */
    public class Versions {

      /**
       * Search Version resources that consumers have access to, within the scope of the consumer cloud
       * resource hierarchy context.
       *
       * Create a request for the method "versions.search".
       *
       * This request holds the parameters needed by the cloudprivatecatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       *
       * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
       * @return the request
       */
      public Search search(java.lang.String resource) throws java.io.IOException {
        Search result = new Search(resource);
        initialize(result);
        return result;
      }

      public class Search extends CloudPrivateCatalogRequest<com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse> {

        private static final String REST_PATH = "v1beta1/{+resource}/versions:search";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Search Version resources that consumers have access to, within the scope of the consumer cloud
         * resource hierarchy context.
         *
         * Create a request for the method "versions.search".
         *
         * This request holds the parameters needed by the the cloudprivatecatalog server.  After setting
         * any optional parameters, call the {@link Search#execute()} method to invoke the remote
         * operation. <p> {@link
         * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource Required. The name of the resource context. See
      SearchCatalogsRequest.resource for details.
         * @since 1.13
         */
        protected Search(java.lang.String resource) {
          super(CloudPrivateCatalog.this, "GET", REST_PATH, null, com.google.api.services.cloudprivatecatalog.v1beta1.model.GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Search set$Xgafv(java.lang.String $Xgafv) {
          return (Search) super.set$Xgafv($Xgafv);
        }

        @Override
        public Search setAccessToken(java.lang.String accessToken) {
          return (Search) super.setAccessToken(accessToken);
        }

        @Override
        public Search setAlt(java.lang.String alt) {
          return (Search) super.setAlt(alt);
        }

        @Override
        public Search setCallback(java.lang.String callback) {
          return (Search) super.setCallback(callback);
        }

        @Override
        public Search setFields(java.lang.String fields) {
          return (Search) super.setFields(fields);
        }

        @Override
        public Search setKey(java.lang.String key) {
          return (Search) super.setKey(key);
        }

        @Override
        public Search setOauthToken(java.lang.String oauthToken) {
          return (Search) super.setOauthToken(oauthToken);
        }

        @Override
        public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Search) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Search setQuotaUser(java.lang.String quotaUser) {
          return (Search) super.setQuotaUser(quotaUser);
        }

        @Override
        public Search setUploadType(java.lang.String uploadType) {
          return (Search) super.setUploadType(uploadType);
        }

        @Override
        public Search setUploadProtocol(java.lang.String uploadProtocol) {
          return (Search) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** Required. The name of the resource context. See SearchCatalogsRequest.resource for details.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * Required. The name of the resource context. See SearchCatalogsRequest.resource for
         * details.
         */
        public Search setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public Search setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A pagination token returned from a previous call to SearchVersions that indicates where this
       listing should continue from. This field is optional.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A pagination token returned from a previous call to SearchVersions that indicates where
         * this listing should continue from. This field is optional.
         */
        public Search setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String query;

        /** The query to filter the versions. Required.

       The supported queries are: * List versions under a product:
       `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
       `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public java.lang.String getQuery() {
          return query;
        }

        /**
         * The query to filter the versions. Required.
         *
         * The supported queries are: * List versions under a product:
         * `parent=catalogs/{catalog_id}/products/{product_id}` * Get a version by name:
         * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
         */
        public Search setQuery(java.lang.String query) {
          this.query = query;
          return this;
        }

        @Override
        public Search set(String parameterName, Object value) {
          return (Search) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link CloudPrivateCatalog}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudPrivateCatalog}. */
    @Override
    public CloudPrivateCatalog build() {
      return new CloudPrivateCatalog(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudPrivateCatalogRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudPrivateCatalogRequestInitializer(
        CloudPrivateCatalogRequestInitializer cloudprivatecatalogRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudprivatecatalogRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
