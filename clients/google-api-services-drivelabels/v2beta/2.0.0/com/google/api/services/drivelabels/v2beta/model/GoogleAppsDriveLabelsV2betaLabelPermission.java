/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.drivelabels.v2beta.model;

/**
 * The permission that applies to a principal (user, group, audience) on a label.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive Labels API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAppsDriveLabelsV2betaLabelPermission extends com.google.api.client.json.GenericJson {

  /**
   * Audience to grant a role to. The magic value of `audiences/default` may be used to apply the
   * role to the default audience in the context of the organization that owns the Label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String audience;

  /**
   * Specifies the email address for a user or group pricinpal. Not populated for audience
   * principals. User and Group permissions may only be inserted using email address. On update
   * requests, if email address is specified, no principal should be specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * Group resource name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String group;

  /**
   * Resource name of this permission.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Person resource name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String person;

  /**
   * The role the principal should have.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String role;

  /**
   * Audience to grant a role to. The magic value of `audiences/default` may be used to apply the
   * role to the default audience in the context of the organization that owns the Label.
   * @return value or {@code null} for none
   */
  public java.lang.String getAudience() {
    return audience;
  }

  /**
   * Audience to grant a role to. The magic value of `audiences/default` may be used to apply the
   * role to the default audience in the context of the organization that owns the Label.
   * @param audience audience or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setAudience(java.lang.String audience) {
    this.audience = audience;
    return this;
  }

  /**
   * Specifies the email address for a user or group pricinpal. Not populated for audience
   * principals. User and Group permissions may only be inserted using email address. On update
   * requests, if email address is specified, no principal should be specified.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Specifies the email address for a user or group pricinpal. Not populated for audience
   * principals. User and Group permissions may only be inserted using email address. On update
   * requests, if email address is specified, no principal should be specified.
   * @param email email or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * Group resource name.
   * @return value or {@code null} for none
   */
  public java.lang.String getGroup() {
    return group;
  }

  /**
   * Group resource name.
   * @param group group or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setGroup(java.lang.String group) {
    this.group = group;
    return this;
  }

  /**
   * Resource name of this permission.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name of this permission.
   * @param name name or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Person resource name.
   * @return value or {@code null} for none
   */
  public java.lang.String getPerson() {
    return person;
  }

  /**
   * Person resource name.
   * @param person person or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setPerson(java.lang.String person) {
    this.person = person;
    return this;
  }

  /**
   * The role the principal should have.
   * @return value or {@code null} for none
   */
  public java.lang.String getRole() {
    return role;
  }

  /**
   * The role the principal should have.
   * @param role role or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLabelPermission setRole(java.lang.String role) {
    this.role = role;
    return this;
  }

  @Override
  public GoogleAppsDriveLabelsV2betaLabelPermission set(String fieldName, Object value) {
    return (GoogleAppsDriveLabelsV2betaLabelPermission) super.set(fieldName, value);
  }

  @Override
  public GoogleAppsDriveLabelsV2betaLabelPermission clone() {
    return (GoogleAppsDriveLabelsV2betaLabelPermission) super.clone();
  }

}
