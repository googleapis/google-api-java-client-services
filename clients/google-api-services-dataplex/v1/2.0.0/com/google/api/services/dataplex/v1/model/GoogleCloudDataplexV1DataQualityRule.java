/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataplex.v1.model;

/**
 * A rule captures data quality intent about a data source.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataplex API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDataplexV1DataQualityRule extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The unnested column which this rule is evaluated against.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String column;

  /**
   * Optional. Description of the rule. The maximum length is 1,024 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level.
   * Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS",
   * "FRESHNESS", "VOLUME"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dimension;

  /**
   * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In
   * that case, such null rows are trivially considered passing.This field is only valid for the
   * following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ignoreNull;

  /**
   * Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers
   * (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end
   * with a number or a letter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Row-level rule which evaluates whether each column value is null.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleNonNullExpectation nonNullExpectation;

  /**
   * Row-level rule which evaluates whether each column value lies between a specified range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation;

  /**
   * Row-level rule which evaluates whether each column value matches a specified regex.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation;

  /**
   * Row-level rule which evaluates whether each row in a table passes the specified condition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation;

  /**
   * Row-level rule which evaluates whether each column value is contained by a specified set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation;

  /**
   * Aggregate rule which evaluates the number of rows returned for the provided statement. If any
   * rows are returned, this rule fails.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleSqlAssertion sqlAssertion;

  /**
   * Aggregate rule which evaluates whether the column aggregate statistic lies between a specified
   * range.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation;

  /**
   * Optional. Whether the Rule is active or suspended. Default is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean suspended;

  /**
   * Aggregate rule which evaluates whether the provided expression is true for a table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation;

  /**
   * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a
   * range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level
   * type rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double threshold;

  /**
   * Row-level rule which evaluates whether each column value is unique.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation uniquenessExpectation;

  /**
   * Optional. The unnested column which this rule is evaluated against.
   * @return value or {@code null} for none
   */
  public java.lang.String getColumn() {
    return column;
  }

  /**
   * Optional. The unnested column which this rule is evaluated against.
   * @param column column or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setColumn(java.lang.String column) {
    this.column = column;
    return this;
  }

  /**
   * Optional. Description of the rule. The maximum length is 1,024 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the rule. The maximum length is 1,024 characters.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level.
   * Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS",
   * "FRESHNESS", "VOLUME"
   * @return value or {@code null} for none
   */
  public java.lang.String getDimension() {
    return dimension;
  }

  /**
   * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level.
   * Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS",
   * "FRESHNESS", "VOLUME"
   * @param dimension dimension or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setDimension(java.lang.String dimension) {
    this.dimension = dimension;
    return this;
  }

  /**
   * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In
   * that case, such null rows are trivially considered passing.This field is only valid for the
   * following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIgnoreNull() {
    return ignoreNull;
  }

  /**
   * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In
   * that case, such null rows are trivially considered passing.This field is only valid for the
   * following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation
   * @param ignoreNull ignoreNull or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setIgnoreNull(java.lang.Boolean ignoreNull) {
    this.ignoreNull = ignoreNull;
    return this;
  }

  /**
   * Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers
   * (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end
   * with a number or a letter.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers
   * (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end
   * with a number or a letter.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each column value is null.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleNonNullExpectation getNonNullExpectation() {
    return nonNullExpectation;
  }

  /**
   * Row-level rule which evaluates whether each column value is null.
   * @param nonNullExpectation nonNullExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setNonNullExpectation(GoogleCloudDataplexV1DataQualityRuleNonNullExpectation nonNullExpectation) {
    this.nonNullExpectation = nonNullExpectation;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each column value lies between a specified range.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleRangeExpectation getRangeExpectation() {
    return rangeExpectation;
  }

  /**
   * Row-level rule which evaluates whether each column value lies between a specified range.
   * @param rangeExpectation rangeExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setRangeExpectation(GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation) {
    this.rangeExpectation = rangeExpectation;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each column value matches a specified regex.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleRegexExpectation getRegexExpectation() {
    return regexExpectation;
  }

  /**
   * Row-level rule which evaluates whether each column value matches a specified regex.
   * @param regexExpectation regexExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setRegexExpectation(GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation) {
    this.regexExpectation = regexExpectation;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each row in a table passes the specified condition.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation getRowConditionExpectation() {
    return rowConditionExpectation;
  }

  /**
   * Row-level rule which evaluates whether each row in a table passes the specified condition.
   * @param rowConditionExpectation rowConditionExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setRowConditionExpectation(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation) {
    this.rowConditionExpectation = rowConditionExpectation;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each column value is contained by a specified set.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleSetExpectation getSetExpectation() {
    return setExpectation;
  }

  /**
   * Row-level rule which evaluates whether each column value is contained by a specified set.
   * @param setExpectation setExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setSetExpectation(GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation) {
    this.setExpectation = setExpectation;
    return this;
  }

  /**
   * Aggregate rule which evaluates the number of rows returned for the provided statement. If any
   * rows are returned, this rule fails.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleSqlAssertion getSqlAssertion() {
    return sqlAssertion;
  }

  /**
   * Aggregate rule which evaluates the number of rows returned for the provided statement. If any
   * rows are returned, this rule fails.
   * @param sqlAssertion sqlAssertion or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setSqlAssertion(GoogleCloudDataplexV1DataQualityRuleSqlAssertion sqlAssertion) {
    this.sqlAssertion = sqlAssertion;
    return this;
  }

  /**
   * Aggregate rule which evaluates whether the column aggregate statistic lies between a specified
   * range.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation getStatisticRangeExpectation() {
    return statisticRangeExpectation;
  }

  /**
   * Aggregate rule which evaluates whether the column aggregate statistic lies between a specified
   * range.
   * @param statisticRangeExpectation statisticRangeExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setStatisticRangeExpectation(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation) {
    this.statisticRangeExpectation = statisticRangeExpectation;
    return this;
  }

  /**
   * Optional. Whether the Rule is active or suspended. Default is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSuspended() {
    return suspended;
  }

  /**
   * Optional. Whether the Rule is active or suspended. Default is false.
   * @param suspended suspended or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setSuspended(java.lang.Boolean suspended) {
    this.suspended = suspended;
    return this;
  }

  /**
   * Aggregate rule which evaluates whether the provided expression is true for a table.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation getTableConditionExpectation() {
    return tableConditionExpectation;
  }

  /**
   * Aggregate rule which evaluates whether the provided expression is true for a table.
   * @param tableConditionExpectation tableConditionExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setTableConditionExpectation(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation) {
    this.tableConditionExpectation = tableConditionExpectation;
    return this;
  }

  /**
   * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a
   * range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level
   * type rules.
   * @return value or {@code null} for none
   */
  public java.lang.Double getThreshold() {
    return threshold;
  }

  /**
   * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a
   * range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level
   * type rules.
   * @param threshold threshold or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setThreshold(java.lang.Double threshold) {
    this.threshold = threshold;
    return this;
  }

  /**
   * Row-level rule which evaluates whether each column value is unique.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation getUniquenessExpectation() {
    return uniquenessExpectation;
  }

  /**
   * Row-level rule which evaluates whether each column value is unique.
   * @param uniquenessExpectation uniquenessExpectation or {@code null} for none
   */
  public GoogleCloudDataplexV1DataQualityRule setUniquenessExpectation(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation uniquenessExpectation) {
    this.uniquenessExpectation = uniquenessExpectation;
    return this;
  }

  @Override
  public GoogleCloudDataplexV1DataQualityRule set(String fieldName, Object value) {
    return (GoogleCloudDataplexV1DataQualityRule) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDataplexV1DataQualityRule clone() {
    return (GoogleCloudDataplexV1DataQualityRule) super.clone();
  }

}
