/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Success and error statistics of processing multiple entities (for example, DataItems or
 * structured data rows) in batch.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1CompletionStats extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The number of entities for which any error was encountered.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long failedCount;

  /**
   * Output only. In cases when enough errors are encountered a job, pipeline, or operation may be
   * failed as a whole. Below is the number of entities for which the processing had not been
   * finished (either in successful or failed state). Set to -1 if the number is unknown (for
   * example, the operation failed before the total entity number could be collected).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long incompleteCount;

  /**
   * Output only. The number of entities that had been processed successfully.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long successfulCount;

  /**
   * Output only. The number of the successful forecast points that are generated by the forecasting
   * model. This is ONLY used by the forecasting batch prediction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long successfulForecastPointCount;

  /**
   * Output only. The number of entities for which any error was encountered.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFailedCount() {
    return failedCount;
  }

  /**
   * Output only. The number of entities for which any error was encountered.
   * @param failedCount failedCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1CompletionStats setFailedCount(java.lang.Long failedCount) {
    this.failedCount = failedCount;
    return this;
  }

  /**
   * Output only. In cases when enough errors are encountered a job, pipeline, or operation may be
   * failed as a whole. Below is the number of entities for which the processing had not been
   * finished (either in successful or failed state). Set to -1 if the number is unknown (for
   * example, the operation failed before the total entity number could be collected).
   * @return value or {@code null} for none
   */
  public java.lang.Long getIncompleteCount() {
    return incompleteCount;
  }

  /**
   * Output only. In cases when enough errors are encountered a job, pipeline, or operation may be
   * failed as a whole. Below is the number of entities for which the processing had not been
   * finished (either in successful or failed state). Set to -1 if the number is unknown (for
   * example, the operation failed before the total entity number could be collected).
   * @param incompleteCount incompleteCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1CompletionStats setIncompleteCount(java.lang.Long incompleteCount) {
    this.incompleteCount = incompleteCount;
    return this;
  }

  /**
   * Output only. The number of entities that had been processed successfully.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSuccessfulCount() {
    return successfulCount;
  }

  /**
   * Output only. The number of entities that had been processed successfully.
   * @param successfulCount successfulCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1CompletionStats setSuccessfulCount(java.lang.Long successfulCount) {
    this.successfulCount = successfulCount;
    return this;
  }

  /**
   * Output only. The number of the successful forecast points that are generated by the forecasting
   * model. This is ONLY used by the forecasting batch prediction.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSuccessfulForecastPointCount() {
    return successfulForecastPointCount;
  }

  /**
   * Output only. The number of the successful forecast points that are generated by the forecasting
   * model. This is ONLY used by the forecasting batch prediction.
   * @param successfulForecastPointCount successfulForecastPointCount or {@code null} for none
   */
  public GoogleCloudAiplatformV1CompletionStats setSuccessfulForecastPointCount(java.lang.Long successfulForecastPointCount) {
    this.successfulForecastPointCount = successfulForecastPointCount;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1CompletionStats set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1CompletionStats) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1CompletionStats clone() {
    return (GoogleCloudAiplatformV1CompletionStats) super.clone();
  }

}
