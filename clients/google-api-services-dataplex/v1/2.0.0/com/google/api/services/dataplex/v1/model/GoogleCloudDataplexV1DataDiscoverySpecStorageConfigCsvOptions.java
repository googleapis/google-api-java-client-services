/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataplex.v1.model;

/**
 * Describes CSV and similar semi-structured data formats.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataplex API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The delimiter that is used to separate values. The default is , (comma).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String delimiter;

  /**
   * Optional. The character encoding of the data. The default is UTF-8.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encoding;

  /**
   * Optional. The number of rows to interpret as header rows that should be skipped when reading
   * data rows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer headerRows;

  /**
   * Optional. The character used to quote column values. Accepts " (double quotation mark) or '
   * (single quotation mark). If unspecified, defaults to " (double quotation mark).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String quote;

  /**
   * Optional. Whether to disable the inference of data types for CSV data. If true, all columns are
   * registered as strings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean typeInferenceDisabled;

  /**
   * Optional. The delimiter that is used to separate values. The default is , (comma).
   * @return value or {@code null} for none
   */
  public java.lang.String getDelimiter() {
    return delimiter;
  }

  /**
   * Optional. The delimiter that is used to separate values. The default is , (comma).
   * @param delimiter delimiter or {@code null} for none
   */
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions setDelimiter(java.lang.String delimiter) {
    this.delimiter = delimiter;
    return this;
  }

  /**
   * Optional. The character encoding of the data. The default is UTF-8.
   * @return value or {@code null} for none
   */
  public java.lang.String getEncoding() {
    return encoding;
  }

  /**
   * Optional. The character encoding of the data. The default is UTF-8.
   * @param encoding encoding or {@code null} for none
   */
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions setEncoding(java.lang.String encoding) {
    this.encoding = encoding;
    return this;
  }

  /**
   * Optional. The number of rows to interpret as header rows that should be skipped when reading
   * data rows.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getHeaderRows() {
    return headerRows;
  }

  /**
   * Optional. The number of rows to interpret as header rows that should be skipped when reading
   * data rows.
   * @param headerRows headerRows or {@code null} for none
   */
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions setHeaderRows(java.lang.Integer headerRows) {
    this.headerRows = headerRows;
    return this;
  }

  /**
   * Optional. The character used to quote column values. Accepts " (double quotation mark) or '
   * (single quotation mark). If unspecified, defaults to " (double quotation mark).
   * @return value or {@code null} for none
   */
  public java.lang.String getQuote() {
    return quote;
  }

  /**
   * Optional. The character used to quote column values. Accepts " (double quotation mark) or '
   * (single quotation mark). If unspecified, defaults to " (double quotation mark).
   * @param quote quote or {@code null} for none
   */
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions setQuote(java.lang.String quote) {
    this.quote = quote;
    return this;
  }

  /**
   * Optional. Whether to disable the inference of data types for CSV data. If true, all columns are
   * registered as strings.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTypeInferenceDisabled() {
    return typeInferenceDisabled;
  }

  /**
   * Optional. Whether to disable the inference of data types for CSV data. If true, all columns are
   * registered as strings.
   * @param typeInferenceDisabled typeInferenceDisabled or {@code null} for none
   */
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions setTypeInferenceDisabled(java.lang.Boolean typeInferenceDisabled) {
    this.typeInferenceDisabled = typeInferenceDisabled;
    return this;
  }

  @Override
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions set(String fieldName, Object value) {
    return (GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions clone() {
    return (GoogleCloudDataplexV1DataDiscoverySpecStorageConfigCsvOptions) super.clone();
  }

}
