/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * PuntInfoLog is used to log why devices get filtered out during media content playability check.
 * It contains media excuse, provider mid and also index of devices filtered by them.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog extends com.google.api.client.json.GenericJson {

  /**
   * Index of devices that have the same punt info during playability check, i.e. same media_excuse
   * and provider_mid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> deviceIndex;

  /**
   * Excuse for media action triggering. See: assistant/verticals/media/proto/media_excuse.proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer mediaExcuse;

  /**
   * Provider id that the excuse belongs to. This is the KG MID of the provider, e.g., "/m/09jcvs"
   * for Youtube.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String providerMid;

  /**
   * Index of devices that have the same punt info during playability check, i.e. same media_excuse
   * and provider_mid.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDeviceIndex() {
    return deviceIndex;
  }

  /**
   * Index of devices that have the same punt info during playability check, i.e. same media_excuse
   * and provider_mid.
   * @param deviceIndex deviceIndex or {@code null} for none
   */
  public AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog setDeviceIndex(java.util.List<java.lang.Integer> deviceIndex) {
    this.deviceIndex = deviceIndex;
    return this;
  }

  /**
   * Excuse for media action triggering. See: assistant/verticals/media/proto/media_excuse.proto.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMediaExcuse() {
    return mediaExcuse;
  }

  /**
   * Excuse for media action triggering. See: assistant/verticals/media/proto/media_excuse.proto.
   * @param mediaExcuse mediaExcuse or {@code null} for none
   */
  public AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog setMediaExcuse(java.lang.Integer mediaExcuse) {
    this.mediaExcuse = mediaExcuse;
    return this;
  }

  /**
   * Provider id that the excuse belongs to. This is the KG MID of the provider, e.g., "/m/09jcvs"
   * for Youtube.
   * @return value or {@code null} for none
   */
  public java.lang.String getProviderMid() {
    return providerMid;
  }

  /**
   * Provider id that the excuse belongs to. This is the KG MID of the provider, e.g., "/m/09jcvs"
   * for Youtube.
   * @param providerMid providerMid or {@code null} for none
   */
  public AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog setProviderMid(java.lang.String providerMid) {
    this.providerMid = providerMid;
    return this;
  }

  @Override
  public AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog set(String fieldName, Object value) {
    return (AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog) super.set(fieldName, value);
  }

  @Override
  public AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog clone() {
    return (AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog) super.clone();
  }

}
