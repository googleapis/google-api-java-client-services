/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vectortile.v1.model;

/**
 * A feature representing a single geographic entity.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Semantic Tile API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Feature extends com.google.api.client.json.GenericJson {

  /**
   * The localized name of this feature. Currently only returned for roads.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The geometry of this feature, representing the space that it occupies in the world.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Geometry geometry;

  /**
   * Place ID of this feature, suitable for use in Places API details requests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeId;

  /**
   * Relations to other features.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Relation> relations;

  /**
   * Metadata for features with the SEGMENT FeatureType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SegmentInfo segmentInfo;

  /**
   * The type of this feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The localized name of this feature. Currently only returned for roads.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The localized name of this feature. Currently only returned for roads.
   * @param displayName displayName or {@code null} for none
   */
  public Feature setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The geometry of this feature, representing the space that it occupies in the world.
   * @return value or {@code null} for none
   */
  public Geometry getGeometry() {
    return geometry;
  }

  /**
   * The geometry of this feature, representing the space that it occupies in the world.
   * @param geometry geometry or {@code null} for none
   */
  public Feature setGeometry(Geometry geometry) {
    this.geometry = geometry;
    return this;
  }

  /**
   * Place ID of this feature, suitable for use in Places API details requests.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceId() {
    return placeId;
  }

  /**
   * Place ID of this feature, suitable for use in Places API details requests.
   * @param placeId placeId or {@code null} for none
   */
  public Feature setPlaceId(java.lang.String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * Relations to other features.
   * @return value or {@code null} for none
   */
  public java.util.List<Relation> getRelations() {
    return relations;
  }

  /**
   * Relations to other features.
   * @param relations relations or {@code null} for none
   */
  public Feature setRelations(java.util.List<Relation> relations) {
    this.relations = relations;
    return this;
  }

  /**
   * Metadata for features with the SEGMENT FeatureType.
   * @return value or {@code null} for none
   */
  public SegmentInfo getSegmentInfo() {
    return segmentInfo;
  }

  /**
   * Metadata for features with the SEGMENT FeatureType.
   * @param segmentInfo segmentInfo or {@code null} for none
   */
  public Feature setSegmentInfo(SegmentInfo segmentInfo) {
    this.segmentInfo = segmentInfo;
    return this;
  }

  /**
   * The type of this feature.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of this feature.
   * @param type type or {@code null} for none
   */
  public Feature setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Feature set(String fieldName, Object value) {
    return (Feature) super.set(fieldName, value);
  }

  @Override
  public Feature clone() {
    return (Feature) super.clone();
  }

}
