/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.toolresults.model;

/**
 * A History represents a sorted list of Executions ordered by the start_timestamp_millis field
 * (descending). It can be used to group all the Executions of a continuous build.
 *
 * Note that the ordering only operates on one-dimension. If a repository has multiple branches, it
 * means that multiple histories will need to be used in order to order Executions per branch.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tool Results API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class History extends com.google.api.client.json.GenericJson {

  /**
   * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters.
   *
   * - In response: present if set during create. - In create request: optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * A unique identifier within a project for this History.
   *
   * Returns INVALID_ARGUMENT if this field is set or overwritten by the caller.
   *
   * - In response always set - In create request: never set
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String historyId;

  /**
   * A name to uniquely identify a history within a project. Maximum of 200 characters.
   *
   * - In response always set - In create request: always set
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters.
   *
   * - In response: present if set during create. - In create request: optional
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters.
   *
   * - In response: present if set during create. - In create request: optional
   * @param displayName displayName or {@code null} for none
   */
  public History setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * A unique identifier within a project for this History.
   *
   * Returns INVALID_ARGUMENT if this field is set or overwritten by the caller.
   *
   * - In response always set - In create request: never set
   * @return value or {@code null} for none
   */
  public java.lang.String getHistoryId() {
    return historyId;
  }

  /**
   * A unique identifier within a project for this History.
   *
   * Returns INVALID_ARGUMENT if this field is set or overwritten by the caller.
   *
   * - In response always set - In create request: never set
   * @param historyId historyId or {@code null} for none
   */
  public History setHistoryId(java.lang.String historyId) {
    this.historyId = historyId;
    return this;
  }

  /**
   * A name to uniquely identify a history within a project. Maximum of 200 characters.
   *
   * - In response always set - In create request: always set
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * A name to uniquely identify a history within a project. Maximum of 200 characters.
   *
   * - In response always set - In create request: always set
   * @param name name or {@code null} for none
   */
  public History setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  @Override
  public History set(String fieldName, Object value) {
    return (History) super.set(fieldName, value);
  }

  @Override
  public History clone() {
    return (History) super.clone();
  }

}
