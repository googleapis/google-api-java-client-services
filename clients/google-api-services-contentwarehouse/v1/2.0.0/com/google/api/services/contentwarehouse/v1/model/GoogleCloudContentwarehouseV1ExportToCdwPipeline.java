/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The configuration of exporting documents from the Document Warehouse to CDW pipeline.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1ExportToCdwPipeline extends com.google.api.client.json.GenericJson {

  /**
   * The list of all the documents to be processed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> documentIds;

  /**
   * The Cloud Storage folder path used to store the exported documents before being sent to CDW.
   * Format: gs:.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String exportFolderPath;

  /**
   * The CDW processor information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1ProcessorInfo processorInfo;

  /**
   * The list of all the documents to be processed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDocumentIds() {
    return documentIds;
  }

  /**
   * The list of all the documents to be processed.
   * @param documentIds documentIds or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1ExportToCdwPipeline setDocumentIds(java.util.List<java.lang.String> documentIds) {
    this.documentIds = documentIds;
    return this;
  }

  /**
   * The Cloud Storage folder path used to store the exported documents before being sent to CDW.
   * Format: gs:.
   * @return value or {@code null} for none
   */
  public java.lang.String getExportFolderPath() {
    return exportFolderPath;
  }

  /**
   * The Cloud Storage folder path used to store the exported documents before being sent to CDW.
   * Format: gs:.
   * @param exportFolderPath exportFolderPath or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1ExportToCdwPipeline setExportFolderPath(java.lang.String exportFolderPath) {
    this.exportFolderPath = exportFolderPath;
    return this;
  }

  /**
   * The CDW processor information.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1ProcessorInfo getProcessorInfo() {
    return processorInfo;
  }

  /**
   * The CDW processor information.
   * @param processorInfo processorInfo or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1ExportToCdwPipeline setProcessorInfo(GoogleCloudContentwarehouseV1ProcessorInfo processorInfo) {
    this.processorInfo = processorInfo;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1ExportToCdwPipeline set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1ExportToCdwPipeline) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1ExportToCdwPipeline clone() {
    return (GoogleCloudContentwarehouseV1ExportToCdwPipeline) super.clone();
  }

}
