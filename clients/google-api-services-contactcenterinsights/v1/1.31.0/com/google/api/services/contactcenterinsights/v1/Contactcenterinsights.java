/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contactcenterinsights.v1;

/**
 * Service definition for Contactcenterinsights (v1).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/contact-center/insights/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ContactcenterinsightsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Contactcenterinsights extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the Contact Center AI Insights API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://contactcenterinsights.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://contactcenterinsights.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Contactcenterinsights(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Contactcenterinsights(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
   *   {@code Contactcenterinsights.Projects.List request = contactcenterinsights.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
     *   {@code Contactcenterinsights.Locations.List request = contactcenterinsights.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets project-level settings.
       *
       * Create a request for the method "locations.getSettings".
       *
       * This request holds the parameters needed by the contactcenterinsights server.  After setting any
       * optional parameters, call the {@link GetSettings#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The name of the settings resource to get.
       * @return the request
       */
      public GetSettings getSettings(java.lang.String name) throws java.io.IOException {
        GetSettings result = new GetSettings(name);
        initialize(result);
        return result;
      }

      public class GetSettings extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/settings$");

        /**
         * Gets project-level settings.
         *
         * Create a request for the method "locations.getSettings".
         *
         * This request holds the parameters needed by the the contactcenterinsights server.  After
         * setting any optional parameters, call the {@link GetSettings#execute()} method to invoke the
         * remote operation. <p> {@link
         * GetSettings#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the settings resource to get.
         * @since 1.13
         */
        protected GetSettings(java.lang.String name) {
          super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/settings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetSettings setAccessToken(java.lang.String accessToken) {
          return (GetSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetSettings setAlt(java.lang.String alt) {
          return (GetSettings) super.setAlt(alt);
        }

        @Override
        public GetSettings setCallback(java.lang.String callback) {
          return (GetSettings) super.setCallback(callback);
        }

        @Override
        public GetSettings setFields(java.lang.String fields) {
          return (GetSettings) super.setFields(fields);
        }

        @Override
        public GetSettings setKey(java.lang.String key) {
          return (GetSettings) super.setKey(key);
        }

        @Override
        public GetSettings setOauthToken(java.lang.String oauthToken) {
          return (GetSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetSettings setUploadType(java.lang.String uploadType) {
          return (GetSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetSettings) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the settings resource to get. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the settings resource to get.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the settings resource to get. */
        public GetSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/settings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetSettings set(String parameterName, Object value) {
          return (GetSettings) super.set(parameterName, value);
        }
      }
      /**
       * Updates project-level settings.
       *
       * Create a request for the method "locations.updateSettings".
       *
       * This request holds the parameters needed by the contactcenterinsights server.  After setting any
       * optional parameters, call the {@link UpdateSettings#execute()} method to invoke the remote
       * operation.
       *
       * @param name Immutable. The resource name of the settings resource. Format:
       *        projects/{project}/locations/{location}/settings
       * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings}
       * @return the request
       */
      public UpdateSettings updateSettings(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings content) throws java.io.IOException {
        UpdateSettings result = new UpdateSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateSettings extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/settings$");

        /**
         * Updates project-level settings.
         *
         * Create a request for the method "locations.updateSettings".
         *
         * This request holds the parameters needed by the the contactcenterinsights server.  After
         * setting any optional parameters, call the {@link UpdateSettings#execute()} method to invoke the
         * remote operation. <p> {@link UpdateSettings#initialize(com.google.api.client.googleapis.service
         * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Immutable. The resource name of the settings resource. Format:
       *        projects/{project}/locations/{location}/settings
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings}
         * @since 1.13
         */
        protected UpdateSettings(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings content) {
          super(Contactcenterinsights.this, "PATCH", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Settings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/settings$");
          }
        }

        @Override
        public UpdateSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateSettings setAlt(java.lang.String alt) {
          return (UpdateSettings) super.setAlt(alt);
        }

        @Override
        public UpdateSettings setCallback(java.lang.String callback) {
          return (UpdateSettings) super.setCallback(callback);
        }

        @Override
        public UpdateSettings setFields(java.lang.String fields) {
          return (UpdateSettings) super.setFields(fields);
        }

        @Override
        public UpdateSettings setKey(java.lang.String key) {
          return (UpdateSettings) super.setKey(key);
        }

        @Override
        public UpdateSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateSettings setUploadType(java.lang.String uploadType) {
          return (UpdateSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The resource name of the settings resource. Format:
         * projects/{project}/locations/{location}/settings
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The resource name of the settings resource. Format:
       projects/{project}/locations/{location}/settings
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The resource name of the settings resource. Format:
         * projects/{project}/locations/{location}/settings
         */
        public UpdateSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+/settings$");
          }
          this.name = name;
          return this;
        }

        /** Required. The list of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The list of fields to be updated. */
        public UpdateSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateSettings set(String parameterName, Object value) {
          return (UpdateSettings) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Conversations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
       *   {@code Contactcenterinsights.Conversations.List request = contactcenterinsights.conversations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Conversations conversations() {
        return new Conversations();
      }

      /**
       * The "conversations" collection of methods.
       */
      public class Conversations {

        /**
         * Gets conversation statistics.
         *
         * Create a request for the method "conversations.calculateStats".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link CalculateStats#execute()} method to invoke the remote
         * operation.
         *
         * @param location Required. The location of the conversations.
         * @return the request
         */
        public CalculateStats calculateStats(java.lang.String location) throws java.io.IOException {
          CalculateStats result = new CalculateStats(location);
          initialize(result);
          return result;
        }

        public class CalculateStats extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1CalculateStatsResponse> {

          private static final String REST_PATH = "v1/{+location}/conversations:calculateStats";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Gets conversation statistics.
           *
           * Create a request for the method "conversations.calculateStats".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link CalculateStats#execute()} method to invoke the
           * remote operation. <p> {@link CalculateStats#initialize(com.google.api.client.googleapis.service
           * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param location Required. The location of the conversations.
           * @since 1.13
           */
          protected CalculateStats(java.lang.String location) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1CalculateStatsResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public CalculateStats set$Xgafv(java.lang.String $Xgafv) {
            return (CalculateStats) super.set$Xgafv($Xgafv);
          }

          @Override
          public CalculateStats setAccessToken(java.lang.String accessToken) {
            return (CalculateStats) super.setAccessToken(accessToken);
          }

          @Override
          public CalculateStats setAlt(java.lang.String alt) {
            return (CalculateStats) super.setAlt(alt);
          }

          @Override
          public CalculateStats setCallback(java.lang.String callback) {
            return (CalculateStats) super.setCallback(callback);
          }

          @Override
          public CalculateStats setFields(java.lang.String fields) {
            return (CalculateStats) super.setFields(fields);
          }

          @Override
          public CalculateStats setKey(java.lang.String key) {
            return (CalculateStats) super.setKey(key);
          }

          @Override
          public CalculateStats setOauthToken(java.lang.String oauthToken) {
            return (CalculateStats) super.setOauthToken(oauthToken);
          }

          @Override
          public CalculateStats setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CalculateStats) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CalculateStats setQuotaUser(java.lang.String quotaUser) {
            return (CalculateStats) super.setQuotaUser(quotaUser);
          }

          @Override
          public CalculateStats setUploadType(java.lang.String uploadType) {
            return (CalculateStats) super.setUploadType(uploadType);
          }

          @Override
          public CalculateStats setUploadProtocol(java.lang.String uploadProtocol) {
            return (CalculateStats) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The location of the conversations. */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. The location of the conversations.
           */
          public java.lang.String getLocation() {
            return location;
          }

          /** Required. The location of the conversations. */
          public CalculateStats setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          /**
           * A filter to reduce results to a specific subset. This field is useful for getting
           * statistics about conversations with specific properties.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter to reduce results to a specific subset. This field is useful for getting statistics about
         conversations with specific properties.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * A filter to reduce results to a specific subset. This field is useful for getting
           * statistics about conversations with specific properties.
           */
          public CalculateStats setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          @Override
          public CalculateStats set(String parameterName, Object value) {
            return (CalculateStats) super.set(parameterName, value);
          }
        }
        /**
         * Creates a conversation.
         *
         * Create a request for the method "conversations.create".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the conversation.
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation> {

          private static final String REST_PATH = "v1/{+parent}/conversations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a conversation.
           *
           * Create a request for the method "conversations.create".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the conversation.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource of the conversation. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the conversation.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource of the conversation. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A unique ID for the new conversation. This ID will become the final component of the
           * conversation's resource name. If no ID is specified, a server-generated ID will be
           * used. This value should be 4-32 characters and must match the regular expression
           * /^[a-z0-9-]{4,32}$/. Valid characters are /a-z-/
           */
          @com.google.api.client.util.Key
          private java.lang.String conversationId;

          /** A unique ID for the new conversation. This ID will become the final component of the conversation's
         resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-32
         characters and must match the regular expression /^[a-z0-9-]{4,32}$/. Valid characters are /a-z-/
           */
          public java.lang.String getConversationId() {
            return conversationId;
          }

          /**
           * A unique ID for the new conversation. This ID will become the final component of the
           * conversation's resource name. If no ID is specified, a server-generated ID will be
           * used. This value should be 4-32 characters and must match the regular expression
           * /^[a-z0-9-]{4,32}$/. Valid characters are /a-z-/
           */
          public Create setConversationId(java.lang.String conversationId) {
            this.conversationId = conversationId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a conversation.
         *
         * Create a request for the method "conversations.delete".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the conversation to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

          /**
           * Deletes a conversation.
           *
           * Create a request for the method "conversations.delete".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the conversation to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Contactcenterinsights.this, "DELETE", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the conversation to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the conversation to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the conversation to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * If set to true, all of this conversation's analyses will also be deleted. Otherwise,
           * the request will only succeed if the conversation has no analyses.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request
         will only succeed if the conversation has no analyses.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * If set to true, all of this conversation's analyses will also be deleted. Otherwise,
           * the request will only succeed if the conversation has no analyses.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a conversation.
         *
         * Create a request for the method "conversations.get".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the conversation to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

          /**
           * Gets a conversation.
           *
           * Create a request for the method "conversations.get".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the conversation to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the conversation to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the conversation to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the conversation to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The level of details of the conversation. Default is `FULL`. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** The level of details of the conversation. Default is `FULL`.
           */
          public java.lang.String getView() {
            return view;
          }

          /** The level of details of the conversation. Default is `FULL`. */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists conversations.
         *
         * Create a request for the method "conversations.list".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the conversation.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListConversationsResponse> {

          private static final String REST_PATH = "v1/{+parent}/conversations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists conversations.
           *
           * Create a request for the method "conversations.list".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the conversation.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListConversationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource of the conversation. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the conversation.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource of the conversation. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A filter to reduce results to a specific subset. Useful for querying conversations with
           * specific properties.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter to reduce results to a specific subset. Useful for querying conversations with specific
         properties.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * A filter to reduce results to a specific subset. Useful for querying conversations with
           * specific properties.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of conversations to return in the response. A valid page size ranges
           * from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size
           * of 100 will be chosen. Note that a call might return fewer results than the requested
           * page size.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of conversations to return in the response. A valid page size ranges from 0 to
         1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be
         chosen. Note that a call might return fewer results than the requested page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of conversations to return in the response. A valid page size ranges
           * from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size
           * of 100 will be chosen. Note that a call might return fewer results than the requested
           * page size.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The value returned by the last `ListConversationsResponse`. This value indicates that
           * this is a continuation of a prior `ListConversations` call and that the system should
           * return the next page of data.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The value returned by the last `ListConversationsResponse`. This value indicates that this is a
         continuation of a prior `ListConversations` call and that the system should return the next page of
         data.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The value returned by the last `ListConversationsResponse`. This value indicates that
           * this is a continuation of a prior `ListConversations` call and that the system should
           * return the next page of data.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** The level of details of the conversation. Default is `BASIC`. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** The level of details of the conversation. Default is `BASIC`.
           */
          public java.lang.String getView() {
            return view;
          }

          /** The level of details of the conversation. Default is `BASIC`. */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a conversation.
         *
         * Create a request for the method "conversations.patch".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of the conversation. Format:
         *        projects/{project}/locations/{location}/conversations/{conversation}
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

          /**
           * Updates a conversation.
           *
           * Create a request for the method "conversations.patch".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of the conversation. Format:
         *        projects/{project}/locations/{location}/conversations/{conversation}
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation content) {
            super(Contactcenterinsights.this, "PATCH", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Conversation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The resource name of the conversation. Format:
           * projects/{project}/locations/{location}/conversations/{conversation}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of the conversation. Format:
         projects/{project}/locations/{location}/conversations/{conversation}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The resource name of the conversation. Format:
           * projects/{project}/locations/{location}/conversations/{conversation}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Analyses collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
         *   {@code Contactcenterinsights.Analyses.List request = contactcenterinsights.analyses().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Analyses analyses() {
          return new Analyses();
        }

        /**
         * The "analyses" collection of methods.
         */
        public class Analyses {

          /**
           * Creates an analysis. The long running operation is done when the analysis has completed.
           *
           * Create a request for the method "analyses.create".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource of the analysis.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+parent}/analyses";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Creates an analysis. The long running operation is done when the analysis has completed.
             *
             * Create a request for the method "analyses.create".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
             * operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource of the analysis.
             * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis content) {
              super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource of the analysis. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource of the analysis.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource of the analysis. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an analysis.
           *
           * Create a request for the method "analyses.delete".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the analysis to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");

            /**
             * Deletes an analysis.
             *
             * Create a request for the method "analyses.delete".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the analysis to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Contactcenterinsights.this, "DELETE", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the analysis to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the analysis to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the analysis to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an analysis.
           *
           * Create a request for the method "analyses.get".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the analysis to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");

            /**
             * Gets an analysis.
             *
             * Create a request for the method "analyses.get".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
             * operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the analysis to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Analysis.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the analysis to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the analysis to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the analysis to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/analyses/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists analyses.
           *
           * Create a request for the method "analyses.list".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource of the analyses.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListAnalysesResponse> {

            private static final String REST_PATH = "v1/{+parent}/analyses";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");

            /**
             * Lists analyses.
             *
             * Create a request for the method "analyses.list".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
             * operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource of the analyses.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListAnalysesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource of the analyses. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource of the analyses.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource of the analyses. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * A filter to reduce results to a specific subset. Useful for querying conversations
             * with specific properties.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** A filter to reduce results to a specific subset. Useful for querying conversations with specific
           properties.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * A filter to reduce results to a specific subset. Useful for querying conversations
             * with specific properties.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * The maximum number of analyses to return in the response. If this value is zero, the
             * service will select a default size. A call might return fewer objects than requested.
             * A non-empty `next_page_token` in the response indicates that more data is available.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of analyses to return in the response. If this value is zero, the service will
           select a default size. A call might return fewer objects than requested. A non-empty
           `next_page_token` in the response indicates that more data is available.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of analyses to return in the response. If this value is zero, the
             * service will select a default size. A call might return fewer objects than requested.
             * A non-empty `next_page_token` in the response indicates that more data is available.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The value returned by the last `ListAnalysesResponse`; indicates that this is a
             * continuation of a prior `ListAnalyses` call and the system should return the next
             * page of data.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a
           prior `ListAnalyses` call and the system should return the next page of data.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The value returned by the last `ListAnalysesResponse`; indicates that this is a
             * continuation of a prior `ListAnalyses` call and the system should return the next
             * page of data.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Insightsdata collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
       *   {@code Contactcenterinsights.Insightsdata.List request = contactcenterinsights.insightsdata().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Insightsdata insightsdata() {
        return new Insightsdata();
      }

      /**
       * The "insightsdata" collection of methods.
       */
      public class Insightsdata {

        /**
         * Export insights data to a destination defined in the request body.
         *
         * Create a request for the method "insightsdata.export".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource to export data from.
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest}
         * @return the request
         */
        public Export export(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest content) throws java.io.IOException {
          Export result = new Export(parent, content);
          initialize(result);
          return result;
        }

        public class Export extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/insightsdata:export";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Export insights data to a destination defined in the request body.
           *
           * Create a request for the method "insightsdata.export".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Export#execute()} method to invoke the remote
           * operation. <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource to export data from.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest}
           * @since 1.13
           */
          protected Export(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource to export data from. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource to export data from.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource to export data from. */
          public Export setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the IssueModels collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
       *   {@code Contactcenterinsights.IssueModels.List request = contactcenterinsights.issueModels().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public IssueModels issueModels() {
        return new IssueModels();
      }

      /**
       * The "issueModels" collection of methods.
       */
      public class IssueModels {

        /**
         * Gets an issue model's statistics.
         *
         * Create a request for the method "issueModels.calculateIssueModelStats".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link CalculateIssueModelStats#execute()} method to invoke the
         * remote operation.
         *
         * @param issueModel Required. The resource name of the issue model to query against.
         * @return the request
         */
        public CalculateIssueModelStats calculateIssueModelStats(java.lang.String issueModel) throws java.io.IOException {
          CalculateIssueModelStats result = new CalculateIssueModelStats(issueModel);
          initialize(result);
          return result;
        }

        public class CalculateIssueModelStats extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse> {

          private static final String REST_PATH = "v1/{+issueModel}:calculateIssueModelStats";

          private final java.util.regex.Pattern ISSUE_MODEL_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Gets an issue model's statistics.
           *
           * Create a request for the method "issueModels.calculateIssueModelStats".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link CalculateIssueModelStats#execute()} method to
           * invoke the remote operation. <p> {@link CalculateIssueModelStats#initialize(com.google.api.clie
           * nt.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param issueModel Required. The resource name of the issue model to query against.
           * @since 1.13
           */
          protected CalculateIssueModelStats(java.lang.String issueModel) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse.class);
            this.issueModel = com.google.api.client.util.Preconditions.checkNotNull(issueModel, "Required parameter issueModel must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ISSUE_MODEL_PATTERN.matcher(issueModel).matches(),
                  "Parameter issueModel must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public CalculateIssueModelStats set$Xgafv(java.lang.String $Xgafv) {
            return (CalculateIssueModelStats) super.set$Xgafv($Xgafv);
          }

          @Override
          public CalculateIssueModelStats setAccessToken(java.lang.String accessToken) {
            return (CalculateIssueModelStats) super.setAccessToken(accessToken);
          }

          @Override
          public CalculateIssueModelStats setAlt(java.lang.String alt) {
            return (CalculateIssueModelStats) super.setAlt(alt);
          }

          @Override
          public CalculateIssueModelStats setCallback(java.lang.String callback) {
            return (CalculateIssueModelStats) super.setCallback(callback);
          }

          @Override
          public CalculateIssueModelStats setFields(java.lang.String fields) {
            return (CalculateIssueModelStats) super.setFields(fields);
          }

          @Override
          public CalculateIssueModelStats setKey(java.lang.String key) {
            return (CalculateIssueModelStats) super.setKey(key);
          }

          @Override
          public CalculateIssueModelStats setOauthToken(java.lang.String oauthToken) {
            return (CalculateIssueModelStats) super.setOauthToken(oauthToken);
          }

          @Override
          public CalculateIssueModelStats setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CalculateIssueModelStats) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CalculateIssueModelStats setQuotaUser(java.lang.String quotaUser) {
            return (CalculateIssueModelStats) super.setQuotaUser(quotaUser);
          }

          @Override
          public CalculateIssueModelStats setUploadType(java.lang.String uploadType) {
            return (CalculateIssueModelStats) super.setUploadType(uploadType);
          }

          @Override
          public CalculateIssueModelStats setUploadProtocol(java.lang.String uploadProtocol) {
            return (CalculateIssueModelStats) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the issue model to query against. */
          @com.google.api.client.util.Key
          private java.lang.String issueModel;

          /** Required. The resource name of the issue model to query against.
           */
          public java.lang.String getIssueModel() {
            return issueModel;
          }

          /** Required. The resource name of the issue model to query against. */
          public CalculateIssueModelStats setIssueModel(java.lang.String issueModel) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ISSUE_MODEL_PATTERN.matcher(issueModel).matches(),
                  "Parameter issueModel must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.issueModel = issueModel;
            return this;
          }

          @Override
          public CalculateIssueModelStats set(String parameterName, Object value) {
            return (CalculateIssueModelStats) super.set(parameterName, value);
          }
        }
        /**
         * Creates an issue model.
         *
         * Create a request for the method "issueModels.create".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the issue model.
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/issueModels";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates an issue model.
           *
           * Create a request for the method "issueModels.create".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the issue model.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource of the issue model. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the issue model.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource of the issue model. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an issue model.
         *
         * Create a request for the method "issueModels.delete".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the issue model to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Deletes an issue model.
           *
           * Create a request for the method "issueModels.delete".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the issue model to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Contactcenterinsights.this, "DELETE", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the issue model to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the issue model to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the issue model to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Deploys an issue model. Returns an error if a model is already deployed. An issue model can only
         * be used in analysis after it has been deployed.
         *
         * Create a request for the method "issueModels.deploy".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Deploy#execute()} method to invoke the remote operation.
         *
         * @param name Required. The issue model to deploy.
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1DeployIssueModelRequest}
         * @return the request
         */
        public Deploy deploy(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1DeployIssueModelRequest content) throws java.io.IOException {
          Deploy result = new Deploy(name, content);
          initialize(result);
          return result;
        }

        public class Deploy extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:deploy";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Deploys an issue model. Returns an error if a model is already deployed. An issue model can
           * only be used in analysis after it has been deployed.
           *
           * Create a request for the method "issueModels.deploy".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Deploy#execute()} method to invoke the remote
           * operation. <p> {@link
           * Deploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The issue model to deploy.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1DeployIssueModelRequest}
           * @since 1.13
           */
          protected Deploy(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1DeployIssueModelRequest content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public Deploy set$Xgafv(java.lang.String $Xgafv) {
            return (Deploy) super.set$Xgafv($Xgafv);
          }

          @Override
          public Deploy setAccessToken(java.lang.String accessToken) {
            return (Deploy) super.setAccessToken(accessToken);
          }

          @Override
          public Deploy setAlt(java.lang.String alt) {
            return (Deploy) super.setAlt(alt);
          }

          @Override
          public Deploy setCallback(java.lang.String callback) {
            return (Deploy) super.setCallback(callback);
          }

          @Override
          public Deploy setFields(java.lang.String fields) {
            return (Deploy) super.setFields(fields);
          }

          @Override
          public Deploy setKey(java.lang.String key) {
            return (Deploy) super.setKey(key);
          }

          @Override
          public Deploy setOauthToken(java.lang.String oauthToken) {
            return (Deploy) super.setOauthToken(oauthToken);
          }

          @Override
          public Deploy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Deploy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Deploy setQuotaUser(java.lang.String quotaUser) {
            return (Deploy) super.setQuotaUser(quotaUser);
          }

          @Override
          public Deploy setUploadType(java.lang.String uploadType) {
            return (Deploy) super.setUploadType(uploadType);
          }

          @Override
          public Deploy setUploadProtocol(java.lang.String uploadProtocol) {
            return (Deploy) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The issue model to deploy. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The issue model to deploy.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The issue model to deploy. */
          public Deploy setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Deploy set(String parameterName, Object value) {
            return (Deploy) super.set(parameterName, value);
          }
        }
        /**
         * Gets an issue model.
         *
         * Create a request for the method "issueModels.get".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the issue model to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Gets an issue model.
           *
           * Create a request for the method "issueModels.get".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the issue model to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the issue model to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the issue model to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the issue model to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists issue models.
         *
         * Create a request for the method "issueModels.list".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the issue model.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListIssueModelsResponse> {

          private static final String REST_PATH = "v1/{+parent}/issueModels";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists issue models.
           *
           * Create a request for the method "issueModels.list".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the issue model.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListIssueModelsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource of the issue model. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the issue model.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource of the issue model. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an issue model.
         *
         * Create a request for the method "issueModels.patch".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of the issue model. Format:
         *        projects/{project}/locations/{location}/issueModels/{issue_model}
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Updates an issue model.
           *
           * Create a request for the method "issueModels.patch".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of the issue model. Format:
         *        projects/{project}/locations/{location}/issueModels/{issue_model}
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel content) {
            super(Contactcenterinsights.this, "PATCH", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1IssueModel.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The resource name of the issue model. Format:
           * projects/{project}/locations/{location}/issueModels/{issue_model}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of the issue model. Format:
         projects/{project}/locations/{location}/issueModels/{issue_model}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The resource name of the issue model. Format:
           * projects/{project}/locations/{location}/issueModels/{issue_model}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Undeploys an issue model. An issue model can not be used in analysis after it has been
         * undeployed.
         *
         * Create a request for the method "issueModels.undeploy".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Undeploy#execute()} method to invoke the remote operation.
         *
         * @param name Required. The issue model to undeploy.
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest}
         * @return the request
         */
        public Undeploy undeploy(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest content) throws java.io.IOException {
          Undeploy result = new Undeploy(name, content);
          initialize(result);
          return result;
        }

        public class Undeploy extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:undeploy";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

          /**
           * Undeploys an issue model. An issue model can not be used in analysis after it has been
           * undeployed.
           *
           * Create a request for the method "issueModels.undeploy".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Undeploy#execute()} method to invoke the
           * remote operation. <p> {@link
           * Undeploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The issue model to undeploy.
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest}
           * @since 1.13
           */
          protected Undeploy(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
          }

          @Override
          public Undeploy set$Xgafv(java.lang.String $Xgafv) {
            return (Undeploy) super.set$Xgafv($Xgafv);
          }

          @Override
          public Undeploy setAccessToken(java.lang.String accessToken) {
            return (Undeploy) super.setAccessToken(accessToken);
          }

          @Override
          public Undeploy setAlt(java.lang.String alt) {
            return (Undeploy) super.setAlt(alt);
          }

          @Override
          public Undeploy setCallback(java.lang.String callback) {
            return (Undeploy) super.setCallback(callback);
          }

          @Override
          public Undeploy setFields(java.lang.String fields) {
            return (Undeploy) super.setFields(fields);
          }

          @Override
          public Undeploy setKey(java.lang.String key) {
            return (Undeploy) super.setKey(key);
          }

          @Override
          public Undeploy setOauthToken(java.lang.String oauthToken) {
            return (Undeploy) super.setOauthToken(oauthToken);
          }

          @Override
          public Undeploy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Undeploy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Undeploy setQuotaUser(java.lang.String quotaUser) {
            return (Undeploy) super.setQuotaUser(quotaUser);
          }

          @Override
          public Undeploy setUploadType(java.lang.String uploadType) {
            return (Undeploy) super.setUploadType(uploadType);
          }

          @Override
          public Undeploy setUploadProtocol(java.lang.String uploadProtocol) {
            return (Undeploy) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The issue model to undeploy. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The issue model to undeploy.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The issue model to undeploy. */
          public Undeploy setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Undeploy set(String parameterName, Object value) {
            return (Undeploy) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Issues collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
         *   {@code Contactcenterinsights.Issues.List request = contactcenterinsights.issues().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Issues issues() {
          return new Issues();
        }

        /**
         * The "issues" collection of methods.
         */
        public class Issues {

          /**
           * Gets an issue.
           *
           * Create a request for the method "issues.get".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the issue to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");

            /**
             * Gets an issue.
             *
             * Create a request for the method "issues.get".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
             * operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the issue to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the issue to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the issue to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The name of the issue to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists issues.
           *
           * Create a request for the method "issues.list".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent resource of the issue.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListIssuesResponse> {

            private static final String REST_PATH = "v1/{+parent}/issues";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");

            /**
             * Lists issues.
             *
             * Create a request for the method "issues.list".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
             * operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent resource of the issue.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListIssuesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The parent resource of the issue. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent resource of the issue.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The parent resource of the issue. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an issue.
           *
           * Create a request for the method "issues.patch".
           *
           * This request holds the parameters needed by the contactcenterinsights server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Immutable. The resource name of the issue. Format:
           *        projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");

            /**
             * Updates an issue.
             *
             * Create a request for the method "issues.patch".
             *
             * This request holds the parameters needed by the the contactcenterinsights server.  After
             * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
             * operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Immutable. The resource name of the issue. Format:
           *        projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
             * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue content) {
              super(Contactcenterinsights.this, "PATCH", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1Issue.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Immutable. The resource name of the issue. Format:
             * projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Immutable. The resource name of the issue. Format:
           projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Immutable. The resource name of the issue. Format:
             * projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/issueModels/[^/]+/issues/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The list of fields to be updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The list of fields to be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** The list of fields to be updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
       *   {@code Contactcenterinsights.Operations.List request = contactcenterinsights.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Cancel#execute()} method to invoke the remote
           * operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(Contactcenterinsights.this, "POST", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
         * the binding to use different resource name schemes, such as `users/operations`. To override the
         * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
         * configuration. For backwards compatibility, the default name includes the operations collection
         * id, however overriding users must ensure the name binding is the parent resource, without the
         * operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
           * override the binding to use different resource name schemes, such as `users/operations`. To
           * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
           * their service configuration. For backwards compatibility, the default name includes the
           * operations collection id, however overriding users must ensure the name binding is the parent
           * resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the PhraseMatchers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Contactcenterinsights contactcenterinsights = new Contactcenterinsights(...);}
       *   {@code Contactcenterinsights.PhraseMatchers.List request = contactcenterinsights.phraseMatchers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public PhraseMatchers phraseMatchers() {
        return new PhraseMatchers();
      }

      /**
       * The "phraseMatchers" collection of methods.
       */
      public class PhraseMatchers {

        /**
         * Creates a phrase matcher.
         *
         * Create a request for the method "phraseMatchers.create".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the phrase matcher. Required. The location to create a phrase
         *        matcher for. Format: `projects//locations/` or `projects//locations/`
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher> {

          private static final String REST_PATH = "v1/{+parent}/phraseMatchers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a phrase matcher.
           *
           * Create a request for the method "phraseMatchers.create".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the phrase matcher. Required. The location to create a phrase
         *        matcher for. Format: `projects//locations/` or `projects//locations/`
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher content) {
            super(Contactcenterinsights.this, "POST", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource of the phrase matcher. Required. The location to create a
           * phrase matcher for. Format: `projects//locations/` or `projects//locations/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the phrase matcher. Required. The location to create a phrase
         matcher for. Format: `projects//locations/` or `projects//locations/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource of the phrase matcher. Required. The location to create a
           * phrase matcher for. Format: `projects//locations/` or `projects//locations/`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a phrase matcher.
         *
         * Create a request for the method "phraseMatchers.delete".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the phrase matcher to delete.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");

          /**
           * Deletes a phrase matcher.
           *
           * Create a request for the method "phraseMatchers.delete".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the phrase matcher to delete.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Contactcenterinsights.this, "DELETE", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the phrase matcher to delete. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the phrase matcher to delete.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the phrase matcher to delete. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a phrase matcher.
         *
         * Create a request for the method "phraseMatchers.get".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the phrase matcher to get.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");

          /**
           * Gets a phrase matcher.
           *
           * Create a request for the method "phraseMatchers.get".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the phrase matcher to get.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the phrase matcher to get. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the phrase matcher to get.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the phrase matcher to get. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists phrase matchers.
         *
         * Create a request for the method "phraseMatchers.list".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource of the phrase matcher.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse> {

          private static final String REST_PATH = "v1/{+parent}/phraseMatchers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists phrase matchers.
           *
           * Create a request for the method "phraseMatchers.list".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource of the phrase matcher.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Contactcenterinsights.this, "GET", REST_PATH, null, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent resource of the phrase matcher. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource of the phrase matcher.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent resource of the phrase matcher. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * A filter to reduce results to a specific subset. Useful for querying phrase matchers
           * with specific properties.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific
         properties.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * A filter to reduce results to a specific subset. Useful for querying phrase matchers
           * with specific properties.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of phrase matchers to return in the response. If this value is zero,
           * the service will select a default size. A call might return fewer objects than
           * requested. A non-empty `next_page_token` in the response indicates that more data is
           * available.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of phrase matchers to return in the response. If this value is zero, the service
         will select a default size. A call might return fewer objects than requested. A non-empty
         `next_page_token` in the response indicates that more data is available.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of phrase matchers to return in the response. If this value is zero,
           * the service will select a default size. A call might return fewer objects than
           * requested. A non-empty `next_page_token` in the response indicates that more data is
           * available.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The value returned by the last `ListPhraseMatchersResponse`. This value indicates that
           * this is a continuation of a prior `ListPhraseMatchers` call and that the system should
           * return the next page of data.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a
         continuation of a prior `ListPhraseMatchers` call and that the system should return the next page
         of data.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The value returned by the last `ListPhraseMatchersResponse`. This value indicates that
           * this is a continuation of a prior `ListPhraseMatchers` call and that the system should
           * return the next page of data.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a phrase matcher.
         *
         * Create a request for the method "phraseMatchers.patch".
         *
         * This request holds the parameters needed by the contactcenterinsights server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the phrase matcher. Format:
         *        projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
         * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ContactcenterinsightsRequest<com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");

          /**
           * Updates a phrase matcher.
           *
           * Create a request for the method "phraseMatchers.patch".
           *
           * This request holds the parameters needed by the the contactcenterinsights server.  After
           * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the phrase matcher. Format:
         *        projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
           * @param content the {@link com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher content) {
            super(Contactcenterinsights.this, "PATCH", REST_PATH, content, com.google.api.services.contactcenterinsights.v1.model.GoogleCloudContactcenterinsightsV1PhraseMatcher.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the phrase matcher. Format:
           * projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the phrase matcher. Format:
         projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the phrase matcher. Format:
           * projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/phraseMatchers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Contactcenterinsights}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Contactcenterinsights}. */
    @Override
    public Contactcenterinsights build() {
      return new Contactcenterinsights(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ContactcenterinsightsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setContactcenterinsightsRequestInitializer(
        ContactcenterinsightsRequestInitializer contactcenterinsightsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(contactcenterinsightsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
