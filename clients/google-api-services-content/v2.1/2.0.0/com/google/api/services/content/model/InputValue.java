/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.content.model;

/**
 * Input provided by the merchant for input field.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Content API for Shopping. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InputValue extends com.google.api.client.json.GenericJson {

  /**
   * Value for checkbox input field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InputValueCheckboxInputValue checkboxInputValue;

  /**
   * Value for choice input field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InputValueChoiceInputValue choiceInputValue;

  /**
   * Required. Id of the corresponding input field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inputFieldId;

  /**
   * Value for text input field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InputValueTextInputValue textInputValue;

  /**
   * Value for checkbox input field.
   * @return value or {@code null} for none
   */
  public InputValueCheckboxInputValue getCheckboxInputValue() {
    return checkboxInputValue;
  }

  /**
   * Value for checkbox input field.
   * @param checkboxInputValue checkboxInputValue or {@code null} for none
   */
  public InputValue setCheckboxInputValue(InputValueCheckboxInputValue checkboxInputValue) {
    this.checkboxInputValue = checkboxInputValue;
    return this;
  }

  /**
   * Value for choice input field.
   * @return value or {@code null} for none
   */
  public InputValueChoiceInputValue getChoiceInputValue() {
    return choiceInputValue;
  }

  /**
   * Value for choice input field.
   * @param choiceInputValue choiceInputValue or {@code null} for none
   */
  public InputValue setChoiceInputValue(InputValueChoiceInputValue choiceInputValue) {
    this.choiceInputValue = choiceInputValue;
    return this;
  }

  /**
   * Required. Id of the corresponding input field.
   * @return value or {@code null} for none
   */
  public java.lang.String getInputFieldId() {
    return inputFieldId;
  }

  /**
   * Required. Id of the corresponding input field.
   * @param inputFieldId inputFieldId or {@code null} for none
   */
  public InputValue setInputFieldId(java.lang.String inputFieldId) {
    this.inputFieldId = inputFieldId;
    return this;
  }

  /**
   * Value for text input field.
   * @return value or {@code null} for none
   */
  public InputValueTextInputValue getTextInputValue() {
    return textInputValue;
  }

  /**
   * Value for text input field.
   * @param textInputValue textInputValue or {@code null} for none
   */
  public InputValue setTextInputValue(InputValueTextInputValue textInputValue) {
    this.textInputValue = textInputValue;
    return this;
  }

  @Override
  public InputValue set(String fieldName, Object value) {
    return (InputValue) super.set(fieldName, value);
  }

  @Override
  public InputValue clone() {
    return (InputValue) super.clone();
  }

}
