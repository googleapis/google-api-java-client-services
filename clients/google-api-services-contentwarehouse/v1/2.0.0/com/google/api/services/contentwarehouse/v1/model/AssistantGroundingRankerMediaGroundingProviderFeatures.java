/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Features to be passed from Media GP to HGR. Next ID: 14
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantGroundingRankerMediaGroundingProviderFeatures extends com.google.api.client.json.GenericJson {

  /**
   * Release type for an album container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String albumReleaseType;

  /**
   * Temporary ambiguity classifier signal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ambiguityClassifier;

  /**
   * True if the argument's type was explicitly mentioned in the query.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasTypeSemanticEdge;

  /**
   * Whether the candidate is YouTube CAST_VIDEO candidate. CAST_VIDEO is a deeplink platform. This
   * signal will be used to promote YouTube Music screenful candidates with CAST_VIDEO platform for
   * free users because free users cannot get exact entities in screenless response and can get
   * exact entities with ads in screenful response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isCastVideo;

  /**
   * True if the media search query is included in the entity name and artists.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isMediaSearchQuerySubsetOfEntityNameAndArtist;

  /**
   * True if the media deeplink has tag SEED_RADIO.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isSeedRadio;

  /**
   * True if the user requests seed radio.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isSeedRadioRequest;

  /**
   * MediaAquaAction::media_content_type from interpretation. It can be used for cross-content type
   * ranking, for example, if a candidate's content type does not match this content type from
   * interpretation, this candidate will be slightly demoted. Also, we might avoid fetching some
   * signals when the content type is generic music, since some content types do not need ranking.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaContentType;

  /**
   * MSC(Media Short Click) rate. MSC rate = total number of MSC events / total number of MSC
   * candidates The event is considered as MSC candidate if the event is a media seeking
   * query(excluding follow-ons) and the media result is successfully fulfilled. The event is MSC
   * event if any of the following is in the following queries within 30 secs: FOLLOWED_BY_DUPLICATE
   * FOLLOWED_BY_ADD_OR_DELETE_MANUAL_REFINEMENT FOLLOWED_BY_SAME_VERTICAL (MEDIA) FOLLOWED_BY_STOP
   * More details: go/media-ranking, go/billboard-navboost, go/magma-music-actions-efrac
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float mscRate;

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_MUSIC_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double scubedPSaiMusic;

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_TVM_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double scubedPSaiTvm;

  /**
   * Type of the media item.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double youtubeConfidenceScore;

  /**
   * Release type for an album container.
   * @return value or {@code null} for none
   */
  public java.lang.String getAlbumReleaseType() {
    return albumReleaseType;
  }

  /**
   * Release type for an album container.
   * @param albumReleaseType albumReleaseType or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setAlbumReleaseType(java.lang.String albumReleaseType) {
    this.albumReleaseType = albumReleaseType;
    return this;
  }

  /**
   * Temporary ambiguity classifier signal.
   * @return value or {@code null} for none
   */
  public java.lang.String getAmbiguityClassifier() {
    return ambiguityClassifier;
  }

  /**
   * Temporary ambiguity classifier signal.
   * @param ambiguityClassifier ambiguityClassifier or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setAmbiguityClassifier(java.lang.String ambiguityClassifier) {
    this.ambiguityClassifier = ambiguityClassifier;
    return this;
  }

  /**
   * True if the argument's type was explicitly mentioned in the query.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasTypeSemanticEdge() {
    return hasTypeSemanticEdge;
  }

  /**
   * True if the argument's type was explicitly mentioned in the query.
   * @param hasTypeSemanticEdge hasTypeSemanticEdge or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setHasTypeSemanticEdge(java.lang.Boolean hasTypeSemanticEdge) {
    this.hasTypeSemanticEdge = hasTypeSemanticEdge;
    return this;
  }

  /**
   * Whether the candidate is YouTube CAST_VIDEO candidate. CAST_VIDEO is a deeplink platform. This
   * signal will be used to promote YouTube Music screenful candidates with CAST_VIDEO platform for
   * free users because free users cannot get exact entities in screenless response and can get
   * exact entities with ads in screenful response.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsCastVideo() {
    return isCastVideo;
  }

  /**
   * Whether the candidate is YouTube CAST_VIDEO candidate. CAST_VIDEO is a deeplink platform. This
   * signal will be used to promote YouTube Music screenful candidates with CAST_VIDEO platform for
   * free users because free users cannot get exact entities in screenless response and can get
   * exact entities with ads in screenful response.
   * @param isCastVideo isCastVideo or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setIsCastVideo(java.lang.Boolean isCastVideo) {
    this.isCastVideo = isCastVideo;
    return this;
  }

  /**
   * True if the media search query is included in the entity name and artists.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsMediaSearchQuerySubsetOfEntityNameAndArtist() {
    return isMediaSearchQuerySubsetOfEntityNameAndArtist;
  }

  /**
   * True if the media search query is included in the entity name and artists.
   * @param isMediaSearchQuerySubsetOfEntityNameAndArtist isMediaSearchQuerySubsetOfEntityNameAndArtist or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setIsMediaSearchQuerySubsetOfEntityNameAndArtist(java.lang.Boolean isMediaSearchQuerySubsetOfEntityNameAndArtist) {
    this.isMediaSearchQuerySubsetOfEntityNameAndArtist = isMediaSearchQuerySubsetOfEntityNameAndArtist;
    return this;
  }

  /**
   * True if the media deeplink has tag SEED_RADIO.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsSeedRadio() {
    return isSeedRadio;
  }

  /**
   * True if the media deeplink has tag SEED_RADIO.
   * @param isSeedRadio isSeedRadio or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setIsSeedRadio(java.lang.Boolean isSeedRadio) {
    this.isSeedRadio = isSeedRadio;
    return this;
  }

  /**
   * True if the user requests seed radio.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsSeedRadioRequest() {
    return isSeedRadioRequest;
  }

  /**
   * True if the user requests seed radio.
   * @param isSeedRadioRequest isSeedRadioRequest or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setIsSeedRadioRequest(java.lang.Boolean isSeedRadioRequest) {
    this.isSeedRadioRequest = isSeedRadioRequest;
    return this;
  }

  /**
   * MediaAquaAction::media_content_type from interpretation. It can be used for cross-content type
   * ranking, for example, if a candidate's content type does not match this content type from
   * interpretation, this candidate will be slightly demoted. Also, we might avoid fetching some
   * signals when the content type is generic music, since some content types do not need ranking.
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaContentType() {
    return mediaContentType;
  }

  /**
   * MediaAquaAction::media_content_type from interpretation. It can be used for cross-content type
   * ranking, for example, if a candidate's content type does not match this content type from
   * interpretation, this candidate will be slightly demoted. Also, we might avoid fetching some
   * signals when the content type is generic music, since some content types do not need ranking.
   * @param mediaContentType mediaContentType or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setMediaContentType(java.lang.String mediaContentType) {
    this.mediaContentType = mediaContentType;
    return this;
  }

  /**
   * MSC(Media Short Click) rate. MSC rate = total number of MSC events / total number of MSC
   * candidates The event is considered as MSC candidate if the event is a media seeking
   * query(excluding follow-ons) and the media result is successfully fulfilled. The event is MSC
   * event if any of the following is in the following queries within 30 secs: FOLLOWED_BY_DUPLICATE
   * FOLLOWED_BY_ADD_OR_DELETE_MANUAL_REFINEMENT FOLLOWED_BY_SAME_VERTICAL (MEDIA) FOLLOWED_BY_STOP
   * More details: go/media-ranking, go/billboard-navboost, go/magma-music-actions-efrac
   * @return value or {@code null} for none
   */
  public java.lang.Float getMscRate() {
    return mscRate;
  }

  /**
   * MSC(Media Short Click) rate. MSC rate = total number of MSC events / total number of MSC
   * candidates The event is considered as MSC candidate if the event is a media seeking
   * query(excluding follow-ons) and the media result is successfully fulfilled. The event is MSC
   * event if any of the following is in the following queries within 30 secs: FOLLOWED_BY_DUPLICATE
   * FOLLOWED_BY_ADD_OR_DELETE_MANUAL_REFINEMENT FOLLOWED_BY_SAME_VERTICAL (MEDIA) FOLLOWED_BY_STOP
   * More details: go/media-ranking, go/billboard-navboost, go/magma-music-actions-efrac
   * @param mscRate mscRate or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setMscRate(java.lang.Float mscRate) {
    this.mscRate = mscRate;
    return this;
  }

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_MUSIC_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * @return value or {@code null} for none
   */
  public java.lang.Double getScubedPSaiMusic() {
    return scubedPSaiMusic;
  }

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_MUSIC_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * @param scubedPSaiMusic scubedPSaiMusic or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setScubedPSaiMusic(java.lang.Double scubedPSaiMusic) {
    this.scubedPSaiMusic = scubedPSaiMusic;
    return this;
  }

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_TVM_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * @return value or {@code null} for none
   */
  public java.lang.Double getScubedPSaiTvm() {
    return scubedPSaiTvm;
  }

  /**
   * Scubed predicted SAI value (pSAI - SCUBED_TVM_ACTIONS) for music populated by a regression
   * model that incorporates a BERT model signal as well as other Scubed signals.
   * @param scubedPSaiTvm scubedPSaiTvm or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setScubedPSaiTvm(java.lang.Double scubedPSaiTvm) {
    this.scubedPSaiTvm = scubedPSaiTvm;
    return this;
  }

  /**
   * Type of the media item.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the media item.
   * @param type type or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getYoutubeConfidenceScore() {
    return youtubeConfidenceScore;
  }

  /**
   * @param youtubeConfidenceScore youtubeConfidenceScore or {@code null} for none
   */
  public AssistantGroundingRankerMediaGroundingProviderFeatures setYoutubeConfidenceScore(java.lang.Double youtubeConfidenceScore) {
    this.youtubeConfidenceScore = youtubeConfidenceScore;
    return this;
  }

  @Override
  public AssistantGroundingRankerMediaGroundingProviderFeatures set(String fieldName, Object value) {
    return (AssistantGroundingRankerMediaGroundingProviderFeatures) super.set(fieldName, value);
  }

  @Override
  public AssistantGroundingRankerMediaGroundingProviderFeatures clone() {
    return (AssistantGroundingRankerMediaGroundingProviderFeatures) super.clone();
  }

}
