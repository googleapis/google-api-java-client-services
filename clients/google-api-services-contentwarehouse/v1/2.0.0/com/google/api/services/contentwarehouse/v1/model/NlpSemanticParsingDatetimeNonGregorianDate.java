/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Non-Gregorian dates are similar to AbsoluteDateTime, but use non-Gregorian calendars.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingDatetimeNonGregorianDate extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String chineseMonth;

  /**
   * The day is the offset within the month, same as in Gregorian calendars.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer day;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hebrewMonth;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String islamicMonth;

  /**
   * The year is relative to the calendar (e.g. 5777 for Hebrew calendar).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer year;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getChineseMonth() {
    return chineseMonth;
  }

  /**
   * @param chineseMonth chineseMonth or {@code null} for none
   */
  public NlpSemanticParsingDatetimeNonGregorianDate setChineseMonth(java.lang.String chineseMonth) {
    this.chineseMonth = chineseMonth;
    return this;
  }

  /**
   * The day is the offset within the month, same as in Gregorian calendars.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDay() {
    return day;
  }

  /**
   * The day is the offset within the month, same as in Gregorian calendars.
   * @param day day or {@code null} for none
   */
  public NlpSemanticParsingDatetimeNonGregorianDate setDay(java.lang.Integer day) {
    this.day = day;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getHebrewMonth() {
    return hebrewMonth;
  }

  /**
   * @param hebrewMonth hebrewMonth or {@code null} for none
   */
  public NlpSemanticParsingDatetimeNonGregorianDate setHebrewMonth(java.lang.String hebrewMonth) {
    this.hebrewMonth = hebrewMonth;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getIslamicMonth() {
    return islamicMonth;
  }

  /**
   * @param islamicMonth islamicMonth or {@code null} for none
   */
  public NlpSemanticParsingDatetimeNonGregorianDate setIslamicMonth(java.lang.String islamicMonth) {
    this.islamicMonth = islamicMonth;
    return this;
  }

  /**
   * The year is relative to the calendar (e.g. 5777 for Hebrew calendar).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * The year is relative to the calendar (e.g. 5777 for Hebrew calendar).
   * @param year year or {@code null} for none
   */
  public NlpSemanticParsingDatetimeNonGregorianDate setYear(java.lang.Integer year) {
    this.year = year;
    return this;
  }

  @Override
  public NlpSemanticParsingDatetimeNonGregorianDate set(String fieldName, Object value) {
    return (NlpSemanticParsingDatetimeNonGregorianDate) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingDatetimeNonGregorianDate clone() {
    return (NlpSemanticParsingDatetimeNonGregorianDate) super.clone();
  }

}
