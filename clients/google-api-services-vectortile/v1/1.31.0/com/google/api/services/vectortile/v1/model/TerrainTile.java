/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vectortile.v1.model;

/**
 * A tile containing information about the terrain located in the region it covers.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Semantic Tile API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TerrainTile extends com.google.api.client.json.GenericJson {

  /**
   * The global tile coordinates that uniquely identify this tile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TileCoordinates coordinates;

  /**
   * Terrain elevation data encoded as a FirstDerivativeElevationGrid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FirstDerivativeElevationGrid firstDerivative;

  /**
   * Resource name of the tile. The tile resource name is prefixed by its collection ID `terrain/`
   * followed by the resource ID, which encodes the tile's global x and y coordinates and zoom level
   * as `@,,z`. For example, `terrain/@1,2,3z`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Terrain elevation data encoded as a SecondDerivativeElevationGrid. .
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecondDerivativeElevationGrid secondDerivative;

  /**
   * The global tile coordinates that uniquely identify this tile.
   * @return value or {@code null} for none
   */
  public TileCoordinates getCoordinates() {
    return coordinates;
  }

  /**
   * The global tile coordinates that uniquely identify this tile.
   * @param coordinates coordinates or {@code null} for none
   */
  public TerrainTile setCoordinates(TileCoordinates coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  /**
   * Terrain elevation data encoded as a FirstDerivativeElevationGrid.
   * @return value or {@code null} for none
   */
  public FirstDerivativeElevationGrid getFirstDerivative() {
    return firstDerivative;
  }

  /**
   * Terrain elevation data encoded as a FirstDerivativeElevationGrid.
   * @param firstDerivative firstDerivative or {@code null} for none
   */
  public TerrainTile setFirstDerivative(FirstDerivativeElevationGrid firstDerivative) {
    this.firstDerivative = firstDerivative;
    return this;
  }

  /**
   * Resource name of the tile. The tile resource name is prefixed by its collection ID `terrain/`
   * followed by the resource ID, which encodes the tile's global x and y coordinates and zoom level
   * as `@,,z`. For example, `terrain/@1,2,3z`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name of the tile. The tile resource name is prefixed by its collection ID `terrain/`
   * followed by the resource ID, which encodes the tile's global x and y coordinates and zoom level
   * as `@,,z`. For example, `terrain/@1,2,3z`.
   * @param name name or {@code null} for none
   */
  public TerrainTile setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Terrain elevation data encoded as a SecondDerivativeElevationGrid. .
   * @return value or {@code null} for none
   */
  public SecondDerivativeElevationGrid getSecondDerivative() {
    return secondDerivative;
  }

  /**
   * Terrain elevation data encoded as a SecondDerivativeElevationGrid. .
   * @param secondDerivative secondDerivative or {@code null} for none
   */
  public TerrainTile setSecondDerivative(SecondDerivativeElevationGrid secondDerivative) {
    this.secondDerivative = secondDerivative;
    return this;
  }

  @Override
  public TerrainTile set(String fieldName, Object value) {
    return (TerrainTile) super.set(fieldName, value);
  }

  @Override
  public TerrainTile clone() {
    return (TerrainTile) super.clone();
  }

}
