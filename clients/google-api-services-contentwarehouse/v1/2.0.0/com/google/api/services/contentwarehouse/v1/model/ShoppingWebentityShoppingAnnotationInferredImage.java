/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Images inferred from context instead of propagated from Shopping backends. The same image might
 * be inferred via different means; then it may appear multiple times in Offer.inferred_images list
 * with different values of inferred_image_type field.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ShoppingWebentityShoppingAnnotationInferredImage extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger inferredImageId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inferredImageSource;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inferredImageType;

  /**
   * This field will only be populated if the inferred image is a neardup of an inferred image. It
   * stores the type and source of the images it is a neardup of.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ShoppingWebentityShoppingAnnotationInferredImageNeardupInfo> neardupInfo;

  /**
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getInferredImageId() {
    return inferredImageId;
  }

  /**
   * @param inferredImageId inferredImageId or {@code null} for none
   */
  public ShoppingWebentityShoppingAnnotationInferredImage setInferredImageId(java.math.BigInteger inferredImageId) {
    this.inferredImageId = inferredImageId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getInferredImageSource() {
    return inferredImageSource;
  }

  /**
   * @param inferredImageSource inferredImageSource or {@code null} for none
   */
  public ShoppingWebentityShoppingAnnotationInferredImage setInferredImageSource(java.lang.String inferredImageSource) {
    this.inferredImageSource = inferredImageSource;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getInferredImageType() {
    return inferredImageType;
  }

  /**
   * @param inferredImageType inferredImageType or {@code null} for none
   */
  public ShoppingWebentityShoppingAnnotationInferredImage setInferredImageType(java.lang.String inferredImageType) {
    this.inferredImageType = inferredImageType;
    return this;
  }

  /**
   * This field will only be populated if the inferred image is a neardup of an inferred image. It
   * stores the type and source of the images it is a neardup of.
   * @return value or {@code null} for none
   */
  public java.util.List<ShoppingWebentityShoppingAnnotationInferredImageNeardupInfo> getNeardupInfo() {
    return neardupInfo;
  }

  /**
   * This field will only be populated if the inferred image is a neardup of an inferred image. It
   * stores the type and source of the images it is a neardup of.
   * @param neardupInfo neardupInfo or {@code null} for none
   */
  public ShoppingWebentityShoppingAnnotationInferredImage setNeardupInfo(java.util.List<ShoppingWebentityShoppingAnnotationInferredImageNeardupInfo> neardupInfo) {
    this.neardupInfo = neardupInfo;
    return this;
  }

  @Override
  public ShoppingWebentityShoppingAnnotationInferredImage set(String fieldName, Object value) {
    return (ShoppingWebentityShoppingAnnotationInferredImage) super.set(fieldName, value);
  }

  @Override
  public ShoppingWebentityShoppingAnnotationInferredImage clone() {
    return (ShoppingWebentityShoppingAnnotationInferredImage) super.clone();
  }

}
