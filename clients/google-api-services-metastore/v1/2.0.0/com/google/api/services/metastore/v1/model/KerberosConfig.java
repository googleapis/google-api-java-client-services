/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.metastore.v1.model;

/**
 * Configuration information for a Kerberos principal.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dataproc Metastore API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KerberosConfig extends com.google.api.client.json.GenericJson {

  /**
   * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key
   * Distribution Center (KDC).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Secret keytab;

  /**
   * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form
   * gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf
   * explicitly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String krb5ConfigGcsUri;

  /**
   * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical
   * principal is of the form primary/instance@REALM, but there is no exact format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String principal;

  /**
   * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key
   * Distribution Center (KDC).
   * @return value or {@code null} for none
   */
  public Secret getKeytab() {
    return keytab;
  }

  /**
   * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key
   * Distribution Center (KDC).
   * @param keytab keytab or {@code null} for none
   */
  public KerberosConfig setKeytab(Secret keytab) {
    this.keytab = keytab;
    return this;
  }

  /**
   * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form
   * gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf
   * explicitly.
   * @return value or {@code null} for none
   */
  public java.lang.String getKrb5ConfigGcsUri() {
    return krb5ConfigGcsUri;
  }

  /**
   * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form
   * gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf
   * explicitly.
   * @param krb5ConfigGcsUri krb5ConfigGcsUri or {@code null} for none
   */
  public KerberosConfig setKrb5ConfigGcsUri(java.lang.String krb5ConfigGcsUri) {
    this.krb5ConfigGcsUri = krb5ConfigGcsUri;
    return this;
  }

  /**
   * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical
   * principal is of the form primary/instance@REALM, but there is no exact format.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrincipal() {
    return principal;
  }

  /**
   * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical
   * principal is of the form primary/instance@REALM, but there is no exact format.
   * @param principal principal or {@code null} for none
   */
  public KerberosConfig setPrincipal(java.lang.String principal) {
    this.principal = principal;
    return this;
  }

  @Override
  public KerberosConfig set(String fieldName, Object value) {
    return (KerberosConfig) super.set(fieldName, value);
  }

  @Override
  public KerberosConfig clone() {
    return (KerberosConfig) super.clone();
  }

}
