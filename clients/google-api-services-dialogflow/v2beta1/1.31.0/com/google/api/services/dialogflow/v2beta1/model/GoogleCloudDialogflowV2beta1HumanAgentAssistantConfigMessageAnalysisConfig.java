/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v2beta1.model;

/**
 * Configuration for analyses to run on each conversation message.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig extends com.google.api.client.json.GenericJson {

  /**
   * Enable entity extraction in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Currently, this feature is not general available, please
   * contact Google to get access.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableEntityExtraction;

  /**
   * Enable sentiment analysis in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Sentiment analysis inspects user input and identifies the
   * prevailing subjective opinion, especially to determine a user's attitude as positive, negative,
   * or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For
   * Participants.StreamingAnalyzeContent method, result will be in
   * StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For
   * Participants.AnalyzeContent method, result will be in
   * AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method,
   * result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification
   * is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableSentimentAnalysis;

  /**
   * Enable entity extraction in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Currently, this feature is not general available, please
   * contact Google to get access.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableEntityExtraction() {
    return enableEntityExtraction;
  }

  /**
   * Enable entity extraction in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Currently, this feature is not general available, please
   * contact Google to get access.
   * @param enableEntityExtraction enableEntityExtraction or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig setEnableEntityExtraction(java.lang.Boolean enableEntityExtraction) {
    this.enableEntityExtraction = enableEntityExtraction;
    return this;
  }

  /**
   * Enable sentiment analysis in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Sentiment analysis inspects user input and identifies the
   * prevailing subjective opinion, especially to determine a user's attitude as positive, negative,
   * or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For
   * Participants.StreamingAnalyzeContent method, result will be in
   * StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For
   * Participants.AnalyzeContent method, result will be in
   * AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method,
   * result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification
   * is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableSentimentAnalysis() {
    return enableSentimentAnalysis;
  }

  /**
   * Enable sentiment analysis in conversation messages on [agent assist
   * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If
   * unspecified, defaults to false. Sentiment analysis inspects user input and identifies the
   * prevailing subjective opinion, especially to determine a user's attitude as positive, negative,
   * or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For
   * Participants.StreamingAnalyzeContent method, result will be in
   * StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For
   * Participants.AnalyzeContent method, result will be in
   * AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method,
   * result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification
   * is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.
   * @param enableSentimentAnalysis enableSentimentAnalysis or {@code null} for none
   */
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig setEnableSentimentAnalysis(java.lang.Boolean enableSentimentAnalysis) {
    this.enableSentimentAnalysis = enableSentimentAnalysis;
    return this;
  }

  @Override
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig set(String fieldName, Object value) {
    return (GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig clone() {
    return (GoogleCloudDialogflowV2beta1HumanAgentAssistantConfigMessageAnalysisConfig) super.clone();
  }

}
