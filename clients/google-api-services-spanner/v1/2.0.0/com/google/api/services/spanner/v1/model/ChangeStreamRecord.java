/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * Spanner Change Streams enable customers to capture and stream out changes to their Spanner
 * databases in real-time. A change stream can be created with option
 * partition_mode='IMMUTABLE_KEY_RANGE' or partition_mode='MUTABLE_KEY_RANGE'. This message is only
 * used in Change Streams created with the option partition_mode='MUTABLE_KEY_RANGE'. Spanner
 * automatically creates a special Table-Valued Function (TVF) along with each Change Streams. The
 * function provides access to the change stream's records. The function is named READ_ (where is
 * the name of the change stream), and it returns a table with only one column called ChangeRecord.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ChangeStreamRecord extends com.google.api.client.json.GenericJson {

  /**
   * Data change record describing a data change for a change stream partition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DataChangeRecord dataChangeRecord;

  /**
   * Heartbeat record describing a heartbeat for a change stream partition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HeartbeatRecord heartbeatRecord;

  /**
   * Partition end record describing a terminated change stream partition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PartitionEndRecord partitionEndRecord;

  /**
   * Partition event record describing key range changes for a change stream partition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PartitionEventRecord partitionEventRecord;

  /**
   * Partition start record describing a new change stream partition.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PartitionStartRecord partitionStartRecord;

  /**
   * Data change record describing a data change for a change stream partition.
   * @return value or {@code null} for none
   */
  public DataChangeRecord getDataChangeRecord() {
    return dataChangeRecord;
  }

  /**
   * Data change record describing a data change for a change stream partition.
   * @param dataChangeRecord dataChangeRecord or {@code null} for none
   */
  public ChangeStreamRecord setDataChangeRecord(DataChangeRecord dataChangeRecord) {
    this.dataChangeRecord = dataChangeRecord;
    return this;
  }

  /**
   * Heartbeat record describing a heartbeat for a change stream partition.
   * @return value or {@code null} for none
   */
  public HeartbeatRecord getHeartbeatRecord() {
    return heartbeatRecord;
  }

  /**
   * Heartbeat record describing a heartbeat for a change stream partition.
   * @param heartbeatRecord heartbeatRecord or {@code null} for none
   */
  public ChangeStreamRecord setHeartbeatRecord(HeartbeatRecord heartbeatRecord) {
    this.heartbeatRecord = heartbeatRecord;
    return this;
  }

  /**
   * Partition end record describing a terminated change stream partition.
   * @return value or {@code null} for none
   */
  public PartitionEndRecord getPartitionEndRecord() {
    return partitionEndRecord;
  }

  /**
   * Partition end record describing a terminated change stream partition.
   * @param partitionEndRecord partitionEndRecord or {@code null} for none
   */
  public ChangeStreamRecord setPartitionEndRecord(PartitionEndRecord partitionEndRecord) {
    this.partitionEndRecord = partitionEndRecord;
    return this;
  }

  /**
   * Partition event record describing key range changes for a change stream partition.
   * @return value or {@code null} for none
   */
  public PartitionEventRecord getPartitionEventRecord() {
    return partitionEventRecord;
  }

  /**
   * Partition event record describing key range changes for a change stream partition.
   * @param partitionEventRecord partitionEventRecord or {@code null} for none
   */
  public ChangeStreamRecord setPartitionEventRecord(PartitionEventRecord partitionEventRecord) {
    this.partitionEventRecord = partitionEventRecord;
    return this;
  }

  /**
   * Partition start record describing a new change stream partition.
   * @return value or {@code null} for none
   */
  public PartitionStartRecord getPartitionStartRecord() {
    return partitionStartRecord;
  }

  /**
   * Partition start record describing a new change stream partition.
   * @param partitionStartRecord partitionStartRecord or {@code null} for none
   */
  public ChangeStreamRecord setPartitionStartRecord(PartitionStartRecord partitionStartRecord) {
    this.partitionStartRecord = partitionStartRecord;
    return this;
  }

  @Override
  public ChangeStreamRecord set(String fieldName, Object value) {
    return (ChangeStreamRecord) super.set(fieldName, value);
  }

  @Override
  public ChangeStreamRecord clone() {
    return (ChangeStreamRecord) super.clone();
  }

}
