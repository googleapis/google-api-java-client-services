/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v2beta1.model;

/**
 * The Knowledge Connector settings for this page or flow. This includes information such as the
 * attached Knowledge Bases, and the way to execute fulfillment.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3KnowledgeConnectorSettings extends com.google.api.client.json.GenericJson {

  /**
   * Optional. List of related data store connections.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3DataStoreConnection> dataStoreConnections;

  static {
    // hack to force ProGuard to consider GoogleCloudDialogflowCxV3DataStoreConnection used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudDialogflowCxV3DataStoreConnection.class);
  }

  /**
   * Whether Knowledge Connector is enabled or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * The target flow to transition to. Format: `projects//locations//agents//flows/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetFlow;

  /**
   * The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetPage;

  /**
   * The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by
   * Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers`
   * (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains
   * the corresponding questions) to construct the fulfillment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment;

  /**
   * Optional. List of related data store connections.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3DataStoreConnection> getDataStoreConnections() {
    return dataStoreConnections;
  }

  /**
   * Optional. List of related data store connections.
   * @param dataStoreConnections dataStoreConnections or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings setDataStoreConnections(java.util.List<GoogleCloudDialogflowCxV3DataStoreConnection> dataStoreConnections) {
    this.dataStoreConnections = dataStoreConnections;
    return this;
  }

  /**
   * Whether Knowledge Connector is enabled or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Whether Knowledge Connector is enabled or not.
   * @param enabled enabled or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * The target flow to transition to. Format: `projects//locations//agents//flows/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetFlow() {
    return targetFlow;
  }

  /**
   * The target flow to transition to. Format: `projects//locations//agents//flows/`.
   * @param targetFlow targetFlow or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings setTargetFlow(java.lang.String targetFlow) {
    this.targetFlow = targetFlow;
    return this;
  }

  /**
   * The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetPage() {
    return targetPage;
  }

  /**
   * The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
   * @param targetPage targetPage or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings setTargetPage(java.lang.String targetPage) {
    this.targetPage = targetPage;
    return this;
  }

  /**
   * The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by
   * Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers`
   * (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains
   * the corresponding questions) to construct the fulfillment.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3Fulfillment getTriggerFulfillment() {
    return triggerFulfillment;
  }

  /**
   * The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by
   * Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers`
   * (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains
   * the corresponding questions) to construct the fulfillment.
   * @param triggerFulfillment triggerFulfillment or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings setTriggerFulfillment(GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment) {
    this.triggerFulfillment = triggerFulfillment;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3KnowledgeConnectorSettings clone() {
    return (GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) super.clone();
  }

}
