/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.saasservicemgmt.v1beta1;

/**
 * Service definition for SaaSServiceManagement (v1beta1).
 *
 * <p>
 * Model, deploy, and operate your SaaS at scale. 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/saas-runtime/docs" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SaaSServiceManagementRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SaaSServiceManagement extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the SaaS Runtime API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://saasservicemgmt.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://saasservicemgmt.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SaaSServiceManagement(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SaaSServiceManagement(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
   *   {@code SaaSServiceManagement.Projects.List request = saasservicemgmt.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
     *   {@code SaaSServiceManagement.Locations.List request = saasservicemgmt.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the saasservicemgmt server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.GoogleCloudLocationLocation> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.GoogleCloudLocationLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the saasservicemgmt server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. Unless explicitly documented otherwise, don't use this unsupported field which
         * is primarily intended for internal usage.
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> extraLocationTypes;

        /** Optional. Unless explicitly documented otherwise, don't use this unsupported field which is
       primarily intended for internal usage.
         */
        public java.util.List<java.lang.String> getExtraLocationTypes() {
          return extraLocationTypes;
        }

        /**
         * Optional. Unless explicitly documented otherwise, don't use this unsupported field which
         * is primarily intended for internal usage.
         */
        public List setExtraLocationTypes(java.util.List<java.lang.String> extraLocationTypes) {
          this.extraLocationTypes = extraLocationTypes;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Releases collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.Releases.List request = saasservicemgmt.releases().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Releases releases() {
        return new Releases();
      }

      /**
       * The "releases" collection of methods.
       */
      public class Releases {

        /**
         * Create a new release.
         *
         * Create a request for the method "releases.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the release.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Release}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Release content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Release> {

          private static final String REST_PATH = "v1beta1/{+parent}/releases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new release.
           *
           * Create a request for the method "releases.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the release.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Release}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Release content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Release.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the release. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the release.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the release. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The ID value for the new release. */
          @com.google.api.client.util.Key
          private java.lang.String releaseId;

          /** Required. The ID value for the new release.
           */
          public java.lang.String getReleaseId() {
            return releaseId;
          }

          /** Required. The ID value for the new release. */
          public Create setReleaseId(java.lang.String releaseId) {
            this.releaseId = releaseId;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single release.
         *
         * Create a request for the method "releases.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/releases/[^/]+$");

          /**
           * Delete a single release.
           *
           * Create a request for the method "releases.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the release. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the release. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the release. This is used with state-
         changing methods to prevent accidental overwrites when multiple user agents might be acting in
         parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the release. The Any wildcard (`*`) requires that the resource must already
         exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the release. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the release. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single release.
         *
         * Create a request for the method "releases.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Release> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/releases/[^/]+$");

          /**
           * Retrieve a single release.
           *
           * Create a request for the method "releases.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Release.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of releases.
         *
         * Create a request for the method "releases.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the release.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListReleasesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/releases";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of releases.
           *
           * Create a request for the method "releases.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the release.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListReleasesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the release. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the release.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the release. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of releases to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of releases to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of releases to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single release.
         *
         * Create a request for the method "releases.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/releases/{release}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Release}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Release content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Release> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/releases/[^/]+$");

          /**
           * Update a single release.
           *
           * Create a request for the method "releases.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/releases/{release}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Release}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Release content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Release.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/releases/{release}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/releases/{release}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/releases/{release}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/releases/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Release resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Release will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Release resource by the update.
         The fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the Release will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Release resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Release will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ReplicationsInternal collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.ReplicationsInternal.List request = saasservicemgmt.replicationsInternal().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ReplicationsInternal replicationsInternal() {
        return new ReplicationsInternal();
      }

      /**
       * The "replicationsInternal" collection of methods.
       */
      public class ReplicationsInternal {

        /**
         * Create a new replication internal.
         *
         * Create a request for the method "replicationsInternal.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the replication internal.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal> {

          private static final String REST_PATH = "v1beta1/{+parent}/replicationsInternal";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new replication internal.
           *
           * Create a request for the method "replicationsInternal.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the replication internal.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the replication internal. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the replication internal.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the replication internal. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The ID value for the new replication internal. */
          @com.google.api.client.util.Key
          private java.lang.String replicationInternalId;

          /** Required. The ID value for the new replication internal.
           */
          public java.lang.String getReplicationInternalId() {
            return replicationInternalId;
          }

          /** Required. The ID value for the new replication internal. */
          public Create setReplicationInternalId(java.lang.String replicationInternalId) {
            this.replicationInternalId = replicationInternalId;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single replication internal.
         *
         * Create a request for the method "replicationsInternal.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");

          /**
           * Delete a single replication internal.
           *
           * Create a request for the method "replicationsInternal.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the replication internal. This
           * is used with state-changing methods to prevent accidental overwrites when multiple user
           * agents might be acting in parallel on the same resource. An etag wildcard provide
           * optimistic concurrency based on the expected existence of the replication internal. The
           * Any wildcard (`*`) requires that the resource must already exists, and the Not Any
           * wildcard (`!*`) requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the replication internal. This is used with
         state-changing methods to prevent accidental overwrites when multiple user agents might be acting
         in parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the replication internal. The Any wildcard (`*`) requires that the resource
         must already exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the replication internal. This
           * is used with state-changing methods to prevent accidental overwrites when multiple user
           * agents might be acting in parallel on the same resource. An etag wildcard provide
           * optimistic concurrency based on the expected existence of the replication internal. The
           * Any wildcard (`*`) requires that the resource must already exists, and the Not Any
           * wildcard (`!*`) requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single replication internal.
         *
         * Create a request for the method "replicationsInternal.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");

          /**
           * Retrieve a single replication internal.
           *
           * Create a request for the method "replicationsInternal.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of replication internals.
         *
         * Create a request for the method "replicationsInternal.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the replication internal.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListReplicationsInternalResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/replicationsInternal";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of replication internals.
           *
           * Create a request for the method "replicationsInternal.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the replication internal.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListReplicationsInternalResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the replication internal. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the replication internal.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the replication internal. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of replication internals to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of replication internals to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of replication internals to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single replication internal.
         *
         * Create a request for the method "replicationsInternal.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/replicationInternal/{replication_internal_id}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");

          /**
           * Update a single replication internal.
           *
           * Create a request for the method "replicationsInternal.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/replicationInternal/{replication_internal_id}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.ReplicationInternal.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme:
           * "projects/{project}/locations/{location}/replicationInternal/{replication_internal_id}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/replicationInternal/{replication_internal_id}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme:
           * "projects/{project}/locations/{location}/replicationInternal/{replication_internal_id}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/replicationsInternal/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the replication internal. This
           * is used with state-changing methods to prevent accidental overwrites when multiple user
           * agents might be acting in parallel on the same resource. An etag wildcard provide
           * optimistic concurrency based on the expected existence of the replication internal. The
           * Any wildcard (`*`) requires that the resource must already exists, and the Not Any
           * wildcard (`!*`) requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the replication internal. This is used with
         state-changing methods to prevent accidental overwrites when multiple user agents might be acting
         in parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the replication internal. The Any wildcard (`*`) requires that the resource
         must already exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the replication internal. This
           * is used with state-changing methods to prevent accidental overwrites when multiple user
           * agents might be acting in parallel on the same resource. An etag wildcard provide
           * optimistic concurrency based on the expected existence of the replication internal. The
           * Any wildcard (`*`) requires that the resource must already exists, and the Not Any
           * wildcard (`!*`) requires that it must not.
           */
          public Patch setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the ReplicationInternal
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields in the ReplicationInternal will be
           * overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the ReplicationInternal resource by
         the update. The fields specified in the update_mask are relative to the resource, not the full
         request. A field will be overwritten if it is in the mask. If the user does not provide a mask then
         all fields in the ReplicationInternal will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the ReplicationInternal
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields in the ReplicationInternal will be
           * overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the RolloutKinds collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.RolloutKinds.List request = saasservicemgmt.rolloutKinds().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public RolloutKinds rolloutKinds() {
        return new RolloutKinds();
      }

      /**
       * The "rolloutKinds" collection of methods.
       */
      public class RolloutKinds {

        /**
         * Create a new rollout kind.
         *
         * Create a request for the method "rolloutKinds.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the rollout kind.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind> {

          private static final String REST_PATH = "v1beta1/{+parent}/rolloutKinds";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new rollout kind.
           *
           * Create a request for the method "rolloutKinds.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the rollout kind.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the rollout kind. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the rollout kind.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the rollout kind. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new rollout kind. */
          @com.google.api.client.util.Key
          private java.lang.String rolloutKindId;

          /** Required. The ID value for the new rollout kind.
           */
          public java.lang.String getRolloutKindId() {
            return rolloutKindId;
          }

          /** Required. The ID value for the new rollout kind. */
          public Create setRolloutKindId(java.lang.String rolloutKindId) {
            this.rolloutKindId = rolloutKindId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single rollout kind.
         *
         * Create a request for the method "rolloutKinds.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");

          /**
           * Delete a single rollout kind.
           *
           * Create a request for the method "rolloutKinds.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the rollout kind. This is used
           * with state-changing methods to prevent accidental overwrites when multiple user agents
           * might be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the rollout kind. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the rollout kind. This is used with state-
         changing methods to prevent accidental overwrites when multiple user agents might be acting in
         parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the rollout kind. The Any wildcard (`*`) requires that the resource must
         already exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the rollout kind. This is used
           * with state-changing methods to prevent accidental overwrites when multiple user agents
           * might be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the rollout kind. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single rollout kind.
         *
         * Create a request for the method "rolloutKinds.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");

          /**
           * Retrieve a single rollout kind.
           *
           * Create a request for the method "rolloutKinds.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of rollout kinds.
         *
         * Create a request for the method "rolloutKinds.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the rollout kind.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListRolloutKindsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/rolloutKinds";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of rollout kinds.
           *
           * Create a request for the method "rolloutKinds.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the rollout kind.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListRolloutKindsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the rollout kind. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the rollout kind.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the rollout kind. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of rollout kinds to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of rollout kinds to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of rollout kinds to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single rollout kind.
         *
         * Create a request for the method "rolloutKinds.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");

          /**
           * Update a single rollout kind.
           *
           * Create a request for the method "rolloutKinds.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.RolloutKind.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rolloutKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the RolloutKind resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then all fields in the RolloutKind will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the RolloutKind resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then all
         fields in the RolloutKind will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the RolloutKind resource
           * by the update. The fields specified in the update_mask are relative to the resource,
           * not the full request. A field will be overwritten if it is in the mask. If the user
           * does not provide a mask then all fields in the RolloutKind will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Rollouts collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.Rollouts.List request = saasservicemgmt.rollouts().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Rollouts rollouts() {
        return new Rollouts();
      }

      /**
       * The "rollouts" collection of methods.
       */
      public class Rollouts {

        /**
         * Create a new rollout.
         *
         * Create a request for the method "rollouts.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the rollout.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Rollout}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Rollout> {

          private static final String REST_PATH = "v1beta1/{+parent}/rollouts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new rollout.
           *
           * Create a request for the method "rollouts.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the rollout.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Rollout}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the rollout. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the rollout.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the rollout. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new rollout. */
          @com.google.api.client.util.Key
          private java.lang.String rolloutId;

          /** Required. The ID value for the new rollout.
           */
          public java.lang.String getRolloutId() {
            return rolloutId;
          }

          /** Required. The ID value for the new rollout. */
          public Create setRolloutId(java.lang.String rolloutId) {
            this.rolloutId = rolloutId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single rollout.
         *
         * Create a request for the method "rollouts.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");

          /**
           * Delete a single rollout.
           *
           * Create a request for the method "rollouts.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the rollout. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the rollout. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the rollout. This is used with state-
         changing methods to prevent accidental overwrites when multiple user agents might be acting in
         parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the rollout. The Any wildcard (`*`) requires that the resource must already
         exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the rollout. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the rollout. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single rollout.
         *
         * Create a request for the method "rollouts.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Rollout> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");

          /**
           * Retrieve a single rollout.
           *
           * Create a request for the method "rollouts.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of rollouts.
         *
         * Create a request for the method "rollouts.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the rollout.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListRolloutsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/rollouts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of rollouts.
           *
           * Create a request for the method "rollouts.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the rollout.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListRolloutsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the rollout. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the rollout.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the rollout. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of rollouts to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of rollouts to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of rollouts to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single rollout.
         *
         * Create a request for the method "rollouts.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/rollout/{rollout_id}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Rollout}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Rollout> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");

          /**
           * Update a single rollout.
           *
           * Create a request for the method "rollouts.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/rollout/{rollout_id}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Rollout}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Rollout.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/rollout/{rollout_id}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/rollout/{rollout_id}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/rollout/{rollout_id}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/rollouts/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Rollout resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Rollout will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Rollout resource by the update.
         The fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the Rollout will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Rollout resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Rollout will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Saas collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.Saas.List request = saasservicemgmt.saas().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Saas saas() {
        return new Saas();
      }

      /**
       * The "saas" collection of methods.
       */
      public class Saas {

        /**
         * Create a new saas.
         *
         * Create a request for the method "saas.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the saas.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Saas}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Saas content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Saas> {

          private static final String REST_PATH = "v1beta1/{+parent}/saas";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new saas.
           *
           * Create a request for the method "saas.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the saas.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Saas}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Saas content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Saas.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the saas. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the saas.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the saas. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new saas. */
          @com.google.api.client.util.Key
          private java.lang.String saasId;

          /** Required. The ID value for the new saas.
           */
          public java.lang.String getSaasId() {
            return saasId;
          }

          /** Required. The ID value for the new saas. */
          public Create setSaasId(java.lang.String saasId) {
            this.saasId = saasId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single saas.
         *
         * Create a request for the method "saas.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/saas/[^/]+$");

          /**
           * Delete a single saas.
           *
           * Create a request for the method "saas.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the saas. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the saas. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the saas. This is used with state-changing
         methods to prevent accidental overwrites when multiple user agents might be acting in parallel on
         the same resource. An etag wildcard provide optimistic concurrency based on the expected existence
         of the saas. The Any wildcard (`*`) requires that the resource must already exists, and the Not Any
         wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the saas. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the saas. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single saas.
         *
         * Create a request for the method "saas.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Saas> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/saas/[^/]+$");

          /**
           * Retrieve a single saas.
           *
           * Create a request for the method "saas.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Saas.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of saas.
         *
         * Create a request for the method "saas.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the saas.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListSaasResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/saas";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of saas.
           *
           * Create a request for the method "saas.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the saas.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListSaasResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the saas. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the saas.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the saas. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of saas to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of saas to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of saas to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single saas.
         *
         * Create a request for the method "saas.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/saas/{saas}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Saas}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Saas content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Saas> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/saas/[^/]+$");

          /**
           * Update a single saas.
           *
           * Create a request for the method "saas.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/saas/{saas}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Saas}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Saas content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Saas.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/saas/{saas}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/saas/{saas}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/saas/{saas}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/saas/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Saas resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields in the Saas will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Saas resource by the update. The
         fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the Saas will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Saas resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields in the Saas will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Tenants collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.Tenants.List request = saasservicemgmt.tenants().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Tenants tenants() {
        return new Tenants();
      }

      /**
       * The "tenants" collection of methods.
       */
      public class Tenants {

        /**
         * Create a new tenant.
         *
         * Create a request for the method "tenants.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the tenant.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Tenant}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Tenant> {

          private static final String REST_PATH = "v1beta1/{+parent}/tenants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new tenant.
           *
           * Create a request for the method "tenants.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the tenant.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Tenant}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the tenant. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the tenant.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the tenant. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new tenant. */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** Required. The ID value for the new tenant.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /** Required. The ID value for the new tenant. */
          public Create setTenantId(java.lang.String tenantId) {
            this.tenantId = tenantId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single tenant.
         *
         * Create a request for the method "tenants.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");

          /**
           * Delete a single tenant.
           *
           * Create a request for the method "tenants.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the tenant. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the tenant. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the tenant. This is used with state-changing
         methods to prevent accidental overwrites when multiple user agents might be acting in parallel on
         the same resource. An etag wildcard provide optimistic concurrency based on the expected existence
         of the tenant. The Any wildcard (`*`) requires that the resource must already exists, and the Not
         Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the tenant. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the tenant. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single tenant.
         *
         * Create a request for the method "tenants.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Tenant> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");

          /**
           * Retrieve a single tenant.
           *
           * Create a request for the method "tenants.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of tenants.
         *
         * Create a request for the method "tenants.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the tenant.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListTenantsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/tenants";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of tenants.
           *
           * Create a request for the method "tenants.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the tenant.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListTenantsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the tenant. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the tenant.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the tenant. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of tenants to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of tenants to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of tenants to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single tenant.
         *
         * Create a request for the method "tenants.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/tenants/{tenant}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Tenant}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Tenant> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");

          /**
           * Update a single tenant.
           *
           * Create a request for the method "tenants.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/tenants/{tenant}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Tenant}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Tenant.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/tenants/{tenant}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/tenants/{tenant}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/tenants/{tenant}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tenants/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Tenant resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Tenant will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Tenant resource by the update.
         The fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the Tenant will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Tenant resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the Tenant will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the UnitKinds collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.UnitKinds.List request = saasservicemgmt.unitKinds().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public UnitKinds unitKinds() {
        return new UnitKinds();
      }

      /**
       * The "unitKinds" collection of methods.
       */
      public class UnitKinds {

        /**
         * Create a new unit kind.
         *
         * Create a request for the method "unitKinds.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit kind.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind> {

          private static final String REST_PATH = "v1beta1/{+parent}/unitKinds";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new unit kind.
           *
           * Create a request for the method "unitKinds.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit kind.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit kind. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit kind.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit kind. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new unit kind. */
          @com.google.api.client.util.Key
          private java.lang.String unitKindId;

          /** Required. The ID value for the new unit kind.
           */
          public java.lang.String getUnitKindId() {
            return unitKindId;
          }

          /** Required. The ID value for the new unit kind. */
          public Create setUnitKindId(java.lang.String unitKindId) {
            this.unitKindId = unitKindId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single unit kind.
         *
         * Create a request for the method "unitKinds.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");

          /**
           * Delete a single unit kind.
           *
           * Create a request for the method "unitKinds.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the unit kind. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit kind. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the unit kind. This is used with state-
         changing methods to prevent accidental overwrites when multiple user agents might be acting in
         parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the unit kind. The Any wildcard (`*`) requires that the resource must already
         exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the unit kind. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit kind. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single unit kind.
         *
         * Create a request for the method "unitKinds.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");

          /**
           * Retrieve a single unit kind.
           *
           * Create a request for the method "unitKinds.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of unit kinds.
         *
         * Create a request for the method "unitKinds.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit kind.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitKindsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/unitKinds";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of unit kinds.
           *
           * Create a request for the method "unitKinds.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit kind.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitKindsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit kind. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit kind.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit kind. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of unit kinds to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of unit kinds to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of unit kinds to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single unit kind.
         *
         * Create a request for the method "unitKinds.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/unitKinds/{unitKind}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");

          /**
           * Update a single unit kind.
           *
           * Create a request for the method "unitKinds.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/unitKinds/{unitKind}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.UnitKind.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/unitKinds/{unitKind}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/unitKinds/{unitKind}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/unitKinds/{unitKind}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitKinds/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the UnitKind resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the UnitKind will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the UnitKind resource by the update.
         The fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the UnitKind will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the UnitKind resource by
           * the update. The fields specified in the update_mask are relative to the resource, not
           * the full request. A field will be overwritten if it is in the mask. If the user does
           * not provide a mask then all fields in the UnitKind will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the UnitOperations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.UnitOperations.List request = saasservicemgmt.unitOperations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public UnitOperations unitOperations() {
        return new UnitOperations();
      }

      /**
       * The "unitOperations" collection of methods.
       */
      public class UnitOperations {

        /**
         * Create a new unit operation.
         *
         * Create a request for the method "unitOperations.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit operation.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation> {

          private static final String REST_PATH = "v1beta1/{+parent}/unitOperations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new unit operation.
           *
           * Create a request for the method "unitOperations.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit operation.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit operation. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit operation.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit operation. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new unit operation. */
          @com.google.api.client.util.Key
          private java.lang.String unitOperationId;

          /** Required. The ID value for the new unit operation.
           */
          public java.lang.String getUnitOperationId() {
            return unitOperationId;
          }

          /** Required. The ID value for the new unit operation. */
          public Create setUnitOperationId(java.lang.String unitOperationId) {
            this.unitOperationId = unitOperationId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single unit operation.
         *
         * Create a request for the method "unitOperations.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");

          /**
           * Delete a single unit operation.
           *
           * Create a request for the method "unitOperations.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the unit operation. This is used
           * with state-changing methods to prevent accidental overwrites when multiple user agents
           * might be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit operation. The Any wildcard
           * (`*`) requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the unit operation. This is used with state-
         changing methods to prevent accidental overwrites when multiple user agents might be acting in
         parallel on the same resource. An etag wildcard provide optimistic concurrency based on the
         expected existence of the unit operation. The Any wildcard (`*`) requires that the resource must
         already exists, and the Not Any wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the unit operation. This is used
           * with state-changing methods to prevent accidental overwrites when multiple user agents
           * might be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit operation. The Any wildcard
           * (`*`) requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single unit operation.
         *
         * Create a request for the method "unitOperations.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");

          /**
           * Retrieve a single unit operation.
           *
           * Create a request for the method "unitOperations.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of unit operations.
         *
         * Create a request for the method "unitOperations.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit operation.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitOperationsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/unitOperations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of unit operations.
           *
           * Create a request for the method "unitOperations.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit operation.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitOperationsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit operation. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit operation.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit operation. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of unit operations to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of unit operations to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of unit operations to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single unit operation.
         *
         * Create a request for the method "unitOperations.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");

          /**
           * Update a single unit operation.
           *
           * Create a request for the method "unitOperations.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.UnitOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/unitOperations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the UnitOperation
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields in the UnitOperation will be
           * overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the UnitOperation resource by the
         update. The fields specified in the update_mask are relative to the resource, not the full request.
         A field will be overwritten if it is in the mask. If the user does not provide a mask then all
         fields in the UnitOperation will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the UnitOperation
           * resource by the update. The fields specified in the update_mask are relative to the
           * resource, not the full request. A field will be overwritten if it is in the mask. If
           * the user does not provide a mask then all fields in the UnitOperation will be
           * overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Units collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code SaaSServiceManagement saasservicemgmt = new SaaSServiceManagement(...);}
       *   {@code SaaSServiceManagement.Units.List request = saasservicemgmt.units().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Units units() {
        return new Units();
      }

      /**
       * The "units" collection of methods.
       */
      public class Units {

        /**
         * Create a new unit.
         *
         * Create a request for the method "units.create".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit.
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Unit}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Unit content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Unit> {

          private static final String REST_PATH = "v1beta1/{+parent}/units";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create a new unit.
           *
           * Create a request for the method "units.create".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit.
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Unit}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.saasservicemgmt.v1beta1.model.Unit content) {
            super(SaaSServiceManagement.this, "POST", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Unit.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. The ID value for the new unit. */
          @com.google.api.client.util.Key
          private java.lang.String unitId;

          /** Required. The ID value for the new unit.
           */
          public java.lang.String getUnitId() {
            return unitId;
          }

          /** Required. The ID value for the new unit. */
          public Create setUnitId(java.lang.String unitId) {
            this.unitId = unitId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a single unit.
         *
         * Create a request for the method "units.delete".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/units/[^/]+$");

          /**
           * Delete a single unit.
           *
           * Create a request for the method "units.delete".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(SaaSServiceManagement.this, "DELETE", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The etag known to the client for the expected state of the unit. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          @com.google.api.client.util.Key
          private java.lang.String etag;

          /** The etag known to the client for the expected state of the unit. This is used with state-changing
         methods to prevent accidental overwrites when multiple user agents might be acting in parallel on
         the same resource. An etag wildcard provide optimistic concurrency based on the expected existence
         of the unit. The Any wildcard (`*`) requires that the resource must already exists, and the Not Any
         wildcard (`!*`) requires that it must not.
           */
          public java.lang.String getEtag() {
            return etag;
          }

          /**
           * The etag known to the client for the expected state of the unit. This is used with
           * state-changing methods to prevent accidental overwrites when multiple user agents might
           * be acting in parallel on the same resource. An etag wildcard provide optimistic
           * concurrency based on the expected existence of the unit. The Any wildcard (`*`)
           * requires that the resource must already exists, and the Not Any wildcard (`!*`)
           * requires that it must not.
           */
          public Delete setEtag(java.lang.String etag) {
            this.etag = etag;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a single unit.
         *
         * Create a request for the method "units.get".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the resource within a service.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Unit> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/units/[^/]+$");

          /**
           * Retrieve a single unit.
           *
           * Create a request for the method "units.get".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the resource within a service.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.Unit.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The resource name of the resource within a service. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the resource within a service.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The resource name of the resource within a service. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve a collection of units.
         *
         * Create a request for the method "units.list".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent of the unit.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/units";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Retrieve a collection of units.
           *
           * Create a request for the method "units.list".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent of the unit.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(SaaSServiceManagement.this, "GET", REST_PATH, null, com.google.api.services.saasservicemgmt.v1beta1.model.ListUnitsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent of the unit. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent of the unit.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent of the unit. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter the list as specified in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter the list as specified in https://google.aip.dev/160. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Order results as specified in https://google.aip.dev/132.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /** Order results as specified in https://google.aip.dev/132. */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /** The maximum number of units to send per page. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of units to send per page.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of units to send per page. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token: If the next_page_token from a previous response is provided, this request will send
         the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The page token: If the next_page_token from a previous response is provided, this
           * request will send the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update a single unit.
         *
         * Create a request for the method "units.patch".
         *
         * This request holds the parameters needed by the saasservicemgmt server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/units/{unit}"
         * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Unit}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Unit content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends SaaSServiceManagementRequest<com.google.api.services.saasservicemgmt.v1beta1.model.Unit> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/units/[^/]+$");

          /**
           * Update a single unit.
           *
           * Create a request for the method "units.patch".
           *
           * This request holds the parameters needed by the the saasservicemgmt server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         *        "projects/{project}/locations/{location}/units/{unit}"
           * @param content the {@link com.google.api.services.saasservicemgmt.v1beta1.model.Unit}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.saasservicemgmt.v1beta1.model.Unit content) {
            super(SaaSServiceManagement.this, "PATCH", REST_PATH, content, com.google.api.services.saasservicemgmt.v1beta1.model.Unit.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/units/{unit}"
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. The resource name (full URI of the resource) following the standard naming scheme:
         "projects/{project}/locations/{location}/units/{unit}"
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. The resource name (full URI of the resource) following the standard naming
           * scheme: "projects/{project}/locations/{location}/units/{unit}"
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/units/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** An optional request ID to identify requests. Specify a unique request ID so that if you must retry
         your request, the server will know to ignore the request if it has already been completed. The
         server will guarantee that for at least 60 minutes since the first request. For example, consider a
         situation where you make an initial request and the request times out. If you make the request
         again with the same request ID, the server can check if original operation with the same request ID
         was received, and if so, will ignore the second request. This prevents clients from accidentally
         creating duplicate commitments. The request ID must be a valid UUID with the exception that zero
         UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * An optional request ID to identify requests. Specify a unique request ID so that if you
           * must retry your request, the server will know to ignore the request if it has already
           * been completed. The server will guarantee that for at least 60 minutes since the first
           * request. For example, consider a situation where you make an initial request and the
           * request times out. If you make the request again with the same request ID, the server
           * can check if original operation with the same request ID was received, and if so, will
           * ignore the second request. This prevents clients from accidentally creating duplicate
           * commitments. The request ID must be a valid UUID with the exception that zero UUID is
           * not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Unit resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields in the Unit will be overwritten.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Field mask is used to specify the fields to be overwritten in the Unit resource by the update. The
         fields specified in the update_mask are relative to the resource, not the full request. A field
         will be overwritten if it is in the mask. If the user does not provide a mask then all fields in
         the Unit will be overwritten.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Field mask is used to specify the fields to be overwritten in the Unit resource by the
           * update. The fields specified in the update_mask are relative to the resource, not the
           * full request. A field will be overwritten if it is in the mask. If the user does not
           * provide a mask then all fields in the Unit will be overwritten.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** If "validate_only" is set to true, the service will try to validate that this request would
         succeed, but will not actually make changes.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * If "validate_only" is set to true, the service will try to validate that this request
           * would succeed, but will not actually make changes.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link SaaSServiceManagement}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link SaaSServiceManagement}. */
    @Override
    public SaaSServiceManagement build() {
      return new SaaSServiceManagement(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SaaSServiceManagementRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSaaSServiceManagementRequestInitializer(
        SaaSServiceManagementRequestInitializer saasservicemanagementRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(saasservicemanagementRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
