/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebase.v1beta1.model;

/**
 * The default resources associated with the Project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DefaultResources extends com.google.api.client.json.GenericJson {

  /**
   * The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId`
   * might already be used as the name for an existing Hosting site in another project (learn more
   * about creating non-default, [additional
   * sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId`
   * is appended with a hyphen then five alphanumeric characters to create your default Hosting site
   * name. For example, if your `projectId` is `myproject123`, your default Hosting site name might
   * be: `myproject123-a5c16`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostingSite;

  /**
   * The ID of the Project's default GCP resource location. The location is one of the available
   * [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is
   * omitted if the default GCP resource location has not been finalized yet. To set a Project's
   * default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the Project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationId;

  /**
   * The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare,
   * your `projectId` might already be used as the name for an existing Realtime Database instance
   * in another project (learn more about [database
   * sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your
   * `projectId` is appended with a hyphen then five alphanumeric characters to create your default
   * Realtime Database instance name. For example, if your `projectId` is `myproject123`, your
   * default database instance name might be: `myproject123-a5c16`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String realtimeDatabaseInstance;

  /**
   * The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageBucket;

  /**
   * The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId`
   * might already be used as the name for an existing Hosting site in another project (learn more
   * about creating non-default, [additional
   * sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId`
   * is appended with a hyphen then five alphanumeric characters to create your default Hosting site
   * name. For example, if your `projectId` is `myproject123`, your default Hosting site name might
   * be: `myproject123-a5c16`
   * @return value or {@code null} for none
   */
  public java.lang.String getHostingSite() {
    return hostingSite;
  }

  /**
   * The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId`
   * might already be used as the name for an existing Hosting site in another project (learn more
   * about creating non-default, [additional
   * sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId`
   * is appended with a hyphen then five alphanumeric characters to create your default Hosting site
   * name. For example, if your `projectId` is `myproject123`, your default Hosting site name might
   * be: `myproject123-a5c16`
   * @param hostingSite hostingSite or {@code null} for none
   */
  public DefaultResources setHostingSite(java.lang.String hostingSite) {
    this.hostingSite = hostingSite;
    return this;
  }

  /**
   * The ID of the Project's default GCP resource location. The location is one of the available
   * [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is
   * omitted if the default GCP resource location has not been finalized yet. To set a Project's
   * default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the Project.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationId() {
    return locationId;
  }

  /**
   * The ID of the Project's default GCP resource location. The location is one of the available
   * [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is
   * omitted if the default GCP resource location has not been finalized yet. To set a Project's
   * default GCP resource location, call
   * [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
   * resources to the Project.
   * @param locationId locationId or {@code null} for none
   */
  public DefaultResources setLocationId(java.lang.String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare,
   * your `projectId` might already be used as the name for an existing Realtime Database instance
   * in another project (learn more about [database
   * sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your
   * `projectId` is appended with a hyphen then five alphanumeric characters to create your default
   * Realtime Database instance name. For example, if your `projectId` is `myproject123`, your
   * default database instance name might be: `myproject123-a5c16`
   * @return value or {@code null} for none
   */
  public java.lang.String getRealtimeDatabaseInstance() {
    return realtimeDatabaseInstance;
  }

  /**
   * The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare,
   * your `projectId` might already be used as the name for an existing Realtime Database instance
   * in another project (learn more about [database
   * sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your
   * `projectId` is appended with a hyphen then five alphanumeric characters to create your default
   * Realtime Database instance name. For example, if your `projectId` is `myproject123`, your
   * default database instance name might be: `myproject123-a5c16`
   * @param realtimeDatabaseInstance realtimeDatabaseInstance or {@code null} for none
   */
  public DefaultResources setRealtimeDatabaseInstance(java.lang.String realtimeDatabaseInstance) {
    this.realtimeDatabaseInstance = realtimeDatabaseInstance;
    return this;
  }

  /**
   * The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageBucket() {
    return storageBucket;
  }

  /**
   * The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com
   * @param storageBucket storageBucket or {@code null} for none
   */
  public DefaultResources setStorageBucket(java.lang.String storageBucket) {
    this.storageBucket = storageBucket;
    return this;
  }

  @Override
  public DefaultResources set(String fieldName, Object value) {
    return (DefaultResources) super.set(fieldName, value);
  }

  @Override
  public DefaultResources clone() {
    return (DefaultResources) super.clone();
  }

}
