/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1;

/**
 * Service definition for CloudRedis (v1).
 *
 * <p>
 * Creates and manages Redis instances on the Google Cloud Platform.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/memorystore/docs/redis/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudRedisRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudRedis extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Google Cloud Memorystore for Redis API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://redis.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudRedis(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudRedis(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudRedis redis = new CloudRedis(...);}
   *   {@code CloudRedis.Projects.List request = redis.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudRedis redis = new CloudRedis(...);}
     *   {@code CloudRedis.Locations.List request = redis.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the redis server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudRedisRequest<com.google.api.services.redis.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the redis server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the redis server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudRedisRequest<com.google.api.services.redis.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the redis server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Instances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRedis redis = new CloudRedis(...);}
       *   {@code CloudRedis.Instances.List request = redis.instances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Instances instances() {
        return new Instances();
      }

      /**
       * The "instances" collection of methods.
       */
      public class Instances {

        /**
         * Creates a Redis instance based on the specified tier and memory size.
         *
         * By default, the instance is accessible from the project's [default network](/compute/docs
         * /networks-and-firewalls#networks).
         *
         * The creation is executed asynchronously and callers may check the returned operation to track its
         * progress. Once the operation is completed the Redis instance will be fully functional. Completed
         * longrunning.Operation will contain the new instance object in the response field.
         *
         * The returned operation is automatically deleted after a few hours, so there is no need to call
         * DeleteOperation.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the instance location using the form:
         *        `projects/{project_id}/locations/{location_id}`
        where `location_id` refers to a GCP
         *        region.
         * @param content the {@link com.google.api.services.redis.v1.model.Instance}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.redis.v1.model.Instance content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a Redis instance based on the specified tier and memory size.
           *
           * By default, the instance is accessible from the project's [default network](/compute/docs
           * /networks-and-firewalls#networks).
           *
           * The creation is executed asynchronously and callers may check the returned operation to track
           * its progress. Once the operation is completed the Redis instance will be fully functional.
           * Completed longrunning.Operation will contain the new instance object in the response field.
           *
           * The returned operation is automatically deleted after a few hours, so there is no need to call
           * DeleteOperation.
           *
           * Create a request for the method "instances.create".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the instance location using the form:
         *        `projects/{project_id}/locations/{location_id}`
        where `location_id` refers to a GCP
         *        region.
           * @param content the {@link com.google.api.services.redis.v1.model.Instance}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.redis.v1.model.Instance content) {
            super(CloudRedis.this, "POST", REST_PATH, content, com.google.api.services.redis.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the instance location using the form:
           * `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP
           * region.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the instance location using the form:
         `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the instance location using the form:
           * `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP
           * region.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The logical name of the Redis instance in the customer project with the
           * following restrictions:
           *
           * * Must contain only lowercase letters, numbers, and hyphens. * Must start with a
           * letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must
           * be unique within the customer project / location
           */
          @com.google.api.client.util.Key
          private java.lang.String instanceId;

          /** Required. The logical name of the Redis instance in the customer project with the following
         restrictions:

         * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be
         between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer
         project / location
           */
          public java.lang.String getInstanceId() {
            return instanceId;
          }

          /**
           * Required. The logical name of the Redis instance in the customer project with the
           * following restrictions:
           *
           * * Must contain only lowercase letters, numbers, and hyphens. * Must start with a
           * letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must
           * be unique within the customer project / location
           */
          public Create setInstanceId(java.lang.String instanceId) {
            this.instanceId = instanceId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a specific Redis instance.  Instance stops serving and data is deleted.
         *
         * Create a request for the method "instances.delete".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Deletes a specific Redis instance.  Instance stops serving and data is deleted.
           *
           * Create a request for the method "instances.delete".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudRedis.this, "DELETE", REST_PATH, null, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Redis instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers
         to a GCP region.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Export Redis instance data into a Redis RDB format file in Cloud Storage.
         *
         * Redis will continue serving during this operation.
         *
         * The returned operation is automatically deleted after a few hours, so there is no need to call
         * DeleteOperation.
         *
         * Create a request for the method "instances.export".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
         * @param content the {@link com.google.api.services.redis.v1.model.ExportInstanceRequest}
         * @return the request
         */
        public Export export(java.lang.String name, com.google.api.services.redis.v1.model.ExportInstanceRequest content) throws java.io.IOException {
          Export result = new Export(name, content);
          initialize(result);
          return result;
        }

        public class Export extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:export";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Export Redis instance data into a Redis RDB format file in Cloud Storage.
           *
           * Redis will continue serving during this operation.
           *
           * The returned operation is automatically deleted after a few hours, so there is no need to call
           * DeleteOperation.
           *
           * Create a request for the method "instances.export".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation. <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
           * @param content the {@link com.google.api.services.redis.v1.model.ExportInstanceRequest}
           * @since 1.13
           */
          protected Export(java.lang.String name, com.google.api.services.redis.v1.model.ExportInstanceRequest content) {
            super(CloudRedis.this, "POST", REST_PATH, content, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Redis instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers
         to a GCP region.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          public Export setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Initiates a failover of the master node to current replica node for a specific STANDARD tier
         * Cloud Memorystore for Redis instance.
         *
         * Create a request for the method "instances.failover".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Failover#execute()} method to invoke the remote operation.
         *
         * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
         * @param content the {@link com.google.api.services.redis.v1.model.FailoverInstanceRequest}
         * @return the request
         */
        public Failover failover(java.lang.String name, com.google.api.services.redis.v1.model.FailoverInstanceRequest content) throws java.io.IOException {
          Failover result = new Failover(name, content);
          initialize(result);
          return result;
        }

        public class Failover extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:failover";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Initiates a failover of the master node to current replica node for a specific STANDARD tier
           * Cloud Memorystore for Redis instance.
           *
           * Create a request for the method "instances.failover".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Failover#execute()} method to invoke the remote operation. <p>
           * {@link
           * Failover#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
           * @param content the {@link com.google.api.services.redis.v1.model.FailoverInstanceRequest}
           * @since 1.13
           */
          protected Failover(java.lang.String name, com.google.api.services.redis.v1.model.FailoverInstanceRequest content) {
            super(CloudRedis.this, "POST", REST_PATH, content, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Failover set$Xgafv(java.lang.String $Xgafv) {
            return (Failover) super.set$Xgafv($Xgafv);
          }

          @Override
          public Failover setAccessToken(java.lang.String accessToken) {
            return (Failover) super.setAccessToken(accessToken);
          }

          @Override
          public Failover setAlt(java.lang.String alt) {
            return (Failover) super.setAlt(alt);
          }

          @Override
          public Failover setCallback(java.lang.String callback) {
            return (Failover) super.setCallback(callback);
          }

          @Override
          public Failover setFields(java.lang.String fields) {
            return (Failover) super.setFields(fields);
          }

          @Override
          public Failover setKey(java.lang.String key) {
            return (Failover) super.setKey(key);
          }

          @Override
          public Failover setOauthToken(java.lang.String oauthToken) {
            return (Failover) super.setOauthToken(oauthToken);
          }

          @Override
          public Failover setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Failover) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Failover setQuotaUser(java.lang.String quotaUser) {
            return (Failover) super.setQuotaUser(quotaUser);
          }

          @Override
          public Failover setUploadType(java.lang.String uploadType) {
            return (Failover) super.setUploadType(uploadType);
          }

          @Override
          public Failover setUploadProtocol(java.lang.String uploadProtocol) {
            return (Failover) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Redis instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers
         to a GCP region.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          public Failover setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Failover set(String parameterName, Object value) {
            return (Failover) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a specific Redis instance.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRedisRequest<com.google.api.services.redis.v1.model.Instance> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Gets the details of a specific Redis instance.
           *
           * Create a request for the method "instances.get".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.Instance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Redis instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers
         to a GCP region.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Import a Redis RDB snapshot file from Cloud Storage into a Redis instance.
         *
         * Redis may stop serving during this operation. Instance state will be IMPORTING for entire
         * operation. When complete, the instance will contain only data from the imported file.
         *
         * The returned operation is automatically deleted after a few hours, so there is no need to call
         * DeleteOperation.
         *
         * Create a request for the method "instances.import".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link CloudRedisImport#execute()} method to invoke the remote operation.
         *
         * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
         * @param content the {@link com.google.api.services.redis.v1.model.ImportInstanceRequest}
         * @return the request
         */
        public CloudRedisImport redisImport(java.lang.String name, com.google.api.services.redis.v1.model.ImportInstanceRequest content) throws java.io.IOException {
          CloudRedisImport result = new CloudRedisImport(name, content);
          initialize(result);
          return result;
        }

        public class CloudRedisImport extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}:import";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Import a Redis RDB snapshot file from Cloud Storage into a Redis instance.
           *
           * Redis may stop serving during this operation. Instance state will be IMPORTING for entire
           * operation. When complete, the instance will contain only data from the imported file.
           *
           * The returned operation is automatically deleted after a few hours, so there is no need to call
           * DeleteOperation.
           *
           * Create a request for the method "instances.import".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link CloudRedisImport#execute()} method to invoke the remote operation.
           * <p> {@link CloudRedisImport#initialize(com.google.api.client.googleapis.services.AbstractGoogle
           * ClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Redis instance resource name using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where
         *        `location_id` refers to a GCP region.
           * @param content the {@link com.google.api.services.redis.v1.model.ImportInstanceRequest}
           * @since 1.13
           */
          protected CloudRedisImport(java.lang.String name, com.google.api.services.redis.v1.model.ImportInstanceRequest content) {
            super(CloudRedis.this, "POST", REST_PATH, content, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public CloudRedisImport set$Xgafv(java.lang.String $Xgafv) {
            return (CloudRedisImport) super.set$Xgafv($Xgafv);
          }

          @Override
          public CloudRedisImport setAccessToken(java.lang.String accessToken) {
            return (CloudRedisImport) super.setAccessToken(accessToken);
          }

          @Override
          public CloudRedisImport setAlt(java.lang.String alt) {
            return (CloudRedisImport) super.setAlt(alt);
          }

          @Override
          public CloudRedisImport setCallback(java.lang.String callback) {
            return (CloudRedisImport) super.setCallback(callback);
          }

          @Override
          public CloudRedisImport setFields(java.lang.String fields) {
            return (CloudRedisImport) super.setFields(fields);
          }

          @Override
          public CloudRedisImport setKey(java.lang.String key) {
            return (CloudRedisImport) super.setKey(key);
          }

          @Override
          public CloudRedisImport setOauthToken(java.lang.String oauthToken) {
            return (CloudRedisImport) super.setOauthToken(oauthToken);
          }

          @Override
          public CloudRedisImport setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CloudRedisImport) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CloudRedisImport setQuotaUser(java.lang.String quotaUser) {
            return (CloudRedisImport) super.setQuotaUser(quotaUser);
          }

          @Override
          public CloudRedisImport setUploadType(java.lang.String uploadType) {
            return (CloudRedisImport) super.setUploadType(uploadType);
          }

          @Override
          public CloudRedisImport setUploadProtocol(java.lang.String uploadProtocol) {
            return (CloudRedisImport) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Redis instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers
         to a GCP region.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Redis instance resource name using the form:
           * `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where
           * `location_id` refers to a GCP region.
           */
          public CloudRedisImport setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public CloudRedisImport set(String parameterName, Object value) {
            return (CloudRedisImport) super.set(parameterName, value);
          }
        }
        /**
         * Lists all Redis instances owned by a project in either the specified location (region) or all
         * locations.
         *
         * The location should have the following format: * `projects/{project_id}/locations/{location_id}`
         *
         * If `location_id` is specified as `-` (wildcard), then all regions available to the project are
         * queried, and the results are aggregated.
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the instance location using the form:
         *        `projects/{project_id}/locations/{location_id}`
        where `location_id` refers to a GCP
         *        region.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudRedisRequest<com.google.api.services.redis.v1.model.ListInstancesResponse> {

          private static final String REST_PATH = "v1/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all Redis instances owned by a project in either the specified location (region) or all
           * locations.
           *
           * The location should have the following format: *
           * `projects/{project_id}/locations/{location_id}`
           *
           * If `location_id` is specified as `-` (wildcard), then all regions available to the project are
           * queried, and the results are aggregated.
           *
           * Create a request for the method "instances.list".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the instance location using the form:
         *        `projects/{project_id}/locations/{location_id}`
        where `location_id` refers to a GCP
         *        region.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.ListInstancesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the instance location using the form:
           * `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP
           * region.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the instance location using the form:
         `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the instance location using the form:
           * `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP
           * region.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of items to return.
           *
           * If not specified, a default value of 1000 will be used by the service. Regardless of
           * the page_size value, the response may include a partial list and a caller should only
           * rely on response's next_page_token to determine if there are more instances left to be
           * queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return.

         If not specified, a default value of 1000 will be used by the service. Regardless of the page_size
         value, the response may include a partial list and a caller should only rely on response's
         next_page_token to determine if there are more instances left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return.
           *
           * If not specified, a default value of 1000 will be used by the service. Regardless of
           * the page_size value, the response may include a partial list and a caller should only
           * rely on response's next_page_token to determine if there are more instances left to be
           * queried.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The next_page_token value returned from a previous List request, if any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The next_page_token value returned from a previous List request, if any.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the metadata and configuration of a specific Redis instance.
         *
         * Completed longrunning.Operation will contain the new instance object in the response field. The
         * returned operation is automatically deleted after a few hours, so there is no need to call
         * DeleteOperation.
         *
         * Create a request for the method "instances.patch".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Unique name of the resource in this scope including project and
        location using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        Note: Redis
         *        instances are managed and addressed at regional level so
        location_id here refers to a GCP
         *        region; however, users may choose which
        specific zone (or collection of zones for cross-
         *        zone instances) an instance
        should be provisioned in. Refer to [location_id] and
         *        [alternative_location_id] fields for more details.
         * @param content the {@link com.google.api.services.redis.v1.model.Instance}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.redis.v1.model.Instance content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Updates the metadata and configuration of a specific Redis instance.
           *
           * Completed longrunning.Operation will contain the new instance object in the response field. The
           * returned operation is automatically deleted after a few hours, so there is no need to call
           * DeleteOperation.
           *
           * Create a request for the method "instances.patch".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Unique name of the resource in this scope including project and
        location using the form:
         *        `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        Note: Redis
         *        instances are managed and addressed at regional level so
        location_id here refers to a GCP
         *        region; however, users may choose which
        specific zone (or collection of zones for cross-
         *        zone instances) an instance
        should be provisioned in. Refer to [location_id] and
         *        [alternative_location_id] fields for more details.
           * @param content the {@link com.google.api.services.redis.v1.model.Instance}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.redis.v1.model.Instance content) {
            super(CloudRedis.this, "PATCH", REST_PATH, content, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Unique name of the resource in this scope including project and location
           * using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
           *
           * Note: Redis instances are managed and addressed at regional level so location_id here
           * refers to a GCP region; however, users may choose which specific zone (or collection of
           * zones for cross-zone instances) an instance should be provisioned in. Refer to
           * [location_id] and [alternative_location_id] fields for more details.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Unique name of the resource in this scope including project and location using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}`

         Note: Redis instances are managed and addressed at regional level so location_id here refers to a
         GCP region; however, users may choose which specific zone (or collection of zones for cross-zone
         instances) an instance should be provisioned in. Refer to [location_id] and
         [alternative_location_id] fields for more details.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Unique name of the resource in this scope including project and location
           * using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
           *
           * Note: Redis instances are managed and addressed at regional level so location_id here
           * refers to a GCP region; however, users may choose which specific zone (or collection of
           * zones for cross-zone instances) an instance should be provisioned in. Refer to
           * [location_id] and [alternative_location_id] fields for more details.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from Instance:
           *
           * *   `displayName` *   `labels` *   `memorySizeGb` *   `redisConfig`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Mask of fields to update. At least one path must be supplied in this field. The elements
         of the repeated paths field may only include these fields from Instance:

         *   `displayName` *   `labels` *   `memorySizeGb` *   `redisConfig`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from Instance:
           *
           * *   `displayName` *   `labels` *   `memorySizeGb` *   `redisConfig`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudRedis redis = new CloudRedis(...);}
       *   {@code CloudRedis.Operations.List request = redis.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
         * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @return the request
         */
        public Cancel cancel(java.lang.String name) throws java.io.IOException {
          Cancel result = new Cancel(name);
          initialize(result);
          return result;
        }

        public class Cancel extends CloudRedisRequest<com.google.api.services.redis.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
           * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
           * other methods to check whether the cancellation succeeded or whether the operation completed
           * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
           * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
           * corresponding to `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @since 1.13
           */
          protected Cancel(java.lang.String name) {
            super(CloudRedis.this, "POST", REST_PATH, null, com.google.api.services.redis.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudRedisRequest<com.google.api.services.redis.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudRedis.this, "DELETE", REST_PATH, null, com.google.api.services.redis.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudRedisRequest<com.google.api.services.redis.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation.  Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding to use different resource
         * name schemes, such as `users/operations`. To override the binding, API services can add a binding
         * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
         * compatibility, the default name includes the operations collection id, however overriding users
         * must ensure the name binding is the parent resource, without the operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the redis server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends CloudRedisRequest<com.google.api.services.redis.v1.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * NOTE: the `name` binding allows API services to override the binding to use different resource
           * name schemes, such as `users/operations`. To override the binding, API services can add a
           * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
           * compatibility, the default name includes the operations collection id, however overriding users
           * must ensure the name binding is the parent resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the redis server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(CloudRedis.this, "GET", REST_PATH, null, com.google.api.services.redis.v1.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudRedis}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudRedis}. */
    @Override
    public CloudRedis build() {
      return new CloudRedis(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudRedisRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudRedisRequestInitializer(
        CloudRedisRequestInitializer cloudredisRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudredisRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
