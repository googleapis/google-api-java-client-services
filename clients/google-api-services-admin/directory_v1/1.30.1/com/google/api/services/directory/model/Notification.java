/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.directory.model;

/**
 * Template for a notification resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin Directory API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Notification extends com.google.api.client.json.GenericJson {

  /**
   * Body of the notification (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String body;

  /**
   * ETag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Address from which the notification is received (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fromAddress;

  /**
   * Boolean indicating whether the notification is unread or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isUnread;

  /**
   * The type of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notificationId;

  /**
   * Time at which notification was sent (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime sendTime;

  /**
   * Subject of the notification (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subject;

  /**
   * Body of the notification (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getBody() {
    return body;
  }

  /**
   * Body of the notification (Read-only)
   * @param body body or {@code null} for none
   */
  public Notification setBody(java.lang.String body) {
    this.body = body;
    return this;
  }

  /**
   * ETag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * ETag of the resource.
   * @param etag etag or {@code null} for none
   */
  public Notification setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Address from which the notification is received (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getFromAddress() {
    return fromAddress;
  }

  /**
   * Address from which the notification is received (Read-only)
   * @param fromAddress fromAddress or {@code null} for none
   */
  public Notification setFromAddress(java.lang.String fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Boolean indicating whether the notification is unread or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsUnread() {
    return isUnread;
  }

  /**
   * Boolean indicating whether the notification is unread or not.
   * @param isUnread isUnread or {@code null} for none
   */
  public Notification setIsUnread(java.lang.Boolean isUnread) {
    this.isUnread = isUnread;
    return this;
  }

  /**
   * The type of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The type of the resource.
   * @param kind kind or {@code null} for none
   */
  public Notification setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getNotificationId() {
    return notificationId;
  }

  /**
   * @param notificationId notificationId or {@code null} for none
   */
  public Notification setNotificationId(java.lang.String notificationId) {
    this.notificationId = notificationId;
    return this;
  }

  /**
   * Time at which notification was sent (Read-only)
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getSendTime() {
    return sendTime;
  }

  /**
   * Time at which notification was sent (Read-only)
   * @param sendTime sendTime or {@code null} for none
   */
  public Notification setSendTime(com.google.api.client.util.DateTime sendTime) {
    this.sendTime = sendTime;
    return this;
  }

  /**
   * Subject of the notification (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getSubject() {
    return subject;
  }

  /**
   * Subject of the notification (Read-only)
   * @param subject subject or {@code null} for none
   */
  public Notification setSubject(java.lang.String subject) {
    this.subject = subject;
    return this;
  }

  @Override
  public Notification set(String fieldName, Object value) {
    return (Notification) super.set(fieldName, value);
  }

  @Override
  public Notification clone() {
    return (Notification) super.clone();
  }

}
