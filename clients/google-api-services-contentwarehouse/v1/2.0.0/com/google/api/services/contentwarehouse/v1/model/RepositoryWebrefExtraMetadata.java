/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Additional metadata about the entity, that can be derived from the "raw data" (composite doc,
 * domain specific data...), or come from other sources. Next available tag is 35.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefExtraMetadata extends com.google.api.client.json.GenericJson {

  /**
   * For a book entity, store its book editions metadata. Used by Juggernaut to do
   * /book/book_edition recon, see ariane/265006. This field is used by Juggernaut only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefBookEditionMetadata> bookEditionMetadata;

  static {
    // hack to force ProGuard to consider RepositoryWebrefBookEditionMetadata used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepositoryWebrefBookEditionMetadata.class);
  }

  /**
   * Information about category types of the entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefCategoryInfo categoryInfo;

  /**
   * Metadata about clusters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefClusterMetadata clusterMetadata;

  /**
   * Information for displaying the entity in applications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefDisplayInfo displayInfo;

  /**
   * Additional scores for the entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefEntityScores entityScores;

  /**
   * An entity in KG that represents the same (or equivalent) entity in the real world. In
   * particular, this is used for mid-forwarding: when de-duping entities in KG, the old ids
   * represent the exact same entity as the one they were merged with. So when we see one id in the
   * query and the other in a document, they are treated as the same entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefWebrefEntityId> equivalentEntityId;

  /**
   * Geo-specific entity metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefGeoMetadataProto geoMetadata;

  /**
   * Metadata related to KC attributes and Question & Answer triggering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefKCAttributeMetadata kcAttributeMetadata;

  /**
   * A list of entities that are latent given this entity. For example, "Lionel Messi" can have the
   * latent entity "FC Barcelona". The latent entity links are materialized in an offline pipeline
   * using r/w/scripts/latent_entities/latent-entities.pq. For more information, see go/latent-
   * entities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefLatentEntities latentEntities;

  /**
   * Metadata about MDVC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefMdvcMetadata mdvcMetadata;

  /**
   * Other metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet otherMetadata;

  /**
   * The primary recording mid of a recording cluster entity. Used by Juggernaut to do
   * /music/recording recon, see b/139901317. The primary recording is unique to a recording
   * cluster. This field is used by Juggernaut only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger primaryRecording;

  /**
   * Products-specific entity metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepositoryWebrefProductMetadata productMetadata;

  /**
   * # LINT.ThenChange( //depot/google3/repository/webref/evaluation/query/metrics/util.cc)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String specialEntityType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<MapsQualitySpecialWordsProto> specialWord;

  static {
    // hack to force ProGuard to consider MapsQualitySpecialWordsProto used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(MapsQualitySpecialWordsProto.class);
  }

  /**
   * Metadata about support transfer rules defined for this entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefSupportTransferRule> supportTransferRules;

  /**
   * For a book entity, store its book editions metadata. Used by Juggernaut to do
   * /book/book_edition recon, see ariane/265006. This field is used by Juggernaut only.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefBookEditionMetadata> getBookEditionMetadata() {
    return bookEditionMetadata;
  }

  /**
   * For a book entity, store its book editions metadata. Used by Juggernaut to do
   * /book/book_edition recon, see ariane/265006. This field is used by Juggernaut only.
   * @param bookEditionMetadata bookEditionMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setBookEditionMetadata(java.util.List<RepositoryWebrefBookEditionMetadata> bookEditionMetadata) {
    this.bookEditionMetadata = bookEditionMetadata;
    return this;
  }

  /**
   * Information about category types of the entity.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefCategoryInfo getCategoryInfo() {
    return categoryInfo;
  }

  /**
   * Information about category types of the entity.
   * @param categoryInfo categoryInfo or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setCategoryInfo(RepositoryWebrefCategoryInfo categoryInfo) {
    this.categoryInfo = categoryInfo;
    return this;
  }

  /**
   * Metadata about clusters.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefClusterMetadata getClusterMetadata() {
    return clusterMetadata;
  }

  /**
   * Metadata about clusters.
   * @param clusterMetadata clusterMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setClusterMetadata(RepositoryWebrefClusterMetadata clusterMetadata) {
    this.clusterMetadata = clusterMetadata;
    return this;
  }

  /**
   * Information for displaying the entity in applications.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefDisplayInfo getDisplayInfo() {
    return displayInfo;
  }

  /**
   * Information for displaying the entity in applications.
   * @param displayInfo displayInfo or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setDisplayInfo(RepositoryWebrefDisplayInfo displayInfo) {
    this.displayInfo = displayInfo;
    return this;
  }

  /**
   * Additional scores for the entity.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefEntityScores getEntityScores() {
    return entityScores;
  }

  /**
   * Additional scores for the entity.
   * @param entityScores entityScores or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setEntityScores(RepositoryWebrefEntityScores entityScores) {
    this.entityScores = entityScores;
    return this;
  }

  /**
   * An entity in KG that represents the same (or equivalent) entity in the real world. In
   * particular, this is used for mid-forwarding: when de-duping entities in KG, the old ids
   * represent the exact same entity as the one they were merged with. So when we see one id in the
   * query and the other in a document, they are treated as the same entity.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefWebrefEntityId> getEquivalentEntityId() {
    return equivalentEntityId;
  }

  /**
   * An entity in KG that represents the same (or equivalent) entity in the real world. In
   * particular, this is used for mid-forwarding: when de-duping entities in KG, the old ids
   * represent the exact same entity as the one they were merged with. So when we see one id in the
   * query and the other in a document, they are treated as the same entity.
   * @param equivalentEntityId equivalentEntityId or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setEquivalentEntityId(java.util.List<RepositoryWebrefWebrefEntityId> equivalentEntityId) {
    this.equivalentEntityId = equivalentEntityId;
    return this;
  }

  /**
   * Geo-specific entity metadata.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefGeoMetadataProto getGeoMetadata() {
    return geoMetadata;
  }

  /**
   * Geo-specific entity metadata.
   * @param geoMetadata geoMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setGeoMetadata(RepositoryWebrefGeoMetadataProto geoMetadata) {
    this.geoMetadata = geoMetadata;
    return this;
  }

  /**
   * Metadata related to KC attributes and Question & Answer triggering.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefKCAttributeMetadata getKcAttributeMetadata() {
    return kcAttributeMetadata;
  }

  /**
   * Metadata related to KC attributes and Question & Answer triggering.
   * @param kcAttributeMetadata kcAttributeMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setKcAttributeMetadata(RepositoryWebrefKCAttributeMetadata kcAttributeMetadata) {
    this.kcAttributeMetadata = kcAttributeMetadata;
    return this;
  }

  /**
   * A list of entities that are latent given this entity. For example, "Lionel Messi" can have the
   * latent entity "FC Barcelona". The latent entity links are materialized in an offline pipeline
   * using r/w/scripts/latent_entities/latent-entities.pq. For more information, see go/latent-
   * entities.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefLatentEntities getLatentEntities() {
    return latentEntities;
  }

  /**
   * A list of entities that are latent given this entity. For example, "Lionel Messi" can have the
   * latent entity "FC Barcelona". The latent entity links are materialized in an offline pipeline
   * using r/w/scripts/latent_entities/latent-entities.pq. For more information, see go/latent-
   * entities.
   * @param latentEntities latentEntities or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setLatentEntities(RepositoryWebrefLatentEntities latentEntities) {
    this.latentEntities = latentEntities;
    return this;
  }

  /**
   * Metadata about MDVC.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefMdvcMetadata getMdvcMetadata() {
    return mdvcMetadata;
  }

  /**
   * Metadata about MDVC.
   * @param mdvcMetadata mdvcMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setMdvcMetadata(RepositoryWebrefMdvcMetadata mdvcMetadata) {
    this.mdvcMetadata = mdvcMetadata;
    return this;
  }

  /**
   * Other metadata.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getOtherMetadata() {
    return otherMetadata;
  }

  /**
   * Other metadata.
   * @param otherMetadata otherMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setOtherMetadata(Proto2BridgeMessageSet otherMetadata) {
    this.otherMetadata = otherMetadata;
    return this;
  }

  /**
   * The primary recording mid of a recording cluster entity. Used by Juggernaut to do
   * /music/recording recon, see b/139901317. The primary recording is unique to a recording
   * cluster. This field is used by Juggernaut only.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getPrimaryRecording() {
    return primaryRecording;
  }

  /**
   * The primary recording mid of a recording cluster entity. Used by Juggernaut to do
   * /music/recording recon, see b/139901317. The primary recording is unique to a recording
   * cluster. This field is used by Juggernaut only.
   * @param primaryRecording primaryRecording or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setPrimaryRecording(java.math.BigInteger primaryRecording) {
    this.primaryRecording = primaryRecording;
    return this;
  }

  /**
   * Products-specific entity metadata.
   * @return value or {@code null} for none
   */
  public RepositoryWebrefProductMetadata getProductMetadata() {
    return productMetadata;
  }

  /**
   * Products-specific entity metadata.
   * @param productMetadata productMetadata or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setProductMetadata(RepositoryWebrefProductMetadata productMetadata) {
    this.productMetadata = productMetadata;
    return this;
  }

  /**
   * # LINT.ThenChange( //depot/google3/repository/webref/evaluation/query/metrics/util.cc)
   * @return value or {@code null} for none
   */
  public java.lang.String getSpecialEntityType() {
    return specialEntityType;
  }

  /**
   * # LINT.ThenChange( //depot/google3/repository/webref/evaluation/query/metrics/util.cc)
   * @param specialEntityType specialEntityType or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setSpecialEntityType(java.lang.String specialEntityType) {
    this.specialEntityType = specialEntityType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<MapsQualitySpecialWordsProto> getSpecialWord() {
    return specialWord;
  }

  /**
   * @param specialWord specialWord or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setSpecialWord(java.util.List<MapsQualitySpecialWordsProto> specialWord) {
    this.specialWord = specialWord;
    return this;
  }

  /**
   * Metadata about support transfer rules defined for this entity.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefSupportTransferRule> getSupportTransferRules() {
    return supportTransferRules;
  }

  /**
   * Metadata about support transfer rules defined for this entity.
   * @param supportTransferRules supportTransferRules or {@code null} for none
   */
  public RepositoryWebrefExtraMetadata setSupportTransferRules(java.util.List<RepositoryWebrefSupportTransferRule> supportTransferRules) {
    this.supportTransferRules = supportTransferRules;
    return this;
  }

  @Override
  public RepositoryWebrefExtraMetadata set(String fieldName, Object value) {
    return (RepositoryWebrefExtraMetadata) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefExtraMetadata clone() {
    return (RepositoryWebrefExtraMetadata) super.clone();
  }

}
