/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chat.v1.model;

/**
 * Next available ID = 8
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Chat API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CommonEventObject extends com.google.api.client.json.GenericJson {

  /**
   * The keys are the string IDs associated with the widget and the values are inputs with a widget
   * in the card.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, Inputs> formInputs;

  /**
   * The hostApp enum which indicates the app the add-on is invoked from
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostApp;

  /**
   * Name of the invoked function associated with the widget. This field is currently only set for
   * chat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String invokedFunction;

  /**
   * Any additional parameters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> parameters;

  /**
   * The platform enum which indicates the platform where the add-on is running.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String platform;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeZone timeZone;

  /**
   * The full locale.displayName in the format of [ISO 639 language code]-[ISO 3166 country/region
   * code] such as "en-US"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userLocale;

  /**
   * The keys are the string IDs associated with the widget and the values are inputs with a widget
   * in the card.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, Inputs> getFormInputs() {
    return formInputs;
  }

  /**
   * The keys are the string IDs associated with the widget and the values are inputs with a widget
   * in the card.
   * @param formInputs formInputs or {@code null} for none
   */
  public CommonEventObject setFormInputs(java.util.Map<String, Inputs> formInputs) {
    this.formInputs = formInputs;
    return this;
  }

  /**
   * The hostApp enum which indicates the app the add-on is invoked from
   * @return value or {@code null} for none
   */
  public java.lang.String getHostApp() {
    return hostApp;
  }

  /**
   * The hostApp enum which indicates the app the add-on is invoked from
   * @param hostApp hostApp or {@code null} for none
   */
  public CommonEventObject setHostApp(java.lang.String hostApp) {
    this.hostApp = hostApp;
    return this;
  }

  /**
   * Name of the invoked function associated with the widget. This field is currently only set for
   * chat.
   * @return value or {@code null} for none
   */
  public java.lang.String getInvokedFunction() {
    return invokedFunction;
  }

  /**
   * Name of the invoked function associated with the widget. This field is currently only set for
   * chat.
   * @param invokedFunction invokedFunction or {@code null} for none
   */
  public CommonEventObject setInvokedFunction(java.lang.String invokedFunction) {
    this.invokedFunction = invokedFunction;
    return this;
  }

  /**
   * Any additional parameters.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getParameters() {
    return parameters;
  }

  /**
   * Any additional parameters.
   * @param parameters parameters or {@code null} for none
   */
  public CommonEventObject setParameters(java.util.Map<String, java.lang.String> parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * The platform enum which indicates the platform where the add-on is running.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlatform() {
    return platform;
  }

  /**
   * The platform enum which indicates the platform where the add-on is running.
   * @param platform platform or {@code null} for none
   */
  public CommonEventObject setPlatform(java.lang.String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public TimeZone getTimeZone() {
    return timeZone;
  }

  /**
   * @param timeZone timeZone or {@code null} for none
   */
  public CommonEventObject setTimeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * The full locale.displayName in the format of [ISO 639 language code]-[ISO 3166 country/region
   * code] such as "en-US"
   * @return value or {@code null} for none
   */
  public java.lang.String getUserLocale() {
    return userLocale;
  }

  /**
   * The full locale.displayName in the format of [ISO 639 language code]-[ISO 3166 country/region
   * code] such as "en-US"
   * @param userLocale userLocale or {@code null} for none
   */
  public CommonEventObject setUserLocale(java.lang.String userLocale) {
    this.userLocale = userLocale;
    return this;
  }

  @Override
  public CommonEventObject set(String fieldName, Object value) {
    return (CommonEventObject) super.set(fieldName, value);
  }

  @Override
  public CommonEventObject clone() {
    return (CommonEventObject) super.clone();
  }

}
