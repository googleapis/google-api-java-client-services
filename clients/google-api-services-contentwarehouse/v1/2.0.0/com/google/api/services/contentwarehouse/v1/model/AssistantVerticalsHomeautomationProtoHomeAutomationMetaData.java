/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next ID: 40
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantVerticalsHomeautomationProtoHomeAutomationMetaData extends com.google.api.client.json.GenericJson {

  /**
   * Custom actions that this item supports.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantVerticalsHomeautomationProtoActionProjectConfig> actionProjectConfigs;

  static {
    // hack to force ProGuard to consider AssistantVerticalsHomeautomationProtoActionProjectConfig used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantVerticalsHomeautomationProtoActionProjectConfig.class);
  }

  /**
   * Agent details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoAgentInformation agentInformation;

  /**
   * Device ID that matches the ID passed from the device to discourse_context when a user issues a
   * query to an Assistant-enabled device that is registered with Cast (via CCS (see
   * go/castservers)), or some other service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assistantDeviceId;

  /**
   * Attributes data as provided from SYNC. This gets used in mutation and execution and in some
   * potential cases, in biasing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> attributes;

  /**
   * See Device.creator_gaia_ids in //home/graph/proto/service/types.proto. If empty, the GAIA ID
   * from the request EUC is assumed to be the creator. We only need at most one creator_gaia_id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long creatorGaiaId;

  /**
   * Any types that are not the given item type, but derived later. For example, if an item has type
   * action.devices.types.OUTLET but is named "floor lamp" we can derive that it also has type
   * action.devices.types.LIGHT. Also considered along with |type| when triggering type-based
   * actions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> derivedType;

  /**
   * See note in home_graph.proto; loaded into DE now to avoid having to double-read assistant
   * settings records as per go/smarthome-removing-assistant-settings
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceModelId;

  /**
   * GCM address for cloud execution across google cloud messaging rather than 3p cloud; for future
   * use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcmExecutionAddress;

  /**
   * The hash value from go/de-consistency-check
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hashValue;

  /**
   * Whether local home platform should discover new devices via LAN for the structure.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lanscanOptedIn;

  /**
   * Model name from HomeGraph, populated from model_manifest.model_name. See b/200087451.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelName;

  /**
   * Indicates whether notifications have been enabled by a user and will be announced for this
   * device. This is set by the user within the Google app settings, and Google will announce the
   * device notification only if both notification_supported_by_agent and
   * notification_enabled_by_user are true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean notificationEnabledByUser;

  /**
   * Indicates whether the device is capable of sending notifications. This field will be set by the
   * agent (partner) on an incoming SYNC. If a device is not capable of generating notifications,
   * the partner should set this flag to false. If a partner is not capable of calling
   * ReportStateAndNotification to send notifications to Google, the partner should set this flag to
   * false. If there is a user setting in the partner app to enable notifications and it is turned
   * off, the partner should set this flag to false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean notificationSupportedByAgent;

  /**
   * Store custom data for agent calls here. This will likely be short-lived -- we will replace this
   * with calls to HGS. (Note: This may end up not temporary if we only need it for a couple
   * partners -- more efficient to have it on a few users than require HGS reads for all users.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String opaqueCustomData;

  /**
   * Operational CHIP Node ID that combines the fabric ID and node id in format of . (Hex format
   * without 0x prefix, for example, 0F001234FA67AA39.1234ABCD1111DDDD).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operationalNodeId;

  /**
   * Other agent id + foreign id pairs associated with the device. This can be used to represent a
   * group of devices (e.g. Sonos' bonded zone) as a single device, or a device that comes in
   * through different sync flows (e.g. Newman with a Nest camera).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantVerticalsHomeautomationProtoAgentDeviceId> otherDeviceIds;

  static {
    // hack to force ProGuard to consider AssistantVerticalsHomeautomationProtoAgentDeviceId used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantVerticalsHomeautomationProtoAgentDeviceId.class);
  }

  /**
   * LINT.IfChange(home_graph_single_parent) At the moment, we just have a single string. In future
   * this will expand with additional metadata from client or cloud execution data store. In today's
   * 'tree' HomeGraph each object has a single parent. In the future this may have a mesh for
   * complex cases -- zones, doors, etc -- so we make this a repeated element today. LINT.ThenChange
   * (//depot/google3/assistant/assistant_server/settings/user_defined_actions/footprints/footprint_
   * accessor.cc:home_graph_single_parent)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> parentNode;

  /**
   * The type of the parent. Currently only set for devices, to distinguish between structure and
   * room parents. Items currently have only one parent, and entries after the first parent_type are
   * ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> parentType;

  /**
   * User-given nicknames for an entity (e.g. "My house"). These nicknames are unique to the gaia
   * user. Nickname in DeviceInfo is per-entity level nickname, while personalized_nicknames is per-
   * user per-entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> personalizedNicknames;

  /**
   * Stores the location for the STRUCTURE type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoPhysicalLocation physicalLocation;

  /**
   * We use this to determine if the synonyms matched in the aqua interpretation is plural. Then we
   * will return disambiguate dialog or execute commands with all the targets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> plural;

  /**
   * Which of the values was the original, user-provided name -- or our disambiguated, cleaned-up
   * version of it. This is what we use in TTS when we need to identify an object that wasn't just
   * spoken uniquely by the user -- in disambiguation dialogue, or in response to a collective
   * interrogative (e.g. "what lights are on in the kitchen?")
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryName;

  /**
   * User's role information for this device. This will be used in Home Automation server to decide
   * if user has authority to fulfill its request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoRoleInformation roleInformation;

  /**
   * Only present for a target device. Indicates this target device is reachable by a local (AoGH)
   * path via an AoGH device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean routableViaGcm;

  /**
   * SAFT Document with linguistic annotations for the primary device name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSaftDocument saftDocument;

  /**
   * Data needed for SDM (fleet management). See go/enterprise-id-in-assistant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoSmartDeviceManagementData smartDeviceManagementData;

  /**
   * SmartHome feature flags that may be enabled per-item.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoSmartHomeFeatures smartHomeFeatures;

  /**
   * The features that are available for a structure. Will only be populated if the item_type ==
   * STRUCTURE.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantVerticalsHomeautomationProtoSupportedStructureFeatures supportedStructureFeatures;

  /**
   * Map from agent ID to supported traits. Some devices (e.g. Newman) have multiple agents, with
   * each agent being associated with a specific set of traits. This could alternatively have been
   * formatted as map as {trait, agent} pairs instead of the {agent, list of trait} pairs, but we
   * retain this format to be consistent with HomeGraph's representation. In practice, a trait
   * should only be paired with a single agent (i.e. we should not have two agents with the same
   * trait in their value list). This field is optional and should only be provided if the item has
   * multiple agents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, AssistantVerticalsHomeautomationProtoHomeAutomationMetaDataSupportedTraits> supportedTraitsByAgent;

  /**
   * This device supports direct response -- if the device itself is issuing the query (which means
   * it's also an assistant surface) we can return its payload directly rather than via cloud.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsDirectResponse;

  /**
   * Only present for an AoGH device. HGS Device ID of a target device and the signal strength (RSSI
   * in dB, higher is better) between that target device and the AoGH device. If this map is empty,
   * there are no target devices reachable by this AoGH device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.Map<String, java.lang.Long> targetDeviceSignalStrengths;

  /**
   * For SHED devices, some traits can only be executed on 3P cloud, e.g.
   * "action.devices.traits.MediaInitiation", "action.devices.traits.Channel" go/shed-per-trait-
   * routing
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HomeGraphCommonTraitRoutingHints> traitRoutingHints;

  /**
   * Map from traits to routing table. Metadata includes preferred execution path per trait and,
   * when Matter is preferred, which endpoint should be used for the trait.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, HomeGraphCommonRoutingTable> traitRoutingTable;

  /**
   * Map of trait to a proto representing the attribute. This is different from the attributes field
   * above which is represented as a struct. The attributes here are represented as protos and will
   * require specific support per trait.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, AssistantVerticalsHomeautomationProtoAttributes> traitToAttributeProtos;

  static {
    // hack to force ProGuard to consider AssistantVerticalsHomeautomationProtoAttributes used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantVerticalsHomeautomationProtoAttributes.class);
  }

  /**
   * The item type, such as "action.devices.types.VACUUM" - to be used in triggering type-based
   * actions, e.g. "start vacuuming": go/smarthome-type-based-actions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The priority order of speech targeting: 1. user_defined_device_type 2. derived_device_type 3.
   * device_type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userDefinedDeviceType;

  /**
   * Set to which level of voice match is needed. Enum based on string input from the partner in
   * json sync. Values accepted: "none" (but in this case partners won't set it), "owner" [requires
   * matching one of the creator gaia IDs], or "member" [any recognized voice 'enrolled' on the
   * device]. This may expand; only "owner" is in use for first partner, Tile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String voiceMatchRequired;

  /**
   * This device will report state; we can query realtime state from local HGS rather than slow
   * QUERY intent to the 3p cloud.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean willReportState;

  /**
   * SAFT Document with linguistic annotations for the zone name, if applicable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSaftDocument zoneNameSaftDocument;

  /**
   * Custom actions that this item supports.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantVerticalsHomeautomationProtoActionProjectConfig> getActionProjectConfigs() {
    return actionProjectConfigs;
  }

  /**
   * Custom actions that this item supports.
   * @param actionProjectConfigs actionProjectConfigs or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setActionProjectConfigs(java.util.List<AssistantVerticalsHomeautomationProtoActionProjectConfig> actionProjectConfigs) {
    this.actionProjectConfigs = actionProjectConfigs;
    return this;
  }

  /**
   * Agent details.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoAgentInformation getAgentInformation() {
    return agentInformation;
  }

  /**
   * Agent details.
   * @param agentInformation agentInformation or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setAgentInformation(AssistantVerticalsHomeautomationProtoAgentInformation agentInformation) {
    this.agentInformation = agentInformation;
    return this;
  }

  /**
   * Device ID that matches the ID passed from the device to discourse_context when a user issues a
   * query to an Assistant-enabled device that is registered with Cast (via CCS (see
   * go/castservers)), or some other service.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssistantDeviceId() {
    return assistantDeviceId;
  }

  /**
   * Device ID that matches the ID passed from the device to discourse_context when a user issues a
   * query to an Assistant-enabled device that is registered with Cast (via CCS (see
   * go/castservers)), or some other service.
   * @param assistantDeviceId assistantDeviceId or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setAssistantDeviceId(java.lang.String assistantDeviceId) {
    this.assistantDeviceId = assistantDeviceId;
    return this;
  }

  /**
   * Attributes data as provided from SYNC. This gets used in mutation and execution and in some
   * potential cases, in biasing.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getAttributes() {
    return attributes;
  }

  /**
   * Attributes data as provided from SYNC. This gets used in mutation and execution and in some
   * potential cases, in biasing.
   * @param attributes attributes or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setAttributes(java.util.Map<String, java.lang.Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * See Device.creator_gaia_ids in //home/graph/proto/service/types.proto. If empty, the GAIA ID
   * from the request EUC is assumed to be the creator. We only need at most one creator_gaia_id.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCreatorGaiaId() {
    return creatorGaiaId;
  }

  /**
   * See Device.creator_gaia_ids in //home/graph/proto/service/types.proto. If empty, the GAIA ID
   * from the request EUC is assumed to be the creator. We only need at most one creator_gaia_id.
   * @param creatorGaiaId creatorGaiaId or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setCreatorGaiaId(java.lang.Long creatorGaiaId) {
    this.creatorGaiaId = creatorGaiaId;
    return this;
  }

  /**
   * Any types that are not the given item type, but derived later. For example, if an item has type
   * action.devices.types.OUTLET but is named "floor lamp" we can derive that it also has type
   * action.devices.types.LIGHT. Also considered along with |type| when triggering type-based
   * actions.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDerivedType() {
    return derivedType;
  }

  /**
   * Any types that are not the given item type, but derived later. For example, if an item has type
   * action.devices.types.OUTLET but is named "floor lamp" we can derive that it also has type
   * action.devices.types.LIGHT. Also considered along with |type| when triggering type-based
   * actions.
   * @param derivedType derivedType or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setDerivedType(java.util.List<java.lang.String> derivedType) {
    this.derivedType = derivedType;
    return this;
  }

  /**
   * See note in home_graph.proto; loaded into DE now to avoid having to double-read assistant
   * settings records as per go/smarthome-removing-assistant-settings
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceModelId() {
    return deviceModelId;
  }

  /**
   * See note in home_graph.proto; loaded into DE now to avoid having to double-read assistant
   * settings records as per go/smarthome-removing-assistant-settings
   * @param deviceModelId deviceModelId or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setDeviceModelId(java.lang.String deviceModelId) {
    this.deviceModelId = deviceModelId;
    return this;
  }

  /**
   * GCM address for cloud execution across google cloud messaging rather than 3p cloud; for future
   * use.
   * @return value or {@code null} for none
   */
  public java.lang.String getGcmExecutionAddress() {
    return gcmExecutionAddress;
  }

  /**
   * GCM address for cloud execution across google cloud messaging rather than 3p cloud; for future
   * use.
   * @param gcmExecutionAddress gcmExecutionAddress or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setGcmExecutionAddress(java.lang.String gcmExecutionAddress) {
    this.gcmExecutionAddress = gcmExecutionAddress;
    return this;
  }

  /**
   * The hash value from go/de-consistency-check
   * @return value or {@code null} for none
   */
  public java.lang.String getHashValue() {
    return hashValue;
  }

  /**
   * The hash value from go/de-consistency-check
   * @param hashValue hashValue or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setHashValue(java.lang.String hashValue) {
    this.hashValue = hashValue;
    return this;
  }

  /**
   * Whether local home platform should discover new devices via LAN for the structure.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLanscanOptedIn() {
    return lanscanOptedIn;
  }

  /**
   * Whether local home platform should discover new devices via LAN for the structure.
   * @param lanscanOptedIn lanscanOptedIn or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setLanscanOptedIn(java.lang.Boolean lanscanOptedIn) {
    this.lanscanOptedIn = lanscanOptedIn;
    return this;
  }

  /**
   * Model name from HomeGraph, populated from model_manifest.model_name. See b/200087451.
   * @return value or {@code null} for none
   */
  public java.lang.String getModelName() {
    return modelName;
  }

  /**
   * Model name from HomeGraph, populated from model_manifest.model_name. See b/200087451.
   * @param modelName modelName or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setModelName(java.lang.String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Indicates whether notifications have been enabled by a user and will be announced for this
   * device. This is set by the user within the Google app settings, and Google will announce the
   * device notification only if both notification_supported_by_agent and
   * notification_enabled_by_user are true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNotificationEnabledByUser() {
    return notificationEnabledByUser;
  }

  /**
   * Indicates whether notifications have been enabled by a user and will be announced for this
   * device. This is set by the user within the Google app settings, and Google will announce the
   * device notification only if both notification_supported_by_agent and
   * notification_enabled_by_user are true.
   * @param notificationEnabledByUser notificationEnabledByUser or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setNotificationEnabledByUser(java.lang.Boolean notificationEnabledByUser) {
    this.notificationEnabledByUser = notificationEnabledByUser;
    return this;
  }

  /**
   * Indicates whether the device is capable of sending notifications. This field will be set by the
   * agent (partner) on an incoming SYNC. If a device is not capable of generating notifications,
   * the partner should set this flag to false. If a partner is not capable of calling
   * ReportStateAndNotification to send notifications to Google, the partner should set this flag to
   * false. If there is a user setting in the partner app to enable notifications and it is turned
   * off, the partner should set this flag to false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNotificationSupportedByAgent() {
    return notificationSupportedByAgent;
  }

  /**
   * Indicates whether the device is capable of sending notifications. This field will be set by the
   * agent (partner) on an incoming SYNC. If a device is not capable of generating notifications,
   * the partner should set this flag to false. If a partner is not capable of calling
   * ReportStateAndNotification to send notifications to Google, the partner should set this flag to
   * false. If there is a user setting in the partner app to enable notifications and it is turned
   * off, the partner should set this flag to false.
   * @param notificationSupportedByAgent notificationSupportedByAgent or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setNotificationSupportedByAgent(java.lang.Boolean notificationSupportedByAgent) {
    this.notificationSupportedByAgent = notificationSupportedByAgent;
    return this;
  }

  /**
   * Store custom data for agent calls here. This will likely be short-lived -- we will replace this
   * with calls to HGS. (Note: This may end up not temporary if we only need it for a couple
   * partners -- more efficient to have it on a few users than require HGS reads for all users.
   * @return value or {@code null} for none
   */
  public java.lang.String getOpaqueCustomData() {
    return opaqueCustomData;
  }

  /**
   * Store custom data for agent calls here. This will likely be short-lived -- we will replace this
   * with calls to HGS. (Note: This may end up not temporary if we only need it for a couple
   * partners -- more efficient to have it on a few users than require HGS reads for all users.
   * @param opaqueCustomData opaqueCustomData or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setOpaqueCustomData(java.lang.String opaqueCustomData) {
    this.opaqueCustomData = opaqueCustomData;
    return this;
  }

  /**
   * Operational CHIP Node ID that combines the fabric ID and node id in format of . (Hex format
   * without 0x prefix, for example, 0F001234FA67AA39.1234ABCD1111DDDD).
   * @return value or {@code null} for none
   */
  public java.lang.String getOperationalNodeId() {
    return operationalNodeId;
  }

  /**
   * Operational CHIP Node ID that combines the fabric ID and node id in format of . (Hex format
   * without 0x prefix, for example, 0F001234FA67AA39.1234ABCD1111DDDD).
   * @param operationalNodeId operationalNodeId or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setOperationalNodeId(java.lang.String operationalNodeId) {
    this.operationalNodeId = operationalNodeId;
    return this;
  }

  /**
   * Other agent id + foreign id pairs associated with the device. This can be used to represent a
   * group of devices (e.g. Sonos' bonded zone) as a single device, or a device that comes in
   * through different sync flows (e.g. Newman with a Nest camera).
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantVerticalsHomeautomationProtoAgentDeviceId> getOtherDeviceIds() {
    return otherDeviceIds;
  }

  /**
   * Other agent id + foreign id pairs associated with the device. This can be used to represent a
   * group of devices (e.g. Sonos' bonded zone) as a single device, or a device that comes in
   * through different sync flows (e.g. Newman with a Nest camera).
   * @param otherDeviceIds otherDeviceIds or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setOtherDeviceIds(java.util.List<AssistantVerticalsHomeautomationProtoAgentDeviceId> otherDeviceIds) {
    this.otherDeviceIds = otherDeviceIds;
    return this;
  }

  /**
   * LINT.IfChange(home_graph_single_parent) At the moment, we just have a single string. In future
   * this will expand with additional metadata from client or cloud execution data store. In today's
   * 'tree' HomeGraph each object has a single parent. In the future this may have a mesh for
   * complex cases -- zones, doors, etc -- so we make this a repeated element today. LINT.ThenChange
   * (//depot/google3/assistant/assistant_server/settings/user_defined_actions/footprints/footprint_
   * accessor.cc:home_graph_single_parent)
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getParentNode() {
    return parentNode;
  }

  /**
   * LINT.IfChange(home_graph_single_parent) At the moment, we just have a single string. In future
   * this will expand with additional metadata from client or cloud execution data store. In today's
   * 'tree' HomeGraph each object has a single parent. In the future this may have a mesh for
   * complex cases -- zones, doors, etc -- so we make this a repeated element today. LINT.ThenChange
   * (//depot/google3/assistant/assistant_server/settings/user_defined_actions/footprints/footprint_
   * accessor.cc:home_graph_single_parent)
   * @param parentNode parentNode or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setParentNode(java.util.List<java.lang.String> parentNode) {
    this.parentNode = parentNode;
    return this;
  }

  /**
   * The type of the parent. Currently only set for devices, to distinguish between structure and
   * room parents. Items currently have only one parent, and entries after the first parent_type are
   * ignored.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getParentType() {
    return parentType;
  }

  /**
   * The type of the parent. Currently only set for devices, to distinguish between structure and
   * room parents. Items currently have only one parent, and entries after the first parent_type are
   * ignored.
   * @param parentType parentType or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setParentType(java.util.List<java.lang.String> parentType) {
    this.parentType = parentType;
    return this;
  }

  /**
   * User-given nicknames for an entity (e.g. "My house"). These nicknames are unique to the gaia
   * user. Nickname in DeviceInfo is per-entity level nickname, while personalized_nicknames is per-
   * user per-entity.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPersonalizedNicknames() {
    return personalizedNicknames;
  }

  /**
   * User-given nicknames for an entity (e.g. "My house"). These nicknames are unique to the gaia
   * user. Nickname in DeviceInfo is per-entity level nickname, while personalized_nicknames is per-
   * user per-entity.
   * @param personalizedNicknames personalizedNicknames or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setPersonalizedNicknames(java.util.List<java.lang.String> personalizedNicknames) {
    this.personalizedNicknames = personalizedNicknames;
    return this;
  }

  /**
   * Stores the location for the STRUCTURE type.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoPhysicalLocation getPhysicalLocation() {
    return physicalLocation;
  }

  /**
   * Stores the location for the STRUCTURE type.
   * @param physicalLocation physicalLocation or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setPhysicalLocation(AssistantVerticalsHomeautomationProtoPhysicalLocation physicalLocation) {
    this.physicalLocation = physicalLocation;
    return this;
  }

  /**
   * We use this to determine if the synonyms matched in the aqua interpretation is plural. Then we
   * will return disambiguate dialog or execute commands with all the targets.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPlural() {
    return plural;
  }

  /**
   * We use this to determine if the synonyms matched in the aqua interpretation is plural. Then we
   * will return disambiguate dialog or execute commands with all the targets.
   * @param plural plural or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setPlural(java.util.List<java.lang.String> plural) {
    this.plural = plural;
    return this;
  }

  /**
   * Which of the values was the original, user-provided name -- or our disambiguated, cleaned-up
   * version of it. This is what we use in TTS when we need to identify an object that wasn't just
   * spoken uniquely by the user -- in disambiguation dialogue, or in response to a collective
   * interrogative (e.g. "what lights are on in the kitchen?")
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryName() {
    return primaryName;
  }

  /**
   * Which of the values was the original, user-provided name -- or our disambiguated, cleaned-up
   * version of it. This is what we use in TTS when we need to identify an object that wasn't just
   * spoken uniquely by the user -- in disambiguation dialogue, or in response to a collective
   * interrogative (e.g. "what lights are on in the kitchen?")
   * @param primaryName primaryName or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setPrimaryName(java.lang.String primaryName) {
    this.primaryName = primaryName;
    return this;
  }

  /**
   * User's role information for this device. This will be used in Home Automation server to decide
   * if user has authority to fulfill its request.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoRoleInformation getRoleInformation() {
    return roleInformation;
  }

  /**
   * User's role information for this device. This will be used in Home Automation server to decide
   * if user has authority to fulfill its request.
   * @param roleInformation roleInformation or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setRoleInformation(AssistantVerticalsHomeautomationProtoRoleInformation roleInformation) {
    this.roleInformation = roleInformation;
    return this;
  }

  /**
   * Only present for a target device. Indicates this target device is reachable by a local (AoGH)
   * path via an AoGH device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRoutableViaGcm() {
    return routableViaGcm;
  }

  /**
   * Only present for a target device. Indicates this target device is reachable by a local (AoGH)
   * path via an AoGH device.
   * @param routableViaGcm routableViaGcm or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setRoutableViaGcm(java.lang.Boolean routableViaGcm) {
    this.routableViaGcm = routableViaGcm;
    return this;
  }

  /**
   * SAFT Document with linguistic annotations for the primary device name.
   * @return value or {@code null} for none
   */
  public NlpSaftDocument getSaftDocument() {
    return saftDocument;
  }

  /**
   * SAFT Document with linguistic annotations for the primary device name.
   * @param saftDocument saftDocument or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSaftDocument(NlpSaftDocument saftDocument) {
    this.saftDocument = saftDocument;
    return this;
  }

  /**
   * Data needed for SDM (fleet management). See go/enterprise-id-in-assistant.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoSmartDeviceManagementData getSmartDeviceManagementData() {
    return smartDeviceManagementData;
  }

  /**
   * Data needed for SDM (fleet management). See go/enterprise-id-in-assistant.
   * @param smartDeviceManagementData smartDeviceManagementData or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSmartDeviceManagementData(AssistantVerticalsHomeautomationProtoSmartDeviceManagementData smartDeviceManagementData) {
    this.smartDeviceManagementData = smartDeviceManagementData;
    return this;
  }

  /**
   * SmartHome feature flags that may be enabled per-item.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoSmartHomeFeatures getSmartHomeFeatures() {
    return smartHomeFeatures;
  }

  /**
   * SmartHome feature flags that may be enabled per-item.
   * @param smartHomeFeatures smartHomeFeatures or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSmartHomeFeatures(AssistantVerticalsHomeautomationProtoSmartHomeFeatures smartHomeFeatures) {
    this.smartHomeFeatures = smartHomeFeatures;
    return this;
  }

  /**
   * The features that are available for a structure. Will only be populated if the item_type ==
   * STRUCTURE.
   * @return value or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoSupportedStructureFeatures getSupportedStructureFeatures() {
    return supportedStructureFeatures;
  }

  /**
   * The features that are available for a structure. Will only be populated if the item_type ==
   * STRUCTURE.
   * @param supportedStructureFeatures supportedStructureFeatures or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSupportedStructureFeatures(AssistantVerticalsHomeautomationProtoSupportedStructureFeatures supportedStructureFeatures) {
    this.supportedStructureFeatures = supportedStructureFeatures;
    return this;
  }

  /**
   * Map from agent ID to supported traits. Some devices (e.g. Newman) have multiple agents, with
   * each agent being associated with a specific set of traits. This could alternatively have been
   * formatted as map as {trait, agent} pairs instead of the {agent, list of trait} pairs, but we
   * retain this format to be consistent with HomeGraph's representation. In practice, a trait
   * should only be paired with a single agent (i.e. we should not have two agents with the same
   * trait in their value list). This field is optional and should only be provided if the item has
   * multiple agents.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, AssistantVerticalsHomeautomationProtoHomeAutomationMetaDataSupportedTraits> getSupportedTraitsByAgent() {
    return supportedTraitsByAgent;
  }

  /**
   * Map from agent ID to supported traits. Some devices (e.g. Newman) have multiple agents, with
   * each agent being associated with a specific set of traits. This could alternatively have been
   * formatted as map as {trait, agent} pairs instead of the {agent, list of trait} pairs, but we
   * retain this format to be consistent with HomeGraph's representation. In practice, a trait
   * should only be paired with a single agent (i.e. we should not have two agents with the same
   * trait in their value list). This field is optional and should only be provided if the item has
   * multiple agents.
   * @param supportedTraitsByAgent supportedTraitsByAgent or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSupportedTraitsByAgent(java.util.Map<String, AssistantVerticalsHomeautomationProtoHomeAutomationMetaDataSupportedTraits> supportedTraitsByAgent) {
    this.supportedTraitsByAgent = supportedTraitsByAgent;
    return this;
  }

  /**
   * This device supports direct response -- if the device itself is issuing the query (which means
   * it's also an assistant surface) we can return its payload directly rather than via cloud.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsDirectResponse() {
    return supportsDirectResponse;
  }

  /**
   * This device supports direct response -- if the device itself is issuing the query (which means
   * it's also an assistant surface) we can return its payload directly rather than via cloud.
   * @param supportsDirectResponse supportsDirectResponse or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setSupportsDirectResponse(java.lang.Boolean supportsDirectResponse) {
    this.supportsDirectResponse = supportsDirectResponse;
    return this;
  }

  /**
   * Only present for an AoGH device. HGS Device ID of a target device and the signal strength (RSSI
   * in dB, higher is better) between that target device and the AoGH device. If this map is empty,
   * there are no target devices reachable by this AoGH device.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Long> getTargetDeviceSignalStrengths() {
    return targetDeviceSignalStrengths;
  }

  /**
   * Only present for an AoGH device. HGS Device ID of a target device and the signal strength (RSSI
   * in dB, higher is better) between that target device and the AoGH device. If this map is empty,
   * there are no target devices reachable by this AoGH device.
   * @param targetDeviceSignalStrengths targetDeviceSignalStrengths or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setTargetDeviceSignalStrengths(java.util.Map<String, java.lang.Long> targetDeviceSignalStrengths) {
    this.targetDeviceSignalStrengths = targetDeviceSignalStrengths;
    return this;
  }

  /**
   * For SHED devices, some traits can only be executed on 3P cloud, e.g.
   * "action.devices.traits.MediaInitiation", "action.devices.traits.Channel" go/shed-per-trait-
   * routing
   * @return value or {@code null} for none
   */
  public java.util.List<HomeGraphCommonTraitRoutingHints> getTraitRoutingHints() {
    return traitRoutingHints;
  }

  /**
   * For SHED devices, some traits can only be executed on 3P cloud, e.g.
   * "action.devices.traits.MediaInitiation", "action.devices.traits.Channel" go/shed-per-trait-
   * routing
   * @param traitRoutingHints traitRoutingHints or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setTraitRoutingHints(java.util.List<HomeGraphCommonTraitRoutingHints> traitRoutingHints) {
    this.traitRoutingHints = traitRoutingHints;
    return this;
  }

  /**
   * Map from traits to routing table. Metadata includes preferred execution path per trait and,
   * when Matter is preferred, which endpoint should be used for the trait.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, HomeGraphCommonRoutingTable> getTraitRoutingTable() {
    return traitRoutingTable;
  }

  /**
   * Map from traits to routing table. Metadata includes preferred execution path per trait and,
   * when Matter is preferred, which endpoint should be used for the trait.
   * @param traitRoutingTable traitRoutingTable or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setTraitRoutingTable(java.util.Map<String, HomeGraphCommonRoutingTable> traitRoutingTable) {
    this.traitRoutingTable = traitRoutingTable;
    return this;
  }

  /**
   * Map of trait to a proto representing the attribute. This is different from the attributes field
   * above which is represented as a struct. The attributes here are represented as protos and will
   * require specific support per trait.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, AssistantVerticalsHomeautomationProtoAttributes> getTraitToAttributeProtos() {
    return traitToAttributeProtos;
  }

  /**
   * Map of trait to a proto representing the attribute. This is different from the attributes field
   * above which is represented as a struct. The attributes here are represented as protos and will
   * require specific support per trait.
   * @param traitToAttributeProtos traitToAttributeProtos or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setTraitToAttributeProtos(java.util.Map<String, AssistantVerticalsHomeautomationProtoAttributes> traitToAttributeProtos) {
    this.traitToAttributeProtos = traitToAttributeProtos;
    return this;
  }

  /**
   * The item type, such as "action.devices.types.VACUUM" - to be used in triggering type-based
   * actions, e.g. "start vacuuming": go/smarthome-type-based-actions.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The item type, such as "action.devices.types.VACUUM" - to be used in triggering type-based
   * actions, e.g. "start vacuuming": go/smarthome-type-based-actions.
   * @param type type or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * The priority order of speech targeting: 1. user_defined_device_type 2. derived_device_type 3.
   * device_type
   * @return value or {@code null} for none
   */
  public java.lang.String getUserDefinedDeviceType() {
    return userDefinedDeviceType;
  }

  /**
   * The priority order of speech targeting: 1. user_defined_device_type 2. derived_device_type 3.
   * device_type
   * @param userDefinedDeviceType userDefinedDeviceType or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setUserDefinedDeviceType(java.lang.String userDefinedDeviceType) {
    this.userDefinedDeviceType = userDefinedDeviceType;
    return this;
  }

  /**
   * Set to which level of voice match is needed. Enum based on string input from the partner in
   * json sync. Values accepted: "none" (but in this case partners won't set it), "owner" [requires
   * matching one of the creator gaia IDs], or "member" [any recognized voice 'enrolled' on the
   * device]. This may expand; only "owner" is in use for first partner, Tile.
   * @return value or {@code null} for none
   */
  public java.lang.String getVoiceMatchRequired() {
    return voiceMatchRequired;
  }

  /**
   * Set to which level of voice match is needed. Enum based on string input from the partner in
   * json sync. Values accepted: "none" (but in this case partners won't set it), "owner" [requires
   * matching one of the creator gaia IDs], or "member" [any recognized voice 'enrolled' on the
   * device]. This may expand; only "owner" is in use for first partner, Tile.
   * @param voiceMatchRequired voiceMatchRequired or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setVoiceMatchRequired(java.lang.String voiceMatchRequired) {
    this.voiceMatchRequired = voiceMatchRequired;
    return this;
  }

  /**
   * This device will report state; we can query realtime state from local HGS rather than slow
   * QUERY intent to the 3p cloud.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWillReportState() {
    return willReportState;
  }

  /**
   * This device will report state; we can query realtime state from local HGS rather than slow
   * QUERY intent to the 3p cloud.
   * @param willReportState willReportState or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setWillReportState(java.lang.Boolean willReportState) {
    this.willReportState = willReportState;
    return this;
  }

  /**
   * SAFT Document with linguistic annotations for the zone name, if applicable.
   * @return value or {@code null} for none
   */
  public NlpSaftDocument getZoneNameSaftDocument() {
    return zoneNameSaftDocument;
  }

  /**
   * SAFT Document with linguistic annotations for the zone name, if applicable.
   * @param zoneNameSaftDocument zoneNameSaftDocument or {@code null} for none
   */
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData setZoneNameSaftDocument(NlpSaftDocument zoneNameSaftDocument) {
    this.zoneNameSaftDocument = zoneNameSaftDocument;
    return this;
  }

  @Override
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData set(String fieldName, Object value) {
    return (AssistantVerticalsHomeautomationProtoHomeAutomationMetaData) super.set(fieldName, value);
  }

  @Override
  public AssistantVerticalsHomeautomationProtoHomeAutomationMetaData clone() {
    return (AssistantVerticalsHomeautomationProtoHomeAutomationMetaData) super.clone();
  }

}
