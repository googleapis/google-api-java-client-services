/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Also known as "Extensions Without Extensions" or "The Poor Man's Any", this simple proto is used
 * to transmit arbitrary protocol buffers over the wire. Unlike extensions: - It does not require
 * the proto type to be compiled into the binary. (Useful so that the proto declaration can be
 * inside the conversation package) - It is compatible with all versions of proto, including proto3
 * and the wack-tastic version used on ChromecastOS. Server libraries for dealing with it live in
 * google3/assistant/protocol/protobuf_lib.h.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiProtobuf extends com.google.api.client.json.GenericJson {

  /**
   * The serialized protocol buffer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protobufData;

  /**
   * The type of the protocol buffer to use. This must be a resolvable name (Namespace.ProtoName)
   * and refer to a proto which is either compiled in to both client and server (e.g. a base proto
   * type) or to one which is part of the conversation package.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protobufType;

  /**
   * The serialized protocol buffer.
   * @see #decodeProtobufData()
   * @return value or {@code null} for none
   */
  public java.lang.String getProtobufData() {
    return protobufData;
  }

  /**
   * The serialized protocol buffer.
   * @see #getProtobufData()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeProtobufData() {
    return com.google.api.client.util.Base64.decodeBase64(protobufData);
  }

  /**
   * The serialized protocol buffer.
   * @see #encodeProtobufData()
   * @param protobufData protobufData or {@code null} for none
   */
  public AssistantApiProtobuf setProtobufData(java.lang.String protobufData) {
    this.protobufData = protobufData;
    return this;
  }

  /**
   * The serialized protocol buffer.
   * @see #setProtobufData()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public AssistantApiProtobuf encodeProtobufData(byte[] protobufData) {
    this.protobufData = com.google.api.client.util.Base64.encodeBase64URLSafeString(protobufData);
    return this;
  }

  /**
   * The type of the protocol buffer to use. This must be a resolvable name (Namespace.ProtoName)
   * and refer to a proto which is either compiled in to both client and server (e.g. a base proto
   * type) or to one which is part of the conversation package.
   * @return value or {@code null} for none
   */
  public java.lang.String getProtobufType() {
    return protobufType;
  }

  /**
   * The type of the protocol buffer to use. This must be a resolvable name (Namespace.ProtoName)
   * and refer to a proto which is either compiled in to both client and server (e.g. a base proto
   * type) or to one which is part of the conversation package.
   * @param protobufType protobufType or {@code null} for none
   */
  public AssistantApiProtobuf setProtobufType(java.lang.String protobufType) {
    this.protobufType = protobufType;
    return this;
  }

  @Override
  public AssistantApiProtobuf set(String fieldName, Object value) {
    return (AssistantApiProtobuf) super.set(fieldName, value);
  }

  @Override
  public AssistantApiProtobuf clone() {
    return (AssistantApiProtobuf) super.clone();
  }

}
