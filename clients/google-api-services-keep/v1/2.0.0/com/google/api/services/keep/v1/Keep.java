/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.keep.v1;

/**
 * Service definition for Keep (v1).
 *
 * <p>
 * The Google Keep API is used in an enterprise environment to manage Google Keep content and resolve issues identified by cloud security software.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/keep/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link KeepRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Keep extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Google Keep API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://keep.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://keep.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Keep(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Keep(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Media collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Keep keep = new Keep(...);}
   *   {@code Keep.Media.List request = keep.media().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Media media() {
    return new Media();
  }

  /**
   * The "media" collection of methods.
   */
  public class Media {

    /**
     * Gets an attachment. To download attachment media via REST requires the alt=media query parameter.
     * Returns a 400 bad request error if attachment media is not available in the requested MIME type.
     *
     * Create a request for the method "media.download".
     *
     * This request holds the parameters needed by the keep server.  After setting any optional
     * parameters, call the {@link Download#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the attachment.
     * @return the request
     */
    public Download download(java.lang.String name) throws java.io.IOException {
      Download result = new Download(name);
      initialize(result);
      return result;
    }

    public class Download extends KeepRequest<com.google.api.services.keep.v1.model.Attachment> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^notes/[^/]+/attachments/[^/]+$");

      /**
       * Gets an attachment. To download attachment media via REST requires the alt=media query
       * parameter. Returns a 400 bad request error if attachment media is not available in the
       * requested MIME type.
       *
       * Create a request for the method "media.download".
       *
       * This request holds the parameters needed by the the keep server.  After setting any optional
       * parameters, call the {@link Download#execute()} method to invoke the remote operation. <p>
       * {@link
       * Download#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the attachment.
       * @since 1.13
       */
      protected Download(java.lang.String name) {
        super(Keep.this, "GET", REST_PATH, null, com.google.api.services.keep.v1.model.Attachment.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+/attachments/[^/]+$");
        }
        initializeMediaDownload();
      }

      @Override
      public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
        super.executeMediaAndDownloadTo(outputStream);
      }

      @Override
      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
        return super.executeMediaAsInputStream();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
        return super.executeMedia();
      }

      @Override
      public com.google.api.client.http.GenericUrl buildHttpRequestUrl() {
        java.lang.String baseUrl = ("media".equals(get("alt")) && getMediaHttpUploader() == null)
            ? getRootUrl() + "download/" + getServicePath() : getBaseUrl();
        return new com.google.api.client.http.GenericUrl(
            com.google.api.client.http.UriTemplate.expand(baseUrl, getUriTemplate(), this, true));
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Download set$Xgafv(java.lang.String $Xgafv) {
        return (Download) super.set$Xgafv($Xgafv);
      }

      @Override
      public Download setAccessToken(java.lang.String accessToken) {
        return (Download) super.setAccessToken(accessToken);
      }

      @Override
      public Download setAlt(java.lang.String alt) {
        return (Download) super.setAlt(alt);
      }

      @Override
      public Download setCallback(java.lang.String callback) {
        return (Download) super.setCallback(callback);
      }

      @Override
      public Download setFields(java.lang.String fields) {
        return (Download) super.setFields(fields);
      }

      @Override
      public Download setKey(java.lang.String key) {
        return (Download) super.setKey(key);
      }

      @Override
      public Download setOauthToken(java.lang.String oauthToken) {
        return (Download) super.setOauthToken(oauthToken);
      }

      @Override
      public Download setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Download) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Download setQuotaUser(java.lang.String quotaUser) {
        return (Download) super.setQuotaUser(quotaUser);
      }

      @Override
      public Download setUploadType(java.lang.String uploadType) {
        return (Download) super.setUploadType(uploadType);
      }

      @Override
      public Download setUploadProtocol(java.lang.String uploadProtocol) {
        return (Download) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the attachment. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the attachment.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the attachment. */
      public Download setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+/attachments/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The IANA MIME type format requested. The requested MIME type must be one specified in the
       * attachment.mime_type. Required when downloading attachment media and ignored otherwise.
       */
      @com.google.api.client.util.Key
      private java.lang.String mimeType;

      /** The IANA MIME type format requested. The requested MIME type must be one specified in the
     attachment.mime_type. Required when downloading attachment media and ignored otherwise.
       */
      public java.lang.String getMimeType() {
        return mimeType;
      }

      /**
       * The IANA MIME type format requested. The requested MIME type must be one specified in the
       * attachment.mime_type. Required when downloading attachment media and ignored otherwise.
       */
      public Download setMimeType(java.lang.String mimeType) {
        this.mimeType = mimeType;
        return this;
      }

      @Override
      public Download set(String parameterName, Object value) {
        return (Download) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Notes collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Keep keep = new Keep(...);}
   *   {@code Keep.Notes.List request = keep.notes().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Notes notes() {
    return new Notes();
  }

  /**
   * The "notes" collection of methods.
   */
  public class Notes {

    /**
     * Creates a new note.
     *
     * Create a request for the method "notes.create".
     *
     * This request holds the parameters needed by the keep server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.keep.v1.model.Note}
     * @return the request
     */
    public Create create(com.google.api.services.keep.v1.model.Note content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends KeepRequest<com.google.api.services.keep.v1.model.Note> {

      private static final String REST_PATH = "v1/notes";

      /**
       * Creates a new note.
       *
       * Create a request for the method "notes.create".
       *
       * This request holds the parameters needed by the the keep server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.keep.v1.model.Note}
       * @since 1.13
       */
      protected Create(com.google.api.services.keep.v1.model.Note content) {
        super(Keep.this, "POST", REST_PATH, content, com.google.api.services.keep.v1.model.Note.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a note. Caller must have the `OWNER` role on the note to delete. Deleting a note removes
     * the resource immediately and cannot be undone. Any collaborators will lose access to the note.
     *
     * Create a request for the method "notes.delete".
     *
     * This request holds the parameters needed by the keep server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. Name of the note to delete.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends KeepRequest<com.google.api.services.keep.v1.model.Empty> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^notes/[^/]+$");

      /**
       * Deletes a note. Caller must have the `OWNER` role on the note to delete. Deleting a note
       * removes the resource immediately and cannot be undone. Any collaborators will lose access to
       * the note.
       *
       * Create a request for the method "notes.delete".
       *
       * This request holds the parameters needed by the the keep server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Name of the note to delete.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(Keep.this, "DELETE", REST_PATH, null, com.google.api.services.keep.v1.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Name of the note to delete. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the note to delete.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Name of the note to delete. */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a note.
     *
     * Create a request for the method "notes.get".
     *
     * This request holds the parameters needed by the keep server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Name of the resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends KeepRequest<com.google.api.services.keep.v1.model.Note> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^notes/[^/]+$");

      /**
       * Gets a note.
       *
       * Create a request for the method "notes.get".
       *
       * This request holds the parameters needed by the the keep server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Name of the resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Keep.this, "GET", REST_PATH, null, com.google.api.services.keep.v1.model.Note.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Name of the resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Name of the resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^notes/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists notes. Every list call returns a page of results with `page_size` as the upper bound of
     * returned items. A `page_size` of zero allows the server to choose the upper bound. The
     * ListNotesResponse contains at most `page_size` entries. If there are more things left to list, it
     * provides a `next_page_token` value. (Page tokens are opaque values.) To get the next page of
     * results, copy the result's `next_page_token` into the next request's `page_token`. Repeat until
     * the `next_page_token` returned with a page of results is empty. ListNotes return consistent
     * results in the face of concurrent changes, or signals that it cannot with an ABORTED error.
     *
     * Create a request for the method "notes.list".
     *
     * This request holds the parameters needed by the keep server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends KeepRequest<com.google.api.services.keep.v1.model.ListNotesResponse> {

      private static final String REST_PATH = "v1/notes";

      /**
       * Lists notes. Every list call returns a page of results with `page_size` as the upper bound of
       * returned items. A `page_size` of zero allows the server to choose the upper bound. The
       * ListNotesResponse contains at most `page_size` entries. If there are more things left to list,
       * it provides a `next_page_token` value. (Page tokens are opaque values.) To get the next page of
       * results, copy the result's `next_page_token` into the next request's `page_token`. Repeat until
       * the `next_page_token` returned with a page of results is empty. ListNotes return consistent
       * results in the face of concurrent changes, or signals that it cannot with an ABORTED error.
       *
       * Create a request for the method "notes.list".
       *
       * This request holds the parameters needed by the the keep server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Keep.this, "GET", REST_PATH, null, com.google.api.services.keep.v1.model.ListNotesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Filter for list results. If no filter is supplied, the `trashed` filter is applied by
       * default. Valid fields to filter by are: `create_time`, `update_time`, `trash_time`, and
       * `trashed`. Filter syntax follows the [Google AIP filtering spec](https://aip.dev/160).
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Filter for list results. If no filter is supplied, the `trashed` filter is applied by default.
     Valid fields to filter by are: `create_time`, `update_time`, `trash_time`, and `trashed`. Filter
     syntax follows the [Google AIP filtering spec](https://aip.dev/160).
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Filter for list results. If no filter is supplied, the `trashed` filter is applied by
       * default. Valid fields to filter by are: `create_time`, `update_time`, `trash_time`, and
       * `trashed`. Filter syntax follows the [Google AIP filtering spec](https://aip.dev/160).
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The maximum number of results to return. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of results to return.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The maximum number of results to return. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The previous page's `next_page_token` field. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The previous page's `next_page_token` field.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The previous page's `next_page_token` field. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Permissions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Keep keep = new Keep(...);}
     *   {@code Keep.Permissions.List request = keep.permissions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Permissions permissions() {
      return new Permissions();
    }

    /**
     * The "permissions" collection of methods.
     */
    public class Permissions {

      /**
       * Creates one or more permissions on the note. Only permissions with the `WRITER` role may be
       * created. If adding any permission fails, then the entire request fails and no changes are made.
       *
       * Create a request for the method "permissions.batchCreate".
       *
       * This request holds the parameters needed by the keep server.  After setting any optional
       * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource shared by all Permissions being created. Format: `notes/{note}` If this is set,
       *        the parent field in the CreatePermission messages must either be empty or match this
       *        field.
       * @param content the {@link com.google.api.services.keep.v1.model.BatchCreatePermissionsRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.keep.v1.model.BatchCreatePermissionsRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends KeepRequest<com.google.api.services.keep.v1.model.BatchCreatePermissionsResponse> {

        private static final String REST_PATH = "v1/{+parent}/permissions:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^notes/[^/]+$");

        /**
         * Creates one or more permissions on the note. Only permissions with the `WRITER` role may be
         * created. If adding any permission fails, then the entire request fails and no changes are made.
         *
         * Create a request for the method "permissions.batchCreate".
         *
         * This request holds the parameters needed by the the keep server.  After setting any optional
         * parameters, call the {@link BatchCreate#execute()} method to invoke the remote operation. <p>
         * {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource shared by all Permissions being created. Format: `notes/{note}` If this is set,
       *        the parent field in the CreatePermission messages must either be empty or match this
       *        field.
         * @param content the {@link com.google.api.services.keep.v1.model.BatchCreatePermissionsRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.keep.v1.model.BatchCreatePermissionsRequest content) {
          super(Keep.this, "POST", REST_PATH, content, com.google.api.services.keep.v1.model.BatchCreatePermissionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^notes/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource shared by all Permissions being created. Format: `notes/{note}` If
         * this is set, the parent field in the CreatePermission messages must either be empty or
         * match this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource shared by all Permissions being created. Format: `notes/{note}` If this is set,
       the parent field in the CreatePermission messages must either be empty or match this field.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource shared by all Permissions being created. Format: `notes/{note}` If
         * this is set, the parent field in the CreatePermission messages must either be empty or
         * match this field.
         */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^notes/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Deletes one or more permissions on the note. The specified entities will immediately lose access.
       * A permission with the `OWNER` role can't be removed. If removing a permission fails, then the
       * entire request fails and no changes are made. Returns a 400 bad request error if a specified
       * permission does not exist on the note.
       *
       * Create a request for the method "permissions.batchDelete".
       *
       * This request holds the parameters needed by the keep server.  After setting any optional
       * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource shared by all permissions being deleted. Format: `notes/{note}` If this is set,
       *        the parent of all of the permissions specified in the DeletePermissionRequest messages
       *        must match this field.
       * @param content the {@link com.google.api.services.keep.v1.model.BatchDeletePermissionsRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.keep.v1.model.BatchDeletePermissionsRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(parent, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends KeepRequest<com.google.api.services.keep.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+parent}/permissions:batchDelete";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^notes/[^/]+$");

        /**
         * Deletes one or more permissions on the note. The specified entities will immediately lose
         * access. A permission with the `OWNER` role can't be removed. If removing a permission fails,
         * then the entire request fails and no changes are made. Returns a 400 bad request error if a
         * specified permission does not exist on the note.
         *
         * Create a request for the method "permissions.batchDelete".
         *
         * This request holds the parameters needed by the the keep server.  After setting any optional
         * parameters, call the {@link BatchDelete#execute()} method to invoke the remote operation. <p>
         * {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource shared by all permissions being deleted. Format: `notes/{note}` If this is set,
       *        the parent of all of the permissions specified in the DeletePermissionRequest messages
       *        must match this field.
         * @param content the {@link com.google.api.services.keep.v1.model.BatchDeletePermissionsRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String parent, com.google.api.services.keep.v1.model.BatchDeletePermissionsRequest content) {
          super(Keep.this, "POST", REST_PATH, content, com.google.api.services.keep.v1.model.Empty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^notes/[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent resource shared by all permissions being deleted. Format: `notes/{note}` If
         * this is set, the parent of all of the permissions specified in the
         * DeletePermissionRequest messages must match this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource shared by all permissions being deleted. Format: `notes/{note}` If this is set,
       the parent of all of the permissions specified in the DeletePermissionRequest messages must match
       this field.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent resource shared by all permissions being deleted. Format: `notes/{note}` If
         * this is set, the parent of all of the permissions specified in the
         * DeletePermissionRequest messages must match this field.
         */
        public BatchDelete setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^notes/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Keep}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Keep}. */
    @Override
    public Keep build() {
      return new Keep(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link KeepRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setKeepRequestInitializer(
        KeepRequestInitializer keepRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(keepRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
