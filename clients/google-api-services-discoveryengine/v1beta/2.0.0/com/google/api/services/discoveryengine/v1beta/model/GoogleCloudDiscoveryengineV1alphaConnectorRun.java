/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * A data sync run of DataConnector. After DataConnector is successfully initialized, data syncs are
 * scheduled at DataConnector.refresh_interval. A ConnectorRun represents a data sync either in the
 * past or onging that the moment. //
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaConnectorRun extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time when the connector run ended.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. The details of the entities synced at the ConnectorRun. Each ConnectorRun consists
   * of syncing one or more entities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun> entityRuns;

  /**
   * Contains info about errors incurred during the sync. Only exist if running into an error state.
   * Contains error code and error message. Use with the `state` field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleRpcStatus> errors;

  /**
   * Output only. The time when the connector run was most recently paused.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String latestPauseTime;

  /**
   * Output only. The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The time when the connector run started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. The state of the sync run.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Timestamp at which the connector run sync state was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String stateUpdateTime;

  /**
   * Output only. The trigger for this ConnectorRun.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trigger;

  /**
   * Output only. The time when the connector run ended.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. The time when the connector run ended.
   * @param endTime endTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. The details of the entities synced at the ConnectorRun. Each ConnectorRun consists
   * of syncing one or more entities.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun> getEntityRuns() {
    return entityRuns;
  }

  /**
   * Output only. The details of the entities synced at the ConnectorRun. Each ConnectorRun consists
   * of syncing one or more entities.
   * @param entityRuns entityRuns or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setEntityRuns(java.util.List<GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun> entityRuns) {
    this.entityRuns = entityRuns;
    return this;
  }

  /**
   * Contains info about errors incurred during the sync. Only exist if running into an error state.
   * Contains error code and error message. Use with the `state` field.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleRpcStatus> getErrors() {
    return errors;
  }

  /**
   * Contains info about errors incurred during the sync. Only exist if running into an error state.
   * Contains error code and error message. Use with the `state` field.
   * @param errors errors or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setErrors(java.util.List<GoogleRpcStatus> errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Output only. The time when the connector run was most recently paused.
   * @return value or {@code null} for none
   */
  public String getLatestPauseTime() {
    return latestPauseTime;
  }

  /**
   * Output only. The time when the connector run was most recently paused.
   * @param latestPauseTime latestPauseTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setLatestPauseTime(String latestPauseTime) {
    this.latestPauseTime = latestPauseTime;
    return this;
  }

  /**
   * Output only. The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The time when the connector run started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. The time when the connector run started.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. The state of the sync run.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the sync run.
   * @param state state or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Timestamp at which the connector run sync state was last updated.
   * @return value or {@code null} for none
   */
  public String getStateUpdateTime() {
    return stateUpdateTime;
  }

  /**
   * Timestamp at which the connector run sync state was last updated.
   * @param stateUpdateTime stateUpdateTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setStateUpdateTime(String stateUpdateTime) {
    this.stateUpdateTime = stateUpdateTime;
    return this;
  }

  /**
   * Output only. The trigger for this ConnectorRun.
   * @return value or {@code null} for none
   */
  public java.lang.String getTrigger() {
    return trigger;
  }

  /**
   * Output only. The trigger for this ConnectorRun.
   * @param trigger trigger or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaConnectorRun setTrigger(java.lang.String trigger) {
    this.trigger = trigger;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaConnectorRun set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaConnectorRun) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaConnectorRun clone() {
    return (GoogleCloudDiscoveryengineV1alphaConnectorRun) super.clone();
  }

}
