/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Configuration of the timespan of the items to include in scanning. Currently only supported when
 * inspecting Google Cloud Storage and BigQuery.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TimespanConfig extends com.google.api.client.json.GenericJson {

  /**
   * When the job is started by a JobTrigger we will automatically figure out a valid start_time to
   * avoid scanning files that have not been modified since the last time the JobTrigger executed.
   * This will be based on the time of the execution of the last run of the JobTrigger.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableAutoPopulationOfTimespanConfig;

  /**
   * Exclude files or rows newer than this value. If set to zero, no upper time limit is applied.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Exclude files or rows older than this value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Specification of the field containing the timestamp of scanned items. Used for data sources
   * like Datastore or BigQuery. If not specified for BigQuery, table last modification timestamp is
   * checked against given time span. The valid data types of the timestamp field are: for BigQuery
   * - timestamp, date, datetime; for Datastore - timestamp. Datastore entity will be scanned if the
   * timestamp property does not exist or its value is empty or invalid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2FieldId timestampField;

  /**
   * When the job is started by a JobTrigger we will automatically figure out a valid start_time to
   * avoid scanning files that have not been modified since the last time the JobTrigger executed.
   * This will be based on the time of the execution of the last run of the JobTrigger.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableAutoPopulationOfTimespanConfig() {
    return enableAutoPopulationOfTimespanConfig;
  }

  /**
   * When the job is started by a JobTrigger we will automatically figure out a valid start_time to
   * avoid scanning files that have not been modified since the last time the JobTrigger executed.
   * This will be based on the time of the execution of the last run of the JobTrigger.
   * @param enableAutoPopulationOfTimespanConfig enableAutoPopulationOfTimespanConfig or {@code null} for none
   */
  public GooglePrivacyDlpV2TimespanConfig setEnableAutoPopulationOfTimespanConfig(java.lang.Boolean enableAutoPopulationOfTimespanConfig) {
    this.enableAutoPopulationOfTimespanConfig = enableAutoPopulationOfTimespanConfig;
    return this;
  }

  /**
   * Exclude files or rows newer than this value. If set to zero, no upper time limit is applied.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Exclude files or rows newer than this value. If set to zero, no upper time limit is applied.
   * @param endTime endTime or {@code null} for none
   */
  public GooglePrivacyDlpV2TimespanConfig setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Exclude files or rows older than this value.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Exclude files or rows older than this value.
   * @param startTime startTime or {@code null} for none
   */
  public GooglePrivacyDlpV2TimespanConfig setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Specification of the field containing the timestamp of scanned items. Used for data sources
   * like Datastore or BigQuery. If not specified for BigQuery, table last modification timestamp is
   * checked against given time span. The valid data types of the timestamp field are: for BigQuery
   * - timestamp, date, datetime; for Datastore - timestamp. Datastore entity will be scanned if the
   * timestamp property does not exist or its value is empty or invalid.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2FieldId getTimestampField() {
    return timestampField;
  }

  /**
   * Specification of the field containing the timestamp of scanned items. Used for data sources
   * like Datastore or BigQuery. If not specified for BigQuery, table last modification timestamp is
   * checked against given time span. The valid data types of the timestamp field are: for BigQuery
   * - timestamp, date, datetime; for Datastore - timestamp. Datastore entity will be scanned if the
   * timestamp property does not exist or its value is empty or invalid.
   * @param timestampField timestampField or {@code null} for none
   */
  public GooglePrivacyDlpV2TimespanConfig setTimestampField(GooglePrivacyDlpV2FieldId timestampField) {
    this.timestampField = timestampField;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TimespanConfig set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TimespanConfig) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TimespanConfig clone() {
    return (GooglePrivacyDlpV2TimespanConfig) super.clone();
  }

}
