/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * A server.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Create a time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * True if you enable hyperthreading for the server, otherwise false. The default value is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hyperthreadingEnabled;

  /**
   * Output only. An identifier for the `Instance`, generated by the backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Output only. True if the interactive serial console feature is enabled for the instance, false
   * otherwise. The default value is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean interactiveSerialConsoleEnabled;

  /**
   * Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * List of logical interfaces for the instance. The number of logical interfaces will be the same
   * as number of hardware bond/nic on the chosen network template. For the non-multivlan
   * configurations (for eg, existing servers) that use existing default network template (bondaa-
   * bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be
   * filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will
   * be filled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudBaremetalsolutionV2LogicalInterface> logicalInterfaces;

  static {
    // hack to force ProGuard to consider GoogleCloudBaremetalsolutionV2LogicalInterface used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudBaremetalsolutionV2LogicalInterface.class);
  }

  /**
   * Output only. Text field about info for logging in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String loginInfo;

  /**
   * Immutable. List of LUNs associated with this server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Lun> luns;

  /**
   * Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs
   * /bms-planning#server_configurations)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineType;

  /**
   * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/instances/{instance}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template
   * name follows the syntax of "bond" or "nic".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkTemplate;

  /**
   * Output only. List of networks associated with this server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Network> networks;

  /**
   * The OS image currently installed on the server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String osImage;

  /**
   * Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to
   * the assets (networks, volumes) allocated in the same pod only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pod;

  /**
   * Output only. The state of the server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Update a time stamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Input only. List of Volumes to attach to this Instance on creation. This field won't be
   * populated in Get/List responses.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Volume> volumes;

  /**
   * The workload profile for the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workloadProfile;

  /**
   * Output only. Create a time stamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create a time stamp.
   * @param createTime createTime or {@code null} for none
   */
  public Instance setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * True if you enable hyperthreading for the server, otherwise false. The default value is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHyperthreadingEnabled() {
    return hyperthreadingEnabled;
  }

  /**
   * True if you enable hyperthreading for the server, otherwise false. The default value is false.
   * @param hyperthreadingEnabled hyperthreadingEnabled or {@code null} for none
   */
  public Instance setHyperthreadingEnabled(java.lang.Boolean hyperthreadingEnabled) {
    this.hyperthreadingEnabled = hyperthreadingEnabled;
    return this;
  }

  /**
   * Output only. An identifier for the `Instance`, generated by the backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Output only. An identifier for the `Instance`, generated by the backend.
   * @param id id or {@code null} for none
   */
  public Instance setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Output only. True if the interactive serial console feature is enabled for the instance, false
   * otherwise. The default value is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInteractiveSerialConsoleEnabled() {
    return interactiveSerialConsoleEnabled;
  }

  /**
   * Output only. True if the interactive serial console feature is enabled for the instance, false
   * otherwise. The default value is false.
   * @param interactiveSerialConsoleEnabled interactiveSerialConsoleEnabled or {@code null} for none
   */
  public Instance setInteractiveSerialConsoleEnabled(java.lang.Boolean interactiveSerialConsoleEnabled) {
    this.interactiveSerialConsoleEnabled = interactiveSerialConsoleEnabled;
    return this;
  }

  /**
   * Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public Instance setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * List of logical interfaces for the instance. The number of logical interfaces will be the same
   * as number of hardware bond/nic on the chosen network template. For the non-multivlan
   * configurations (for eg, existing servers) that use existing default network template (bondaa-
   * bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be
   * filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will
   * be filled.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudBaremetalsolutionV2LogicalInterface> getLogicalInterfaces() {
    return logicalInterfaces;
  }

  /**
   * List of logical interfaces for the instance. The number of logical interfaces will be the same
   * as number of hardware bond/nic on the chosen network template. For the non-multivlan
   * configurations (for eg, existing servers) that use existing default network template (bondaa-
   * bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be
   * filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will
   * be filled.
   * @param logicalInterfaces logicalInterfaces or {@code null} for none
   */
  public Instance setLogicalInterfaces(java.util.List<GoogleCloudBaremetalsolutionV2LogicalInterface> logicalInterfaces) {
    this.logicalInterfaces = logicalInterfaces;
    return this;
  }

  /**
   * Output only. Text field about info for logging in.
   * @return value or {@code null} for none
   */
  public java.lang.String getLoginInfo() {
    return loginInfo;
  }

  /**
   * Output only. Text field about info for logging in.
   * @param loginInfo loginInfo or {@code null} for none
   */
  public Instance setLoginInfo(java.lang.String loginInfo) {
    this.loginInfo = loginInfo;
    return this;
  }

  /**
   * Immutable. List of LUNs associated with this server.
   * @return value or {@code null} for none
   */
  public java.util.List<Lun> getLuns() {
    return luns;
  }

  /**
   * Immutable. List of LUNs associated with this server.
   * @param luns luns or {@code null} for none
   */
  public Instance setLuns(java.util.List<Lun> luns) {
    this.luns = luns;
    return this;
  }

  /**
   * Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs
   * /bms-planning#server_configurations)
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineType() {
    return machineType;
  }

  /**
   * Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs
   * /bms-planning#server_configurations)
   * @param machineType machineType or {@code null} for none
   */
  public Instance setMachineType(java.lang.String machineType) {
    this.machineType = machineType;
    return this;
  }

  /**
   * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/instances/{instance}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow
   * the conventions in https://cloud.google.com/apis/design/resource_names. Format:
   * `projects/{project}/locations/{location}/instances/{instance}`
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template
   * name follows the syntax of "bond" or "nic".
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkTemplate() {
    return networkTemplate;
  }

  /**
   * Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template
   * name follows the syntax of "bond" or "nic".
   * @param networkTemplate networkTemplate or {@code null} for none
   */
  public Instance setNetworkTemplate(java.lang.String networkTemplate) {
    this.networkTemplate = networkTemplate;
    return this;
  }

  /**
   * Output only. List of networks associated with this server.
   * @return value or {@code null} for none
   */
  public java.util.List<Network> getNetworks() {
    return networks;
  }

  /**
   * Output only. List of networks associated with this server.
   * @param networks networks or {@code null} for none
   */
  public Instance setNetworks(java.util.List<Network> networks) {
    this.networks = networks;
    return this;
  }

  /**
   * The OS image currently installed on the server.
   * @return value or {@code null} for none
   */
  public java.lang.String getOsImage() {
    return osImage;
  }

  /**
   * The OS image currently installed on the server.
   * @param osImage osImage or {@code null} for none
   */
  public Instance setOsImage(java.lang.String osImage) {
    this.osImage = osImage;
    return this;
  }

  /**
   * Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to
   * the assets (networks, volumes) allocated in the same pod only.
   * @return value or {@code null} for none
   */
  public java.lang.String getPod() {
    return pod;
  }

  /**
   * Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to
   * the assets (networks, volumes) allocated in the same pod only.
   * @param pod pod or {@code null} for none
   */
  public Instance setPod(java.lang.String pod) {
    this.pod = pod;
    return this;
  }

  /**
   * Output only. The state of the server.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the server.
   * @param state state or {@code null} for none
   */
  public Instance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Update a time stamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update a time stamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Instance setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Input only. List of Volumes to attach to this Instance on creation. This field won't be
   * populated in Get/List responses.
   * @return value or {@code null} for none
   */
  public java.util.List<Volume> getVolumes() {
    return volumes;
  }

  /**
   * Input only. List of Volumes to attach to this Instance on creation. This field won't be
   * populated in Get/List responses.
   * @param volumes volumes or {@code null} for none
   */
  public Instance setVolumes(java.util.List<Volume> volumes) {
    this.volumes = volumes;
    return this;
  }

  /**
   * The workload profile for the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkloadProfile() {
    return workloadProfile;
  }

  /**
   * The workload profile for the instance.
   * @param workloadProfile workloadProfile or {@code null} for none
   */
  public Instance setWorkloadProfile(java.lang.String workloadProfile) {
    this.workloadProfile = workloadProfile;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
