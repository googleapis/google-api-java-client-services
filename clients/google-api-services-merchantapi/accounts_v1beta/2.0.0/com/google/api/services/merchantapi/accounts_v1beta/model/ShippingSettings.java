/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * The merchant account's [shipping setting](https://support.google.com/merchants/answer/6069284).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ShippingSettings extends com.google.api.client.json.GenericJson {

  /**
   * Required. This field is used for avoid async issue. Make sure shipping setting data didn't
   * change between get call and insert call. The user should do following steps： 1. Set etag field
   * as empty string for initial shipping setting creation. 2. After initial creation, call get
   * method to obtain an etag and current shipping setting data before call insert. 3. Modify to
   * wanted shipping setting information. 4. Call insert method with the wanted shipping setting
   * information with the etag obtained from step 2. 5. If shipping setting data changed between
   * step 2 and step 4. Insert request will fail because the etag changes every time the shipping
   * setting data changes. User should repeate step 2-4 with the new etag.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Identifier. The resource name of the shipping setting. Format:
   * `accounts/{account}/shippingSetting`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The target account's list of services.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Service> services;

  static {
    // hack to force ProGuard to consider Service used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Service.class);
  }

  /**
   * Optional. A list of warehouses which can be referred to in `services`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Warehouse> warehouses;

  /**
   * Required. This field is used for avoid async issue. Make sure shipping setting data didn't
   * change between get call and insert call. The user should do following steps： 1. Set etag field
   * as empty string for initial shipping setting creation. 2. After initial creation, call get
   * method to obtain an etag and current shipping setting data before call insert. 3. Modify to
   * wanted shipping setting information. 4. Call insert method with the wanted shipping setting
   * information with the etag obtained from step 2. 5. If shipping setting data changed between
   * step 2 and step 4. Insert request will fail because the etag changes every time the shipping
   * setting data changes. User should repeate step 2-4 with the new etag.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Required. This field is used for avoid async issue. Make sure shipping setting data didn't
   * change between get call and insert call. The user should do following steps： 1. Set etag field
   * as empty string for initial shipping setting creation. 2. After initial creation, call get
   * method to obtain an etag and current shipping setting data before call insert. 3. Modify to
   * wanted shipping setting information. 4. Call insert method with the wanted shipping setting
   * information with the etag obtained from step 2. 5. If shipping setting data changed between
   * step 2 and step 4. Insert request will fail because the etag changes every time the shipping
   * setting data changes. User should repeate step 2-4 with the new etag.
   * @param etag etag or {@code null} for none
   */
  public ShippingSettings setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Identifier. The resource name of the shipping setting. Format:
   * `accounts/{account}/shippingSetting`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the shipping setting. Format:
   * `accounts/{account}/shippingSetting`
   * @param name name or {@code null} for none
   */
  public ShippingSettings setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The target account's list of services.
   * @return value or {@code null} for none
   */
  public java.util.List<Service> getServices() {
    return services;
  }

  /**
   * Optional. The target account's list of services.
   * @param services services or {@code null} for none
   */
  public ShippingSettings setServices(java.util.List<Service> services) {
    this.services = services;
    return this;
  }

  /**
   * Optional. A list of warehouses which can be referred to in `services`.
   * @return value or {@code null} for none
   */
  public java.util.List<Warehouse> getWarehouses() {
    return warehouses;
  }

  /**
   * Optional. A list of warehouses which can be referred to in `services`.
   * @param warehouses warehouses or {@code null} for none
   */
  public ShippingSettings setWarehouses(java.util.List<Warehouse> warehouses) {
    this.warehouses = warehouses;
    return this;
  }

  @Override
  public ShippingSettings set(String fieldName, Object value) {
    return (ShippingSettings) super.set(fieldName, value);
  }

  @Override
  public ShippingSettings clone() {
    return (ShippingSettings) super.clone();
  }

}
