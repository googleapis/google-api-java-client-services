/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * Contains information about current status of the HaController.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HaControllerStatus extends com.google.api.client.json.GenericJson {

  /**
   * [Output Only] Contains the details of the ongoing failover. This message is not displayed if
   * failover is NOT in progress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HaControllerStatusFailoverProgress failoverProgress;

  /**
   * [Output Only] Contains the details of the last successful failover.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HaControllerStatusFailoverProgress lastFailoverInfo;

  /**
   * [Output Only] Indicates if the failover is currently in-progress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ongoingFailover;

  /**
   * [Output Only] The URL to the instance that is intended to be primary at this moment. Primary
   * instance will be changed at the very beginning of a failover operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryInstance;

  /**
   * [Output Only] The name of the zone that is intended to be primary at this moment. Primary zone
   * will be changed at the very beginning of a failover operation. The zone may not be operational
   * in the middle of a failover operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryZone;

  /**
   * [Output Only] Indicates if the resource is ready for initiating a failover to the secondary
   * zone.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean readyForFailover;

  /**
   * [Output Only] Map of zone statuses. Key: name of the zone Value: ZoneStatus
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, HaControllerStatusZoneStatus> zoneStatus;

  /**
   * [Output Only] Contains the details of the ongoing failover. This message is not displayed if
   * failover is NOT in progress.
   * @return value or {@code null} for none
   */
  public HaControllerStatusFailoverProgress getFailoverProgress() {
    return failoverProgress;
  }

  /**
   * [Output Only] Contains the details of the ongoing failover. This message is not displayed if
   * failover is NOT in progress.
   * @param failoverProgress failoverProgress or {@code null} for none
   */
  public HaControllerStatus setFailoverProgress(HaControllerStatusFailoverProgress failoverProgress) {
    this.failoverProgress = failoverProgress;
    return this;
  }

  /**
   * [Output Only] Contains the details of the last successful failover.
   * @return value or {@code null} for none
   */
  public HaControllerStatusFailoverProgress getLastFailoverInfo() {
    return lastFailoverInfo;
  }

  /**
   * [Output Only] Contains the details of the last successful failover.
   * @param lastFailoverInfo lastFailoverInfo or {@code null} for none
   */
  public HaControllerStatus setLastFailoverInfo(HaControllerStatusFailoverProgress lastFailoverInfo) {
    this.lastFailoverInfo = lastFailoverInfo;
    return this;
  }

  /**
   * [Output Only] Indicates if the failover is currently in-progress.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOngoingFailover() {
    return ongoingFailover;
  }

  /**
   * [Output Only] Indicates if the failover is currently in-progress.
   * @param ongoingFailover ongoingFailover or {@code null} for none
   */
  public HaControllerStatus setOngoingFailover(java.lang.Boolean ongoingFailover) {
    this.ongoingFailover = ongoingFailover;
    return this;
  }

  /**
   * [Output Only] The URL to the instance that is intended to be primary at this moment. Primary
   * instance will be changed at the very beginning of a failover operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryInstance() {
    return primaryInstance;
  }

  /**
   * [Output Only] The URL to the instance that is intended to be primary at this moment. Primary
   * instance will be changed at the very beginning of a failover operation.
   * @param primaryInstance primaryInstance or {@code null} for none
   */
  public HaControllerStatus setPrimaryInstance(java.lang.String primaryInstance) {
    this.primaryInstance = primaryInstance;
    return this;
  }

  /**
   * [Output Only] The name of the zone that is intended to be primary at this moment. Primary zone
   * will be changed at the very beginning of a failover operation. The zone may not be operational
   * in the middle of a failover operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryZone() {
    return primaryZone;
  }

  /**
   * [Output Only] The name of the zone that is intended to be primary at this moment. Primary zone
   * will be changed at the very beginning of a failover operation. The zone may not be operational
   * in the middle of a failover operation.
   * @param primaryZone primaryZone or {@code null} for none
   */
  public HaControllerStatus setPrimaryZone(java.lang.String primaryZone) {
    this.primaryZone = primaryZone;
    return this;
  }

  /**
   * [Output Only] Indicates if the resource is ready for initiating a failover to the secondary
   * zone.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReadyForFailover() {
    return readyForFailover;
  }

  /**
   * [Output Only] Indicates if the resource is ready for initiating a failover to the secondary
   * zone.
   * @param readyForFailover readyForFailover or {@code null} for none
   */
  public HaControllerStatus setReadyForFailover(java.lang.Boolean readyForFailover) {
    this.readyForFailover = readyForFailover;
    return this;
  }

  /**
   * [Output Only] Map of zone statuses. Key: name of the zone Value: ZoneStatus
   * @return value or {@code null} for none
   */
  public java.util.Map<String, HaControllerStatusZoneStatus> getZoneStatus() {
    return zoneStatus;
  }

  /**
   * [Output Only] Map of zone statuses. Key: name of the zone Value: ZoneStatus
   * @param zoneStatus zoneStatus or {@code null} for none
   */
  public HaControllerStatus setZoneStatus(java.util.Map<String, HaControllerStatusZoneStatus> zoneStatus) {
    this.zoneStatus = zoneStatus;
    return this;
  }

  @Override
  public HaControllerStatus set(String fieldName, Object value) {
    return (HaControllerStatus) super.set(fieldName, value);
  }

  @Override
  public HaControllerStatus clone() {
    return (HaControllerStatus) super.clone();
  }

}
