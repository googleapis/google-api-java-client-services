/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidmanagement.v1.model;

/**
 * A cryptographic key including user installed, admin installed and system maintained private key
 * is imported on the device either by the user or management. This is available device-wide on
 * fully managed devices and within the work profile on organization-owned devices with a work
 * profile.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Android Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KeyImportEvent extends com.google.api.client.json.GenericJson {

  /**
   * UID of the application which imported the key
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer applicationUid;

  /**
   * Alias of the key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyAlias;

  /**
   * Whether the operation was successful.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean success;

  /**
   * UID of the application which imported the key
   * @return value or {@code null} for none
   */
  public java.lang.Integer getApplicationUid() {
    return applicationUid;
  }

  /**
   * UID of the application which imported the key
   * @param applicationUid applicationUid or {@code null} for none
   */
  public KeyImportEvent setApplicationUid(java.lang.Integer applicationUid) {
    this.applicationUid = applicationUid;
    return this;
  }

  /**
   * Alias of the key.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyAlias() {
    return keyAlias;
  }

  /**
   * Alias of the key.
   * @param keyAlias keyAlias or {@code null} for none
   */
  public KeyImportEvent setKeyAlias(java.lang.String keyAlias) {
    this.keyAlias = keyAlias;
    return this;
  }

  /**
   * Whether the operation was successful.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSuccess() {
    return success;
  }

  /**
   * Whether the operation was successful.
   * @param success success or {@code null} for none
   */
  public KeyImportEvent setSuccess(java.lang.Boolean success) {
    this.success = success;
    return this;
  }

  @Override
  public KeyImportEvent set(String fieldName, Object value) {
    return (KeyImportEvent) super.set(fieldName, value);
  }

  @Override
  public KeyImportEvent clone() {
    return (KeyImportEvent) super.clone();
  }

}
