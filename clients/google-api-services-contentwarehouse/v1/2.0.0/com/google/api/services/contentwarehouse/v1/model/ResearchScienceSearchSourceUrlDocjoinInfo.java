/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The proto containing all the information we extracted from docjoin, for the source_url of the
 * dataset. NEXT TAG: 17
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResearchScienceSearchSourceUrlDocjoinInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSource;

  /**
   * The url used to display in the google search results.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayUrl;

  /**
   * The docid of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger docid;

  /**
   * Index tiers (BASE, UNIFIED_ZEPPELIN, etc) that the document belongs to. NOTE: Each document may
   * belong to multiple tiers. NOTE: The original data type is an enum CompositeDoc::SubIndexType.
   * However we don't want to depend on segindexer/compositedoc.proto because the proto is too
   * large. Instead, we use CompositeDoc::SubIndexType_Name( subindexid) to convert into a string
   * representation. To convert string back to CompositeDoc::SubIndexType, use
   * CompositeDoc::SubIndexType_Parse.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> indexTier;

  /**
   * The language of the document in the string representation of LanguageCode. Converts from
   * Language Enum to LanguageCode through i18n/identifiers/langenclanguagecodeconverter.h Please
   * use i18n/identifiers/languagecodeconverter.h for converting between LanguageCode and string
   * representation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * The syntactic date of a dataset document that reflects the publication date of the content.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String latestPageUpdateDate;

  /**
   * A sequence of Navboost queries for the dataset source_url.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResearchScienceSearchNavboostQueryInfo> navboostQuery;

  static {
    // hack to force ProGuard to consider ResearchScienceSearchNavboostQueryInfo used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ResearchScienceSearchNavboostQueryInfo.class);
  }

  /**
   * The page rank of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer pagerank;

  /**
   * Petacat classifications for the web document. Normally the results from calling Petacat come in
   * a PetacatResponse, which is very flexible and extensible. This proto takes most of the
   * flexibility away - only rephil clusters, taxonomic classifications, and binary classifications,
   * with discretized weights.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FatcatCompactDocClassification petacatInfo;

  /**
   * A set of salient terms extracted fromthe document. DEPRECATEAD. Moved to DatasetMetadata for
   * performance reasons.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualitySalientTermsSalientTermSet salientTerms;

  /**
   * Science per-doc data for inclusion in websearch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ScienceIndexSignal scholarInfo;

  /**
   * A set of entities from WebRef annotations that are in SPORE_GRAPH.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> sporeGraphMid;

  /**
   * The title of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * A set of top entities from WebrefAnnotation, top is defined by topicality score, see go
   * /topicality-score for detail. DEPRECATED. See label_to_mids_map instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefWebrefEntity> topEntity;

  static {
    // hack to force ProGuard to consider RepositoryWebrefWebrefEntity used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RepositoryWebrefWebrefEntity.class);
  }

  /**
   * The url of the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * A set of entities copied from WebRefEntities on cDoc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ResearchScienceSearchSourceUrlDocjoinInfoWebrefEntityInfo> webrefEntity;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSource() {
    return dataSource;
  }

  /**
   * @param dataSource dataSource or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setDataSource(java.lang.String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * The url used to display in the google search results.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayUrl() {
    return displayUrl;
  }

  /**
   * The url used to display in the google search results.
   * @param displayUrl displayUrl or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setDisplayUrl(java.lang.String displayUrl) {
    this.displayUrl = displayUrl;
    return this;
  }

  /**
   * The docid of the document.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDocid() {
    return docid;
  }

  /**
   * The docid of the document.
   * @param docid docid or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setDocid(java.math.BigInteger docid) {
    this.docid = docid;
    return this;
  }

  /**
   * Index tiers (BASE, UNIFIED_ZEPPELIN, etc) that the document belongs to. NOTE: Each document may
   * belong to multiple tiers. NOTE: The original data type is an enum CompositeDoc::SubIndexType.
   * However we don't want to depend on segindexer/compositedoc.proto because the proto is too
   * large. Instead, we use CompositeDoc::SubIndexType_Name( subindexid) to convert into a string
   * representation. To convert string back to CompositeDoc::SubIndexType, use
   * CompositeDoc::SubIndexType_Parse.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIndexTier() {
    return indexTier;
  }

  /**
   * Index tiers (BASE, UNIFIED_ZEPPELIN, etc) that the document belongs to. NOTE: Each document may
   * belong to multiple tiers. NOTE: The original data type is an enum CompositeDoc::SubIndexType.
   * However we don't want to depend on segindexer/compositedoc.proto because the proto is too
   * large. Instead, we use CompositeDoc::SubIndexType_Name( subindexid) to convert into a string
   * representation. To convert string back to CompositeDoc::SubIndexType, use
   * CompositeDoc::SubIndexType_Parse.
   * @param indexTier indexTier or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setIndexTier(java.util.List<java.lang.String> indexTier) {
    this.indexTier = indexTier;
    return this;
  }

  /**
   * The language of the document in the string representation of LanguageCode. Converts from
   * Language Enum to LanguageCode through i18n/identifiers/langenclanguagecodeconverter.h Please
   * use i18n/identifiers/languagecodeconverter.h for converting between LanguageCode and string
   * representation.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * The language of the document in the string representation of LanguageCode. Converts from
   * Language Enum to LanguageCode through i18n/identifiers/langenclanguagecodeconverter.h Please
   * use i18n/identifiers/languagecodeconverter.h for converting between LanguageCode and string
   * representation.
   * @param languageCode languageCode or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The syntactic date of a dataset document that reflects the publication date of the content.
   * @return value or {@code null} for none
   */
  public java.lang.String getLatestPageUpdateDate() {
    return latestPageUpdateDate;
  }

  /**
   * The syntactic date of a dataset document that reflects the publication date of the content.
   * @param latestPageUpdateDate latestPageUpdateDate or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setLatestPageUpdateDate(java.lang.String latestPageUpdateDate) {
    this.latestPageUpdateDate = latestPageUpdateDate;
    return this;
  }

  /**
   * A sequence of Navboost queries for the dataset source_url.
   * @return value or {@code null} for none
   */
  public java.util.List<ResearchScienceSearchNavboostQueryInfo> getNavboostQuery() {
    return navboostQuery;
  }

  /**
   * A sequence of Navboost queries for the dataset source_url.
   * @param navboostQuery navboostQuery or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setNavboostQuery(java.util.List<ResearchScienceSearchNavboostQueryInfo> navboostQuery) {
    this.navboostQuery = navboostQuery;
    return this;
  }

  /**
   * The page rank of the document.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPagerank() {
    return pagerank;
  }

  /**
   * The page rank of the document.
   * @param pagerank pagerank or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setPagerank(java.lang.Integer pagerank) {
    this.pagerank = pagerank;
    return this;
  }

  /**
   * Petacat classifications for the web document. Normally the results from calling Petacat come in
   * a PetacatResponse, which is very flexible and extensible. This proto takes most of the
   * flexibility away - only rephil clusters, taxonomic classifications, and binary classifications,
   * with discretized weights.
   * @return value or {@code null} for none
   */
  public FatcatCompactDocClassification getPetacatInfo() {
    return petacatInfo;
  }

  /**
   * Petacat classifications for the web document. Normally the results from calling Petacat come in
   * a PetacatResponse, which is very flexible and extensible. This proto takes most of the
   * flexibility away - only rephil clusters, taxonomic classifications, and binary classifications,
   * with discretized weights.
   * @param petacatInfo petacatInfo or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setPetacatInfo(FatcatCompactDocClassification petacatInfo) {
    this.petacatInfo = petacatInfo;
    return this;
  }

  /**
   * A set of salient terms extracted fromthe document. DEPRECATEAD. Moved to DatasetMetadata for
   * performance reasons.
   * @return value or {@code null} for none
   */
  public QualitySalientTermsSalientTermSet getSalientTerms() {
    return salientTerms;
  }

  /**
   * A set of salient terms extracted fromthe document. DEPRECATEAD. Moved to DatasetMetadata for
   * performance reasons.
   * @param salientTerms salientTerms or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setSalientTerms(QualitySalientTermsSalientTermSet salientTerms) {
    this.salientTerms = salientTerms;
    return this;
  }

  /**
   * Science per-doc data for inclusion in websearch.
   * @return value or {@code null} for none
   */
  public ScienceIndexSignal getScholarInfo() {
    return scholarInfo;
  }

  /**
   * Science per-doc data for inclusion in websearch.
   * @param scholarInfo scholarInfo or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setScholarInfo(ScienceIndexSignal scholarInfo) {
    this.scholarInfo = scholarInfo;
    return this;
  }

  /**
   * A set of entities from WebRef annotations that are in SPORE_GRAPH.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSporeGraphMid() {
    return sporeGraphMid;
  }

  /**
   * A set of entities from WebRef annotations that are in SPORE_GRAPH.
   * @param sporeGraphMid sporeGraphMid or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setSporeGraphMid(java.util.List<java.lang.String> sporeGraphMid) {
    this.sporeGraphMid = sporeGraphMid;
    return this;
  }

  /**
   * The title of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The title of the document.
   * @param title title or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * A set of top entities from WebrefAnnotation, top is defined by topicality score, see go
   * /topicality-score for detail. DEPRECATED. See label_to_mids_map instead.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefWebrefEntity> getTopEntity() {
    return topEntity;
  }

  /**
   * A set of top entities from WebrefAnnotation, top is defined by topicality score, see go
   * /topicality-score for detail. DEPRECATED. See label_to_mids_map instead.
   * @param topEntity topEntity or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setTopEntity(java.util.List<RepositoryWebrefWebrefEntity> topEntity) {
    this.topEntity = topEntity;
    return this;
  }

  /**
   * The url of the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * The url of the document.
   * @param url url or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * A set of entities copied from WebRefEntities on cDoc.
   * @return value or {@code null} for none
   */
  public java.util.List<ResearchScienceSearchSourceUrlDocjoinInfoWebrefEntityInfo> getWebrefEntity() {
    return webrefEntity;
  }

  /**
   * A set of entities copied from WebRefEntities on cDoc.
   * @param webrefEntity webrefEntity or {@code null} for none
   */
  public ResearchScienceSearchSourceUrlDocjoinInfo setWebrefEntity(java.util.List<ResearchScienceSearchSourceUrlDocjoinInfoWebrefEntityInfo> webrefEntity) {
    this.webrefEntity = webrefEntity;
    return this;
  }

  @Override
  public ResearchScienceSearchSourceUrlDocjoinInfo set(String fieldName, Object value) {
    return (ResearchScienceSearchSourceUrlDocjoinInfo) super.set(fieldName, value);
  }

  @Override
  public ResearchScienceSearchSourceUrlDocjoinInfo clone() {
    return (ResearchScienceSearchSourceUrlDocjoinInfo) super.clone();
  }

}
