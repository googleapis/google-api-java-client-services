/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2;

/**
 * Service definition for Baremetalsolution (v2).
 *
 * <p>
 * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bare-metal" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BaremetalsolutionRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Baremetalsolution extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Bare Metal Solution API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://baremetalsolution.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://baremetalsolution.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Baremetalsolution(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Baremetalsolution(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
   *   {@code Baremetalsolution.Projects.List request = baremetalsolution.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
     *   {@code Baremetalsolution.Locations.List request = baremetalsolution.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Location> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         * <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the baremetalsolution server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListLocationsResponse> {

        private static final String REST_PATH = "v2/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the baremetalsolution server.  After setting
         * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         * <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the InstanceProvisioningSettings collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.InstanceProvisioningSettings.List request = baremetalsolution.instanceProvisioningSettings().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public InstanceProvisioningSettings instanceProvisioningSettings() {
        return new InstanceProvisioningSettings();
      }

      /**
       * The "instanceProvisioningSettings" collection of methods.
       */
      public class InstanceProvisioningSettings {

        /**
         * Get instance provisioning settings for a given project. This is hidden method used by UI only.
         *
         * Create a request for the method "instanceProvisioningSettings.fetch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Fetch#execute()} method to invoke the remote operation.
         *
         * @param location Required. The parent project and location containing the ProvisioningSettings.
         * @return the request
         */
        public Fetch fetch(java.lang.String location) throws java.io.IOException {
          Fetch result = new Fetch(location);
          initialize(result);
          return result;
        }

        public class Fetch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.FetchInstanceProvisioningSettingsResponse> {

          private static final String REST_PATH = "v2/{+location}/instanceProvisioningSettings:fetch";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Get instance provisioning settings for a given project. This is hidden method used by UI only.
           *
           * Create a request for the method "instanceProvisioningSettings.fetch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Fetch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Fetch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param location Required. The parent project and location containing the ProvisioningSettings.
           * @since 1.13
           */
          protected Fetch(java.lang.String location) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.FetchInstanceProvisioningSettingsResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Fetch set$Xgafv(java.lang.String $Xgafv) {
            return (Fetch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Fetch setAccessToken(java.lang.String accessToken) {
            return (Fetch) super.setAccessToken(accessToken);
          }

          @Override
          public Fetch setAlt(java.lang.String alt) {
            return (Fetch) super.setAlt(alt);
          }

          @Override
          public Fetch setCallback(java.lang.String callback) {
            return (Fetch) super.setCallback(callback);
          }

          @Override
          public Fetch setFields(java.lang.String fields) {
            return (Fetch) super.setFields(fields);
          }

          @Override
          public Fetch setKey(java.lang.String key) {
            return (Fetch) super.setKey(key);
          }

          @Override
          public Fetch setOauthToken(java.lang.String oauthToken) {
            return (Fetch) super.setOauthToken(oauthToken);
          }

          @Override
          public Fetch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Fetch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Fetch setQuotaUser(java.lang.String quotaUser) {
            return (Fetch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Fetch setUploadType(java.lang.String uploadType) {
            return (Fetch) super.setUploadType(uploadType);
          }

          @Override
          public Fetch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Fetch) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent project and location containing the ProvisioningSettings. */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. The parent project and location containing the ProvisioningSettings.
           */
          public java.lang.String getLocation() {
            return location;
          }

          /** Required. The parent project and location containing the ProvisioningSettings. */
          public Fetch setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          @Override
          public Fetch set(String parameterName, Object value) {
            return (Fetch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Instances collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Instances.List request = baremetalsolution.instances().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Instances instances() {
        return new Instances();
      }

      /**
       * The "instances" collection of methods.
       */
      public class Instances {

        /**
         * Create an Instance.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent project and location.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Instance}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.Instance content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create an Instance.
           *
           * Create a request for the method "instances.create".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent project and location.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Instance}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.Instance content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent project and location. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent project and location.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent project and location. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Detach LUN from Instance.
         *
         * Create a request for the method "instances.detachLun".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link DetachLun#execute()} method to invoke the remote operation.
         *
         * @param instance Required. Name of the instance.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.DetachLunRequest}
         * @return the request
         */
        public DetachLun detachLun(java.lang.String instance, com.google.api.services.baremetalsolution.v2.model.DetachLunRequest content) throws java.io.IOException {
          DetachLun result = new DetachLun(instance, content);
          initialize(result);
          return result;
        }

        public class DetachLun extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+instance}:detachLun";

          private final java.util.regex.Pattern INSTANCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Detach LUN from Instance.
           *
           * Create a request for the method "instances.detachLun".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link DetachLun#execute()} method to invoke the remote
           * operation. <p> {@link
           * DetachLun#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param instance Required. Name of the instance.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.DetachLunRequest}
           * @since 1.13
           */
          protected DetachLun(java.lang.String instance, com.google.api.services.baremetalsolution.v2.model.DetachLunRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public DetachLun set$Xgafv(java.lang.String $Xgafv) {
            return (DetachLun) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetachLun setAccessToken(java.lang.String accessToken) {
            return (DetachLun) super.setAccessToken(accessToken);
          }

          @Override
          public DetachLun setAlt(java.lang.String alt) {
            return (DetachLun) super.setAlt(alt);
          }

          @Override
          public DetachLun setCallback(java.lang.String callback) {
            return (DetachLun) super.setCallback(callback);
          }

          @Override
          public DetachLun setFields(java.lang.String fields) {
            return (DetachLun) super.setFields(fields);
          }

          @Override
          public DetachLun setKey(java.lang.String key) {
            return (DetachLun) super.setKey(key);
          }

          @Override
          public DetachLun setOauthToken(java.lang.String oauthToken) {
            return (DetachLun) super.setOauthToken(oauthToken);
          }

          @Override
          public DetachLun setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetachLun) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetachLun setQuotaUser(java.lang.String quotaUser) {
            return (DetachLun) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetachLun setUploadType(java.lang.String uploadType) {
            return (DetachLun) super.setUploadType(uploadType);
          }

          @Override
          public DetachLun setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetachLun) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the instance. */
          @com.google.api.client.util.Key
          private java.lang.String instance;

          /** Required. Name of the instance.
           */
          public java.lang.String getInstance() {
            return instance;
          }

          /** Required. Name of the instance. */
          public DetachLun setInstance(java.lang.String instance) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                  "Parameter instance must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.instance = instance;
            return this;
          }

          @Override
          public DetachLun set(String parameterName, Object value) {
            return (DetachLun) super.set(parameterName, value);
          }
        }
        /**
         * Get details about a single server.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Instance> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Get details about a single server.
           *
           * Create a request for the method "instances.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Instance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List servers in a given project and location.
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListInstancesRequest.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListInstancesResponse> {

          private static final String REST_PATH = "v2/{+parent}/instances";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List servers in a given project and location.
           *
           * Create a request for the method "instances.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListInstancesRequest.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListInstancesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListInstancesRequest. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListInstancesRequest.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListInstancesRequest. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. Server may return fewer items than requested. If unspecified, the server will
         pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. Server may return fewer items than requested. If unspecified, the
           * server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results from the server. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results from the server.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results from the server. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update details of a single server.
         *
         * Create a request for the method "instances.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/instances/{instance}`
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Instance}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Instance content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Update details of a single server.
           *
           * Create a request for the method "instances.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/instances/{instance}`
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Instance}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Instance content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/instances/{instance}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the
         conventions in https://cloud.google.com/apis/design/resource_names. Format:
         `projects/{project}/locations/{location}/instances/{instance}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/instances/{instance}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The list of fields to update. The currently supported fields are: `labels`
           * `hyperthreading_enabled` `os_image`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled`
         `os_image`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The list of fields to update. The currently supported fields are: `labels`
           * `hyperthreading_enabled` `os_image`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then
         * turning it back on.
         *
         * Create a request for the method "instances.reset".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Reset#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ResetInstanceRequest}
         * @return the request
         */
        public Reset reset(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.ResetInstanceRequest content) throws java.io.IOException {
          Reset result = new Reset(name, content);
          initialize(result);
          return result;
        }

        public class Reset extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}:reset";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then
           * turning it back on.
           *
           * Create a request for the method "instances.reset".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Reset#execute()} method to invoke the remote
           * operation. <p> {@link
           * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ResetInstanceRequest}
           * @since 1.13
           */
          protected Reset(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.ResetInstanceRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Reset set$Xgafv(java.lang.String $Xgafv) {
            return (Reset) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reset setAccessToken(java.lang.String accessToken) {
            return (Reset) super.setAccessToken(accessToken);
          }

          @Override
          public Reset setAlt(java.lang.String alt) {
            return (Reset) super.setAlt(alt);
          }

          @Override
          public Reset setCallback(java.lang.String callback) {
            return (Reset) super.setCallback(callback);
          }

          @Override
          public Reset setFields(java.lang.String fields) {
            return (Reset) super.setFields(fields);
          }

          @Override
          public Reset setKey(java.lang.String key) {
            return (Reset) super.setKey(key);
          }

          @Override
          public Reset setOauthToken(java.lang.String oauthToken) {
            return (Reset) super.setOauthToken(oauthToken);
          }

          @Override
          public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reset) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reset setQuotaUser(java.lang.String quotaUser) {
            return (Reset) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reset setUploadType(java.lang.String uploadType) {
            return (Reset) super.setUploadType(uploadType);
          }

          @Override
          public Reset setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reset) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Reset setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Reset set(String parameterName, Object value) {
            return (Reset) super.set(parameterName, value);
          }
        }
        /**
         * Starts a server that was shutdown.
         *
         * Create a request for the method "instances.start".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Start#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.StartInstanceRequest}
         * @return the request
         */
        public Start start(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.StartInstanceRequest content) throws java.io.IOException {
          Start result = new Start(name, content);
          initialize(result);
          return result;
        }

        public class Start extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}:start";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Starts a server that was shutdown.
           *
           * Create a request for the method "instances.start".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Start#execute()} method to invoke the remote
           * operation. <p> {@link
           * Start#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.StartInstanceRequest}
           * @since 1.13
           */
          protected Start(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.StartInstanceRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Start set$Xgafv(java.lang.String $Xgafv) {
            return (Start) super.set$Xgafv($Xgafv);
          }

          @Override
          public Start setAccessToken(java.lang.String accessToken) {
            return (Start) super.setAccessToken(accessToken);
          }

          @Override
          public Start setAlt(java.lang.String alt) {
            return (Start) super.setAlt(alt);
          }

          @Override
          public Start setCallback(java.lang.String callback) {
            return (Start) super.setCallback(callback);
          }

          @Override
          public Start setFields(java.lang.String fields) {
            return (Start) super.setFields(fields);
          }

          @Override
          public Start setKey(java.lang.String key) {
            return (Start) super.setKey(key);
          }

          @Override
          public Start setOauthToken(java.lang.String oauthToken) {
            return (Start) super.setOauthToken(oauthToken);
          }

          @Override
          public Start setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Start) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Start setQuotaUser(java.lang.String quotaUser) {
            return (Start) super.setQuotaUser(quotaUser);
          }

          @Override
          public Start setUploadType(java.lang.String uploadType) {
            return (Start) super.setUploadType(uploadType);
          }

          @Override
          public Start setUploadProtocol(java.lang.String uploadProtocol) {
            return (Start) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Start setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Start set(String parameterName, Object value) {
            return (Start) super.set(parameterName, value);
          }
        }
        /**
         * Stop a running server.
         *
         * Create a request for the method "instances.stop".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Stop#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.StopInstanceRequest}
         * @return the request
         */
        public Stop stop(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.StopInstanceRequest content) throws java.io.IOException {
          Stop result = new Stop(name, content);
          initialize(result);
          return result;
        }

        public class Stop extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}:stop";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/instances/[^/]+$");

          /**
           * Stop a running server.
           *
           * Create a request for the method "instances.stop".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Stop#execute()} method to invoke the remote operation.
           * <p> {@link
           * Stop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.StopInstanceRequest}
           * @since 1.13
           */
          protected Stop(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.StopInstanceRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Stop set$Xgafv(java.lang.String $Xgafv) {
            return (Stop) super.set$Xgafv($Xgafv);
          }

          @Override
          public Stop setAccessToken(java.lang.String accessToken) {
            return (Stop) super.setAccessToken(accessToken);
          }

          @Override
          public Stop setAlt(java.lang.String alt) {
            return (Stop) super.setAlt(alt);
          }

          @Override
          public Stop setCallback(java.lang.String callback) {
            return (Stop) super.setCallback(callback);
          }

          @Override
          public Stop setFields(java.lang.String fields) {
            return (Stop) super.setFields(fields);
          }

          @Override
          public Stop setKey(java.lang.String key) {
            return (Stop) super.setKey(key);
          }

          @Override
          public Stop setOauthToken(java.lang.String oauthToken) {
            return (Stop) super.setOauthToken(oauthToken);
          }

          @Override
          public Stop setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Stop) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Stop setQuotaUser(java.lang.String quotaUser) {
            return (Stop) super.setQuotaUser(quotaUser);
          }

          @Override
          public Stop setUploadType(java.lang.String uploadType) {
            return (Stop) super.setUploadType(uploadType);
          }

          @Override
          public Stop setUploadProtocol(java.lang.String uploadProtocol) {
            return (Stop) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Stop setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/instances/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Stop set(String parameterName, Object value) {
            return (Stop) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Networks collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Networks.List request = baremetalsolution.networks().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Networks networks() {
        return new Networks();
      }

      /**
       * The "networks" collection of methods.
       */
      public class Networks {

        /**
         * Get details of a single network.
         *
         * Create a request for the method "networks.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Network> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/networks/[^/]+$");

          /**
           * Get details of a single network.
           *
           * Create a request for the method "networks.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Network.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/networks/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/networks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List network in a given project and location.
         *
         * Create a request for the method "networks.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListNetworksRequest.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListNetworksResponse> {

          private static final String REST_PATH = "v2/{+parent}/networks";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List network in a given project and location.
           *
           * Create a request for the method "networks.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListNetworksRequest.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListNetworksResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListNetworksRequest. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListNetworksRequest.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListNetworksRequest. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. The server might return fewer items than requested. If unspecified, server
         will pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results from the server. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results from the server.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results from the server. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * List all Networks (and used IPs for each Network) in the vendor account associated with the
         * specified project.
         *
         * Create a request for the method "networks.listNetworkUsage".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link ListNetworkUsage#execute()} method to invoke the remote
         * operation.
         *
         * @param location Required. Parent value (project and location).
         * @return the request
         */
        public ListNetworkUsage listNetworkUsage(java.lang.String location) throws java.io.IOException {
          ListNetworkUsage result = new ListNetworkUsage(location);
          initialize(result);
          return result;
        }

        public class ListNetworkUsage extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListNetworkUsageResponse> {

          private static final String REST_PATH = "v2/{+location}/networks:listNetworkUsage";

          private final java.util.regex.Pattern LOCATION_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List all Networks (and used IPs for each Network) in the vendor account associated with the
           * specified project.
           *
           * Create a request for the method "networks.listNetworkUsage".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link ListNetworkUsage#execute()} method to invoke the
           * remote operation. <p> {@link ListNetworkUsage#initialize(com.google.api.client.googleapis.servi
           * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param location Required. Parent value (project and location).
           * @since 1.13
           */
          protected ListNetworkUsage(java.lang.String location) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListNetworkUsageResponse.class);
            this.location = com.google.api.client.util.Preconditions.checkNotNull(location, "Required parameter location must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListNetworkUsage set$Xgafv(java.lang.String $Xgafv) {
            return (ListNetworkUsage) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListNetworkUsage setAccessToken(java.lang.String accessToken) {
            return (ListNetworkUsage) super.setAccessToken(accessToken);
          }

          @Override
          public ListNetworkUsage setAlt(java.lang.String alt) {
            return (ListNetworkUsage) super.setAlt(alt);
          }

          @Override
          public ListNetworkUsage setCallback(java.lang.String callback) {
            return (ListNetworkUsage) super.setCallback(callback);
          }

          @Override
          public ListNetworkUsage setFields(java.lang.String fields) {
            return (ListNetworkUsage) super.setFields(fields);
          }

          @Override
          public ListNetworkUsage setKey(java.lang.String key) {
            return (ListNetworkUsage) super.setKey(key);
          }

          @Override
          public ListNetworkUsage setOauthToken(java.lang.String oauthToken) {
            return (ListNetworkUsage) super.setOauthToken(oauthToken);
          }

          @Override
          public ListNetworkUsage setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListNetworkUsage) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListNetworkUsage setQuotaUser(java.lang.String quotaUser) {
            return (ListNetworkUsage) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListNetworkUsage setUploadType(java.lang.String uploadType) {
            return (ListNetworkUsage) super.setUploadType(uploadType);
          }

          @Override
          public ListNetworkUsage setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListNetworkUsage) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value (project and location). */
          @com.google.api.client.util.Key
          private java.lang.String location;

          /** Required. Parent value (project and location).
           */
          public java.lang.String getLocation() {
            return location;
          }

          /** Required. Parent value (project and location). */
          public ListNetworkUsage setLocation(java.lang.String location) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(LOCATION_PATTERN.matcher(location).matches(),
                  "Parameter location must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.location = location;
            return this;
          }

          @Override
          public ListNetworkUsage set(String parameterName, Object value) {
            return (ListNetworkUsage) super.set(parameterName, value);
          }
        }
        /**
         * Update details of a single network.
         *
         * Create a request for the method "networks.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/networks/{network}`
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Network}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Network content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/networks/[^/]+$");

          /**
           * Update details of a single network.
           *
           * Create a request for the method "networks.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/networks/{network}`
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Network}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Network content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/networks/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The resource name of this `Network`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/networks/{network}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow
         the conventions in https://cloud.google.com/apis/design/resource_names. Format:
         `projects/{project}/locations/{location}/networks/{network}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The resource name of this `Network`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/networks/{network}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/networks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The list of fields to update. The only currently supported fields are: `labels`,
           * `reservations`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. The only currently supported fields are: `labels`, `reservations`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The list of fields to update. The only currently supported fields are: `labels`,
           * `reservations`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the NfsShares collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.NfsShares.List request = baremetalsolution.nfsShares().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NfsShares nfsShares() {
        return new NfsShares();
      }

      /**
       * The "nfsShares" collection of methods.
       */
      public class NfsShares {

        /**
         * Get details of a single NFS share.
         *
         * Create a request for the method "nfsShares.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.NfsShare> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");

          /**
           * Get details of a single NFS share.
           *
           * Create a request for the method "nfsShares.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.NfsShare.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List NFS shares.
         *
         * Create a request for the method "nfsShares.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListNfsSharesRequest.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListNfsSharesResponse> {

          private static final String REST_PATH = "v2/{+parent}/nfsShares";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List NFS shares.
           *
           * Create a request for the method "nfsShares.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListNfsSharesRequest.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListNfsSharesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListNfsSharesRequest. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListNfsSharesRequest.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListNfsSharesRequest. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. The server might return fewer items than requested. If unspecified, server
         will pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results from the server. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results from the server.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results from the server. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update details of a single NFS share.
         *
         * Create a request for the method "nfsShares.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The name of the NFS share.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.NfsShare}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.NfsShare content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");

          /**
           * Update details of a single NFS share.
           *
           * Create a request for the method "nfsShares.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The name of the NFS share.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.NfsShare}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.NfsShare content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The name of the NFS share. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The name of the NFS share.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The name of the NFS share. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The list of fields to update. The only currently supported fields are: `labels` */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. The only currently supported fields are: `labels`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** The list of fields to update. The only currently supported fields are: `labels` */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Operations.List request = baremetalsolution.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Get details about an operation. This method used only to work around CCFE lack of passthrough LRO
         * support (b/221498758).
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/.*$");

          /**
           * Get details about an operation. This method used only to work around CCFE lack of passthrough
           * LRO support (b/221498758).
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/.*$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ProvisioningConfigs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.ProvisioningConfigs.List request = baremetalsolution.provisioningConfigs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ProvisioningConfigs provisioningConfigs() {
        return new ProvisioningConfigs();
      }

      /**
       * The "provisioningConfigs" collection of methods.
       */
      public class ProvisioningConfigs {

        /**
         * Create new ProvisioningConfig.
         *
         * Create a request for the method "provisioningConfigs.create".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent project and location containing the ProvisioningConfig.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig> {

          private static final String REST_PATH = "v2/{+parent}/provisioningConfigs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Create new ProvisioningConfig.
           *
           * Create a request for the method "provisioningConfigs.create".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent project and location containing the ProvisioningConfig.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent project and location containing the ProvisioningConfig. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent project and location containing the ProvisioningConfig.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent project and location containing the ProvisioningConfig. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Email provided to send a confirmation with provisioning config to. */
          @com.google.api.client.util.Key
          private java.lang.String email;

          /** Optional. Email provided to send a confirmation with provisioning config to.
           */
          public java.lang.String getEmail() {
            return email;
          }

          /** Optional. Email provided to send a confirmation with provisioning config to. */
          public Create setEmail(java.lang.String email) {
            this.email = email;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Get ProvisioningConfig by name.
         *
         * Create a request for the method "provisioningConfigs.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the ProvisioningConfig.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");

          /**
           * Get ProvisioningConfig by name.
           *
           * Create a request for the method "provisioningConfigs.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the ProvisioningConfig.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the ProvisioningConfig. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the ProvisioningConfig.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the ProvisioningConfig. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Update existing ProvisioningConfig.
         *
         * Create a request for the method "provisioningConfigs.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The name of the provisioning config.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");

          /**
           * Update existing ProvisioningConfig.
           *
           * Create a request for the method "provisioningConfigs.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The name of the provisioning config.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.ProvisioningConfig.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Output only. The name of the provisioning config. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The name of the provisioning config.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Output only. The name of the provisioning config. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. Email provided to send a confirmation with provisioning config to. */
          @com.google.api.client.util.Key
          private java.lang.String email;

          /** Optional. Email provided to send a confirmation with provisioning config to.
           */
          public java.lang.String getEmail() {
            return email;
          }

          /** Optional. Email provided to send a confirmation with provisioning config to. */
          public Patch setEmail(java.lang.String email) {
            this.email = email;
            return this;
          }

          /** Required. The list of fields to update. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to update. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Submit a provisiong configuration for a given project.
         *
         * Create a request for the method "provisioningConfigs.submit".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Submit#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent project and location containing the ProvisioningConfig.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigRequest}
         * @return the request
         */
        public Submit submit(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigRequest content) throws java.io.IOException {
          Submit result = new Submit(parent, content);
          initialize(result);
          return result;
        }

        public class Submit extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigResponse> {

          private static final String REST_PATH = "v2/{+parent}/provisioningConfigs:submit";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Submit a provisiong configuration for a given project.
           *
           * Create a request for the method "provisioningConfigs.submit".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Submit#execute()} method to invoke the remote
           * operation. <p> {@link
           * Submit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent project and location containing the ProvisioningConfig.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigRequest}
           * @since 1.13
           */
          protected Submit(java.lang.String parent, com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.SubmitProvisioningConfigResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Submit set$Xgafv(java.lang.String $Xgafv) {
            return (Submit) super.set$Xgafv($Xgafv);
          }

          @Override
          public Submit setAccessToken(java.lang.String accessToken) {
            return (Submit) super.setAccessToken(accessToken);
          }

          @Override
          public Submit setAlt(java.lang.String alt) {
            return (Submit) super.setAlt(alt);
          }

          @Override
          public Submit setCallback(java.lang.String callback) {
            return (Submit) super.setCallback(callback);
          }

          @Override
          public Submit setFields(java.lang.String fields) {
            return (Submit) super.setFields(fields);
          }

          @Override
          public Submit setKey(java.lang.String key) {
            return (Submit) super.setKey(key);
          }

          @Override
          public Submit setOauthToken(java.lang.String oauthToken) {
            return (Submit) super.setOauthToken(oauthToken);
          }

          @Override
          public Submit setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Submit) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Submit setQuotaUser(java.lang.String quotaUser) {
            return (Submit) super.setQuotaUser(quotaUser);
          }

          @Override
          public Submit setUploadType(java.lang.String uploadType) {
            return (Submit) super.setUploadType(uploadType);
          }

          @Override
          public Submit setUploadProtocol(java.lang.String uploadProtocol) {
            return (Submit) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent project and location containing the ProvisioningConfig. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent project and location containing the ProvisioningConfig.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent project and location containing the ProvisioningConfig. */
          public Submit setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Submit set(String parameterName, Object value) {
            return (Submit) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ProvisioningQuotas collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.ProvisioningQuotas.List request = baremetalsolution.provisioningQuotas().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ProvisioningQuotas provisioningQuotas() {
        return new ProvisioningQuotas();
      }

      /**
       * The "provisioningQuotas" collection of methods.
       */
      public class ProvisioningQuotas {

        /**
         * List the budget details to provision resources on a given project.
         *
         * Create a request for the method "provisioningQuotas.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListProvisioningQuotasRequest.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListProvisioningQuotasResponse> {

          private static final String REST_PATH = "v2/{+parent}/provisioningQuotas";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List the budget details to provision resources on a given project.
           *
           * Create a request for the method "provisioningQuotas.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListProvisioningQuotasRequest.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListProvisioningQuotasResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListProvisioningQuotasRequest. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListProvisioningQuotasRequest.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListProvisioningQuotasRequest. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default. Notice that page_size field is
           * not supported and won't be respected in the API request for now, will be updated when
           * pagination is supported.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. The server might return fewer items than requested. If unspecified, server
         will pick an appropriate default. Notice that page_size field is not supported and won't be
         respected in the API request for now, will be updated when pagination is supported.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default. Notice that page_size field is
           * not supported and won't be respected in the API request for now, will be updated when
           * pagination is supported.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results from the server. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results from the server.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results from the server. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Volumes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
       *   {@code Baremetalsolution.Volumes.List request = baremetalsolution.volumes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Volumes volumes() {
        return new Volumes();
      }

      /**
       * The "volumes" collection of methods.
       */
      public class Volumes {

        /**
         * Get details of a single storage volume.
         *
         * Create a request for the method "volumes.get".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Volume> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Get details of a single storage volume.
           *
           * Create a request for the method "volumes.get".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           * <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Volume.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List storage volumes in a given project and location.
         *
         * Create a request for the method "volumes.list".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Parent value for ListVolumesRequest.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListVolumesResponse> {

          private static final String REST_PATH = "v2/{+parent}/volumes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * List storage volumes in a given project and location.
           *
           * Create a request for the method "volumes.list".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           * <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Parent value for ListVolumesRequest.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListVolumesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Parent value for ListVolumesRequest. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Parent value for ListVolumesRequest.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Parent value for ListVolumesRequest. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** List filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** List filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** List filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. The server might return fewer items than requested. If unspecified, server
         will pick an appropriate default.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. The server might return fewer items than requested. If
           * unspecified, server will pick an appropriate default.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** A token identifying a page of results from the server. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results from the server.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** A token identifying a page of results from the server. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update details of a single storage volume.
         *
         * Create a request for the method "volumes.patch".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/volumes/{volume}`
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Volume}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Volume content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Update details of a single storage volume.
           *
           * Create a request for the method "volumes.patch".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the
         *        conventions in https://cloud.google.com/apis/design/resource_names. Format:
         *        `projects/{project}/locations/{location}/volumes/{volume}`
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.Volume}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.baremetalsolution.v2.model.Volume content) {
            super(Baremetalsolution.this, "PATCH", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. The resource name of this `Volume`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/volumes/{volume}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the
         conventions in https://cloud.google.com/apis/design/resource_names. Format:
         `projects/{project}/locations/{location}/volumes/{volume}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. The resource name of this `Volume`. Resource names are schemeless URIs
           * that follow the conventions in https://cloud.google.com/apis/design/resource_names.
           * Format: `projects/{project}/locations/{location}/volumes/{volume}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The list of fields to update. The only currently supported fields are:
           * `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels'
           * 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The list of fields to update. The only currently supported fields are:
         `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'snapshot_enabled'
         'snapshot_reservation_detail.reserved_space_percent'
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The list of fields to update. The only currently supported fields are:
           * `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels'
           * 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Emergency Volume resize.
         *
         * Create a request for the method "volumes.resize".
         *
         * This request holds the parameters needed by the baremetalsolution server.  After setting any
         * optional parameters, call the {@link Resize#execute()} method to invoke the remote operation.
         *
         * @param volume Required. Volume to resize.
         * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ResizeVolumeRequest}
         * @return the request
         */
        public Resize resize(java.lang.String volume, com.google.api.services.baremetalsolution.v2.model.ResizeVolumeRequest content) throws java.io.IOException {
          Resize result = new Resize(volume, content);
          initialize(result);
          return result;
        }

        public class Resize extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+volume}:resize";

          private final java.util.regex.Pattern VOLUME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

          /**
           * Emergency Volume resize.
           *
           * Create a request for the method "volumes.resize".
           *
           * This request holds the parameters needed by the the baremetalsolution server.  After setting
           * any optional parameters, call the {@link Resize#execute()} method to invoke the remote
           * operation. <p> {@link
           * Resize#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param volume Required. Volume to resize.
           * @param content the {@link com.google.api.services.baremetalsolution.v2.model.ResizeVolumeRequest}
           * @since 1.13
           */
          protected Resize(java.lang.String volume, com.google.api.services.baremetalsolution.v2.model.ResizeVolumeRequest content) {
            super(Baremetalsolution.this, "POST", REST_PATH, content, com.google.api.services.baremetalsolution.v2.model.Operation.class);
            this.volume = com.google.api.client.util.Preconditions.checkNotNull(volume, "Required parameter volume must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(VOLUME_PATTERN.matcher(volume).matches(),
                  "Parameter volume must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
          }

          @Override
          public Resize set$Xgafv(java.lang.String $Xgafv) {
            return (Resize) super.set$Xgafv($Xgafv);
          }

          @Override
          public Resize setAccessToken(java.lang.String accessToken) {
            return (Resize) super.setAccessToken(accessToken);
          }

          @Override
          public Resize setAlt(java.lang.String alt) {
            return (Resize) super.setAlt(alt);
          }

          @Override
          public Resize setCallback(java.lang.String callback) {
            return (Resize) super.setCallback(callback);
          }

          @Override
          public Resize setFields(java.lang.String fields) {
            return (Resize) super.setFields(fields);
          }

          @Override
          public Resize setKey(java.lang.String key) {
            return (Resize) super.setKey(key);
          }

          @Override
          public Resize setOauthToken(java.lang.String oauthToken) {
            return (Resize) super.setOauthToken(oauthToken);
          }

          @Override
          public Resize setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Resize) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Resize setQuotaUser(java.lang.String quotaUser) {
            return (Resize) super.setQuotaUser(quotaUser);
          }

          @Override
          public Resize setUploadType(java.lang.String uploadType) {
            return (Resize) super.setUploadType(uploadType);
          }

          @Override
          public Resize setUploadProtocol(java.lang.String uploadProtocol) {
            return (Resize) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Volume to resize. */
          @com.google.api.client.util.Key
          private java.lang.String volume;

          /** Required. Volume to resize.
           */
          public java.lang.String getVolume() {
            return volume;
          }

          /** Required. Volume to resize. */
          public Resize setVolume(java.lang.String volume) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(VOLUME_PATTERN.matcher(volume).matches(),
                  "Parameter volume must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
            }
            this.volume = volume;
            return this;
          }

          @Override
          public Resize set(String parameterName, Object value) {
            return (Resize) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Luns collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Baremetalsolution baremetalsolution = new Baremetalsolution(...);}
         *   {@code Baremetalsolution.Luns.List request = baremetalsolution.luns().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Luns luns() {
          return new Luns();
        }

        /**
         * The "luns" collection of methods.
         */
        public class Luns {

          /**
           * Get details of a single storage logical unit number(LUN).
           *
           * Create a request for the method "luns.get".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.Lun> {

            private static final String REST_PATH = "v2/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$");

            /**
             * Get details of a single storage logical unit number(LUN).
             *
             * Create a request for the method "luns.get".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.Lun.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * List storage volume luns for given storage volume.
           *
           * Create a request for the method "luns.list".
           *
           * This request holds the parameters needed by the baremetalsolution server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent value for ListLunsRequest.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BaremetalsolutionRequest<com.google.api.services.baremetalsolution.v2.model.ListLunsResponse> {

            private static final String REST_PATH = "v2/{+parent}/luns";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");

            /**
             * List storage volume luns for given storage volume.
             *
             * Create a request for the method "luns.list".
             *
             * This request holds the parameters needed by the the baremetalsolution server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent value for ListLunsRequest.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Baremetalsolution.this, "GET", REST_PATH, null, com.google.api.services.baremetalsolution.v2.model.ListLunsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Parent value for ListLunsRequest. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent value for ListLunsRequest.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Parent value for ListLunsRequest. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Requested page size. The server might return fewer items than requested. If
             * unspecified, server will pick an appropriate default.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Requested page size. The server might return fewer items than requested. If unspecified, server
           will pick an appropriate default.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Requested page size. The server might return fewer items than requested. If
             * unspecified, server will pick an appropriate default.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** A token identifying a page of results from the server. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A token identifying a page of results from the server.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** A token identifying a page of results from the server. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link Baremetalsolution}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Baremetalsolution}. */
    @Override
    public Baremetalsolution build() {
      return new Baremetalsolution(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BaremetalsolutionRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBaremetalsolutionRequestInitializer(
        BaremetalsolutionRequestInitializer baremetalsolutionRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(baremetalsolutionRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
