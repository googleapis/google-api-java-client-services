/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dfareporting.model;

/**
 * Contains the ingestion status of the dynamic feed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Campaign Manager 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IngestionStatus extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The number of active rows in the feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numActiveRows;

  /**
   * Output only. The number of rows processed in the feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numRowsProcessed;

  /**
   * Output only. The total number of rows in the feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numRowsTotal;

  /**
   * Output only. The number of rows with errors in the feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numRowsWithErrors;

  /**
   * Output only. The total number of warnings in the feed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long numWarningsTotal;

  /**
   * Output only. The number of active rows in the feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumActiveRows() {
    return numActiveRows;
  }

  /**
   * Output only. The number of active rows in the feed.
   * @param numActiveRows numActiveRows or {@code null} for none
   */
  public IngestionStatus setNumActiveRows(java.lang.Long numActiveRows) {
    this.numActiveRows = numActiveRows;
    return this;
  }

  /**
   * Output only. The number of rows processed in the feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumRowsProcessed() {
    return numRowsProcessed;
  }

  /**
   * Output only. The number of rows processed in the feed.
   * @param numRowsProcessed numRowsProcessed or {@code null} for none
   */
  public IngestionStatus setNumRowsProcessed(java.lang.Long numRowsProcessed) {
    this.numRowsProcessed = numRowsProcessed;
    return this;
  }

  /**
   * Output only. The total number of rows in the feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumRowsTotal() {
    return numRowsTotal;
  }

  /**
   * Output only. The total number of rows in the feed.
   * @param numRowsTotal numRowsTotal or {@code null} for none
   */
  public IngestionStatus setNumRowsTotal(java.lang.Long numRowsTotal) {
    this.numRowsTotal = numRowsTotal;
    return this;
  }

  /**
   * Output only. The number of rows with errors in the feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumRowsWithErrors() {
    return numRowsWithErrors;
  }

  /**
   * Output only. The number of rows with errors in the feed.
   * @param numRowsWithErrors numRowsWithErrors or {@code null} for none
   */
  public IngestionStatus setNumRowsWithErrors(java.lang.Long numRowsWithErrors) {
    this.numRowsWithErrors = numRowsWithErrors;
    return this;
  }

  /**
   * Output only. The total number of warnings in the feed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNumWarningsTotal() {
    return numWarningsTotal;
  }

  /**
   * Output only. The total number of warnings in the feed.
   * @param numWarningsTotal numWarningsTotal or {@code null} for none
   */
  public IngestionStatus setNumWarningsTotal(java.lang.Long numWarningsTotal) {
    this.numWarningsTotal = numWarningsTotal;
    return this;
  }

  @Override
  public IngestionStatus set(String fieldName, Object value) {
    return (IngestionStatus) super.set(fieldName, value);
  }

  @Override
  public IngestionStatus clone() {
    return (IngestionStatus) super.clone();
  }

}
