/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v2.model;

/**
 * Spec of input and output files, on external file systems (for example, Colossus Namespace System
 * or Google Cloud Storage).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSFileSpec extends com.google.api.client.json.GenericJson {

  /**
   * Deprecated. Use file_spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String directoryPath;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileFormat;

  /**
   * Single file path, or file pattern of format "/path/to/file@shard_count". E.g.
   * /cns/cell-d/somewhere/file@2 is expanded to two files:
   * /cns/cell-d/somewhere/file-00000-of-00002 and /cns/cell-d/somewhere/file-00001-of-00002.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileSpec;

  /**
   * Deprecated. Use file_spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String singleFilePath;

  /**
   * Deprecated. Use file_spec.
   * @return value or {@code null} for none
   */
  public java.lang.String getDirectoryPath() {
    return directoryPath;
  }

  /**
   * Deprecated. Use file_spec.
   * @param directoryPath directoryPath or {@code null} for none
   */
  public XPSFileSpec setDirectoryPath(java.lang.String directoryPath) {
    this.directoryPath = directoryPath;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFileFormat() {
    return fileFormat;
  }

  /**
   * @param fileFormat fileFormat or {@code null} for none
   */
  public XPSFileSpec setFileFormat(java.lang.String fileFormat) {
    this.fileFormat = fileFormat;
    return this;
  }

  /**
   * Single file path, or file pattern of format "/path/to/file@shard_count". E.g.
   * /cns/cell-d/somewhere/file@2 is expanded to two files:
   * /cns/cell-d/somewhere/file-00000-of-00002 and /cns/cell-d/somewhere/file-00001-of-00002.
   * @return value or {@code null} for none
   */
  public java.lang.String getFileSpec() {
    return fileSpec;
  }

  /**
   * Single file path, or file pattern of format "/path/to/file@shard_count". E.g.
   * /cns/cell-d/somewhere/file@2 is expanded to two files:
   * /cns/cell-d/somewhere/file-00000-of-00002 and /cns/cell-d/somewhere/file-00001-of-00002.
   * @param fileSpec fileSpec or {@code null} for none
   */
  public XPSFileSpec setFileSpec(java.lang.String fileSpec) {
    this.fileSpec = fileSpec;
    return this;
  }

  /**
   * Deprecated. Use file_spec.
   * @return value or {@code null} for none
   */
  public java.lang.String getSingleFilePath() {
    return singleFilePath;
  }

  /**
   * Deprecated. Use file_spec.
   * @param singleFilePath singleFilePath or {@code null} for none
   */
  public XPSFileSpec setSingleFilePath(java.lang.String singleFilePath) {
    this.singleFilePath = singleFilePath;
    return this;
  }

  @Override
  public XPSFileSpec set(String fieldName, Object value) {
    return (XPSFileSpec) super.set(fieldName, value);
  }

  @Override
  public XPSFileSpec clone() {
    return (XPSFileSpec) super.clone();
  }

}
