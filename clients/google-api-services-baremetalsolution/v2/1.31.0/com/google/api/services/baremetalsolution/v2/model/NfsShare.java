/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.baremetalsolution.v2.model;

/**
 * An NFS share.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Bare Metal Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NfsShare extends com.google.api.client.json.GenericJson {

  /**
   * List of allowed access points.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AllowedClient> allowedClients;

  static {
    // hack to force ProGuard to consider AllowedClient used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AllowedClient.class);
  }

  /**
   * Labels as key value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The name of the NFS share.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. An identifier for the NFS share, generated by the backend.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String nfsShareId;

  /**
   * The requested size, in GiB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long requestedSizeGib;

  /**
   * The state of the NFS share.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The volume containing the share.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String volume;

  /**
   * List of allowed access points.
   * @return value or {@code null} for none
   */
  public java.util.List<AllowedClient> getAllowedClients() {
    return allowedClients;
  }

  /**
   * List of allowed access points.
   * @param allowedClients allowedClients or {@code null} for none
   */
  public NfsShare setAllowedClients(java.util.List<AllowedClient> allowedClients) {
    this.allowedClients = allowedClients;
    return this;
  }

  /**
   * Labels as key value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs.
   * @param labels labels or {@code null} for none
   */
  public NfsShare setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The name of the NFS share.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the NFS share.
   * @param name name or {@code null} for none
   */
  public NfsShare setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. An identifier for the NFS share, generated by the backend.
   * @return value or {@code null} for none
   */
  public java.lang.String getNfsShareId() {
    return nfsShareId;
  }

  /**
   * Output only. An identifier for the NFS share, generated by the backend.
   * @param nfsShareId nfsShareId or {@code null} for none
   */
  public NfsShare setNfsShareId(java.lang.String nfsShareId) {
    this.nfsShareId = nfsShareId;
    return this;
  }

  /**
   * The requested size, in GiB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRequestedSizeGib() {
    return requestedSizeGib;
  }

  /**
   * The requested size, in GiB.
   * @param requestedSizeGib requestedSizeGib or {@code null} for none
   */
  public NfsShare setRequestedSizeGib(java.lang.Long requestedSizeGib) {
    this.requestedSizeGib = requestedSizeGib;
    return this;
  }

  /**
   * The state of the NFS share.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The state of the NFS share.
   * @param state state or {@code null} for none
   */
  public NfsShare setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The volume containing the share.
   * @return value or {@code null} for none
   */
  public java.lang.String getVolume() {
    return volume;
  }

  /**
   * The volume containing the share.
   * @param volume volume or {@code null} for none
   */
  public NfsShare setVolume(java.lang.String volume) {
    this.volume = volume;
    return this;
  }

  @Override
  public NfsShare set(String fieldName, Object value) {
    return (NfsShare) super.set(fieldName, value);
  }

  @Override
  public NfsShare clone() {
    return (NfsShare) super.clone();
  }

}
