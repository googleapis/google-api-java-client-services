/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.toolresults.model;

/**
 * A summary of perf metrics collected and performance environment info
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tool Results API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PerfMetricsSummary extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppStartTime appStartTime;

  /**
   * A tool results execution ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String executionId;

  /**
   * Graphics statistics for the entire run. Statistics are reset at the beginning of the run and
   * collected at the end of the run.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GraphicsStats graphicsStats;

  /**
   * A tool results history ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String historyId;

  /**
   * Describes the environment in which the performance metrics were collected
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PerfEnvironment perfEnvironment;

  /**
   * Set of resource collected
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> perfMetrics;

  /**
   * The cloud project
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * A tool results step ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stepId;

  /**
   * @return value or {@code null} for none
   */
  public AppStartTime getAppStartTime() {
    return appStartTime;
  }

  /**
   * @param appStartTime appStartTime or {@code null} for none
   */
  public PerfMetricsSummary setAppStartTime(AppStartTime appStartTime) {
    this.appStartTime = appStartTime;
    return this;
  }

  /**
   * A tool results execution ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getExecutionId() {
    return executionId;
  }

  /**
   * A tool results execution ID.
   * @param executionId executionId or {@code null} for none
   */
  public PerfMetricsSummary setExecutionId(java.lang.String executionId) {
    this.executionId = executionId;
    return this;
  }

  /**
   * Graphics statistics for the entire run. Statistics are reset at the beginning of the run and
   * collected at the end of the run.
   * @return value or {@code null} for none
   */
  public GraphicsStats getGraphicsStats() {
    return graphicsStats;
  }

  /**
   * Graphics statistics for the entire run. Statistics are reset at the beginning of the run and
   * collected at the end of the run.
   * @param graphicsStats graphicsStats or {@code null} for none
   */
  public PerfMetricsSummary setGraphicsStats(GraphicsStats graphicsStats) {
    this.graphicsStats = graphicsStats;
    return this;
  }

  /**
   * A tool results history ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getHistoryId() {
    return historyId;
  }

  /**
   * A tool results history ID.
   * @param historyId historyId or {@code null} for none
   */
  public PerfMetricsSummary setHistoryId(java.lang.String historyId) {
    this.historyId = historyId;
    return this;
  }

  /**
   * Describes the environment in which the performance metrics were collected
   * @return value or {@code null} for none
   */
  public PerfEnvironment getPerfEnvironment() {
    return perfEnvironment;
  }

  /**
   * Describes the environment in which the performance metrics were collected
   * @param perfEnvironment perfEnvironment or {@code null} for none
   */
  public PerfMetricsSummary setPerfEnvironment(PerfEnvironment perfEnvironment) {
    this.perfEnvironment = perfEnvironment;
    return this;
  }

  /**
   * Set of resource collected
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPerfMetrics() {
    return perfMetrics;
  }

  /**
   * Set of resource collected
   * @param perfMetrics perfMetrics or {@code null} for none
   */
  public PerfMetricsSummary setPerfMetrics(java.util.List<java.lang.String> perfMetrics) {
    this.perfMetrics = perfMetrics;
    return this;
  }

  /**
   * The cloud project
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * The cloud project
   * @param projectId projectId or {@code null} for none
   */
  public PerfMetricsSummary setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * A tool results step ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getStepId() {
    return stepId;
  }

  /**
   * A tool results step ID.
   * @param stepId stepId or {@code null} for none
   */
  public PerfMetricsSummary setStepId(java.lang.String stepId) {
    this.stepId = stepId;
    return this;
  }

  @Override
  public PerfMetricsSummary set(String fieldName, Object value) {
    return (PerfMetricsSummary) super.set(fieldName, value);
  }

  @Override
  public PerfMetricsSummary clone() {
    return (PerfMetricsSummary) super.clone();
  }

}
