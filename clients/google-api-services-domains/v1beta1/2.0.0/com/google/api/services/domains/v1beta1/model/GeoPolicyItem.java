/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.domains.v1beta1.model;

/**
 * ResourceRecordSet data for one geo location.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Domains API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeoPolicyItem extends com.google.api.client.json.GenericJson {

  /**
   * For A and AAAA types only. Endpoints to return in the query result only if they are healthy.
   * These can be specified along with `rrdata` within this item.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HealthCheckTargets healthCheckedTargets;

  /**
   * The geo-location granularity is a GCP region. This location string should correspond to a GCP
   * region. e.g. "us-east1", "southamerica-east1", "asia-east1", etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> rrdata;

  /**
   * DNSSEC generated signatures for all the `rrdata` within this item. If health checked targets
   * are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> signatureRrdata;

  /**
   * For A and AAAA types only. Endpoints to return in the query result only if they are healthy.
   * These can be specified along with `rrdata` within this item.
   * @return value or {@code null} for none
   */
  public HealthCheckTargets getHealthCheckedTargets() {
    return healthCheckedTargets;
  }

  /**
   * For A and AAAA types only. Endpoints to return in the query result only if they are healthy.
   * These can be specified along with `rrdata` within this item.
   * @param healthCheckedTargets healthCheckedTargets or {@code null} for none
   */
  public GeoPolicyItem setHealthCheckedTargets(HealthCheckTargets healthCheckedTargets) {
    this.healthCheckedTargets = healthCheckedTargets;
    return this;
  }

  /**
   * The geo-location granularity is a GCP region. This location string should correspond to a GCP
   * region. e.g. "us-east1", "southamerica-east1", "asia-east1", etc.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * The geo-location granularity is a GCP region. This location string should correspond to a GCP
   * region. e.g. "us-east1", "southamerica-east1", "asia-east1", etc.
   * @param location location or {@code null} for none
   */
  public GeoPolicyItem setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRrdata() {
    return rrdata;
  }

  /**
   * @param rrdata rrdata or {@code null} for none
   */
  public GeoPolicyItem setRrdata(java.util.List<java.lang.String> rrdata) {
    this.rrdata = rrdata;
    return this;
  }

  /**
   * DNSSEC generated signatures for all the `rrdata` within this item. If health checked targets
   * are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSignatureRrdata() {
    return signatureRrdata;
  }

  /**
   * DNSSEC generated signatures for all the `rrdata` within this item. If health checked targets
   * are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.
   * @param signatureRrdata signatureRrdata or {@code null} for none
   */
  public GeoPolicyItem setSignatureRrdata(java.util.List<java.lang.String> signatureRrdata) {
    this.signatureRrdata = signatureRrdata;
    return this;
  }

  @Override
  public GeoPolicyItem set(String fieldName, Object value) {
    return (GeoPolicyItem) super.set(fieldName, value);
  }

  @Override
  public GeoPolicyItem clone() {
    return (GeoPolicyItem) super.clone();
  }

}
