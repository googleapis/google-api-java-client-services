/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.binaryauthorization.v1.model;

/**
 * Result of evaluating one image.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Binary Authorization API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageResult extends com.google.api.client.json.GenericJson {

  /**
   * If the image was exempted by a top-level allow_pattern, contains the allowlist pattern that the
   * image name matched.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AllowlistResult allowlistResult;

  /**
   * If a check set was evaluated, contains the result of the check set. Empty if there were no
   * check sets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CheckSetResult checkSetResult;

  /**
   * Explanation of this image result. Only populated if no check sets were evaluated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String explanation;

  /**
   * Image URI from the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUri;

  /**
   * The result of evaluating this image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verdict;

  /**
   * If the image was exempted by a top-level allow_pattern, contains the allowlist pattern that the
   * image name matched.
   * @return value or {@code null} for none
   */
  public AllowlistResult getAllowlistResult() {
    return allowlistResult;
  }

  /**
   * If the image was exempted by a top-level allow_pattern, contains the allowlist pattern that the
   * image name matched.
   * @param allowlistResult allowlistResult or {@code null} for none
   */
  public ImageResult setAllowlistResult(AllowlistResult allowlistResult) {
    this.allowlistResult = allowlistResult;
    return this;
  }

  /**
   * If a check set was evaluated, contains the result of the check set. Empty if there were no
   * check sets.
   * @return value or {@code null} for none
   */
  public CheckSetResult getCheckSetResult() {
    return checkSetResult;
  }

  /**
   * If a check set was evaluated, contains the result of the check set. Empty if there were no
   * check sets.
   * @param checkSetResult checkSetResult or {@code null} for none
   */
  public ImageResult setCheckSetResult(CheckSetResult checkSetResult) {
    this.checkSetResult = checkSetResult;
    return this;
  }

  /**
   * Explanation of this image result. Only populated if no check sets were evaluated.
   * @return value or {@code null} for none
   */
  public java.lang.String getExplanation() {
    return explanation;
  }

  /**
   * Explanation of this image result. Only populated if no check sets were evaluated.
   * @param explanation explanation or {@code null} for none
   */
  public ImageResult setExplanation(java.lang.String explanation) {
    this.explanation = explanation;
    return this;
  }

  /**
   * Image URI from the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUri() {
    return imageUri;
  }

  /**
   * Image URI from the request.
   * @param imageUri imageUri or {@code null} for none
   */
  public ImageResult setImageUri(java.lang.String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

  /**
   * The result of evaluating this image.
   * @return value or {@code null} for none
   */
  public java.lang.String getVerdict() {
    return verdict;
  }

  /**
   * The result of evaluating this image.
   * @param verdict verdict or {@code null} for none
   */
  public ImageResult setVerdict(java.lang.String verdict) {
    this.verdict = verdict;
    return this;
  }

  @Override
  public ImageResult set(String fieldName, Object value) {
    return (ImageResult) super.set(fieldName, value);
  }

  @Override
  public ImageResult clone() {
    return (ImageResult) super.clone();
  }

}
