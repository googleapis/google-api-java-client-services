/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.playablelocations.v3.model;

/**
 * A request for logging impressions.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Playable Locations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlayablelocationsV3LogImpressionsRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. Information about the client device. For example, device model and operating system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsUnityClientInfo clientInfo;

  /**
   * Required. Impression event details. The maximum number of impression reports that you can log
   * at once is 50.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleMapsPlayablelocationsV3Impression> impressions;

  static {
    // hack to force ProGuard to consider GoogleMapsPlayablelocationsV3Impression used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleMapsPlayablelocationsV3Impression.class);
  }

  /**
   * Required. A string that uniquely identifies the log impressions request. This allows you to
   * detect duplicate requests. We recommend that you use UUIDs for this value. The value must not
   * exceed 50 characters. You should reuse the `request_id` only when retrying a request in case of
   * failure. In this case, the request must be identical to the one that failed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String requestId;

  /**
   * Required. Information about the client device. For example, device model and operating system.
   * @return value or {@code null} for none
   */
  public GoogleMapsUnityClientInfo getClientInfo() {
    return clientInfo;
  }

  /**
   * Required. Information about the client device. For example, device model and operating system.
   * @param clientInfo clientInfo or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3LogImpressionsRequest setClientInfo(GoogleMapsUnityClientInfo clientInfo) {
    this.clientInfo = clientInfo;
    return this;
  }

  /**
   * Required. Impression event details. The maximum number of impression reports that you can log
   * at once is 50.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleMapsPlayablelocationsV3Impression> getImpressions() {
    return impressions;
  }

  /**
   * Required. Impression event details. The maximum number of impression reports that you can log
   * at once is 50.
   * @param impressions impressions or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3LogImpressionsRequest setImpressions(java.util.List<GoogleMapsPlayablelocationsV3Impression> impressions) {
    this.impressions = impressions;
    return this;
  }

  /**
   * Required. A string that uniquely identifies the log impressions request. This allows you to
   * detect duplicate requests. We recommend that you use UUIDs for this value. The value must not
   * exceed 50 characters. You should reuse the `request_id` only when retrying a request in case of
   * failure. In this case, the request must be identical to the one that failed.
   * @return value or {@code null} for none
   */
  public java.lang.String getRequestId() {
    return requestId;
  }

  /**
   * Required. A string that uniquely identifies the log impressions request. This allows you to
   * detect duplicate requests. We recommend that you use UUIDs for this value. The value must not
   * exceed 50 characters. You should reuse the `request_id` only when retrying a request in case of
   * failure. In this case, the request must be identical to the one that failed.
   * @param requestId requestId or {@code null} for none
   */
  public GoogleMapsPlayablelocationsV3LogImpressionsRequest setRequestId(java.lang.String requestId) {
    this.requestId = requestId;
    return this;
  }

  @Override
  public GoogleMapsPlayablelocationsV3LogImpressionsRequest set(String fieldName, Object value) {
    return (GoogleMapsPlayablelocationsV3LogImpressionsRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlayablelocationsV3LogImpressionsRequest clone() {
    return (GoogleMapsPlayablelocationsV3LogImpressionsRequest) super.clone();
  }

}
