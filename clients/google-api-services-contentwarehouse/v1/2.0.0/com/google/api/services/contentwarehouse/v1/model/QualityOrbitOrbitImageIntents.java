/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Image-only orbit intents (See: go/orbit-for-images-v2)
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityOrbitOrbitImageIntents extends com.google.api.client.json.GenericJson {

  /**
   * Intents with non-trivial scores.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<QualityOrbitOrbitImageIntent> intents;

  static {
    // hack to force ProGuard to consider QualityOrbitOrbitImageIntent used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(QualityOrbitOrbitImageIntent.class);
  }

  /**
   * Used to control merging behavior: partial protos will always be merged with current, while full
   * protos will completely replace older versions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isPartial;

  /**
   * Represents the version. Filled in Amarna (main version controller).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Intents with non-trivial scores.
   * @return value or {@code null} for none
   */
  public java.util.List<QualityOrbitOrbitImageIntent> getIntents() {
    return intents;
  }

  /**
   * Intents with non-trivial scores.
   * @param intents intents or {@code null} for none
   */
  public QualityOrbitOrbitImageIntents setIntents(java.util.List<QualityOrbitOrbitImageIntent> intents) {
    this.intents = intents;
    return this;
  }

  /**
   * Used to control merging behavior: partial protos will always be merged with current, while full
   * protos will completely replace older versions.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsPartial() {
    return isPartial;
  }

  /**
   * Used to control merging behavior: partial protos will always be merged with current, while full
   * protos will completely replace older versions.
   * @param isPartial isPartial or {@code null} for none
   */
  public QualityOrbitOrbitImageIntents setIsPartial(java.lang.Boolean isPartial) {
    this.isPartial = isPartial;
    return this;
  }

  /**
   * Represents the version. Filled in Amarna (main version controller).
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Represents the version. Filled in Amarna (main version controller).
   * @param version version or {@code null} for none
   */
  public QualityOrbitOrbitImageIntents setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public QualityOrbitOrbitImageIntents set(String fieldName, Object value) {
    return (QualityOrbitOrbitImageIntents) super.set(fieldName, value);
  }

  @Override
  public QualityOrbitOrbitImageIntents clone() {
    return (QualityOrbitOrbitImageIntents) super.clone();
  }

}
