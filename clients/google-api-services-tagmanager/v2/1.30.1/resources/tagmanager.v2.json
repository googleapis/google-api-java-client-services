{
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "documentationLink": "https://developers.google.com/tag-manager",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "id": "tagmanager:v2",
  "discoveryVersion": "v1",
  "description": "This API allows clients to access and modify container and tag\n     configuration.",
  "name": "tagmanager",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        }
      }
    }
  },
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "schemas": {
    "Account": {
      "id": "Account",
      "description": "Represents a Google Tag Manager Account.",
      "properties": {
        "shareData": {
          "description": "Whether the account shares data anonymously with Google and others.\nThis flag enables benchmarking by sharing your data in an anonymous form.\nGoogle will remove all identifiable information about your website, combine\nthe data with hundreds of other anonymous sites and report aggregate trends\nin the benchmarking service.\n@mutable tagmanager.accounts.create\n@mutable tagmanager.accounts.update",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Account display name.\n@mutable tagmanager.accounts.create\n@mutable tagmanager.accounts.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Account as computed at storage time.\nThis value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "path": {
          "description": "GTM Account's API relative path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RevertTriggerResponse": {
      "type": "object",
      "id": "RevertTriggerResponse",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last\nworkspace synchronization operation. If no trigger is present, that means\nthe trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      },
      "description": "The result of reverting a trigger in a workspace."
    },
    "Folder": {
      "id": "Folder",
      "description": "Represents a Google Tag Manager Folder.",
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Folder display name.\n@mutable tagmanager.accounts.containers.workspaces.folders.create\n@mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          }
        },
        "folderId": {
          "description": "The Folder ID uniquely identifies the GTM Folder.",
          "type": "string"
        },
        "path": {
          "description": "GTM Folder's API relative path.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Folder as computed at storage time.\nThis value is recomputed whenever the folder is modified.",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this folder in the container.\n@mutable tagmanager.accounts.containers.workspaces.folders.create\n@mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        }
      }
    },
    "GetWorkspaceStatusResponse": {
      "id": "GetWorkspaceStatusResponse",
      "type": "object",
      "properties": {
        "mergeConflict": {
          "description": "The merge conflict after sync.",
          "type": "array",
          "items": {
            "$ref": "MergeConflict"
          }
        },
        "workspaceChange": {
          "items": {
            "$ref": "Entity"
          },
          "description": "Entities that have been changed in the workspace.",
          "type": "array"
        }
      },
      "description": "The changes that have occurred in the workspace since the base container\nversion."
    },
    "RevertVariableResponse": {
      "properties": {
        "variable": {
          "$ref": "Variable",
          "description": "Variable as it appears in the latest container version since the last\nworkspace synchronization operation. If no variable is present, that means\nthe variable was deleted in the latest container version."
        }
      },
      "type": "object",
      "description": "The result of reverting a variable in a workspace.",
      "id": "RevertVariableResponse"
    },
    "ListWorkspacesResponse": {
      "id": "ListWorkspacesResponse",
      "description": "A list of workspaces in a container.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "workspace": {
          "description": "All Workspaces of a GTM Container.",
          "items": {
            "$ref": "Workspace"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListEnabledBuiltInVariablesResponse": {
      "type": "object",
      "id": "ListEnabledBuiltInVariablesResponse",
      "description": "A list of enabled built-in variables.",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array",
          "description": "All GTM BuiltInVariables of a GTM container."
        }
      }
    },
    "RevertTagResponse": {
      "type": "object",
      "id": "RevertTagResponse",
      "description": "The result of reverting a tag in a workspace.",
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last\nworkspace synchronization operation. If no tag is present, that means\nthe tag was deleted in the latest container version."
        }
      }
    },
    "MergeConflict": {
      "description": "Represents a merge conflict.",
      "properties": {
        "entityInBaseVersion": {
          "$ref": "Entity",
          "description": "The base version entity (since the latest sync operation) that has\nconflicting changes compared to the workspace. If this field is missing,\nit means the workspace entity is deleted from the base version."
        },
        "entityInWorkspace": {
          "$ref": "Entity",
          "description": "The workspace entity that has conflicting changes compared to the\nbase version. If an entity is deleted in a workspace, it will still\nappear with a deleted change status."
        }
      },
      "type": "object",
      "id": "MergeConflict"
    },
    "Parameter": {
      "description": "Represents a Google Tag Manager Parameter.",
      "type": "object",
      "properties": {
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string",
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "description": "The parameter type.  Valid values are:\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eboolean\u003c/code\u003e: The value represents a boolean, represented as\n    'true' or 'false'\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003einteger\u003c/code\u003e: The value represents a 64-bit signed integer\n    value, in base 10\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elist\u003c/code\u003e: A list of parameters should be specified\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emap\u003c/code\u003e: A map of parameters should be specified\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etemplate\u003c/code\u003e: The value represents any text; this can include\n    variable references (even variable references that might return\n    non-string types)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etrigger_reference\u003c/code\u003e: The value represents a trigger,\n    represented as the trigger id\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etag_reference\u003c/code\u003e: The value represents a tag, represented as\n    the tag name\u003c/li\u003e\n\u003c/ul\u003e\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "list": {
          "description": "This list parameter's parameters (keys will be ignored).\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter.  Required for top-level\nparameters, as well as map values.  Ignored for list values.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique).\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as\n\"{{myVariable}}\")\nas appropriate to the specified type.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "id": "Parameter"
    },
    "GalleryReference": {
      "id": "GalleryReference",
      "type": "object",
      "properties": {
        "isModified": {
          "type": "boolean",
          "description": "If a user has manually edited the community  gallery template."
        },
        "owner": {
          "description": "The name of the owner for the community gallery template.",
          "type": "string"
        },
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        },
        "repository": {
          "type": "string",
          "description": "The name of the repository for the community gallery template."
        },
        "signature": {
          "description": "The signature of the community gallery template as computed at import time.\nThis value is recomputed whenever the template is updated from the gallery.",
          "type": "string"
        },
        "version": {
          "description": "The version of the community gallery template.",
          "type": "string"
        }
      },
      "description": "Represents the link between a custom template and an entry on the Community\nTemplate Gallery site."
    },
    "BuiltInVariable": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Type of built-in variable.\n@required.tagmanager.accounts.containers.workspaces.built_in_variable.update\n@mutable tagmanager.accounts.containers.workspaces.built_in_variable.update"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      },
      "id": "BuiltInVariable",
      "description": "Built-in variables are a special category of variables that are pre-created\nand non-customizable. They provide common functionality like accessing\npropeties of the gtm data layer, monitoring clicks, or accessing elements\nof a page URL."
    },
    "ZoneBoundary": {
      "id": "ZoneBoundary",
      "type": "object",
      "description": "Represents a Zone's boundaries.",
      "properties": {
        "condition": {
          "description": "The conditions that, when conjoined, make up the boundary.",
          "items": {
            "$ref": "Condition"
          },
          "type": "array"
        },
        "customEvaluationTriggerId": {
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary\nconditions when any of the listed triggers are true.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SyncStatus": {
      "id": "SyncStatus",
      "type": "object",
      "description": "The status of a workspace after synchronization.",
      "properties": {
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        },
        "mergeConflict": {
          "type": "boolean",
          "description": "Synchornization operation detected a merge conflict."
        }
      }
    },
    "Environment": {
      "properties": {
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "url": {
          "description": "Default preview page url for the environment.\n@mutable tagmanager.accounts.containers.environments.create\n@mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "description": "The type of this environment.",
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or\nversion created by a workspace."
          ]
        },
        "path": {
          "description": "GTM Environment's API relative path.",
          "type": "string"
        },
        "authorizationCode": {
          "description": "The environment authorization code.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "authorizationTimestamp": {
          "type": "string",
          "description": "The last update time-stamp for the authorization code.",
          "format": "google-datetime"
        },
        "description": {
          "description": "The environment description. Can be set or changed only on USER type\nenvironments.\n@mutable tagmanager.accounts.containers.environments.create\n@mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM environment as computed at storage time.\nThis value is recomputed whenever the environment is modified.",
          "type": "string"
        },
        "containerVersionId": {
          "description": "Represents a link to a container version.",
          "type": "string"
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment.\n@mutable tagmanager.accounts.containers.environments.create\n@mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "name": {
          "description": "The environment display name. Can be set or changed only on USER type\nenvironments.\n@mutable tagmanager.accounts.containers.environments.create\n@mutable tagmanager.accounts.containers.environments.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          }
        }
      },
      "id": "Environment",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create,\ndelete and update environments of type USER, but can only update the\nenable_debug and url fields of environments of other types.",
      "type": "object"
    },
    "VariableFormatValue": {
      "type": "object",
      "properties": {
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        },
        "convertFalseToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is false."
        },
        "convertUndefinedToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is undefined."
        },
        "caseConversionType": {
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ],
          "type": "string",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "description": "The option to convert a string-type variable value to either lowercase or\nuppercase."
        },
        "convertTrueToValue": {
          "description": "The value to convert if a variable value is true.",
          "$ref": "Parameter"
        }
      },
      "id": "VariableFormatValue"
    },
    "Tag": {
      "properties": {
        "teardownTag": {
          "type": "array",
          "description": "The list of teardown tags. Currently we only allow one.",
          "items": {
            "$ref": "TeardownTag"
          }
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "Tag display name.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingRuleId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag\n    will not fire.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "setupTag": {
          "type": "array",
          "description": "The list of setup tags. Currently we only allow one.",
          "items": {
            "$ref": "SetupTag"
          }
        },
        "monitoringMetadataTagNameKey": {
          "description": "If non-empty, then the tag display name will be included in the monitoring\nmetadata map using the key specified.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "firingRuleId": {
          "items": {
            "type": "string"
          },
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and\n    all of its \u003ccode\u003eblockingRuleIds\u003c/code\u003e (if any specified) are false.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "priority": {
          "$ref": "Parameter",
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in\norder of priority. Tags with higher numeric value fire first. A tag's\npriority can be a positive or negative value. The default value is 0.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingTriggerId": {
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the\ntag will not fire.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "scheduleEndMs": {
          "description": "The end timestamp in milliseconds to schedule a tag.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string",
          "format": "int64"
        },
        "tagFiringOption": {
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load\n(e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "type": "string",
          "description": "Option to fire this tag."
        },
        "parameter": {
          "description": "The tag's parameters.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "liveOnly": {
          "type": "boolean",
          "description": "If set to true, this tag will only fire in the live environment (e.g. not\nin preview or debug mode).\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "firingTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are\ntrue and all of its \u003ccode\u003eblockingTriggerIds\u003c/code\u003e (if any specified) are\nfalse.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Tag as computed at storage time.\nThis value is recomputed whenever the tag is modified.",
          "type": "string"
        },
        "scheduleStartMs": {
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64"
        },
        "type": {
          "description": "GTM Tag Type.\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "type": "string"
        },
        "monitoringMetadata": {
          "description": "A map of key-value pairs of tag metadata to be included in the event data\nfor tag monitoring.\nNotes:\u003cul\u003e\n\u003cli\u003eThis parameter must be type \u003ccode\u003eMAP\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eEach parameter in the map are type \u003ccode\u003eTEMPLATE\u003c/code\u003e, however\ncannot contain variable references.\u003c/li\u003e\n\u003c/ul\u003e\n@mutable tagmanager.accounts.containers.workspaces.tags.create\n@mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "path": {
          "description": "GTM Tag's API relative path.",
          "type": "string"
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        }
      },
      "id": "Tag",
      "description": "Represents a Google Tag Manager Tag.",
      "type": "object"
    },
    "ListTriggersResponse": {
      "description": "List triggers response.",
      "properties": {
        "trigger": {
          "description": "All GTM Triggers of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListTriggersResponse",
      "type": "object"
    },
    "SetupTag": {
      "id": "SetupTag",
      "properties": {
        "stopOnSetupFailure": {
          "type": "boolean",
          "description": "If true, fire the main tag if and only if the setup tag fires\nsuccessfully.\nIf false, fire the main tag regardless of setup tag firing status."
        },
        "tagName": {
          "description": "The name of the setup tag.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a reference to atag that fires before another tag in order to\nset up dependencies."
    },
    "Zone": {
      "id": "Zone",
      "type": "object",
      "description": "Represents a Google Tag Manager Zone's contents.",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "childContainer": {
          "type": "array",
          "items": {
            "$ref": "ZoneChildContainer"
          },
          "description": "Containers that are children of this Zone."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "typeRestriction": {
          "$ref": "ZoneTypeRestriction",
          "description": "This Zone's type restrictions."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time.\nThis value is recomputed whenever the zone is modified."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "boundary": {
          "description": "This Zone's boundary.",
          "$ref": "ZoneBoundary"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "zoneId": {
          "type": "string",
          "description": "The Zone ID uniquely identifies the GTM Zone."
        },
        "notes": {
          "description": "User notes on how to apply this zone in the container.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Zone's API relative path."
        },
        "name": {
          "description": "Zone display name.",
          "type": "string"
        }
      }
    },
    "ListAccountsResponse": {
      "properties": {
        "account": {
          "type": "array",
          "description": "List of GTM Accounts that a user has access to.",
          "items": {
            "$ref": "Account"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List Accounts Response.",
      "type": "object",
      "id": "ListAccountsResponse"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "id": "CreateContainerVersionRequestVersionOptions",
      "description": "Options for new container versions.",
      "properties": {
        "name": {
          "description": "The name of the container version to be created.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        }
      },
      "type": "object"
    },
    "ListVariablesResponse": {
      "id": "ListVariablesResponse",
      "properties": {
        "variable": {
          "type": "array",
          "items": {
            "$ref": "Variable"
          },
          "description": "All GTM Variables of a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "List Variables Response.",
      "type": "object"
    },
    "QuickPreviewResponse": {
      "type": "object",
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Were there compiler errors or not."
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The quick previewed container version."
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest\ncontainer version.",
          "$ref": "SyncStatus"
        }
      },
      "description": "Response to quick previewing a workspace.",
      "id": "QuickPreviewResponse"
    },
    "ContainerVersionHeader": {
      "description": "Represents a Google Tag Manager Container Version Header.",
      "properties": {
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "path": {
          "description": "GTM Container Versions's API relative path.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numRules": {
          "type": "string",
          "description": "Number of rules in the container version."
        },
        "numZones": {
          "description": "Number of zones in the container version.",
          "type": "string"
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numVariables": {
          "description": "Number of variables in the container version.",
          "type": "string"
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Container version display name."
        },
        "numCustomTemplates": {
          "description": "Number of custom templates in the container version.",
          "type": "string"
        },
        "numMacros": {
          "description": "Number of macros in the container version.",
          "type": "string"
        },
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        }
      },
      "id": "ContainerVersionHeader",
      "type": "object"
    },
    "UserPermission": {
      "id": "UserPermission",
      "description": "Represents a user's permissions to an account and its container.",
      "properties": {
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "containerAccess": {
          "description": "GTM Container access permissions.\n@mutable tagmanager.accounts.permissions.create\n@mutable tagmanager.accounts.permissions.update",
          "type": "array",
          "items": {
            "$ref": "ContainerAccess"
          }
        },
        "emailAddress": {
          "type": "string",
          "description": "User's email address.\n@mutable tagmanager.accounts.permissions.create"
        },
        "path": {
          "type": "string",
          "description": "GTM UserPermission's API relative path."
        },
        "accountAccess": {
          "$ref": "AccountAccess",
          "description": "GTM Account access permissions.\n@mutable tagmanager.accounts.permissions.create\n@mutable tagmanager.accounts.permissions.update"
        }
      },
      "type": "object"
    },
    "ZoneChildContainer": {
      "properties": {
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        },
        "publicId": {
          "type": "string",
          "description": "The child container's public id."
        }
      },
      "description": "Represents a child container of a Zone.",
      "id": "ZoneChildContainer",
      "type": "object"
    },
    "ListEnvironmentsResponse": {
      "description": "List Environments Response.",
      "properties": {
        "environment": {
          "items": {
            "$ref": "Environment"
          },
          "description": "All Environments of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "id": "ListEnvironmentsResponse"
    },
    "Entity": {
      "id": "Entity",
      "properties": {
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        },
        "tag": {
          "$ref": "Tag",
          "description": "The tag being represented by the entity."
        },
        "trigger": {
          "$ref": "Trigger",
          "description": "The trigger being represented by the entity."
        },
        "folder": {
          "$ref": "Folder",
          "description": "The Folder being represented by the entity."
        },
        "changeStatus": {
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "type": "string",
          "description": "Represents how the entity has been changed in the workspace."
        }
      },
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in\naddition to its status in the workspace.",
      "type": "object"
    },
    "CreateContainerVersionResponse": {
      "id": "CreateContainerVersionResponse",
      "type": "object",
      "description": "Create container versions response.",
      "properties": {
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest\ncontainer version.",
          "$ref": "SyncStatus"
        },
        "newWorkspacePath": {
          "description": "Auto generated workspace path created as a result of version creation. This\nfield should only be populated if the created version was not a quick\npreview.",
          "type": "string"
        },
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        }
      }
    },
    "Variable": {
      "id": "Variable",
      "properties": {
        "scheduleEndMs": {
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a variable.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "disablingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional\nvariables; the variable is enabled if one of the enabling trigger is true\nwhile all the disabling trigger are false. Treated as an unordered set.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "notes": {
          "description": "User notes on how to apply this variable in the container.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "formatValue": {
          "description": "Option to convert a variable value to other value.",
          "$ref": "VariableFormatValue"
        },
        "type": {
          "description": "GTM Variable Type.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "scheduleStartMs": {
          "description": "The start timestamp in milliseconds to schedule a variable.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Variable display name.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Variable as computed at storage time.\nThis value is recomputed whenever the variable is modified."
        },
        "enablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional\nvariables; the variable is enabled if one of the enabling triggers is true\nwhile all the disabling triggers are false. Treated as an unordered set.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "variableId": {
          "type": "string",
          "description": "The Variable ID uniquely identifies the GTM Variable."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "path": {
          "type": "string",
          "description": "GTM Variable's API relative path."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "parameter": {
          "type": "array",
          "description": "The variable's parameters.\n@mutable tagmanager.accounts.containers.workspaces.variables.create\n@mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Variable."
    },
    "SyncWorkspaceResponse": {
      "type": "object",
      "properties": {
        "syncStatus": {
          "description": "Indicates whether synchronization caused a merge conflict or sync error.",
          "$ref": "SyncStatus"
        },
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync.\nIf this field is not empty, the sync is still treated as successful.\nBut a version cannot be created until all conflicts are resolved.",
          "type": "array"
        }
      },
      "description": "A response after synchronizing the workspace to the latest container version.",
      "id": "SyncWorkspaceResponse"
    },
    "ListContainersResponse": {
      "type": "object",
      "id": "ListContainersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "container": {
          "type": "array",
          "items": {
            "$ref": "Container"
          },
          "description": "All Containers of a GTM Account."
        }
      },
      "description": "List Containers Response."
    },
    "ContainerVersion": {
      "description": "Represents a Google Tag Manager Container Version.",
      "id": "ContainerVersion",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM ContainerVersions's API relative path."
        },
        "zone": {
          "description": "The zones in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Zone"
          }
        },
        "tag": {
          "description": "The tags in the container that this version was taken from.",
          "items": {
            "$ref": "Tag"
          },
          "type": "array"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at\nstorage time. This value is recomputed whenever the container version is\nmodified.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Container version display name.\n@mutable tagmanager.accounts.containers.versions.update"
        },
        "customTemplate": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array",
          "description": "The custom templates in the container that this version was taken from."
        },
        "variable": {
          "type": "array",
          "items": {
            "$ref": "Variable"
          },
          "description": "The variables in the container that this version was taken from."
        },
        "container": {
          "$ref": "Container",
          "description": "The container that this version was taken from."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "trigger": {
          "description": "The triggers in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "builtInVariable": {
          "type": "array",
          "description": "The built-in variables in the container that this version was taken from.",
          "items": {
            "$ref": "BuiltInVariable"
          }
        },
        "description": {
          "type": "string",
          "description": "Container version description.\n@mutable tagmanager.accounts.containers.versions.update"
        },
        "folder": {
          "type": "array",
          "items": {
            "$ref": "Folder"
          },
          "description": "The folders in the container that this version was taken from."
        },
        "client": {
          "description": "The clients in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Client"
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        }
      }
    },
    "Container": {
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags\nwill run on, manages workspaces, and retains container versions.",
      "id": "Container",
      "type": "object",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Container as computed at storage time.  This\nvalue is recomputed whenever the account is modified.",
          "type": "string"
        },
        "usageContext": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "items": {
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp"
            ]
          },
          "type": "array",
          "description": "List of Usage Contexts for the Container. Valid values include: \u003ccode\u003eweb,\nandroid, or ios\u003c/code\u003e.\n@mutable tagmanager.accounts.containers.create\n@mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "publicId": {
          "type": "string",
          "description": "Container Public ID."
        },
        "notes": {
          "description": "Container Notes.\n@mutable tagmanager.accounts.containers.create\n@mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "domainName": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of domain names associated with the Container.\n@mutable tagmanager.accounts.containers.create\n@mutable tagmanager.accounts.containers.update"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create"
            ]
          },
          "description": "Container display name.\n@mutable tagmanager.accounts.containers.create\n@mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "containerId": {
          "description": "The Container ID uniquely identifies the GTM Container.",
          "type": "string"
        }
      }
    },
    "CreateBuiltInVariableResponse": {
      "id": "CreateBuiltInVariableResponse",
      "type": "object",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "List of created built-in variables."
        }
      }
    },
    "ContainerAccess": {
      "type": "object",
      "description": "Defines the Google Tag Manager Container access permissions.",
      "properties": {
        "permission": {
          "description": "List of Container permissions.\n@mutable tagmanager.accounts.permissions.create\n@mutable tagmanager.accounts.permissions.update",
          "type": "string",
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "containerId": {
          "description": "GTM Container ID.\n@mutable tagmanager.accounts.permissions.create\n@mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      },
      "id": "ContainerAccess"
    },
    "FolderEntities": {
      "description": "Represents a Google Tag Manager Folder's contents.",
      "type": "object",
      "id": "FolderEntities",
      "properties": {
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "tag": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder."
        },
        "variable": {
          "type": "array",
          "items": {
            "$ref": "Variable"
          },
          "description": "The list of variables inside the folder."
        }
      }
    },
    "Workspace": {
      "id": "Workspace",
      "type": "object",
      "description": "Represents a Google Tag Manager Container Workspace.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Workspace description.\n@mutable tagmanager.accounts.containers.workspaces.create\n@mutable tagmanager.accounts.containers.workspaces.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM Workspace's API relative path.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Workspace display name.\n@mutable tagmanager.accounts.containers.workspaces.create\n@mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          }
        },
        "workspaceId": {
          "description": "The Workspace ID uniquely identifies the GTM Workspace.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This\nvalue is recomputed whenever the workspace is modified."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      }
    },
    "RevertZoneResponse": {
      "properties": {
        "zone": {
          "$ref": "Zone",
          "description": "Zone as it appears in the latest container version since the last\nworkspace synchronization operation. If no zone is present, that means\nthe zone was deleted in the latest container version."
        }
      },
      "type": "object",
      "description": "The result of reverting a zone in a workspace.",
      "id": "RevertZoneResponse"
    },
    "ListFoldersResponse": {
      "properties": {
        "folder": {
          "items": {
            "$ref": "Folder"
          },
          "type": "array",
          "description": "All GTM Folders of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "description": "List Folders Response.",
      "id": "ListFoldersResponse"
    },
    "RevertTemplateResponse": {
      "properties": {
        "template": {
          "description": "Template as it appears in the latest container version since the last\nworkspace synchronization operation. If no template is present, that means\nthe template was deleted in the latest container version.",
          "$ref": "CustomTemplate"
        }
      },
      "id": "RevertTemplateResponse",
      "description": "The result of reverting a template in a workspace.",
      "type": "object"
    },
    "PublishContainerVersionResponse": {
      "id": "PublishContainerVersionResponse",
      "properties": {
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        }
      },
      "type": "object",
      "description": "Publish container version response."
    },
    "ListUserPermissionsResponse": {
      "description": "List user permissions response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "userPermission": {
          "type": "array",
          "description": "All GTM UserPermissions of a GTM Account.",
          "items": {
            "$ref": "UserPermission"
          }
        }
      },
      "type": "object",
      "id": "ListUserPermissionsResponse"
    },
    "RevertBuiltInVariableResponse": {
      "description": "The result of reverting a built-in variable in a workspace.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the built-in variable is enabled after reversion."
        }
      },
      "type": "object",
      "id": "RevertBuiltInVariableResponse"
    },
    "Trigger": {
      "description": "Represents a Google Tag Manager Trigger",
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "selector": {
          "$ref": "Parameter",
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP\nClick trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "verticalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will\nfire when each percentage is reached when the view is scrolled vertically.\nOnly valid for AMP scroll triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "customEventFilter": {
          "type": "array",
          "description": "Used in the case of custom event, which is fired iff all Conditions are\ntrue.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          }
        },
        "continuousTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum continuous visible time (in milliseconds).\nOnly valid for AMP Visibility trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Trigger as computed at storage time.\nThis value is recomputed whenever the trigger is modified."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer\ntrigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "maxTimerLengthSeconds": {
          "$ref": "Parameter",
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer\ntrigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP\nVisibility trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit,\nLink Click or Timer listener) if any. Used to make incompatible auto-events\nwork together with trigger filtering based on trigger ids. This value is\npopulated during output generation since the tags implied by triggers don't\nexist until then. Only valid for Form Submit, Link Click and Timer\ntriggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "interval": {
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only\nvalid for Timer triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "path": {
          "description": "GTM Trigger's API relative path.",
          "type": "string"
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening\nuntil all of the tags have fired (by preventing the default\naction and later simulating the default action). Only valid for\nForm Submission and Link Click triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "totalTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum total visible time (in milliseconds).\nOnly valid for AMP Visibility trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP\nVisibility trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags'\nabove evaluates to \u003ccode\u003etrue\u003c/code\u003e.  Only valid for Form Submission and\nLink Click triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "eventName": {
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "checkValidation": {
          "$ref": "Parameter",
          "description": "Whether or not we should only fire tags if the form submit or link click\nevent is not cancelled by some other event handler (e.g. because of\nvalidation). Only valid for Form Submission and Link Click triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visibilitySelector": {
          "$ref": "Parameter",
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP\nVisibility trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string",
          "description": "Trigger display name.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "triggerId": {
          "type": "string",
          "description": "The Trigger ID uniquely identifies the GTM Trigger."
        },
        "limit": {
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit\nis set, we will continue to fire GTM events until the user leaves the page.\nOnly valid for Timer triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "horizontalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will\nfire when each percentage is reached when the view is scrolled\nhorizontally. Only valid for AMP scroll triggers.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "description": "Defines the data layer event that causes this trigger.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ]
        },
        "autoEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "Used in the case of auto event tracking.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parameter": {
          "description": "Additional parameters.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "filter": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "The trigger will only fire iff all Conditions are true.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      },
      "id": "Trigger",
      "type": "object"
    },
    "TeardownTag": {
      "properties": {
        "stopTeardownOnFailure": {
          "type": "boolean",
          "description": "If true, fire the teardown tag if and only if the main tag fires\nsuccessfully.\nIf false, fire the teardown tag regardless of main tag firing status."
        },
        "tagName": {
          "description": "The name of the teardown tag.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TeardownTag",
      "description": "Represents a tag that fires after another tag in order to tear down\ndependencies."
    },
    "AccountAccess": {
      "type": "object",
      "id": "AccountAccess",
      "properties": {
        "permission": {
          "description": "Whether the user has no access, user access, or admin access to an account.\n@mutable tagmanager.accounts.permissions.create\n@mutable tagmanager.accounts.permissions.update",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "type": "string"
        }
      },
      "description": "Defines the Google Tag Manager Account access permissions."
    },
    "Client": {
      "type": "object",
      "id": "Client",
      "properties": {
        "type": {
          "description": "Client type.\n@mutable tagmanager.accounts.containers.workspaces.clients.create\n@mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "Priority determines relative firing order.\n@mutable tagmanager.accounts.containers.workspaces.clients.create\n@mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "path": {
          "description": "GTM client's API relative path.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Client as computed at storage time.\nThis value is recomputed whenever the client is modified."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "name": {
          "description": "Client display name.\n@mutable tagmanager.accounts.containers.workspaces.clients.create\n@mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "description": "The client's parameters.\n@mutable tagmanager.accounts.containers.workspaces.clients.create\n@mutable tagmanager.accounts.containers.workspaces.clients.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID uniquely identifies the GTM client."
        }
      }
    },
    "ListTemplatesResponse": {
      "id": "ListTemplatesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "template": {
          "description": "All GTM Custom Templates of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "CustomTemplate"
          }
        }
      },
      "type": "object"
    },
    "RevertFolderResponse": {
      "properties": {
        "folder": {
          "$ref": "Folder",
          "description": "Folder as it appears in the latest container version since the last\nworkspace synchronization operation. If no folder is present, that means\nthe folder was deleted in the latest container version."
        }
      },
      "id": "RevertFolderResponse",
      "description": "The result of reverting folder changes in a workspace.",
      "type": "object"
    },
    "CustomTemplate": {
      "type": "object",
      "properties": {
        "templateData": {
          "type": "string",
          "description": "The custom template in text format."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "galleryReference": {
          "$ref": "GalleryReference",
          "description": "A reference to the Community Template Gallery entry."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Custom Template as computed at storage time.\nThis value is recomputed whenever the template is modified.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Custom Template's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "templateId": {
          "type": "string",
          "description": "The Custom Template ID uniquely identifies the GTM custom template."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        }
      },
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "id": "CustomTemplate"
    },
    "ListContainerVersionsResponse": {
      "description": "List container versions response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "containerVersionHeader": {
          "description": "All container version headers of a GTM Container.",
          "items": {
            "$ref": "ContainerVersionHeader"
          },
          "type": "array"
        }
      },
      "id": "ListContainerVersionsResponse"
    },
    "ZoneTypeRestriction": {
      "id": "ZoneTypeRestriction",
      "description": "Represents a Zone's type restrictions.",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "True if type restrictions have been enabled for this Zone."
        },
        "whitelistedTypeId": {
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "type": "object",
      "properties": {
        "zone": {
          "description": "All GTM Zones of a GTM Container.",
          "items": {
            "$ref": "Zone"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "ListTagsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "tag": {
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          },
          "type": "array"
        }
      },
      "id": "ListTagsResponse",
      "description": "List Tags Response."
    },
    "Condition": {
      "properties": {
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "description": "The type of operator for this condition.\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also\ndefine a matching PredicateType (in condition.proto)."
          ],
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "A list of named parameters (key/value), depending on the condition's type.\nNotes:\u003cul\u003e\n\u003cli\u003eFor binary operators, include parameters named \u003ccode\u003earg0\u003c/code\u003e and\n   \u003ccode\u003earg1\u003c/code\u003e for specifying the left and right operands,\n   respectively.\u003c/li\u003e\n\u003cli\u003eAt this time, the left operand (\u003ccode\u003earg0\u003c/code\u003e) must be a reference\n    to a variable.\u003c/li\u003e\n\u003cli\u003eFor case-insensitive Regex matching, include a boolean parameter named\n    \u003ccode\u003eignore_case\u003c/code\u003e that is set to \u003ccode\u003etrue\u003c/code\u003e.\n    If not specified or set to any other value, the matching will be case\n    sensitive.\u003c/li\u003e\n\u003cli\u003eTo negate an operator, include a boolean parameter named\n    \u003ccode\u003enegate\u003c/code\u003e boolean parameter that is set to \u003ccode\u003etrue\u003c/code\u003e.\n    \u003c/li\u003e\n\u003c/ul\u003e\n@mutable tagmanager.accounts.containers.workspaces.triggers.create\n@mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        }
      },
      "description": "Represents a predicate.",
      "type": "object",
      "id": "Condition"
    }
  },
  "version": "v2",
  "kind": "discovery#restDescription",
  "batchPath": "batch/tagmanager/v2",
  "title": "Tag Manager API",
  "parameters": {
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "revision": "20200728",
  "ownerName": "Google",
  "servicePath": "",
  "resources": {
    "accounts": {
      "methods": {
        "get": {
          "id": "tagmanager.accounts.get",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "parameterOrder": [
            "path"
          ],
          "httpMethod": "GET",
          "parameters": {
            "path": {
              "pattern": "^accounts/[^/]+$",
              "type": "string",
              "required": true,
              "description": "GTM Accounts's API relative path.\nExample: accounts/{account_id}",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Account"
          },
          "path": "tagmanager/v2/{+path}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "description": "Gets a GTM Account."
        },
        "list": {
          "path": "tagmanager/v2/accounts",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "id": "tagmanager.accounts.list",
          "description": "Lists all GTM Accounts that a user has access to.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "flatPath": "tagmanager/v2/accounts"
        },
        "update": {
          "parameters": {
            "path": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "GTM Accounts's API relative path.\nExample: accounts/{account_id}",
              "pattern": "^accounts/[^/]+$"
            },
            "fingerprint": {
              "description": "When provided, this fingerprint must match the fingerprint of the account\nin storage.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ],
          "description": "Updates a GTM Account.",
          "parameterOrder": [
            "path"
          ],
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "request": {
            "$ref": "Account"
          },
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "id": "tagmanager.accounts.update",
          "path": "tagmanager/v2/{+path}"
        }
      },
      "resources": {
        "user_permissions": {
          "methods": {
            "delete": {
              "id": "tagmanager.accounts.user_permissions.delete",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "path"
              ],
              "description": "Removes a user from the account, revoking access to it and all of its\ncontainers.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "parameters": {
                "path": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path.\nExample: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "required": true
                }
              },
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "DELETE"
            },
            "create": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "description": "Creates a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              },
              "id": "tagmanager.accounts.user_permissions.create",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "GTM Account's API relative path.\nExample: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "request": {
                "$ref": "UserPermission"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "description": "List all users that have access to the account along with Account and\nContainer user access granted to each of them.",
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "id": "tagmanager.accounts.user_permissions.list",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "GTM Accounts's API relative path.\nExample: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query"
                }
              }
            },
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path.\nExample: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "location": "path",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "path": "tagmanager/v2/{+path}",
              "id": "tagmanager.accounts.user_permissions.get",
              "description": "Gets a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              }
            },
            "update": {
              "id": "tagmanager.accounts.user_permissions.update",
              "response": {
                "$ref": "UserPermission"
              },
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path.\nExample: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "UserPermission"
              },
              "description": "Updates a user's Account & Container access."
            }
          }
        },
        "containers": {
          "resources": {
            "environments": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Deletes a GTM Environment.",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "GTM Environment's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  },
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "update": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "id": "tagmanager.accounts.containers.environments.update",
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "Environment"
                  },
                  "description": "Updates a GTM Environment.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "description": "GTM Environment's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the\nenvironment in storage.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "list": {
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results."
                    }
                  },
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.environments.list",
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "reauthorize": {
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "request": {
                    "$ref": "Environment"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "GTM Environment's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  },
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "httpMethod": "POST"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+parent}/environments",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "description": "Creates a GTM Environment.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Environment"
                  },
                  "id": "tagmanager.accounts.containers.environments.create"
                },
                "get": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "id": "tagmanager.accounts.containers.environments.get",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "description": "GTM Environment's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Gets a GTM Environment.",
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "versions": {
              "methods": {
                "set_latest": {
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when\ndetecting conflicts and errors.",
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.versions.set_latest"
                },
                "undelete": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}:undelete",
                  "description": "Undeletes a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "publish": {
                  "httpMethod": "POST",
                  "description": "Publishes a Container Version.",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the\ncontainer version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "path": "tagmanager/v2/{+path}:publish",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Deletes a Container Version.",
                  "path": "tagmanager/v2/{+path}"
                },
                "update": {
                  "id": "tagmanager.accounts.containers.versions.update",
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Updates a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the\ncontainer version in storage."
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "path": "tagmanager/v2/{+path}"
                },
                "live": {
                  "id": "tagmanager.accounts.containers.versions.live",
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "description": "Gets the live (i.e. published) container version",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                },
                "get": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Gets a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "containerVersionId": {
                      "type": "string",
                      "description": "The GTM ContainerVersion ID. Specify \u003ccode\u003epublished\u003c/code\u003e to retrieve\nthe currently published version.",
                      "location": "query"
                    },
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.get",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}"
                }
              }
            },
            "workspaces": {
              "resources": {
                "templates": {
                  "methods": {
                    "create": {
                      "description": "Creates a GTM Custom Template.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create",
                      "request": {
                        "$ref": "CustomTemplate"
                      }
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the template\nin storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "description": "Lists all GTM Templates of a GTM container workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "description": "Deletes a GTM Template.",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "GTM Custom Template's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "get": {
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Template.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "parameters": {
                        "path": {
                          "description": "GTM Custom Template's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "description": "Updates a GTM Template.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "httpMethod": "PUT",
                      "parameters": {
                        "path": {
                          "description": "GTM Custom Template's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the templates\nin storage.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "request": {
                        "$ref": "CustomTemplate"
                      }
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$",
                          "type": "string",
                          "required": true,
                          "description": "GTM BuiltInVariable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "location": "path"
                        },
                        "type": {
                          "repeated": true,
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ],
                          "description": "The types of built-in variables to delete."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Deletes one or more GTM Built-In Variables."
                    },
                    "create": {
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "description": "Creates one or more GTM Built-In Variables.",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "parameters": {
                        "type": {
                          "type": "string",
                          "repeated": true,
                          "description": "The types of built-in variables to enable.",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ],
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST"
                    },
                    "revert": {
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "type": {
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ],
                          "type": "string",
                          "location": "query",
                          "description": "The type of built-in variable to revert."
                        },
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM BuiltInVariable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Tag's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Tag"
                      },
                      "description": "Gets a GTM Tag."
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Tag's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in\nstorage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "description": "Updates a GTM Tag.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "PUT",
                      "request": {
                        "$ref": "Tag"
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Tag"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "description": "Creates a GTM Tag.",
                      "path": "tagmanager/v2/{+parent}/tags",
                      "response": {
                        "$ref": "Tag"
                      }
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "description": "GTM Tag's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag\nin storage."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "httpMethod": "POST",
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace."
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Tag's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "description": "Deletes a GTM Tag.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete"
                    },
                    "list": {
                      "description": "Lists all GTM Tags of a Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "response": {
                        "$ref": "ListTagsResponse"
                      }
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "revert": {
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in\nstorage.",
                          "location": "query"
                        },
                        "path": {
                          "description": "GTM Zone's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "description": "Lists all GTM Zones of a GTM container workspace."
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Zone"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Zone.",
                      "response": {
                        "$ref": "Zone"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in\nstorage."
                        },
                        "path": {
                          "description": "GTM Zone's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        }
                      },
                      "description": "Deletes a GTM Zone."
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Zone.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "Zone"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "response": {
                        "$ref": "Zone"
                      },
                      "path": "tagmanager/v2/{+parent}/zones"
                    },
                    "get": {
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Zone.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.get"
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "description": "Deletes a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "description": "GTM Trigger's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}"
                        }
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspaces's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "description": "Creates a GTM Trigger.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST"
                    },
                    "list": {
                      "description": "Lists all GTM Triggers of a Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspaces's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "response": {
                        "$ref": "ListTriggersResponse"
                      },
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "description": "Gets a GTM Trigger.",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Trigger's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger\nin storage.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace."
                    },
                    "update": {
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "request": {
                        "$ref": "Trigger"
                      },
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true,
                          "description": "GTM Trigger's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger\nin storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Updates a GTM Trigger.",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}"
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "update": {
                      "response": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "PUT",
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in\nstorage."
                        }
                      },
                      "description": "Updates a GTM Folder.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "description": "Deletes a GTM Folder.",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}"
                    },
                    "create": {
                      "response": {
                        "$ref": "Folder"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "path": "tagmanager/v2/{+parent}/folders"
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "description": "Lists all GTM Folders of a Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/folders",
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET"
                    },
                    "move_entities_to_folder": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "parameters": {
                        "tagId": {
                          "location": "query",
                          "description": "The tags to be moved to the folder.",
                          "type": "string",
                          "repeated": true
                        },
                        "triggerId": {
                          "repeated": true,
                          "description": "The triggers to be moved to the folder.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string",
                          "description": "The variables to be moved to the folder.",
                          "repeated": true,
                          "location": "query"
                        }
                      },
                      "description": "Moves entities to a GTM Folder.",
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder"
                    },
                    "get": {
                      "description": "Gets a GTM Folder.",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "path": {
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Folder"
                      }
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag\nin storage."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST"
                    },
                    "entities": {
                      "description": "List all entities in a GTM Folder.",
                      "path": "tagmanager/v2/{+path}:entities",
                      "response": {
                        "$ref": "FolderEntities"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "httpMethod": "POST",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Variable"
                      },
                      "request": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "description": "Creates a GTM Variable.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "update": {
                      "description": "Updates a GTM Variable.",
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable\nin storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "request": {
                        "$ref": "Variable"
                      }
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable\nin storage.",
                          "type": "string"
                        },
                        "path": {
                          "description": "GTM Variable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertVariableResponse"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Variable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "path": "tagmanager/v2/{+parent}/variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Variables of a Container.",
                      "response": {
                        "$ref": "ListVariablesResponse"
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Variable's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "path": "tagmanager/v2/{+path}",
                  "description": "Deletes a Workspace.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "httpMethod": "DELETE"
                },
                "quick_preview": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview",
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "description": "Quick previews a workspace by creating a fake container version from all\nentities in the provided workspace.",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ]
                },
                "create_version": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a Container Version from the entities present in the workspace,\ndeletes the workspace, and sets the base container version to the newly\ncreated version.",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "tagmanager/v2/{+path}:create_version"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results."
                    },
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM parent Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "httpMethod": "GET"
                },
                "get": {
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  },
                  "parameters": {
                    "path": {
                      "required": true,
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a Workspace.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.get"
                },
                "create": {
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "description": "Creates a Workspace.",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM parent Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  }
                },
                "sync": {
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all\nunmodified workspace entities and displaying conflicts for modified\nentities.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "resolve_conflict": {
                  "httpMethod": "POST",
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the\nresolved entity passed in the request.",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the\nentity_in_workspace in the merge conflict.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "request": {
                    "$ref": "Entity"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict"
                },
                "update": {
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the\nworkspace in storage.",
                      "location": "query"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "description": "Updates a Workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "path"
                  ],
                  "request": {
                    "$ref": "Workspace"
                  }
                },
                "getStatus": {
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path.\nExample:\naccounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "path": "tagmanager/v2/{+path}/status",
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.workspaces.getStatus"
                }
              }
            },
            "version_headers": {
              "methods": {
                "latest": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "description": "Gets the latest container version header",
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "includeDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Also retrieve deleted (archived) versions when true."
                    }
                  },
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "description": "Lists all Container Versions of a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "create": {
              "description": "Creates a Container.",
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "request": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "GTM Account's API relative path.\nExample: accounts/{account_id}."
                }
              },
              "httpMethod": "POST",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "id": "tagmanager.accounts.containers.create"
            },
            "list": {
              "description": "Lists all Containers that belongs to a GTM Account.",
              "response": {
                "$ref": "ListContainersResponse"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "path": "tagmanager/v2/{+parent}/containers",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "id": "tagmanager.accounts.containers.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                },
                "parent": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Accounts's API relative path.\nExample: accounts/{account_id}.",
                  "type": "string",
                  "required": true
                }
              }
            },
            "delete": {
              "path": "tagmanager/v2/{+path}",
              "description": "Deletes a Container.",
              "httpMethod": "DELETE",
              "id": "tagmanager.accounts.containers.delete",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}"
            },
            "get": {
              "parameters": {
                "path": {
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}"
                }
              },
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "GET",
              "id": "tagmanager.accounts.containers.get",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "path"
              ],
              "description": "Gets a Container."
            },
            "update": {
              "httpMethod": "PUT",
              "id": "tagmanager.accounts.containers.update",
              "request": {
                "$ref": "Container"
              },
              "response": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}",
              "description": "Updates a Container.",
              "parameters": {
                "fingerprint": {
                  "type": "string",
                  "location": "query",
                  "description": "When provided, this fingerprint must match the fingerprint of the\ncontainer in storage."
                },
                "path": {
                  "description": "GTM Container's API relative path.\nExample: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameterOrder": [
                "path"
              ]
            }
          }
        }
      }
    }
  },
  "canonicalName": "Tag Manager",
  "rootUrl": "https://www.googleapis.com/",
  "baseUrl": "https://www.googleapis.com/"
}
