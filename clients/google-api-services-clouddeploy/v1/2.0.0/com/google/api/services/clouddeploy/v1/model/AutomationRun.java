/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * An `AutomationRun` resource in the Cloud Deploy API. An `AutomationRun` represents an execution
 * instance of an automation rule.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AutomationRun extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Advances a rollout to the next phase.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdvanceRolloutOperation advanceRolloutOperation;

  /**
   * Output only. The ID of the automation that initiated the operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String automationId;

  /**
   * Output only. Snapshot of the Automation taken at AutomationRun creation time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Automation automationSnapshot;

  /**
   * Output only. Time at which the `AutomationRun` was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the
   * server based on the value of other fields, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from
   * its creation date.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expireTime;

  /**
   * Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/de
   * liveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Contains information about what policies prevented the `AutomationRun` from
   * proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PolicyViolation policyViolation;

  /**
   * Output only. Promotes a release to a specified 'Target'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PromoteReleaseOperation promoteReleaseOperation;

  /**
   * Output only. Repairs a failed 'Rollout'.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepairRolloutOperation repairRolloutOperation;

  /**
   * Output only. The ID of the automation rule that initiated the operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ruleId;

  /**
   * Output only. Email address of the user-managed IAM service account that performs the operations
   * against Cloud Deploy resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Current state of the `AutomationRun`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Explains the current state of the `AutomationRun`. Present only when an
   * explanation is needed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateDescription;

  /**
   * Output only. The ID of the source target that initiates the `AutomationRun`. The value of this
   * field is the last segment of a target name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetId;

  /**
   * Output only. Promotes a release to a specified 'Target' as defined in a Timed Promote Release
   * rule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimedPromoteReleaseOperation timedPromoteReleaseOperation;

  /**
   * Output only. Time at which the automationRun was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured
   * by `wait` in automation rule.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String waitUntilTime;

  /**
   * Output only. Advances a rollout to the next phase.
   * @return value or {@code null} for none
   */
  public AdvanceRolloutOperation getAdvanceRolloutOperation() {
    return advanceRolloutOperation;
  }

  /**
   * Output only. Advances a rollout to the next phase.
   * @param advanceRolloutOperation advanceRolloutOperation or {@code null} for none
   */
  public AutomationRun setAdvanceRolloutOperation(AdvanceRolloutOperation advanceRolloutOperation) {
    this.advanceRolloutOperation = advanceRolloutOperation;
    return this;
  }

  /**
   * Output only. The ID of the automation that initiated the operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getAutomationId() {
    return automationId;
  }

  /**
   * Output only. The ID of the automation that initiated the operation.
   * @param automationId automationId or {@code null} for none
   */
  public AutomationRun setAutomationId(java.lang.String automationId) {
    this.automationId = automationId;
    return this;
  }

  /**
   * Output only. Snapshot of the Automation taken at AutomationRun creation time.
   * @return value or {@code null} for none
   */
  public Automation getAutomationSnapshot() {
    return automationSnapshot;
  }

  /**
   * Output only. Snapshot of the Automation taken at AutomationRun creation time.
   * @param automationSnapshot automationSnapshot or {@code null} for none
   */
  public AutomationRun setAutomationSnapshot(Automation automationSnapshot) {
    this.automationSnapshot = automationSnapshot;
    return this;
  }

  /**
   * Output only. Time at which the `AutomationRun` was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time at which the `AutomationRun` was created.
   * @param createTime createTime or {@code null} for none
   */
  public AutomationRun setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the
   * server based on the value of other fields, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the
   * server based on the value of other fields, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public AutomationRun setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from
   * its creation date.
   * @return value or {@code null} for none
   */
  public String getExpireTime() {
    return expireTime;
  }

  /**
   * Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from
   * its creation date.
   * @param expireTime expireTime or {@code null} for none
   */
  public AutomationRun setExpireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/de
   * liveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/de
   * liveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   * @param name name or {@code null} for none
   */
  public AutomationRun setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Contains information about what policies prevented the `AutomationRun` from
   * proceeding.
   * @return value or {@code null} for none
   */
  public PolicyViolation getPolicyViolation() {
    return policyViolation;
  }

  /**
   * Output only. Contains information about what policies prevented the `AutomationRun` from
   * proceeding.
   * @param policyViolation policyViolation or {@code null} for none
   */
  public AutomationRun setPolicyViolation(PolicyViolation policyViolation) {
    this.policyViolation = policyViolation;
    return this;
  }

  /**
   * Output only. Promotes a release to a specified 'Target'.
   * @return value or {@code null} for none
   */
  public PromoteReleaseOperation getPromoteReleaseOperation() {
    return promoteReleaseOperation;
  }

  /**
   * Output only. Promotes a release to a specified 'Target'.
   * @param promoteReleaseOperation promoteReleaseOperation or {@code null} for none
   */
  public AutomationRun setPromoteReleaseOperation(PromoteReleaseOperation promoteReleaseOperation) {
    this.promoteReleaseOperation = promoteReleaseOperation;
    return this;
  }

  /**
   * Output only. Repairs a failed 'Rollout'.
   * @return value or {@code null} for none
   */
  public RepairRolloutOperation getRepairRolloutOperation() {
    return repairRolloutOperation;
  }

  /**
   * Output only. Repairs a failed 'Rollout'.
   * @param repairRolloutOperation repairRolloutOperation or {@code null} for none
   */
  public AutomationRun setRepairRolloutOperation(RepairRolloutOperation repairRolloutOperation) {
    this.repairRolloutOperation = repairRolloutOperation;
    return this;
  }

  /**
   * Output only. The ID of the automation rule that initiated the operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuleId() {
    return ruleId;
  }

  /**
   * Output only. The ID of the automation rule that initiated the operation.
   * @param ruleId ruleId or {@code null} for none
   */
  public AutomationRun setRuleId(java.lang.String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * Output only. Email address of the user-managed IAM service account that performs the operations
   * against Cloud Deploy resources.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Output only. Email address of the user-managed IAM service account that performs the operations
   * against Cloud Deploy resources.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public AutomationRun setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Current state of the `AutomationRun`.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the `AutomationRun`.
   * @param state state or {@code null} for none
   */
  public AutomationRun setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Explains the current state of the `AutomationRun`. Present only when an
   * explanation is needed.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateDescription() {
    return stateDescription;
  }

  /**
   * Output only. Explains the current state of the `AutomationRun`. Present only when an
   * explanation is needed.
   * @param stateDescription stateDescription or {@code null} for none
   */
  public AutomationRun setStateDescription(java.lang.String stateDescription) {
    this.stateDescription = stateDescription;
    return this;
  }

  /**
   * Output only. The ID of the source target that initiates the `AutomationRun`. The value of this
   * field is the last segment of a target name.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetId() {
    return targetId;
  }

  /**
   * Output only. The ID of the source target that initiates the `AutomationRun`. The value of this
   * field is the last segment of a target name.
   * @param targetId targetId or {@code null} for none
   */
  public AutomationRun setTargetId(java.lang.String targetId) {
    this.targetId = targetId;
    return this;
  }

  /**
   * Output only. Promotes a release to a specified 'Target' as defined in a Timed Promote Release
   * rule.
   * @return value or {@code null} for none
   */
  public TimedPromoteReleaseOperation getTimedPromoteReleaseOperation() {
    return timedPromoteReleaseOperation;
  }

  /**
   * Output only. Promotes a release to a specified 'Target' as defined in a Timed Promote Release
   * rule.
   * @param timedPromoteReleaseOperation timedPromoteReleaseOperation or {@code null} for none
   */
  public AutomationRun setTimedPromoteReleaseOperation(TimedPromoteReleaseOperation timedPromoteReleaseOperation) {
    this.timedPromoteReleaseOperation = timedPromoteReleaseOperation;
    return this;
  }

  /**
   * Output only. Time at which the automationRun was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time at which the automationRun was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public AutomationRun setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured
   * by `wait` in automation rule.
   * @return value or {@code null} for none
   */
  public String getWaitUntilTime() {
    return waitUntilTime;
  }

  /**
   * Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured
   * by `wait` in automation rule.
   * @param waitUntilTime waitUntilTime or {@code null} for none
   */
  public AutomationRun setWaitUntilTime(String waitUntilTime) {
    this.waitUntilTime = waitUntilTime;
    return this;
  }

  @Override
  public AutomationRun set(String fieldName, Object value) {
    return (AutomationRun) super.set(fieldName, value);
  }

  @Override
  public AutomationRun clone() {
    return (AutomationRun) super.clone();
  }

}
