/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudasset.v1p5beta1.model;

/**
 * Defines the conditions under which an EgressPolicy matches a request. Conditions based on
 * information about the source of the request. Note that if the destination of the request is also
 * protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which
 * allows access in order for this request to succeed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Asset API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleIdentityAccesscontextmanagerV1EgressFrom extends com.google.api.client.json.GenericJson {

  /**
   * A list of identities that are allowed access through [EgressPolicy]. Identities can be an
   * individual user, service account, Google group, or third-party identity. The `v1` identities
   * that have the prefix `user`, `group`, `serviceAccount`, `principal`, and `principalSet` in
   * https://cloud.google.com/iam/docs/principal-identifiers#v1 are supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> identities;

  /**
   * Specifies the type of identities that are allowed access to outside the perimeter. If left
   * unspecified, then members of `identities` field will be allowed access.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String identityType;

  /**
   * Whether to enforce traffic restrictions based on `sources` field. If the `sources` fields is
   * non-empty, then this field must be set to `SOURCE_RESTRICTION_ENABLED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceRestriction;

  /**
   * Sources that this EgressPolicy authorizes access from. If this field is not empty, then
   * `source_restriction` must be set to `SOURCE_RESTRICTION_ENABLED`. TODO (b/332744441): annotate
   * this field with custom_org_policy_accessibility when cl/640698580 will be rolled out.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleIdentityAccesscontextmanagerV1EgressSource> sources;

  /**
   * A list of identities that are allowed access through [EgressPolicy]. Identities can be an
   * individual user, service account, Google group, or third-party identity. The `v1` identities
   * that have the prefix `user`, `group`, `serviceAccount`, `principal`, and `principalSet` in
   * https://cloud.google.com/iam/docs/principal-identifiers#v1 are supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIdentities() {
    return identities;
  }

  /**
   * A list of identities that are allowed access through [EgressPolicy]. Identities can be an
   * individual user, service account, Google group, or third-party identity. The `v1` identities
   * that have the prefix `user`, `group`, `serviceAccount`, `principal`, and `principalSet` in
   * https://cloud.google.com/iam/docs/principal-identifiers#v1 are supported.
   * @param identities identities or {@code null} for none
   */
  public GoogleIdentityAccesscontextmanagerV1EgressFrom setIdentities(java.util.List<java.lang.String> identities) {
    this.identities = identities;
    return this;
  }

  /**
   * Specifies the type of identities that are allowed access to outside the perimeter. If left
   * unspecified, then members of `identities` field will be allowed access.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdentityType() {
    return identityType;
  }

  /**
   * Specifies the type of identities that are allowed access to outside the perimeter. If left
   * unspecified, then members of `identities` field will be allowed access.
   * @param identityType identityType or {@code null} for none
   */
  public GoogleIdentityAccesscontextmanagerV1EgressFrom setIdentityType(java.lang.String identityType) {
    this.identityType = identityType;
    return this;
  }

  /**
   * Whether to enforce traffic restrictions based on `sources` field. If the `sources` fields is
   * non-empty, then this field must be set to `SOURCE_RESTRICTION_ENABLED`.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceRestriction() {
    return sourceRestriction;
  }

  /**
   * Whether to enforce traffic restrictions based on `sources` field. If the `sources` fields is
   * non-empty, then this field must be set to `SOURCE_RESTRICTION_ENABLED`.
   * @param sourceRestriction sourceRestriction or {@code null} for none
   */
  public GoogleIdentityAccesscontextmanagerV1EgressFrom setSourceRestriction(java.lang.String sourceRestriction) {
    this.sourceRestriction = sourceRestriction;
    return this;
  }

  /**
   * Sources that this EgressPolicy authorizes access from. If this field is not empty, then
   * `source_restriction` must be set to `SOURCE_RESTRICTION_ENABLED`. TODO (b/332744441): annotate
   * this field with custom_org_policy_accessibility when cl/640698580 will be rolled out.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleIdentityAccesscontextmanagerV1EgressSource> getSources() {
    return sources;
  }

  /**
   * Sources that this EgressPolicy authorizes access from. If this field is not empty, then
   * `source_restriction` must be set to `SOURCE_RESTRICTION_ENABLED`. TODO (b/332744441): annotate
   * this field with custom_org_policy_accessibility when cl/640698580 will be rolled out.
   * @param sources sources or {@code null} for none
   */
  public GoogleIdentityAccesscontextmanagerV1EgressFrom setSources(java.util.List<GoogleIdentityAccesscontextmanagerV1EgressSource> sources) {
    this.sources = sources;
    return this;
  }

  @Override
  public GoogleIdentityAccesscontextmanagerV1EgressFrom set(String fieldName, Object value) {
    return (GoogleIdentityAccesscontextmanagerV1EgressFrom) super.set(fieldName, value);
  }

  @Override
  public GoogleIdentityAccesscontextmanagerV1EgressFrom clone() {
    return (GoogleIdentityAccesscontextmanagerV1EgressFrom) super.clone();
  }

}
