/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.privateca.v1.model;

/**
 * Describes constraints on a Certificate's Subject and SubjectAltNames.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Certificate Authority API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CertificateIdentityConstraints extends com.google.api.client.json.GenericJson {

  /**
   * Required. If this is true, the SubjectAltNames extension may be copied from a certificate
   * request into the signed certificate. Otherwise, the requested SubjectAltNames will be
   * discarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowSubjectAltNamesPassthrough;

  /**
   * Required. If this is true, the Subject field may be copied from a certificate request into the
   * signed certificate. Otherwise, the requested Subject will be discarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowSubjectPassthrough;

  /**
   * Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or
   * Subject Alternative Name before a certificate is signed. To see the full allowed syntax and
   * some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Expr celExpression;

  /**
   * Required. If this is true, the SubjectAltNames extension may be copied from a certificate
   * request into the signed certificate. Otherwise, the requested SubjectAltNames will be
   * discarded.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowSubjectAltNamesPassthrough() {
    return allowSubjectAltNamesPassthrough;
  }

  /**
   * Required. If this is true, the SubjectAltNames extension may be copied from a certificate
   * request into the signed certificate. Otherwise, the requested SubjectAltNames will be
   * discarded.
   * @param allowSubjectAltNamesPassthrough allowSubjectAltNamesPassthrough or {@code null} for none
   */
  public CertificateIdentityConstraints setAllowSubjectAltNamesPassthrough(java.lang.Boolean allowSubjectAltNamesPassthrough) {
    this.allowSubjectAltNamesPassthrough = allowSubjectAltNamesPassthrough;
    return this;
  }

  /**
   * Required. If this is true, the Subject field may be copied from a certificate request into the
   * signed certificate. Otherwise, the requested Subject will be discarded.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowSubjectPassthrough() {
    return allowSubjectPassthrough;
  }

  /**
   * Required. If this is true, the Subject field may be copied from a certificate request into the
   * signed certificate. Otherwise, the requested Subject will be discarded.
   * @param allowSubjectPassthrough allowSubjectPassthrough or {@code null} for none
   */
  public CertificateIdentityConstraints setAllowSubjectPassthrough(java.lang.Boolean allowSubjectPassthrough) {
    this.allowSubjectPassthrough = allowSubjectPassthrough;
    return this;
  }

  /**
   * Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or
   * Subject Alternative Name before a certificate is signed. To see the full allowed syntax and
   * some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
   * @return value or {@code null} for none
   */
  public Expr getCelExpression() {
    return celExpression;
  }

  /**
   * Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or
   * Subject Alternative Name before a certificate is signed. To see the full allowed syntax and
   * some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
   * @param celExpression celExpression or {@code null} for none
   */
  public CertificateIdentityConstraints setCelExpression(Expr celExpression) {
    this.celExpression = celExpression;
    return this;
  }

  @Override
  public CertificateIdentityConstraints set(String fieldName, Object value) {
    return (CertificateIdentityConstraints) super.set(fieldName, value);
  }

  @Override
  public CertificateIdentityConstraints clone() {
    return (CertificateIdentityConstraints) super.clone();
  }

}
