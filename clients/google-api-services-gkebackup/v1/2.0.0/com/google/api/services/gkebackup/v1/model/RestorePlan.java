/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * The configuration of a potential series of Restore operations to be performed against Backups
 * belong to a particular BackupPlan.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RestorePlan extends com.google.api.client.json.GenericJson {

  /**
   * Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source
   * for Restores created via this RestorePlan. Format: `projects/locations/backupPlans`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupPlan;

  /**
   * Required. Immutable. The target cluster into which Restores created via this RestorePlan will
   * restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cluster;

  /**
   * Output only. The timestamp when this RestorePlan resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. User specified descriptive string for this RestorePlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and
   * systems are expected to put that etag in the request to `UpdateRestorePlan` or
   * `DeleteRestorePlan` to ensure that their change will be applied to the same version of the
   * resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. A set of custom labels supplied by user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The full name of the RestorePlan resource. Format:
   * `projects/locations/restorePlans`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Configuration of Restores created via this RestorePlan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RestoreConfig restoreConfig;

  /**
   * Output only. State of the RestorePlan. This State field reflects the various stages a
   * RestorePlan can be in during the Create operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Human-readable description of why RestorePlan is in the current `state`. This
   * field is only meant for human readability and should not be used programmatically as this field
   * is not guaranteed to be consistent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateReason;

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The timestamp when this RestorePlan resource was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source
   * for Restores created via this RestorePlan. Format: `projects/locations/backupPlans`.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupPlan() {
    return backupPlan;
  }

  /**
   * Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source
   * for Restores created via this RestorePlan. Format: `projects/locations/backupPlans`.
   * @param backupPlan backupPlan or {@code null} for none
   */
  public RestorePlan setBackupPlan(java.lang.String backupPlan) {
    this.backupPlan = backupPlan;
    return this;
  }

  /**
   * Required. Immutable. The target cluster into which Restores created via this RestorePlan will
   * restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters`
   * @return value or {@code null} for none
   */
  public java.lang.String getCluster() {
    return cluster;
  }

  /**
   * Required. Immutable. The target cluster into which Restores created via this RestorePlan will
   * restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: -
   * `projects/locations/clusters` - `projects/zones/clusters`
   * @param cluster cluster or {@code null} for none
   */
  public RestorePlan setCluster(java.lang.String cluster) {
    this.cluster = cluster;
    return this;
  }

  /**
   * Output only. The timestamp when this RestorePlan resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when this RestorePlan resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public RestorePlan setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. User specified descriptive string for this RestorePlan.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User specified descriptive string for this RestorePlan.
   * @param description description or {@code null} for none
   */
  public RestorePlan setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and
   * systems are expected to put that etag in the request to `UpdateRestorePlan` or
   * `DeleteRestorePlan` to ensure that their change will be applied to the same version of the
   * resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a restore from overwriting each other. It is strongly suggested that
   * systems make use of the `etag` in the read-modify-write cycle to perform restore updates in
   * order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and
   * systems are expected to put that etag in the request to `UpdateRestorePlan` or
   * `DeleteRestorePlan` to ensure that their change will be applied to the same version of the
   * resource.
   * @param etag etag or {@code null} for none
   */
  public RestorePlan setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. A set of custom labels supplied by user.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. A set of custom labels supplied by user.
   * @param labels labels or {@code null} for none
   */
  public RestorePlan setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The full name of the RestorePlan resource. Format:
   * `projects/locations/restorePlans`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The full name of the RestorePlan resource. Format:
   * `projects/locations/restorePlans`.
   * @param name name or {@code null} for none
   */
  public RestorePlan setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Configuration of Restores created via this RestorePlan.
   * @return value or {@code null} for none
   */
  public RestoreConfig getRestoreConfig() {
    return restoreConfig;
  }

  /**
   * Required. Configuration of Restores created via this RestorePlan.
   * @param restoreConfig restoreConfig or {@code null} for none
   */
  public RestorePlan setRestoreConfig(RestoreConfig restoreConfig) {
    this.restoreConfig = restoreConfig;
    return this;
  }

  /**
   * Output only. State of the RestorePlan. This State field reflects the various stages a
   * RestorePlan can be in during the Create operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the RestorePlan. This State field reflects the various stages a
   * RestorePlan can be in during the Create operation.
   * @param state state or {@code null} for none
   */
  public RestorePlan setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Human-readable description of why RestorePlan is in the current `state`. This
   * field is only meant for human readability and should not be used programmatically as this field
   * is not guaranteed to be consistent.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateReason() {
    return stateReason;
  }

  /**
   * Output only. Human-readable description of why RestorePlan is in the current `state`. This
   * field is only meant for human readability and should not be used programmatically as this field
   * is not guaranteed to be consistent.
   * @param stateReason stateReason or {@code null} for none
   */
  public RestorePlan setStateReason(java.lang.String stateReason) {
    this.stateReason = stateReason;
    return this;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @param uid uid or {@code null} for none
   */
  public RestorePlan setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The timestamp when this RestorePlan resource was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when this RestorePlan resource was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public RestorePlan setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public RestorePlan set(String fieldName, Object value) {
    return (RestorePlan) super.set(fieldName, value);
  }

  @Override
  public RestorePlan clone() {
    return (RestorePlan) super.clone();
  }

}
