/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * `BackupWindow` defines a window of the day during which backup jobs will run.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupWindow extends com.google.api.client.json.GenericJson {

  /**
   * Required. The hour of day (1-24) when the window end for e.g. if value of end hour of day is 10
   * that mean backup window end time is 10:00. End hour of day should be greater than start hour of
   * day. 0 <= start_hour_of_day < end_hour_of_day <= 24 End hour of day is not include in backup
   * window that mean if end_hour_of_day= 10 jobs should start before 10:00.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer endHourOfDay;

  /**
   * Required. The hour of day (0-23) when the window starts for e.g. if value of start hour of day
   * is 6 that mean backup window start at 6:00.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer startHourOfDay;

  /**
   * Required. The hour of day (1-24) when the window end for e.g. if value of end hour of day is 10
   * that mean backup window end time is 10:00. End hour of day should be greater than start hour of
   * day. 0 <= start_hour_of_day < end_hour_of_day <= 24 End hour of day is not include in backup
   * window that mean if end_hour_of_day= 10 jobs should start before 10:00.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEndHourOfDay() {
    return endHourOfDay;
  }

  /**
   * Required. The hour of day (1-24) when the window end for e.g. if value of end hour of day is 10
   * that mean backup window end time is 10:00. End hour of day should be greater than start hour of
   * day. 0 <= start_hour_of_day < end_hour_of_day <= 24 End hour of day is not include in backup
   * window that mean if end_hour_of_day= 10 jobs should start before 10:00.
   * @param endHourOfDay endHourOfDay or {@code null} for none
   */
  public BackupWindow setEndHourOfDay(java.lang.Integer endHourOfDay) {
    this.endHourOfDay = endHourOfDay;
    return this;
  }

  /**
   * Required. The hour of day (0-23) when the window starts for e.g. if value of start hour of day
   * is 6 that mean backup window start at 6:00.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getStartHourOfDay() {
    return startHourOfDay;
  }

  /**
   * Required. The hour of day (0-23) when the window starts for e.g. if value of start hour of day
   * is 6 that mean backup window start at 6:00.
   * @param startHourOfDay startHourOfDay or {@code null} for none
   */
  public BackupWindow setStartHourOfDay(java.lang.Integer startHourOfDay) {
    this.startHourOfDay = startHourOfDay;
    return this;
  }

  @Override
  public BackupWindow set(String fieldName, Object value) {
    return (BackupWindow) super.set(fieldName, value);
  }

  @Override
  public BackupWindow clone() {
    return (BackupWindow) super.clone();
  }

}
