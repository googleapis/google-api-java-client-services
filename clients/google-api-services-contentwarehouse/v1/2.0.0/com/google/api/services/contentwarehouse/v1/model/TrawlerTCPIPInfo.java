/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * To keep track of fetch connection endpoints. Note: You can use trawler::SourceIP(info) or
 * trawler::DestinationIP(info) (as well as HasSourceIP/HasDestinationIP) in basictypes.h instead of
 * accessing the packed strings directly. This will return a proper IPAddress. Never use the fixed32
 * based Source/Destination-IP in new code as they will go away (only IPv4).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrawlerTCPIPInfo extends com.google.api.client.json.GenericJson {

  /**
   * Address of the destination host. Extract with trawler::DestinationIP() or decode with
   * PackedStringToIPAddress().
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DestinationIPAddressPacked")
  private java.lang.String destinationIPAddressPacked;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DestinationPort")
  private java.lang.Integer destinationPort;

  /**
   * Source address of the crawl machine we originated the fetch from. Extract with
   * trawler::SourceIP() or decode with PackedStringToIPAddress().
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("SourceIPAddressPacked")
  private java.lang.String sourceIPAddressPacked;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("SourcePort")
  private java.lang.Integer sourcePort;

  /**
   * Address of the destination host. Extract with trawler::DestinationIP() or decode with
   * PackedStringToIPAddress().
   * @see #decodeDestinationIPAddressPacked()
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationIPAddressPacked() {
    return destinationIPAddressPacked;
  }

  /**
   * Address of the destination host. Extract with trawler::DestinationIP() or decode with
   * PackedStringToIPAddress().
   * @see #getDestinationIPAddressPacked()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeDestinationIPAddressPacked() {
    return com.google.api.client.util.Base64.decodeBase64(destinationIPAddressPacked);
  }

  /**
   * Address of the destination host. Extract with trawler::DestinationIP() or decode with
   * PackedStringToIPAddress().
   * @see #encodeDestinationIPAddressPacked()
   * @param destinationIPAddressPacked destinationIPAddressPacked or {@code null} for none
   */
  public TrawlerTCPIPInfo setDestinationIPAddressPacked(java.lang.String destinationIPAddressPacked) {
    this.destinationIPAddressPacked = destinationIPAddressPacked;
    return this;
  }

  /**
   * Address of the destination host. Extract with trawler::DestinationIP() or decode with
   * PackedStringToIPAddress().
   * @see #setDestinationIPAddressPacked()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public TrawlerTCPIPInfo encodeDestinationIPAddressPacked(byte[] destinationIPAddressPacked) {
    this.destinationIPAddressPacked = com.google.api.client.util.Base64.encodeBase64URLSafeString(destinationIPAddressPacked);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDestinationPort() {
    return destinationPort;
  }

  /**
   * @param destinationPort destinationPort or {@code null} for none
   */
  public TrawlerTCPIPInfo setDestinationPort(java.lang.Integer destinationPort) {
    this.destinationPort = destinationPort;
    return this;
  }

  /**
   * Source address of the crawl machine we originated the fetch from. Extract with
   * trawler::SourceIP() or decode with PackedStringToIPAddress().
   * @see #decodeSourceIPAddressPacked()
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceIPAddressPacked() {
    return sourceIPAddressPacked;
  }

  /**
   * Source address of the crawl machine we originated the fetch from. Extract with
   * trawler::SourceIP() or decode with PackedStringToIPAddress().
   * @see #getSourceIPAddressPacked()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSourceIPAddressPacked() {
    return com.google.api.client.util.Base64.decodeBase64(sourceIPAddressPacked);
  }

  /**
   * Source address of the crawl machine we originated the fetch from. Extract with
   * trawler::SourceIP() or decode with PackedStringToIPAddress().
   * @see #encodeSourceIPAddressPacked()
   * @param sourceIPAddressPacked sourceIPAddressPacked or {@code null} for none
   */
  public TrawlerTCPIPInfo setSourceIPAddressPacked(java.lang.String sourceIPAddressPacked) {
    this.sourceIPAddressPacked = sourceIPAddressPacked;
    return this;
  }

  /**
   * Source address of the crawl machine we originated the fetch from. Extract with
   * trawler::SourceIP() or decode with PackedStringToIPAddress().
   * @see #setSourceIPAddressPacked()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public TrawlerTCPIPInfo encodeSourceIPAddressPacked(byte[] sourceIPAddressPacked) {
    this.sourceIPAddressPacked = com.google.api.client.util.Base64.encodeBase64URLSafeString(sourceIPAddressPacked);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSourcePort() {
    return sourcePort;
  }

  /**
   * @param sourcePort sourcePort or {@code null} for none
   */
  public TrawlerTCPIPInfo setSourcePort(java.lang.Integer sourcePort) {
    this.sourcePort = sourcePort;
    return this;
  }

  @Override
  public TrawlerTCPIPInfo set(String fieldName, Object value) {
    return (TrawlerTCPIPInfo) super.set(fieldName, value);
  }

  @Override
  public TrawlerTCPIPInfo clone() {
    return (TrawlerTCPIPInfo) super.clone();
  }

}
