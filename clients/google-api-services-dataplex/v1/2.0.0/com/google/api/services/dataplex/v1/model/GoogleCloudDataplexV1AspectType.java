/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataplex.v1.model;

/**
 * Aspect Type is a template for creating Aspects, and represents the JSON-schema for a given Entry,
 * e.g., BigQuery Table Schema.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataplex API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDataplexV1AspectType extends com.google.api.client.json.GenericJson {

  /**
   * Immutable. Authorization defined for this type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1AspectTypeAuthorization authorization;

  /**
   * Output only. The time when the AspectType was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Description of the AspectType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. User friendly display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. User-defined labels for the AspectType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. MetadataTemplate of the aspect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1AspectTypeMetadataTemplate metadataTemplate;

  /**
   * Output only. The relative resource name of the AspectType, of the form:
   * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types
   * created from Dataplex API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String transferStatus;

  /**
   * Output only. System generated globally unique ID for the AspectType. This ID will be different
   * if the AspectType is deleted and re-created with the same name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The time when the AspectType was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Immutable. Authorization defined for this type.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectTypeAuthorization getAuthorization() {
    return authorization;
  }

  /**
   * Immutable. Authorization defined for this type.
   * @param authorization authorization or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setAuthorization(GoogleCloudDataplexV1AspectTypeAuthorization authorization) {
    this.authorization = authorization;
    return this;
  }

  /**
   * Output only. The time when the AspectType was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the AspectType was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Description of the AspectType.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the AspectType.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. User friendly display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. User friendly display name.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. User-defined labels for the AspectType.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. User-defined labels for the AspectType.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. MetadataTemplate of the aspect.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectTypeMetadataTemplate getMetadataTemplate() {
    return metadataTemplate;
  }

  /**
   * Required. MetadataTemplate of the aspect.
   * @param metadataTemplate metadataTemplate or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setMetadataTemplate(GoogleCloudDataplexV1AspectTypeMetadataTemplate metadataTemplate) {
    this.metadataTemplate = metadataTemplate;
    return this;
  }

  /**
   * Output only. The relative resource name of the AspectType, of the form:
   * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The relative resource name of the AspectType, of the form:
   * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
   * @param name name or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types
   * created from Dataplex API.
   * @return value or {@code null} for none
   */
  public java.lang.String getTransferStatus() {
    return transferStatus;
  }

  /**
   * Output only. Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types
   * created from Dataplex API.
   * @param transferStatus transferStatus or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setTransferStatus(java.lang.String transferStatus) {
    this.transferStatus = transferStatus;
    return this;
  }

  /**
   * Output only. System generated globally unique ID for the AspectType. This ID will be different
   * if the AspectType is deleted and re-created with the same name.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. System generated globally unique ID for the AspectType. This ID will be different
   * if the AspectType is deleted and re-created with the same name.
   * @param uid uid or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The time when the AspectType was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the AspectType was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudDataplexV1AspectType setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudDataplexV1AspectType set(String fieldName, Object value) {
    return (GoogleCloudDataplexV1AspectType) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDataplexV1AspectType clone() {
    return (GoogleCloudDataplexV1AspectType) super.clone();
  }

}
