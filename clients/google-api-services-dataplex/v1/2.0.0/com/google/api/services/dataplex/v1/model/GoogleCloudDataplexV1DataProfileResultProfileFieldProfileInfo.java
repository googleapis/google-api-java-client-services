/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataplex.v1.model;

/**
 * The profile information for each field type.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataplex API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo extends com.google.api.client.json.GenericJson {

  /**
   * Ratio of rows with distinct values against total scanned rows. Not available for complex non-
   * groupable field type RECORD and fields with REPEATABLE mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double distinctRatio;

  /**
   * Double type field information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo doubleProfile;

  /**
   * Integer type field information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo integerProfile;

  /**
   * Ratio of rows with null value against total scanned rows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double nullRatio;

  /**
   * String type field information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo stringProfile;

  /**
   * The list of top N non-null values and number of times they occur in the scanned data. N is 10
   * or equal to the number of distinct values in the field, whichever is smaller. Not available for
   * complex non-groupable field type RECORD and fields with REPEATABLE mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue> topNValues;

  /**
   * Ratio of rows with distinct values against total scanned rows. Not available for complex non-
   * groupable field type RECORD and fields with REPEATABLE mode.
   * @return value or {@code null} for none
   */
  public java.lang.Double getDistinctRatio() {
    return distinctRatio;
  }

  /**
   * Ratio of rows with distinct values against total scanned rows. Not available for complex non-
   * groupable field type RECORD and fields with REPEATABLE mode.
   * @param distinctRatio distinctRatio or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setDistinctRatio(java.lang.Double distinctRatio) {
    this.distinctRatio = distinctRatio;
    return this;
  }

  /**
   * Double type field information.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo getDoubleProfile() {
    return doubleProfile;
  }

  /**
   * Double type field information.
   * @param doubleProfile doubleProfile or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setDoubleProfile(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo doubleProfile) {
    this.doubleProfile = doubleProfile;
    return this;
  }

  /**
   * Integer type field information.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo getIntegerProfile() {
    return integerProfile;
  }

  /**
   * Integer type field information.
   * @param integerProfile integerProfile or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setIntegerProfile(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo integerProfile) {
    this.integerProfile = integerProfile;
    return this;
  }

  /**
   * Ratio of rows with null value against total scanned rows.
   * @return value or {@code null} for none
   */
  public java.lang.Double getNullRatio() {
    return nullRatio;
  }

  /**
   * Ratio of rows with null value against total scanned rows.
   * @param nullRatio nullRatio or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setNullRatio(java.lang.Double nullRatio) {
    this.nullRatio = nullRatio;
    return this;
  }

  /**
   * String type field information.
   * @return value or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo getStringProfile() {
    return stringProfile;
  }

  /**
   * String type field information.
   * @param stringProfile stringProfile or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setStringProfile(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo stringProfile) {
    this.stringProfile = stringProfile;
    return this;
  }

  /**
   * The list of top N non-null values and number of times they occur in the scanned data. N is 10
   * or equal to the number of distinct values in the field, whichever is smaller. Not available for
   * complex non-groupable field type RECORD and fields with REPEATABLE mode.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue> getTopNValues() {
    return topNValues;
  }

  /**
   * The list of top N non-null values and number of times they occur in the scanned data. N is 10
   * or equal to the number of distinct values in the field, whichever is smaller. Not available for
   * complex non-groupable field type RECORD and fields with REPEATABLE mode.
   * @param topNValues topNValues or {@code null} for none
   */
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo setTopNValues(java.util.List<GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue> topNValues) {
    this.topNValues = topNValues;
    return this;
  }

  @Override
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo set(String fieldName, Object value) {
    return (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo clone() {
    return (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo) super.clone();
  }

}
