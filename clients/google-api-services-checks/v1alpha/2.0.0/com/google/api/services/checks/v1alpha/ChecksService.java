/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.checks.v1alpha;

/**
 * Service definition for ChecksService (v1alpha).
 *
 * <p>
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/checks" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ChecksServiceRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ChecksService extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Checks API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://checks.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://checks.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ChecksService(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ChecksService(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ChecksService checks = new ChecksService(...);}
   *   {@code ChecksService.Accounts.List request = checks.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the Apps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChecksService checks = new ChecksService(...);}
     *   {@code ChecksService.Apps.List request = checks.apps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apps apps() {
      return new Apps();
    }

    /**
     * The "apps" collection of methods.
     */
    public class Apps {

      /**
       * Gets an app.
       *
       * Create a request for the method "apps.get".
       *
       * This request holds the parameters needed by the checks server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the app. Example: `accounts/123/apps/456`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksAccountV1alphaApp> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+$");

        /**
         * Gets an app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the the checks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the app. Example: `accounts/123/apps/456`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksAccountV1alphaApp.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/apps/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the app. Example: `accounts/123/apps/456`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/apps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the apps under the given account.
       *
       * Create a request for the method "apps.list".
       *
       * This request holds the parameters needed by the checks server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent account. Example: `accounts/123`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksAccountV1alphaListAppsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/apps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the apps under the given account.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the the checks server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent account. Example: `accounts/123`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksAccountV1alphaListAppsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent account. Example: `accounts/123` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent account. Example: `accounts/123`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent account. Example: `accounts/123` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of results to return. The server may further constrain the
         * maximum number of results returned in a single page. If unspecified, the server will
         * decide the number of results to be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of results to return. The server may further constrain the maximum
       number of results returned in a single page. If unspecified, the server will decide the number of
       results to be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of results to return. The server may further constrain the
         * maximum number of results returned in a single page. If unspecified, the server will
         * decide the number of results to be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token received from a previous `ListApps` call. Provide this to retrieve
         * the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token received from a previous `ListApps` call. Provide this to retrieve the
       subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token received from a previous `ListApps` call. Provide this to retrieve
         * the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChecksService checks = new ChecksService(...);}
       *   {@code ChecksService.Operations.List request = checks.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.checks.v1alpha.model.CancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.checks.v1alpha.model.CancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Empty> {

          private static final String REST_PATH = "v1alpha/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.checks.v1alpha.model.CancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.checks.v1alpha.model.CancelOperationRequest content) {
            super(ChecksService.this, "POST", REST_PATH, content, com.google.api.services.checks.v1alpha.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Empty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(ChecksService.this, "DELETE", REST_PATH, null, com.google.api.services.checks.v1alpha.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Operation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.ListOperationsResponse> {

          private static final String REST_PATH = "v1alpha/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Waits until the specified long-running operation is done or reaches at most a specified timeout,
         * returning the latest state. If the operation is already done, the latest state is immediately
         * returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC
         * timeout is used. If the server does not support this method, it returns
         * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
         * the latest state before the specified timeout (including immediately), meaning even an immediate
         * response is no guarantee that the operation is done.
         *
         * Create a request for the method "operations.wait".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Wait#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to wait on.
         * @param content the {@link com.google.api.services.checks.v1alpha.model.WaitOperationRequest}
         * @return the request
         */
        public Wait wait(java.lang.String name, com.google.api.services.checks.v1alpha.model.WaitOperationRequest content) throws java.io.IOException {
          Wait result = new Wait(name, content);
          initialize(result);
          return result;
        }

        public class Wait extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Operation> {

          private static final String REST_PATH = "v1alpha/{+name}:wait";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");

          /**
           * Waits until the specified long-running operation is done or reaches at most a specified
           * timeout, returning the latest state. If the operation is already done, the latest state is
           * immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout,
           * the HTTP/RPC timeout is used. If the server does not support this method, it returns
           * `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return
           * the latest state before the specified timeout (including immediately), meaning even an
           * immediate response is no guarantee that the operation is done.
           *
           * Create a request for the method "operations.wait".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Wait#execute()} method to invoke the remote operation. <p> {@link
           * Wait#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to wait on.
           * @param content the {@link com.google.api.services.checks.v1alpha.model.WaitOperationRequest}
           * @since 1.13
           */
          protected Wait(java.lang.String name, com.google.api.services.checks.v1alpha.model.WaitOperationRequest content) {
            super(ChecksService.this, "POST", REST_PATH, content, com.google.api.services.checks.v1alpha.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Wait set$Xgafv(java.lang.String $Xgafv) {
            return (Wait) super.set$Xgafv($Xgafv);
          }

          @Override
          public Wait setAccessToken(java.lang.String accessToken) {
            return (Wait) super.setAccessToken(accessToken);
          }

          @Override
          public Wait setAlt(java.lang.String alt) {
            return (Wait) super.setAlt(alt);
          }

          @Override
          public Wait setCallback(java.lang.String callback) {
            return (Wait) super.setCallback(callback);
          }

          @Override
          public Wait setFields(java.lang.String fields) {
            return (Wait) super.setFields(fields);
          }

          @Override
          public Wait setKey(java.lang.String key) {
            return (Wait) super.setKey(key);
          }

          @Override
          public Wait setOauthToken(java.lang.String oauthToken) {
            return (Wait) super.setOauthToken(oauthToken);
          }

          @Override
          public Wait setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Wait) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Wait setQuotaUser(java.lang.String quotaUser) {
            return (Wait) super.setQuotaUser(quotaUser);
          }

          @Override
          public Wait setUploadType(java.lang.String uploadType) {
            return (Wait) super.setUploadType(uploadType);
          }

          @Override
          public Wait setUploadProtocol(java.lang.String uploadProtocol) {
            return (Wait) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to wait on. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to wait on.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to wait on. */
          public Wait setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Wait set(String parameterName, Object value) {
            return (Wait) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Reports collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChecksService checks = new ChecksService(...);}
       *   {@code ChecksService.Reports.List request = checks.reports().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Reports reports() {
        return new Reports();
      }

      /**
       * The "reports" collection of methods.
       */
      public class Reports {

        /**
         * Gets a report. By default, only the name and results_uri fields are returned. You can include
         * other fields by listing them in the `fields` URL query parameter. For example,
         * `?fields=name,checks` will return the name and checks fields.
         *
         * Create a request for the method "reports.get".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the report. Example: `accounts/123/apps/456/reports/789`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaReport> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+/reports/[^/]+$");

          /**
           * Gets a report. By default, only the name and results_uri fields are returned. You can include
           * other fields by listing them in the `fields` URL query parameter. For example,
           * `?fields=name,checks` will return the name and checks fields.
           *
           * Create a request for the method "reports.get".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the report. Example: `accounts/123/apps/456/reports/789`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaReport.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/reports/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the report. Example: `accounts/123/apps/456/reports/789`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the report. Example: `accounts/123/apps/456/reports/789`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the report. Example: `accounts/123/apps/456/reports/789`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+/reports/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks
           * within the report. Only checks that match the filter string are included in the
           * response. Example: `state = FAILED`
           */
          @com.google.api.client.util.Key
          private java.lang.String checksFilter;

          /** Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks within the
         report. Only checks that match the filter string are included in the response. Example: `state =
         FAILED`
           */
          public java.lang.String getChecksFilter() {
            return checksFilter;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks
           * within the report. Only checks that match the filter string are included in the
           * response. Example: `state = FAILED`
           */
          public Get setChecksFilter(java.lang.String checksFilter) {
            this.checksFilter = checksFilter;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists reports for the specified app. By default, only the name and results_uri fields are
         * returned. You can include other fields by listing them in the `fields` URL query parameter. For
         * example, `?fields=reports(name,checks)` will return the name and checks fields.
         *
         * Create a request for the method "reports.list".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaListReportsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/reports";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+$");

          /**
           * Lists reports for the specified app. By default, only the name and results_uri fields are
           * returned. You can include other fields by listing them in the `fields` URL query parameter. For
           * example, `?fields=reports(name,checks)` will return the name and checks fields.
           *
           * Create a request for the method "reports.list".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaListReportsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the app. Example: `accounts/123/apps/456`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/apps/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks
           * within reports. Only checks that match the filter string are included in the response.
           * Example: `state = FAILED`
           */
          @com.google.api.client.util.Key
          private java.lang.String checksFilter;

          /** Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks within reports.
         Only checks that match the filter string are included in the response. Example: `state = FAILED`
           */
          public java.lang.String getChecksFilter() {
            return checksFilter;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter checks
           * within reports. Only checks that match the filter string are included in the response.
           * Example: `state = FAILED`
           */
          public List setChecksFilter(java.lang.String checksFilter) {
            this.checksFilter = checksFilter;
            return this;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter reports.
           * Example: `appBundle.releaseType = PRE_RELEASE`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter reports. Example:
         `appBundle.releaseType = PRE_RELEASE`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter reports.
           * Example: `appBundle.releaseType = PRE_RELEASE`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of reports to return. If unspecified, at most 10 reports
           * will be returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of reports to return. If unspecified, at most 10 reports will be
         returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of reports to return. If unspecified, at most 10 reports
           * will be returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token received from a previous `ListReports` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListReports` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token received from a previous `ListReports` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListReports` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token received from a previous `ListReports` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListReports` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Repos collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ChecksService checks = new ChecksService(...);}
     *   {@code ChecksService.Repos.List request = checks.repos().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Repos repos() {
      return new Repos();
    }

    /**
     * The "repos" collection of methods.
     */
    public class Repos {

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChecksService checks = new ChecksService(...);}
       *   {@code ChecksService.Operations.List request = checks.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Operation> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/repos/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Scans collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ChecksService checks = new ChecksService(...);}
       *   {@code ChecksService.Scans.List request = checks.scans().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Scans scans() {
        return new Scans();
      }

      /**
       * The "scans" collection of methods.
       */
      public class Scans {

        /**
         * Uploads the results of local Code Compliance analysis and generates a scan of privacy issues.
         * Returns a google.longrunning.Operation containing analysis and findings.
         *
         * Create a request for the method "scans.generate".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Generate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the repo. Example: `accounts/123/repos/456`
         * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaGenerateScanRequest}
         * @return the request
         */
        public Generate generate(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaGenerateScanRequest content) throws java.io.IOException {
          Generate result = new Generate(parent, content);
          initialize(result);
          return result;
        }

        public class Generate extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Operation> {

          private static final String REST_PATH = "v1alpha/{+parent}/scans:generate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/repos/[^/]+$");

          /**
           * Uploads the results of local Code Compliance analysis and generates a scan of privacy issues.
           * Returns a google.longrunning.Operation containing analysis and findings.
           *
           * Create a request for the method "scans.generate".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Generate#execute()} method to invoke the remote operation. <p>
           * {@link
           * Generate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the repo. Example: `accounts/123/repos/456`
           * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaGenerateScanRequest}
           * @since 1.13
           */
          protected Generate(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaGenerateScanRequest content) {
            super(ChecksService.this, "POST", REST_PATH, content, com.google.api.services.checks.v1alpha.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+$");
            }
          }

          @Override
          public Generate set$Xgafv(java.lang.String $Xgafv) {
            return (Generate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Generate setAccessToken(java.lang.String accessToken) {
            return (Generate) super.setAccessToken(accessToken);
          }

          @Override
          public Generate setAlt(java.lang.String alt) {
            return (Generate) super.setAlt(alt);
          }

          @Override
          public Generate setCallback(java.lang.String callback) {
            return (Generate) super.setCallback(callback);
          }

          @Override
          public Generate setFields(java.lang.String fields) {
            return (Generate) super.setFields(fields);
          }

          @Override
          public Generate setKey(java.lang.String key) {
            return (Generate) super.setKey(key);
          }

          @Override
          public Generate setOauthToken(java.lang.String oauthToken) {
            return (Generate) super.setOauthToken(oauthToken);
          }

          @Override
          public Generate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Generate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Generate setQuotaUser(java.lang.String quotaUser) {
            return (Generate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Generate setUploadType(java.lang.String uploadType) {
            return (Generate) super.setUploadType(uploadType);
          }

          @Override
          public Generate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Generate) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456` */
          public Generate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Generate set(String parameterName, Object value) {
            return (Generate) super.set(parameterName, value);
          }
        }
        /**
         * Gets a repo scan. By default, only the name and results_uri fields are returned. You can include
         * other fields by listing them in the `fields` URL query parameter. For example,
         * `?fields=name,sources` will return the name and sources fields.
         *
         * Create a request for the method "scans.get".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the repo scan. Example: `accounts/123/repos/456/scans/789`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaRepoScan> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/repos/[^/]+/scans/[^/]+$");

          /**
           * Gets a repo scan. By default, only the name and results_uri fields are returned. You can
           * include other fields by listing them in the `fields` URL query parameter. For example,
           * `?fields=name,sources` will return the name and sources fields.
           *
           * Create a request for the method "scans.get".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the repo scan. Example: `accounts/123/repos/456/scans/789`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaRepoScan.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+/scans/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the repo scan. Example: `accounts/123/repos/456/scans/789`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the repo scan. Example: `accounts/123/repos/456/scans/789`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the repo scan. Example: `accounts/123/repos/456/scans/789`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+/scans/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists repo scans for the specified repo.
         *
         * Create a request for the method "scans.list".
         *
         * This request holds the parameters needed by the checks server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the repo. Example: `accounts/123/repos/456`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaListRepoScansResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/scans";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/repos/[^/]+$");

          /**
           * Lists repo scans for the specified repo.
           *
           * Create a request for the method "scans.list".
           *
           * This request holds the parameters needed by the the checks server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the repo. Example: `accounts/123/repos/456`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(ChecksService.this, "GET", REST_PATH, null, com.google.api.services.checks.v1alpha.model.GoogleChecksRepoScanV1alphaListRepoScansResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the repo. Example: `accounts/123/repos/456` */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/repos/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter repo scans.
           * Example: `scmMetadata.branch = main`
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter repo scans. Example:
         `scmMetadata.branch = main`
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An [AIP-160](https://google.aip.dev/160) filter string to filter repo scans.
           * Example: `scmMetadata.branch = main`
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of repo scans to return. If unspecified, at most 10 repo
           * scans will be returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of repo scans to return. If unspecified, at most 10 repo scans will be
         returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of repo scans to return. If unspecified, at most 10 repo
           * scans will be returned. The maximum value is 50; values above 50 will be coerced to 50.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token received from a previous `ListRepoScans` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListRepoScans` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token received from a previous `ListRepoScans` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListRepoScans` must match the
         call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token received from a previous `ListRepoScans` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListRepoScans` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Aisafety collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ChecksService checks = new ChecksService(...);}
   *   {@code ChecksService.Aisafety.List request = checks.aisafety().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Aisafety aisafety() {
    return new Aisafety();
  }

  /**
   * The "aisafety" collection of methods.
   */
  public class Aisafety {

    /**
     * Analyze a piece of content with the provided set of policies.
     *
     * Create a request for the method "aisafety.classifyContent".
     *
     * This request holds the parameters needed by the checks server.  After setting any optional
     * parameters, call the {@link ClassifyContent#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentRequest}
     * @return the request
     */
    public ClassifyContent classifyContent(com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentRequest content) throws java.io.IOException {
      ClassifyContent result = new ClassifyContent(content);
      initialize(result);
      return result;
    }

    public class ClassifyContent extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentResponse> {

      private static final String REST_PATH = "v1alpha/aisafety:classifyContent";

      /**
       * Analyze a piece of content with the provided set of policies.
       *
       * Create a request for the method "aisafety.classifyContent".
       *
       * This request holds the parameters needed by the the checks server.  After setting any optional
       * parameters, call the {@link ClassifyContent#execute()} method to invoke the remote operation.
       * <p> {@link ClassifyContent#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
       * lientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentRequest}
       * @since 1.13
       */
      protected ClassifyContent(com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentRequest content) {
        super(ChecksService.this, "POST", REST_PATH, content, com.google.api.services.checks.v1alpha.model.GoogleChecksAisafetyV1alphaClassifyContentResponse.class);
      }

      @Override
      public ClassifyContent set$Xgafv(java.lang.String $Xgafv) {
        return (ClassifyContent) super.set$Xgafv($Xgafv);
      }

      @Override
      public ClassifyContent setAccessToken(java.lang.String accessToken) {
        return (ClassifyContent) super.setAccessToken(accessToken);
      }

      @Override
      public ClassifyContent setAlt(java.lang.String alt) {
        return (ClassifyContent) super.setAlt(alt);
      }

      @Override
      public ClassifyContent setCallback(java.lang.String callback) {
        return (ClassifyContent) super.setCallback(callback);
      }

      @Override
      public ClassifyContent setFields(java.lang.String fields) {
        return (ClassifyContent) super.setFields(fields);
      }

      @Override
      public ClassifyContent setKey(java.lang.String key) {
        return (ClassifyContent) super.setKey(key);
      }

      @Override
      public ClassifyContent setOauthToken(java.lang.String oauthToken) {
        return (ClassifyContent) super.setOauthToken(oauthToken);
      }

      @Override
      public ClassifyContent setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ClassifyContent) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ClassifyContent setQuotaUser(java.lang.String quotaUser) {
        return (ClassifyContent) super.setQuotaUser(quotaUser);
      }

      @Override
      public ClassifyContent setUploadType(java.lang.String uploadType) {
        return (ClassifyContent) super.setUploadType(uploadType);
      }

      @Override
      public ClassifyContent setUploadProtocol(java.lang.String uploadProtocol) {
        return (ClassifyContent) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ClassifyContent set(String parameterName, Object value) {
        return (ClassifyContent) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Media collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ChecksService checks = new ChecksService(...);}
   *   {@code ChecksService.Media.List request = checks.media().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Media media() {
    return new Media();
  }

  /**
   * The "media" collection of methods.
   */
  public class Media {

    /**
     * Analyzes the uploaded app bundle and returns a google.longrunning.Operation containing the
     * generated Report. ## Example (upload only) Send a regular POST request with the header `X-Goog-
     * Upload-Protocol: raw`. ``` POST
     * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
     * HTTP/1.1 X-Goog-Upload-Protocol: raw Content-Length: Content-Type: application/octet-stream ```
     * ## Example (upload with metadata) Send a multipart POST request where the first body part
     * contains the metadata JSON and the second body part contains the binary upload. Include the
     * header `X-Goog-Upload-Protocol: multipart`. ``` POST
     * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
     * HTTP/1.1 X-Goog-Upload-Protocol: multipart Content-Length: ? Content-Type: multipart/related;
     * boundary=BOUNDARY --BOUNDARY Content-Type: application/json
     * {"code_reference_id":"db5bcc20f94055fb5bc08cbb9b0e7a5530308786"} --BOUNDARY --BOUNDARY-- ```
     * *Note:* Metadata-only requests are not supported.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the checks server.  After setting any optional
     * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
     * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest}
     * @return the request
     */
    public Upload upload(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest content) throws java.io.IOException {
      Upload result = new Upload(parent, content);
      initialize(result);
      return result;
    }

    /**
     * Analyzes the uploaded app bundle and returns a google.longrunning.Operation containing the
     * generated Report. ## Example (upload only) Send a regular POST request with the header `X-Goog-
     * Upload-Protocol: raw`. ``` POST
     * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
     * HTTP/1.1 X-Goog-Upload-Protocol: raw Content-Length: Content-Type: application/octet-stream ```
     * ## Example (upload with metadata) Send a multipart POST request where the first body part
     * contains the metadata JSON and the second body part contains the binary upload. Include the
     * header `X-Goog-Upload-Protocol: multipart`. ``` POST
     * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
     * HTTP/1.1 X-Goog-Upload-Protocol: multipart Content-Length: ? Content-Type: multipart/related;
     * boundary=BOUNDARY --BOUNDARY Content-Type: application/json
     * {"code_reference_id":"db5bcc20f94055fb5bc08cbb9b0e7a5530308786"} --BOUNDARY --BOUNDARY-- ```
     * *Note:* Metadata-only requests are not supported.
     *
     * Create a request for the method "media.upload".
     *
     * This request holds the parameters needed by the the checks server.  After setting any optional
     * parameters, call the {@link Upload#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
     * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest} media metadata or {@code null} if none
     * @param mediaContent The media HTTP content.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Upload upload(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest content, com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Upload result = new Upload(parent, content, mediaContent);
      initialize(result);
      return result;
    }

    public class Upload extends ChecksServiceRequest<com.google.api.services.checks.v1alpha.model.Operation> {

      private static final String REST_PATH = "v1alpha/{+parent}/reports:analyzeUpload";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+/apps/[^/]+$");

      /**
       * Analyzes the uploaded app bundle and returns a google.longrunning.Operation containing the
       * generated Report. ## Example (upload only) Send a regular POST request with the header `X-Goog-
       * Upload-Protocol: raw`. ``` POST
       * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
       * HTTP/1.1 X-Goog-Upload-Protocol: raw Content-Length: Content-Type: application/octet-stream ```
       * ## Example (upload with metadata) Send a multipart POST request where the first body part
       * contains the metadata JSON and the second body part contains the binary upload. Include the
       * header `X-Goog-Upload-Protocol: multipart`. ``` POST
       * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
       * HTTP/1.1 X-Goog-Upload-Protocol: multipart Content-Length: ? Content-Type: multipart/related;
       * boundary=BOUNDARY --BOUNDARY Content-Type: application/json
       * {"code_reference_id":"db5bcc20f94055fb5bc08cbb9b0e7a5530308786"} --BOUNDARY --BOUNDARY-- ```
       * *Note:* Metadata-only requests are not supported.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the checks server.  After setting any optional
       * parameters, call the {@link Upload#execute()} method to invoke the remote operation. <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
       * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest}
       * @since 1.13
       */
      protected Upload(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest content) {
        super(ChecksService.this, "POST", REST_PATH, content, com.google.api.services.checks.v1alpha.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^accounts/[^/]+/apps/[^/]+$");
        }
      }

      /**
       * Analyzes the uploaded app bundle and returns a google.longrunning.Operation containing the
       * generated Report. ## Example (upload only) Send a regular POST request with the header `X-Goog-
       * Upload-Protocol: raw`. ``` POST
       * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
       * HTTP/1.1 X-Goog-Upload-Protocol: raw Content-Length: Content-Type: application/octet-stream ```
       * ## Example (upload with metadata) Send a multipart POST request where the first body part
       * contains the metadata JSON and the second body part contains the binary upload. Include the
       * header `X-Goog-Upload-Protocol: multipart`. ``` POST
       * https://checks.googleapis.com/upload/v1alpha/{parent=accounts/apps}/reports:analyzeUpload
       * HTTP/1.1 X-Goog-Upload-Protocol: multipart Content-Length: ? Content-Type: multipart/related;
       * boundary=BOUNDARY --BOUNDARY Content-Type: application/json
       * {"code_reference_id":"db5bcc20f94055fb5bc08cbb9b0e7a5530308786"} --BOUNDARY --BOUNDARY-- ```
       * *Note:* Metadata-only requests are not supported.
       *
       * Create a request for the method "media.upload".
       *
       * This request holds the parameters needed by the the checks server.  After setting any optional
       * parameters, call the {@link Upload#execute()} method to invoke the remote operation. <p> {@link
       * Upload#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       * @param parent Required. Resource name of the app. Example: `accounts/123/apps/456`
       * @param content the {@link com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest} media metadata or {@code null} if none
       * @param mediaContent The media HTTP content.
       * @since 1.13
       */
      protected Upload(java.lang.String parent, com.google.api.services.checks.v1alpha.model.GoogleChecksReportV1alphaAnalyzeUploadRequest content, com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(ChecksService.this, "POST", "/upload/" + getServicePath() + REST_PATH, content, com.google.api.services.checks.v1alpha.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        com.google.api.client.util.Preconditions.checkNotNull(mediaContent, "Required parameter mediaContent must be specified.");
        initializeMediaUpload(mediaContent);
      }

      @Override
      public Upload set$Xgafv(java.lang.String $Xgafv) {
        return (Upload) super.set$Xgafv($Xgafv);
      }

      @Override
      public Upload setAccessToken(java.lang.String accessToken) {
        return (Upload) super.setAccessToken(accessToken);
      }

      @Override
      public Upload setAlt(java.lang.String alt) {
        return (Upload) super.setAlt(alt);
      }

      @Override
      public Upload setCallback(java.lang.String callback) {
        return (Upload) super.setCallback(callback);
      }

      @Override
      public Upload setFields(java.lang.String fields) {
        return (Upload) super.setFields(fields);
      }

      @Override
      public Upload setKey(java.lang.String key) {
        return (Upload) super.setKey(key);
      }

      @Override
      public Upload setOauthToken(java.lang.String oauthToken) {
        return (Upload) super.setOauthToken(oauthToken);
      }

      @Override
      public Upload setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Upload) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Upload setQuotaUser(java.lang.String quotaUser) {
        return (Upload) super.setQuotaUser(quotaUser);
      }

      @Override
      public Upload setUploadType(java.lang.String uploadType) {
        return (Upload) super.setUploadType(uploadType);
      }

      @Override
      public Upload setUploadProtocol(java.lang.String uploadProtocol) {
        return (Upload) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Resource name of the app. Example: `accounts/123/apps/456`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. Resource name of the app. Example: `accounts/123/apps/456` */
      public Upload setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^accounts/[^/]+/apps/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public Upload set(String parameterName, Object value) {
        return (Upload) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link ChecksService}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ChecksService}. */
    @Override
    public ChecksService build() {
      return new ChecksService(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ChecksServiceRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setChecksServiceRequestInitializer(
        ChecksServiceRequestInitializer checksserviceRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(checksserviceRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
