/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * A runtime is a virtual machine allocated to a particular user for a particular Notebook file on
 * temporary basis with lifetime limited to 24 hours.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1NotebookRuntime extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * The description of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expirationTime;

  /**
   * Output only. The health state of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String healthState;

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one Dataset (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "BigQuery" or
   * "Vertex"; if absent, it should be "Vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The resource name of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1NotebookRuntimeTemplateRef notebookRuntimeTemplateRef;

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String proxyUri;

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runtimeState;

  /**
   * Required. The user email of the NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runtimeUser;

  /**
   * Output only. The service account that the NotebookRuntime workload runs as.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was created.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The description of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The description of the NotebookRuntime.
   * @param description description or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The display name of the NotebookRuntime. The name can be up to 128 characters long
   * and can consist of any UTF-8 characters.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * @return value or {@code null} for none
   */
  public String getExpirationTime() {
    return expirationTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined
   * NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be
   * deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user
   * created runtime will be stopped and allowed for upgrade.
   * @param expirationTime expirationTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Output only. The health state of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getHealthState() {
    return healthState;
  }

  /**
   * Output only. The health state of the NotebookRuntime.
   * @param healthState healthState or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setHealthState(java.lang.String healthState) {
    this.healthState = healthState;
    return this;
  }

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one Dataset (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "BigQuery" or
   * "Vertex"; if absent, it should be "Vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values
   * can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters,
   * numeric characters, underscores and dashes. International characters are allowed. No more than
   * 64 user labels can be associated with one Dataset (System labels are excluded). See
   * https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys
   * are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist
   * for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output
   * only, its value is the Compute Engine instance id. *
   * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "BigQuery" or
   * "Vertex"; if absent, it should be "Vertex". This is to describe the entry service, either
   * BigQuery or Vertex.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The resource name of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the NotebookRuntime.
   * @param name name or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntimeTemplateRef getNotebookRuntimeTemplateRef() {
    return notebookRuntimeTemplateRef;
  }

  /**
   * Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
   * @param notebookRuntimeTemplateRef notebookRuntimeTemplateRef or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setNotebookRuntimeTemplateRef(GoogleCloudAiplatformV1NotebookRuntimeTemplateRef notebookRuntimeTemplateRef) {
    this.notebookRuntimeTemplateRef = notebookRuntimeTemplateRef;
    return this;
  }

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getProxyUri() {
    return proxyUri;
  }

  /**
   * Output only. The proxy endpoint used to access the NotebookRuntime.
   * @param proxyUri proxyUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setProxyUri(java.lang.String proxyUri) {
    this.proxyUri = proxyUri;
    return this;
  }

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuntimeState() {
    return runtimeState;
  }

  /**
   * Output only. The runtime (instance) state of the NotebookRuntime.
   * @param runtimeState runtimeState or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setRuntimeState(java.lang.String runtimeState) {
    this.runtimeState = runtimeState;
    return this;
  }

  /**
   * Required. The user email of the NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getRuntimeUser() {
    return runtimeUser;
  }

  /**
   * Required. The user email of the NotebookRuntime.
   * @param runtimeUser runtimeUser or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setRuntimeUser(java.lang.String runtimeUser) {
    this.runtimeUser = runtimeUser;
    return this;
  }

  /**
   * Output only. The service account that the NotebookRuntime workload runs as.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Output only. The service account that the NotebookRuntime workload runs as.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this NotebookRuntime was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Output only. The VM os image version of NotebookRuntime.
   * @param version version or {@code null} for none
   */
  public GoogleCloudAiplatformV1NotebookRuntime setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1NotebookRuntime set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1NotebookRuntime) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1NotebookRuntime clone() {
    return (GoogleCloudAiplatformV1NotebookRuntime) super.clone();
  }

}
