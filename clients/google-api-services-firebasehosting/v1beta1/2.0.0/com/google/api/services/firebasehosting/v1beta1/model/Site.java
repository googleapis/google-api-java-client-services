/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasehosting.v1beta1.model;

/**
 * A `Site` represents a Firebase Hosting site.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Hosting API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Site extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The [ID of a Web App](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id) associated with the Hosting
   * site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appId;

  /**
   * Output only. The default URL for the Hosting site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String defaultUrl;

  /**
   * Optional. User-specified labels for the Hosting site.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. The fully-qualified resource name of the Hosting site, in the format:
   * projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER: the Firebase project's
   * [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or
   * its [`ProjectId`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id). Learn more about using
   * project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The type of Hosting site. Every Firebase project has a `DEFAULT_SITE`, which is
   * created when Hosting is provisioned for the project. All additional sites are `USER_SITE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Optional. The [ID of a Web App](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id) associated with the Hosting
   * site.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppId() {
    return appId;
  }

  /**
   * Optional. The [ID of a Web App](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id) associated with the Hosting
   * site.
   * @param appId appId or {@code null} for none
   */
  public Site setAppId(java.lang.String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Output only. The default URL for the Hosting site.
   * @return value or {@code null} for none
   */
  public java.lang.String getDefaultUrl() {
    return defaultUrl;
  }

  /**
   * Output only. The default URL for the Hosting site.
   * @param defaultUrl defaultUrl or {@code null} for none
   */
  public Site setDefaultUrl(java.lang.String defaultUrl) {
    this.defaultUrl = defaultUrl;
    return this;
  }

  /**
   * Optional. User-specified labels for the Hosting site.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. User-specified labels for the Hosting site.
   * @param labels labels or {@code null} for none
   */
  public Site setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. The fully-qualified resource name of the Hosting site, in the format:
   * projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER: the Firebase project's
   * [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or
   * its [`ProjectId`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id). Learn more about using
   * project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510).
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The fully-qualified resource name of the Hosting site, in the format:
   * projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER: the Firebase project's
   * [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or
   * its [`ProjectId`](https://firebase.google.com/docs/reference/firebase-
   * management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id). Learn more about using
   * project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510).
   * @param name name or {@code null} for none
   */
  public Site setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The type of Hosting site. Every Firebase project has a `DEFAULT_SITE`, which is
   * created when Hosting is provisioned for the project. All additional sites are `USER_SITE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Output only. The type of Hosting site. Every Firebase project has a `DEFAULT_SITE`, which is
   * created when Hosting is provisioned for the project. All additional sites are `USER_SITE`.
   * @param type type or {@code null} for none
   */
  public Site setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Site set(String fieldName, Object value) {
    return (Site) super.set(fieldName, value);
  }

  @Override
  public Site clone() {
    return (Site) super.clone();
  }

}
