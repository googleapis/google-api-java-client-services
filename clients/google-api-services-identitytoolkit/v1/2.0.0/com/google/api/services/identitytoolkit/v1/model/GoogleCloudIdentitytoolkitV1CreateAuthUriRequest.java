/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v1.model;

/**
 * Request message for CreateAuthUri.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitV1CreateAuthUriRequest extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appId;

  /**
   * Used for the Google provider. The type of the authentication flow to be used. If present, this
   * should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token
   * flow will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authFlowType;

  /**
   * An opaque string used to maintain contextual information between the authentication request and
   * the callback from the IdP.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String context;

  /**
   * A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the
   * reserved `state` query parameter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String continueUri;

  /**
   * Additional customized query parameters to be added to the authorization URI. The following
   * parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`,
   * `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be
   * specified in the `tenant` custom parameter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> customParameter;

  /**
   * Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-
   * in to users at that domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostedDomain;

  /**
   * The email identifier of the user account to fetch associated providers for. At least one of the
   * fields `identifier` and `provider_id` must be set. The length of the email address should be
   * less than 256 characters and in the format of `name@domain.tld`. The email address should also
   * match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String identifier;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String oauthConsumerKey;

  /**
   * Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request
   * with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow
   * will be used if this field is set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String oauthScope;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String openidRealm;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String otaApp;

  /**
   * The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled
   * for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com
   * /identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*`
   * or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and
   * `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String providerId;

  /**
   * A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks.
   * If absent, a random string will be generated and returned as the session ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sessionId;

  /**
   * The ID of the Identity Platform tenant to create an authorization URI or lookup an email
   * identifier for. If not set, the operation will be performed in the default Identity Platform
   * instance in the project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tenantId;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAppId() {
    return appId;
  }

  /**
   * @param appId appId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setAppId(java.lang.String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Used for the Google provider. The type of the authentication flow to be used. If present, this
   * should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token
   * flow will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthFlowType() {
    return authFlowType;
  }

  /**
   * Used for the Google provider. The type of the authentication flow to be used. If present, this
   * should be `CODE_FLOW` to specify the authorization code flow. Otherwise, the default ID Token
   * flow will be used.
   * @param authFlowType authFlowType or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setAuthFlowType(java.lang.String authFlowType) {
    this.authFlowType = authFlowType;
    return this;
  }

  /**
   * An opaque string used to maintain contextual information between the authentication request and
   * the callback from the IdP.
   * @return value or {@code null} for none
   */
  public java.lang.String getContext() {
    return context;
  }

  /**
   * An opaque string used to maintain contextual information between the authentication request and
   * the callback from the IdP.
   * @param context context or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setContext(java.lang.String context) {
    this.context = context;
    return this;
  }

  /**
   * A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the
   * reserved `state` query parameter.
   * @return value or {@code null} for none
   */
  public java.lang.String getContinueUri() {
    return continueUri;
  }

  /**
   * A valid URL for the IdP to redirect the user back to. The URL cannot contain fragments or the
   * reserved `state` query parameter.
   * @param continueUri continueUri or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setContinueUri(java.lang.String continueUri) {
    this.continueUri = continueUri;
    return this;
  }

  /**
   * Additional customized query parameters to be added to the authorization URI. The following
   * parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`,
   * `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be
   * specified in the `tenant` custom parameter.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getCustomParameter() {
    return customParameter;
  }

  /**
   * Additional customized query parameters to be added to the authorization URI. The following
   * parameters are reserved and cannot be added: `client_id`, `response_type`, `scope`,
   * `redirect_uri`, `state`. For the Microsoft provider, the Azure AD tenant to sign-in to can be
   * specified in the `tenant` custom parameter.
   * @param customParameter customParameter or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setCustomParameter(java.util.Map<String, java.lang.String> customParameter) {
    this.customParameter = customParameter;
    return this;
  }

  /**
   * Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-
   * in to users at that domain.
   * @return value or {@code null} for none
   */
  public java.lang.String getHostedDomain() {
    return hostedDomain;
  }

  /**
   * Used for the Google provider. The G Suite hosted domain of the user in order to restrict sign-
   * in to users at that domain.
   * @param hostedDomain hostedDomain or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setHostedDomain(java.lang.String hostedDomain) {
    this.hostedDomain = hostedDomain;
    return this;
  }

  /**
   * The email identifier of the user account to fetch associated providers for. At least one of the
   * fields `identifier` and `provider_id` must be set. The length of the email address should be
   * less than 256 characters and in the format of `name@domain.tld`. The email address should also
   * match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdentifier() {
    return identifier;
  }

  /**
   * The email identifier of the user account to fetch associated providers for. At least one of the
   * fields `identifier` and `provider_id` must be set. The length of the email address should be
   * less than 256 characters and in the format of `name@domain.tld`. The email address should also
   * match the [RFC 822](https://tools.ietf.org/html/rfc822) addr-spec production.
   * @param identifier identifier or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setIdentifier(java.lang.String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOauthConsumerKey() {
    return oauthConsumerKey;
  }

  /**
   * @param oauthConsumerKey oauthConsumerKey or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setOauthConsumerKey(java.lang.String oauthConsumerKey) {
    this.oauthConsumerKey = oauthConsumerKey;
    return this;
  }

  /**
   * Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request
   * with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow
   * will be used if this field is set.
   * @return value or {@code null} for none
   */
  public java.lang.String getOauthScope() {
    return oauthScope;
  }

  /**
   * Additional space-delimited OAuth 2.0 scopes specifying the scope of the authentication request
   * with the IdP. Used for OAuth 2.0 IdPs. For the Google provider, the authorization code flow
   * will be used if this field is set.
   * @param oauthScope oauthScope or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setOauthScope(java.lang.String oauthScope) {
    this.oauthScope = oauthScope;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOpenidRealm() {
    return openidRealm;
  }

  /**
   * @param openidRealm openidRealm or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setOpenidRealm(java.lang.String openidRealm) {
    this.openidRealm = openidRealm;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOtaApp() {
    return otaApp;
  }

  /**
   * @param otaApp otaApp or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setOtaApp(java.lang.String otaApp) {
    this.otaApp = otaApp;
    return this;
  }

  /**
   * The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled
   * for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com
   * /identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*`
   * or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and
   * `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.
   * @return value or {@code null} for none
   */
  public java.lang.String getProviderId() {
    return providerId;
  }

  /**
   * The provider ID of the IdP for the user to sign in with. This should be a provider ID enabled
   * for sign-in, which is either from the list of [default supported IdPs](https://cloud.google.com
   * /identity-platform/docs/reference/rest/v2/defaultSupportedIdps/list), or of the format `oidc.*`
   * or `saml.*`. Some examples are `google.com`, `facebook.com`, `oidc.testapp`, and
   * `saml.testapp`. At least one of the fields `identifier` and `provider_id` must be set.
   * @param providerId providerId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setProviderId(java.lang.String providerId) {
    this.providerId = providerId;
    return this;
  }

  /**
   * A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks.
   * If absent, a random string will be generated and returned as the session ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getSessionId() {
    return sessionId;
  }

  /**
   * A session ID that can be verified against in SignInWithIdp to prevent session fixation attacks.
   * If absent, a random string will be generated and returned as the session ID.
   * @param sessionId sessionId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setSessionId(java.lang.String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * The ID of the Identity Platform tenant to create an authorization URI or lookup an email
   * identifier for. If not set, the operation will be performed in the default Identity Platform
   * instance in the project.
   * @return value or {@code null} for none
   */
  public java.lang.String getTenantId() {
    return tenantId;
  }

  /**
   * The ID of the Identity Platform tenant to create an authorization URI or lookup an email
   * identifier for. If not set, the operation will be performed in the default Identity Platform
   * instance in the project.
   * @param tenantId tenantId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest setTenantId(java.lang.String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitV1CreateAuthUriRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitV1CreateAuthUriRequest clone() {
    return (GoogleCloudIdentitytoolkitV1CreateAuthUriRequest) super.clone();
  }

}
