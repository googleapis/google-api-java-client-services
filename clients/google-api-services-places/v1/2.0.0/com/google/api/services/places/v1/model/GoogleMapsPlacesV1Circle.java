/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Circle with a LatLng as center and radius.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1Circle extends com.google.api.client.json.GenericJson {

  /**
   * Required. Center latitude and longitude. The range of latitude must be within [-90.0, 90.0].
   * The range of the longitude must be within [-180.0, 180.0].
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeLatLng center;

  /**
   * Required. Radius measured in meters. The radius must be within [0.0, 50000.0]. The default
   * radius is 0.0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double radius;

  /**
   * Required. Center latitude and longitude. The range of latitude must be within [-90.0, 90.0].
   * The range of the longitude must be within [-180.0, 180.0].
   * @return value or {@code null} for none
   */
  public GoogleTypeLatLng getCenter() {
    return center;
  }

  /**
   * Required. Center latitude and longitude. The range of latitude must be within [-90.0, 90.0].
   * The range of the longitude must be within [-180.0, 180.0].
   * @param center center or {@code null} for none
   */
  public GoogleMapsPlacesV1Circle setCenter(GoogleTypeLatLng center) {
    this.center = center;
    return this;
  }

  /**
   * Required. Radius measured in meters. The radius must be within [0.0, 50000.0]. The default
   * radius is 0.0.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRadius() {
    return radius;
  }

  /**
   * Required. Radius measured in meters. The radius must be within [0.0, 50000.0]. The default
   * radius is 0.0.
   * @param radius radius or {@code null} for none
   */
  public GoogleMapsPlacesV1Circle setRadius(java.lang.Double radius) {
    this.radius = radius;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1Circle set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1Circle) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1Circle clone() {
    return (GoogleMapsPlacesV1Circle) super.clone();
  }

}
