/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseml.v2beta.model;

/**
 * Configuration for Model Armor. Model Armor is a Google Cloud service that provides safety and
 * security filtering for prompts and responses. It helps protect your AI applications from risks
 * such as harmful content, sensitive data leakage, and prompt injection attacks.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase ML API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1ModelArmorConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The resource name of the Model Armor template to use for prompt screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the user's prompt
   * for safety and security risks before it is sent to the model. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String promptTemplateName;

  /**
   * Optional. The resource name of the Model Armor template to use for response screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the model's response
   * for safety and security risks before it is returned to the user. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String responseTemplateName;

  /**
   * Optional. The resource name of the Model Armor template to use for prompt screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the user's prompt
   * for safety and security risks before it is sent to the model. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getPromptTemplateName() {
    return promptTemplateName;
  }

  /**
   * Optional. The resource name of the Model Armor template to use for prompt screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the user's prompt
   * for safety and security risks before it is sent to the model. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * @param promptTemplateName promptTemplateName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelArmorConfig setPromptTemplateName(java.lang.String promptTemplateName) {
    this.promptTemplateName = promptTemplateName;
    return this;
  }

  /**
   * Optional. The resource name of the Model Armor template to use for response screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the model's response
   * for safety and security risks before it is returned to the user. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getResponseTemplateName() {
    return responseTemplateName;
  }

  /**
   * Optional. The resource name of the Model Armor template to use for response screening. A Model
   * Armor template is a set of customized filters and thresholds that define how Model Armor
   * screens content. If specified, Model Armor will use this template to check the model's response
   * for safety and security risks before it is returned to the user. The name must be in the format
   * `projects/{project}/locations/{location}/templates/{template}`.
   * @param responseTemplateName responseTemplateName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ModelArmorConfig setResponseTemplateName(java.lang.String responseTemplateName) {
    this.responseTemplateName = responseTemplateName;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelArmorConfig set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1ModelArmorConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1ModelArmorConfig clone() {
    return (GoogleCloudAiplatformV1beta1ModelArmorConfig) super.clone();
  }

}
