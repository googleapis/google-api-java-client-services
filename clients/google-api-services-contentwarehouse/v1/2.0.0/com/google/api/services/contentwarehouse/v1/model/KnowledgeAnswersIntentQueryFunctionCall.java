/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A message representing the function call of an answers intent query. Next ID: 19 Important: If
 * you add new fields that do not reflect signals data, but actual semantics of the FunctionCall,
 * please also update CreateFuncallCopyWithoutSignals and CreateFuncallCopyWithArgumentSignals in
 * function_call_utils. LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class KnowledgeAnswersIntentQueryFunctionCall extends com.google.api.client.json.GenericJson {

  /**
   * A list of arguments of this function call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryArgument> argument;

  static {
    // hack to force ProGuard to consider KnowledgeAnswersIntentQueryArgument used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(KnowledgeAnswersIntentQueryArgument.class);
  }

  /**
   * The corresponding meaning catalog version that was used to generate this FunctionCall.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long catalogVersion;

  /**
   * Contextual Sensitivity (go/contextual-sensitivity) metadata indicating that a policy- or
   * privacy- sensitive conversation context (previous queries, rewritten user queries, and previous
   * system responses, like attentional entities) is used to generate this FunctionCall. This needs
   * propagation (1) from Interp to DialogIntentState (DIS) (see b/148479837) and (2) from
   * QRewrite/QUS down to Assistant Server's memory finalizer. One can use
   * knowledge/answers/sensitivity/sensitivity_reader.h to parse this proto. NOTE(b/149091449): This
   * is part of the migration of contextual sensitivity protos from Interp sensitivity extension.
   * (nlp::semantic_parsing::sensitivity) to this proto field. See the bug to track the migration
   * progress and for more details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersSensitivitySensitivity> contextualSensitivity;

  /**
   * Contains data about which remodelings are being used for this funcall. For more information see
   * go/meaning-remodeling-framework.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpMeaningMeaningRemodelingControl enabledRemodelings;

  /**
   * A list of token lists that were ignored during parsing because they are known context phrases
   * for this interpretation. For example, for query [tell me how tall height of Obama really],
   * assuming "tell me", "tall", "of", "really" are explained and thus ignored, with corresponding
   * prior 0.9, 0.8, 0.7, 0.6, following ignored tokens will be populated: { ignored_tokens { token
   * { ngram: "tell me", prior: 0.9} score: 0.9 } ignored_tokens { token { ngram: "tall", prior:
   * 0.8} token { ngram: "of", prior: 0.7} score: 0.56 // currently score = prior1 * prior2 * ... *
   * prior N } ignored_tokens { token { ngram: "really", prior: 0.6} score: 0.6 } } These tokens can
   * serve two purpose: 1) debug info to show why an interpretation is generated; 2) carry the
   * signals for downstream usage. Note: This field is under active development, and significant
   * changes could happen. Please contact porky-pig@ if you want to use it.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryTokens> ignoredTokens;

  /**
   * The primary key for this FunctionCall. Note: This is still under development and not available
   * for general use. Contact meaning-platform-eng@ for questions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersMeaningSchemaKey key;

  /**
   * The marker specifies the purpose of this meaning struct / function call: Is it asking a
   * question, and if yes, for which slot(s)? Is it a command, statement, etc? This corresponds to a
   * (very coarse) notion of dialog acts. In the absence of this field, it will be inferred using
   * the following algorithm (subject to marker applicability rules specified in marker.proto, see
   * also go/requested-slots): 1) Use the underlying Meaning Schema's default marker, if applicable.
   * 2) Assume that the Meaning Struct is polar or a statement. The presence of a marker will affect
   * the value type of this function call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersMarker marker;

  /**
   * A flattened representation of all intent modifiers that apply to this function call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentModifiers modifiers;

  /**
   * Name of this function call. The name must be present. If it is omitted, the FunctionCall is not
   * well-formed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Intent level query sensitivity (go/sensitive-intents). This metadata comes directly from Intent
   * Catalog, indicating a single-shot query sensitivity without putting context into
   * considerations. Therefore, this requires a one-to-one match with each intent registered in
   * Intent Catalog.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersSensitivitySensitivity sensitivity;

  /**
   * Signals at the function call level
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private KnowledgeAnswersIntentQueryFunctionCallSignals signals;

  /**
   * A list of tokens that were ignored during parsing that cannot be explained by context phrases.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<KnowledgeAnswersIntentQueryTokens> unexplainedTokens;

  /**
   * A list of arguments of this function call.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryArgument> getArgument() {
    return argument;
  }

  /**
   * A list of arguments of this function call.
   * @param argument argument or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setArgument(java.util.List<KnowledgeAnswersIntentQueryArgument> argument) {
    this.argument = argument;
    return this;
  }

  /**
   * The corresponding meaning catalog version that was used to generate this FunctionCall.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCatalogVersion() {
    return catalogVersion;
  }

  /**
   * The corresponding meaning catalog version that was used to generate this FunctionCall.
   * @param catalogVersion catalogVersion or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setCatalogVersion(java.lang.Long catalogVersion) {
    this.catalogVersion = catalogVersion;
    return this;
  }

  /**
   * Contextual Sensitivity (go/contextual-sensitivity) metadata indicating that a policy- or
   * privacy- sensitive conversation context (previous queries, rewritten user queries, and previous
   * system responses, like attentional entities) is used to generate this FunctionCall. This needs
   * propagation (1) from Interp to DialogIntentState (DIS) (see b/148479837) and (2) from
   * QRewrite/QUS down to Assistant Server's memory finalizer. One can use
   * knowledge/answers/sensitivity/sensitivity_reader.h to parse this proto. NOTE(b/149091449): This
   * is part of the migration of contextual sensitivity protos from Interp sensitivity extension.
   * (nlp::semantic_parsing::sensitivity) to this proto field. See the bug to track the migration
   * progress and for more details.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersSensitivitySensitivity> getContextualSensitivity() {
    return contextualSensitivity;
  }

  /**
   * Contextual Sensitivity (go/contextual-sensitivity) metadata indicating that a policy- or
   * privacy- sensitive conversation context (previous queries, rewritten user queries, and previous
   * system responses, like attentional entities) is used to generate this FunctionCall. This needs
   * propagation (1) from Interp to DialogIntentState (DIS) (see b/148479837) and (2) from
   * QRewrite/QUS down to Assistant Server's memory finalizer. One can use
   * knowledge/answers/sensitivity/sensitivity_reader.h to parse this proto. NOTE(b/149091449): This
   * is part of the migration of contextual sensitivity protos from Interp sensitivity extension.
   * (nlp::semantic_parsing::sensitivity) to this proto field. See the bug to track the migration
   * progress and for more details.
   * @param contextualSensitivity contextualSensitivity or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setContextualSensitivity(java.util.List<KnowledgeAnswersSensitivitySensitivity> contextualSensitivity) {
    this.contextualSensitivity = contextualSensitivity;
    return this;
  }

  /**
   * Contains data about which remodelings are being used for this funcall. For more information see
   * go/meaning-remodeling-framework.
   * @return value or {@code null} for none
   */
  public NlpMeaningMeaningRemodelingControl getEnabledRemodelings() {
    return enabledRemodelings;
  }

  /**
   * Contains data about which remodelings are being used for this funcall. For more information see
   * go/meaning-remodeling-framework.
   * @param enabledRemodelings enabledRemodelings or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setEnabledRemodelings(NlpMeaningMeaningRemodelingControl enabledRemodelings) {
    this.enabledRemodelings = enabledRemodelings;
    return this;
  }

  /**
   * A list of token lists that were ignored during parsing because they are known context phrases
   * for this interpretation. For example, for query [tell me how tall height of Obama really],
   * assuming "tell me", "tall", "of", "really" are explained and thus ignored, with corresponding
   * prior 0.9, 0.8, 0.7, 0.6, following ignored tokens will be populated: { ignored_tokens { token
   * { ngram: "tell me", prior: 0.9} score: 0.9 } ignored_tokens { token { ngram: "tall", prior:
   * 0.8} token { ngram: "of", prior: 0.7} score: 0.56 // currently score = prior1 * prior2 * ... *
   * prior N } ignored_tokens { token { ngram: "really", prior: 0.6} score: 0.6 } } These tokens can
   * serve two purpose: 1) debug info to show why an interpretation is generated; 2) carry the
   * signals for downstream usage. Note: This field is under active development, and significant
   * changes could happen. Please contact porky-pig@ if you want to use it.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryTokens> getIgnoredTokens() {
    return ignoredTokens;
  }

  /**
   * A list of token lists that were ignored during parsing because they are known context phrases
   * for this interpretation. For example, for query [tell me how tall height of Obama really],
   * assuming "tell me", "tall", "of", "really" are explained and thus ignored, with corresponding
   * prior 0.9, 0.8, 0.7, 0.6, following ignored tokens will be populated: { ignored_tokens { token
   * { ngram: "tell me", prior: 0.9} score: 0.9 } ignored_tokens { token { ngram: "tall", prior:
   * 0.8} token { ngram: "of", prior: 0.7} score: 0.56 // currently score = prior1 * prior2 * ... *
   * prior N } ignored_tokens { token { ngram: "really", prior: 0.6} score: 0.6 } } These tokens can
   * serve two purpose: 1) debug info to show why an interpretation is generated; 2) carry the
   * signals for downstream usage. Note: This field is under active development, and significant
   * changes could happen. Please contact porky-pig@ if you want to use it.
   * @param ignoredTokens ignoredTokens or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setIgnoredTokens(java.util.List<KnowledgeAnswersIntentQueryTokens> ignoredTokens) {
    this.ignoredTokens = ignoredTokens;
    return this;
  }

  /**
   * The primary key for this FunctionCall. Note: This is still under development and not available
   * for general use. Contact meaning-platform-eng@ for questions.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersMeaningSchemaKey getKey() {
    return key;
  }

  /**
   * The primary key for this FunctionCall. Note: This is still under development and not available
   * for general use. Contact meaning-platform-eng@ for questions.
   * @param key key or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setKey(KnowledgeAnswersMeaningSchemaKey key) {
    this.key = key;
    return this;
  }

  /**
   * The marker specifies the purpose of this meaning struct / function call: Is it asking a
   * question, and if yes, for which slot(s)? Is it a command, statement, etc? This corresponds to a
   * (very coarse) notion of dialog acts. In the absence of this field, it will be inferred using
   * the following algorithm (subject to marker applicability rules specified in marker.proto, see
   * also go/requested-slots): 1) Use the underlying Meaning Schema's default marker, if applicable.
   * 2) Assume that the Meaning Struct is polar or a statement. The presence of a marker will affect
   * the value type of this function call.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersMarker getMarker() {
    return marker;
  }

  /**
   * The marker specifies the purpose of this meaning struct / function call: Is it asking a
   * question, and if yes, for which slot(s)? Is it a command, statement, etc? This corresponds to a
   * (very coarse) notion of dialog acts. In the absence of this field, it will be inferred using
   * the following algorithm (subject to marker applicability rules specified in marker.proto, see
   * also go/requested-slots): 1) Use the underlying Meaning Schema's default marker, if applicable.
   * 2) Assume that the Meaning Struct is polar or a statement. The presence of a marker will affect
   * the value type of this function call.
   * @param marker marker or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setMarker(KnowledgeAnswersMarker marker) {
    this.marker = marker;
    return this;
  }

  /**
   * A flattened representation of all intent modifiers that apply to this function call.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentModifiers getModifiers() {
    return modifiers;
  }

  /**
   * A flattened representation of all intent modifiers that apply to this function call.
   * @param modifiers modifiers or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setModifiers(KnowledgeAnswersIntentModifiers modifiers) {
    this.modifiers = modifiers;
    return this;
  }

  /**
   * Name of this function call. The name must be present. If it is omitted, the FunctionCall is not
   * well-formed.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of this function call. The name must be present. If it is omitted, the FunctionCall is not
   * well-formed.
   * @param name name or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Intent level query sensitivity (go/sensitive-intents). This metadata comes directly from Intent
   * Catalog, indicating a single-shot query sensitivity without putting context into
   * considerations. Therefore, this requires a one-to-one match with each intent registered in
   * Intent Catalog.
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersSensitivitySensitivity getSensitivity() {
    return sensitivity;
  }

  /**
   * Intent level query sensitivity (go/sensitive-intents). This metadata comes directly from Intent
   * Catalog, indicating a single-shot query sensitivity without putting context into
   * considerations. Therefore, this requires a one-to-one match with each intent registered in
   * Intent Catalog.
   * @param sensitivity sensitivity or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setSensitivity(KnowledgeAnswersSensitivitySensitivity sensitivity) {
    this.sensitivity = sensitivity;
    return this;
  }

  /**
   * Signals at the function call level
   * @return value or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCallSignals getSignals() {
    return signals;
  }

  /**
   * Signals at the function call level
   * @param signals signals or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setSignals(KnowledgeAnswersIntentQueryFunctionCallSignals signals) {
    this.signals = signals;
    return this;
  }

  /**
   * A list of tokens that were ignored during parsing that cannot be explained by context phrases.
   * @return value or {@code null} for none
   */
  public java.util.List<KnowledgeAnswersIntentQueryTokens> getUnexplainedTokens() {
    return unexplainedTokens;
  }

  /**
   * A list of tokens that were ignored during parsing that cannot be explained by context phrases.
   * @param unexplainedTokens unexplainedTokens or {@code null} for none
   */
  public KnowledgeAnswersIntentQueryFunctionCall setUnexplainedTokens(java.util.List<KnowledgeAnswersIntentQueryTokens> unexplainedTokens) {
    this.unexplainedTokens = unexplainedTokens;
    return this;
  }

  @Override
  public KnowledgeAnswersIntentQueryFunctionCall set(String fieldName, Object value) {
    return (KnowledgeAnswersIntentQueryFunctionCall) super.set(fieldName, value);
  }

  @Override
  public KnowledgeAnswersIntentQueryFunctionCall clone() {
    return (KnowledgeAnswersIntentQueryFunctionCall) super.clone();
  }

}
