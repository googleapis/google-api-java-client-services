/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Model definition for
 * GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs extends com.google.api.client.json.GenericJson {

  /**
   * The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in
   * this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than
   * this value. If further model training ceases to provide any improvements, it will stop without
   * using the full budget and the metadata.successfulStopReason will be `model-converged`. Note,
   * node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget
   * must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000
   * which represents one day in wall time, considering 9 nodes are used. For model types `mobile-
   * tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget
   * must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000
   * which represents one day in wall time on a single node that is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long budgetMilliNodeHours;

  /**
   * Use the entire training budget. This disables the early stopping feature. When false the early
   * stopping feature is enabled, which means that AutoML Image Object Detection might stop training
   * before the entire training budget has been used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableEarlyStopping;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelType;

  /**
   * Trainer type for Vision TrainRequest.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter tunableParameter;

  /**
   * The ID of `base` model for upTraining. If it is specified, the new model will be upTrained
   * based on the `base` model for upTraining. Otherwise, the new model will be trained from
   * scratch. The `base` model for upTraining must be in the same Project and Location as the new
   * Model to train, and have the same modelType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uptrainBaseModelId;

  /**
   * The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in
   * this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than
   * this value. If further model training ceases to provide any improvements, it will stop without
   * using the full budget and the metadata.successfulStopReason will be `model-converged`. Note,
   * node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget
   * must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000
   * which represents one day in wall time, considering 9 nodes are used. For model types `mobile-
   * tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget
   * must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000
   * which represents one day in wall time on a single node that is used.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBudgetMilliNodeHours() {
    return budgetMilliNodeHours;
  }

  /**
   * The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in
   * this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than
   * this value. If further model training ceases to provide any improvements, it will stop without
   * using the full budget and the metadata.successfulStopReason will be `model-converged`. Note,
   * node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget
   * must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000
   * which represents one day in wall time, considering 9 nodes are used. For model types `mobile-
   * tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget
   * must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000
   * which represents one day in wall time on a single node that is used.
   * @param budgetMilliNodeHours budgetMilliNodeHours or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs setBudgetMilliNodeHours(java.lang.Long budgetMilliNodeHours) {
    this.budgetMilliNodeHours = budgetMilliNodeHours;
    return this;
  }

  /**
   * Use the entire training budget. This disables the early stopping feature. When false the early
   * stopping feature is enabled, which means that AutoML Image Object Detection might stop training
   * before the entire training budget has been used.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableEarlyStopping() {
    return disableEarlyStopping;
  }

  /**
   * Use the entire training budget. This disables the early stopping feature. When false the early
   * stopping feature is enabled, which means that AutoML Image Object Detection might stop training
   * before the entire training budget has been used.
   * @param disableEarlyStopping disableEarlyStopping or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs setDisableEarlyStopping(java.lang.Boolean disableEarlyStopping) {
    this.disableEarlyStopping = disableEarlyStopping;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getModelType() {
    return modelType;
  }

  /**
   * @param modelType modelType or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs setModelType(java.lang.String modelType) {
    this.modelType = modelType;
    return this;
  }

  /**
   * Trainer type for Vision TrainRequest.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter getTunableParameter() {
    return tunableParameter;
  }

  /**
   * Trainer type for Vision TrainRequest.
   * @param tunableParameter tunableParameter or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs setTunableParameter(GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter tunableParameter) {
    this.tunableParameter = tunableParameter;
    return this;
  }

  /**
   * The ID of `base` model for upTraining. If it is specified, the new model will be upTrained
   * based on the `base` model for upTraining. Otherwise, the new model will be trained from
   * scratch. The `base` model for upTraining must be in the same Project and Location as the new
   * Model to train, and have the same modelType.
   * @return value or {@code null} for none
   */
  public java.lang.String getUptrainBaseModelId() {
    return uptrainBaseModelId;
  }

  /**
   * The ID of `base` model for upTraining. If it is specified, the new model will be upTrained
   * based on the `base` model for upTraining. Otherwise, the new model will be trained from
   * scratch. The `base` model for upTraining must be in the same Project and Location as the new
   * Model to train, and have the same modelType.
   * @param uptrainBaseModelId uptrainBaseModelId or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs setUptrainBaseModelId(java.lang.String uptrainBaseModelId) {
    this.uptrainBaseModelId = uptrainBaseModelId;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs clone() {
    return (GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs) super.clone();
  }

}
