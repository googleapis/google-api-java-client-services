/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.toolresults.model;

/**
 * Model definition for CPUInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tool Results API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CPUInfo extends com.google.api.client.json.GenericJson {

  /**
   * description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cpuProcessor;

  /**
   * the CPU clock speed in GHz
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float cpuSpeedInGhz;

  /**
   * the number of CPU cores
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numberOfCores;

  /**
   * description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'
   * @return value or {@code null} for none
   */
  public java.lang.String getCpuProcessor() {
    return cpuProcessor;
  }

  /**
   * description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'
   * @param cpuProcessor cpuProcessor or {@code null} for none
   */
  public CPUInfo setCpuProcessor(java.lang.String cpuProcessor) {
    this.cpuProcessor = cpuProcessor;
    return this;
  }

  /**
   * the CPU clock speed in GHz
   * @return value or {@code null} for none
   */
  public java.lang.Float getCpuSpeedInGhz() {
    return cpuSpeedInGhz;
  }

  /**
   * the CPU clock speed in GHz
   * @param cpuSpeedInGhz cpuSpeedInGhz or {@code null} for none
   */
  public CPUInfo setCpuSpeedInGhz(java.lang.Float cpuSpeedInGhz) {
    this.cpuSpeedInGhz = cpuSpeedInGhz;
    return this;
  }

  /**
   * the number of CPU cores
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumberOfCores() {
    return numberOfCores;
  }

  /**
   * the number of CPU cores
   * @param numberOfCores numberOfCores or {@code null} for none
   */
  public CPUInfo setNumberOfCores(java.lang.Integer numberOfCores) {
    this.numberOfCores = numberOfCores;
    return this;
  }

  @Override
  public CPUInfo set(String fieldName, Object value) {
    return (CPUInfo) super.set(fieldName, value);
  }

  @Override
  public CPUInfo clone() {
    return (CPUInfo) super.clone();
  }

}
