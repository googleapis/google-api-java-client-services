{
  "id": "cloudidentity:v1beta1",
  "documentationLink": "https://cloud.google.com/identity/",
  "revision": "20200110",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "SearchGroupsResponse": {
      "id": "SearchGroupsResponse",
      "description": "The response message for GroupsService.SearchGroups.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The `Group`s that match the search query.",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "description": "A continuation token to retrieve the next page of results, or empty if\nthere are no more results available.",
          "type": "string"
        }
      }
    },
    "EntityKey": {
      "description": "A unique identifier for an entity in the Cloud Identity Groups API.\n\nAn entity can represent either a group with an optional `namespace` or a user\nwithout a `namespace`. The combination of `id` and `namespace` must be\nunique; however, the same `id` can be used with different `namespace`s.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the entity.\n\nFor Google-managed entities, the `id` must be the email address of a group\nor user.\n\nFor external-identity-mapped entities, the `id` must be a string conforming\nto the Identity Source's requirements.\n\nMust be unique within a `namespace`.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace in which the entity exists.\n\nIf not specified, the `EntityKey` represents a Google-managed entity such\nas a Google user or a Google Group.\n\nIf specified, the `EntityKey` represents an external-identity-mapped group\ncreated through Admin Console. Must be of the form\n`identitysources/{identity_source_id}.",
          "type": "string"
        }
      },
      "id": "EntityKey"
    },
    "LookupGroupNameResponse": {
      "id": "LookupGroupNameResponse",
      "description": "The response message for GroupsService.LookupGroupName.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe looked-up `Group`.",
          "type": "string"
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "ListMembershipsResponse": {
      "type": "object",
      "properties": {
        "memberships": {
          "description": "The `Membership`s under the specified `parent`.",
          "type": "array",
          "items": {
            "$ref": "Membership"
          }
        },
        "nextPageToken": {
          "description": "A continuation token to retrieve the next page of results, or empty if\nthere are no more results available.",
          "type": "string"
        }
      },
      "id": "ListMembershipsResponse",
      "description": "The response message for MembershipsService.ListMemberships."
    },
    "Membership": {
      "properties": {
        "createTime": {
          "description": "Output only. The time when the `Membership` was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "memberKey": {
          "description": "Immutable. The `EntityKey` of the member.\n\nEither `member_key` or `preferred_member_key` must be set when calling\nMembershipsService.CreateMembership but not both; both shall be set\nwhen returned.",
          "$ref": "EntityKey"
        },
        "updateTime": {
          "description": "Output only. The time when the `Membership` was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "roles": {
          "description": "The `MembershipRole`s that apply to the `Membership`.\n\nIf unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`.\n\nMust not contain duplicate `MembershipRole`s with the same `name`.",
          "type": "array",
          "items": {
            "$ref": "MembershipRole"
          }
        },
        "name": {
          "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Membership`.\n\nShall be of the form `groups/{group_id}/memberships/{membership_id}`.",
          "type": "string"
        }
      },
      "id": "Membership",
      "description": "A membership within the Cloud Identity Groups API.\n\nA `Membership` defines a relationship between a `Group` and an entity\nbelonging to that `Group`, referred to as a \"member\".",
      "type": "object"
    },
    "Group": {
      "description": "A group within the Cloud Identity Groups API.\n\nA `Group` is a collection of entities, where each entity is either a user or\nanother group.",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. The labels that apply to the `Group`.\n\nMust not contain more than one entry. Must contain the entry\n`'system/groups/external': ''` if the `Group` is an\nexternal-identity-mapped group or\n`'cloudidentity.googleapis.com/groups.discussion_forum': ''` if the `Group`\nis a Google Group.",
          "type": "object"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the `Group` was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time when the `Group` was last updated.",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Group`.\n\nShall be of the form `groups/{group_id}`.",
          "type": "string"
        },
        "additionalGroupKeys": {
          "description": "Optional. Additional entity key aliases for a Group.",
          "type": "array",
          "items": {
            "$ref": "EntityKey"
          }
        },
        "groupKey": {
          "description": "Required. Immutable. The `EntityKey` of the `Group`.",
          "$ref": "EntityKey"
        },
        "displayName": {
          "description": "The display name of the `Group`.",
          "type": "string"
        },
        "description": {
          "description": "An extended description to help users determine the purpose of a `Group`.\n\nMust not be longer than 4,096 characters.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. Immutable. The resource name of the entity under which this `Group` resides in the\nCloud Identity resource hierarchy.\n\nMust be of the form `identitysources/{identity_source_id}` for external-\nidentity-mapped groups or `customers/{customer_id}` for Google Groups."
        }
      },
      "id": "Group"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      },
      "id": "Operation"
    },
    "LookupMembershipNameResponse": {
      "description": "The response message for MembershipsService.LookupMembershipName.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe looked-up `Membership`.\n\nMust be of the form `groups/{group_id}/memberships/{membership_id}`.",
          "type": "string"
        }
      },
      "id": "LookupMembershipNameResponse"
    },
    "MembershipRole": {
      "description": "A membership role within the Cloud Identity Groups API.\n\nA `MembershipRole` defines the privileges granted to a `Membership`.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the `MembershipRole`.\n\nMust be one of `OWNER`, `MANAGER`, `MEMBER`.",
          "type": "string"
        }
      },
      "id": "MembershipRole"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Cloud Identity",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-identity.groups.readonly": {
          "description": "See any Cloud Identity Groups that you can access, including group members and their emails"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-identity.groups": {
          "description": "See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group"
        }
      }
    }
  },
  "rootUrl": "https://cloudidentity.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudidentity",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Identity API",
  "ownerName": "Google",
  "resources": {
    "groups": {
      "methods": {
        "delete": {
          "flatPath": "v1beta1/groups/{groupsId}",
          "id": "cloudidentity.groups.delete",
          "path": "v1beta1/{+name}",
          "description": "Deletes a `Group`.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Group` to retrieve.\n\nMust be of the form `groups/{group_id}`.",
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "create": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/groups",
          "path": "v1beta1/groups",
          "id": "cloudidentity.groups.create",
          "description": "Creates a `Group`.",
          "request": {
            "$ref": "Group"
          }
        },
        "lookup": {
          "parameters": {
            "groupKey.id": {
              "location": "query",
              "description": "The ID of the entity.\n\nFor Google-managed entities, the `id` must be the email address of a group\nor user.\n\nFor external-identity-mapped entities, the `id` must be a string conforming\nto the Identity Source's requirements.\n\nMust be unique within a `namespace`.",
              "type": "string"
            },
            "groupKey.namespace": {
              "description": "The namespace in which the entity exists.\n\nIf not specified, the `EntityKey` represents a Google-managed entity such\nas a Google user or a Google Group.\n\nIf specified, the `EntityKey` represents an external-identity-mapped group\ncreated through Admin Console. Must be of the form\n`identitysources/{identity_source_id}.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/groups:lookup",
          "path": "v1beta1/groups:lookup",
          "id": "cloudidentity.groups.lookup",
          "description": "Looks up the [resource\nname](https://cloud.google.com/apis/design/resource_names) of a `Group` by\nits `EntityKey`.",
          "response": {
            "$ref": "LookupGroupNameResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET"
        },
        "search": {
          "response": {
            "$ref": "SearchGroupsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "pageToken": {
              "description": "The `next_page_token` value returned from a previous search request, if\nany.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "description": "The maximum number of results to return.\n\nNote that the number of results returned may be less than this value even\nif there are more available results. To fetch all results, clients must\ncontinue calling this method repeatedly until the response no longer\ncontains a `next_page_token`.\n\nIf unspecified, defaults to 200 for `GroupView.BASIC` and to 50 for\n`GroupView.FULL`.\n\nMust not be greater than 1000 for `GroupView.BASIC` or 500 for\n`GroupView.FULL`.",
              "format": "int32",
              "type": "integer"
            },
            "query": {
              "location": "query",
              "description": "The search query.\n\nOnly queries on the parent and labels of `Group`s are supported.\n\nMust be specified in [Common Expression\nLanguage](https://opensource.google/projects/cel). May only contain\nequality operators on the parent (e.g. `parent ==\n'customers/{customer_id}'`) and inclusion operators on labels (e.g.,\n`'cloudidentity.googleapis.com/groups.discussion_forum' in labels`).",
              "type": "string"
            },
            "view": {
              "location": "query",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "description": "The level of detail to be returned.\n\nIf unspecified, defaults to `View.BASIC`.",
              "type": "string"
            }
          },
          "flatPath": "v1beta1/groups:search",
          "path": "v1beta1/groups:search",
          "id": "cloudidentity.groups.search",
          "description": "Searches for `Group`s matching a specified query."
        },
        "patch": {
          "description": "Updates a `Group`.",
          "request": {
            "$ref": "Group"
          },
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path",
              "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Group`.\n\nShall be of the form `groups/{group_id}`."
            },
            "updateMask": {
              "type": "string",
              "location": "query",
              "description": "The fully-qualified names of fields to update.\n\nMay only contain the following fields: `display_name`, `description`.",
              "format": "google-fieldmask"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/groups/{groupsId}",
          "id": "cloudidentity.groups.patch",
          "path": "v1beta1/{+name}"
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Group` to retrieve.\n\nMust be of the form `groups/{group_id}`.",
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/groups/{groupsId}",
          "id": "cloudidentity.groups.get",
          "path": "v1beta1/{+name}",
          "description": "Retrieves a `Group`."
        }
      },
      "resources": {
        "memberships": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Membership"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path",
                  "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Membership` to retrieve.\n\nMust be of the form `groups/{group_id}/memberships/{membership_id}`."
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships/{membershipsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudidentity.groups.memberships.get",
              "description": "Retrieves a `Membership`."
            },
            "list": {
              "path": "v1beta1/{+parent}/memberships",
              "id": "cloudidentity.groups.memberships.list",
              "description": "Lists the `Membership`s within a `Group`.",
              "response": {
                "$ref": "ListMembershipsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "view": {
                  "location": "query",
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "description": "The level of detail to be returned.\n\nIf unspecified, defaults to `MembershipView.BASIC`.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "description": "The parent `Group` resource under which to lookup the `Membership` name.\n\nMust be of the form `groups/{group_id}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The `next_page_token` value returned from a previous search request, if\nany.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return.\n\nNote that the number of results returned may be less than this value even\nif there are more available results. To fetch all results, clients must\ncontinue calling this method repeatedly until the response no longer\ncontains a `next_page_token`.\n\nIf unspecified, defaults to 200 for `GroupView.BASIC` and to 50 for\n`GroupView.FULL`.\n\nMust not be greater than 1000 for `GroupView.BASIC` or 500 for\n`GroupView.FULL`.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships"
            },
            "create": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^groups/[^/]+$",
                  "location": "path",
                  "description": "The parent `Group` resource under which to create the `Membership`.\n\nMust be of the form `groups/{group_id}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships",
              "path": "v1beta1/{+parent}/memberships",
              "id": "cloudidentity.groups.memberships.create",
              "request": {
                "$ref": "Membership"
              },
              "description": "Creates a `Membership`."
            },
            "lookup": {
              "description": "Looks up the [resource\nname](https://cloud.google.com/apis/design/resource_names) of a\n`Membership` by its `EntityKey`.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "LookupMembershipNameResponse"
              },
              "parameters": {
                "memberKey.id": {
                  "location": "query",
                  "description": "The ID of the entity.\n\nFor Google-managed entities, the `id` must be the email address of a group\nor user.\n\nFor external-identity-mapped entities, the `id` must be a string conforming\nto the Identity Source's requirements.\n\nMust be unique within a `namespace`.",
                  "type": "string"
                },
                "memberKey.namespace": {
                  "location": "query",
                  "description": "The namespace in which the entity exists.\n\nIf not specified, the `EntityKey` represents a Google-managed entity such\nas a Google user or a Google Group.\n\nIf specified, the `EntityKey` represents an external-identity-mapped group\ncreated through Admin Console. Must be of the form\n`identitysources/{identity_source_id}.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "description": "The parent `Group` resource under which to lookup the `Membership` name.\n\nMust be of the form `groups/{group_id}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/groups/{groupsId}/memberships:lookup",
              "id": "cloudidentity.groups.memberships.lookup",
              "path": "v1beta1/{+parent}/memberships:lookup"
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path",
                  "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of\nthe `Membership` to delete.\n\nMust be of the form `groups/{group_id}/memberships/{membership_id}`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/groups/{groupsId}/memberships/{membershipsId}",
              "id": "cloudidentity.groups.memberships.delete",
              "path": "v1beta1/{+name}",
              "description": "Deletes a `Membership`."
            }
          }
        }
      }
    }
  },
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  },
  "version": "v1beta1",
  "baseUrl": "https://cloudidentity.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "API for provisioning and managing identity resources.",
  "servicePath": "",
  "basePath": ""
}
