/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1.model;

/**
 * A summary of the current patch state across all instances that this patch job affects. Contains
 * counts of instances in different states. These states map to `InstancePatchState`. List patch job
 * instance details to see the specific states of each instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PatchJobInstanceDetailsSummary extends com.google.api.client.json.GenericJson {

  /**
   * Number of instances that have acked and will start shortly.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long ackedInstanceCount;

  /**
   * Number of instances that are applying patches.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long applyingPatchesInstanceCount;

  /**
   * Number of instances that are downloading patches.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long downloadingPatchesInstanceCount;

  /**
   * Number of instances that failed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long failedInstanceCount;

  /**
   * Number of instances that are inactive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long inactiveInstanceCount;

  /**
   * Number of instances that do not appear to be running the agent. Check to ensure that the agent
   * is installed, running, and able to communicate with the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long noAgentDetectedInstanceCount;

  /**
   * Number of instances notified about patch job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long notifiedInstanceCount;

  /**
   * Number of instances pending patch job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long pendingInstanceCount;

  /**
   * Number of instances that are running the post-patch step.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long postPatchStepInstanceCount;

  /**
   * Number of instances that are running the pre-patch step.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long prePatchStepInstanceCount;

  /**
   * Number of instances rebooting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long rebootingInstanceCount;

  /**
   * Number of instances that have started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long startedInstanceCount;

  /**
   * Number of instances that have completed successfully.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long succeededInstanceCount;

  /**
   * Number of instances that require reboot.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long succeededRebootRequiredInstanceCount;

  /**
   * Number of instances that exceeded the time out while applying the patch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timedOutInstanceCount;

  /**
   * Number of instances that have acked and will start shortly.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAckedInstanceCount() {
    return ackedInstanceCount;
  }

  /**
   * Number of instances that have acked and will start shortly.
   * @param ackedInstanceCount ackedInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setAckedInstanceCount(java.lang.Long ackedInstanceCount) {
    this.ackedInstanceCount = ackedInstanceCount;
    return this;
  }

  /**
   * Number of instances that are applying patches.
   * @return value or {@code null} for none
   */
  public java.lang.Long getApplyingPatchesInstanceCount() {
    return applyingPatchesInstanceCount;
  }

  /**
   * Number of instances that are applying patches.
   * @param applyingPatchesInstanceCount applyingPatchesInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setApplyingPatchesInstanceCount(java.lang.Long applyingPatchesInstanceCount) {
    this.applyingPatchesInstanceCount = applyingPatchesInstanceCount;
    return this;
  }

  /**
   * Number of instances that are downloading patches.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDownloadingPatchesInstanceCount() {
    return downloadingPatchesInstanceCount;
  }

  /**
   * Number of instances that are downloading patches.
   * @param downloadingPatchesInstanceCount downloadingPatchesInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setDownloadingPatchesInstanceCount(java.lang.Long downloadingPatchesInstanceCount) {
    this.downloadingPatchesInstanceCount = downloadingPatchesInstanceCount;
    return this;
  }

  /**
   * Number of instances that failed.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFailedInstanceCount() {
    return failedInstanceCount;
  }

  /**
   * Number of instances that failed.
   * @param failedInstanceCount failedInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setFailedInstanceCount(java.lang.Long failedInstanceCount) {
    this.failedInstanceCount = failedInstanceCount;
    return this;
  }

  /**
   * Number of instances that are inactive.
   * @return value or {@code null} for none
   */
  public java.lang.Long getInactiveInstanceCount() {
    return inactiveInstanceCount;
  }

  /**
   * Number of instances that are inactive.
   * @param inactiveInstanceCount inactiveInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setInactiveInstanceCount(java.lang.Long inactiveInstanceCount) {
    this.inactiveInstanceCount = inactiveInstanceCount;
    return this;
  }

  /**
   * Number of instances that do not appear to be running the agent. Check to ensure that the agent
   * is installed, running, and able to communicate with the service.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNoAgentDetectedInstanceCount() {
    return noAgentDetectedInstanceCount;
  }

  /**
   * Number of instances that do not appear to be running the agent. Check to ensure that the agent
   * is installed, running, and able to communicate with the service.
   * @param noAgentDetectedInstanceCount noAgentDetectedInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setNoAgentDetectedInstanceCount(java.lang.Long noAgentDetectedInstanceCount) {
    this.noAgentDetectedInstanceCount = noAgentDetectedInstanceCount;
    return this;
  }

  /**
   * Number of instances notified about patch job.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNotifiedInstanceCount() {
    return notifiedInstanceCount;
  }

  /**
   * Number of instances notified about patch job.
   * @param notifiedInstanceCount notifiedInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setNotifiedInstanceCount(java.lang.Long notifiedInstanceCount) {
    this.notifiedInstanceCount = notifiedInstanceCount;
    return this;
  }

  /**
   * Number of instances pending patch job.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPendingInstanceCount() {
    return pendingInstanceCount;
  }

  /**
   * Number of instances pending patch job.
   * @param pendingInstanceCount pendingInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setPendingInstanceCount(java.lang.Long pendingInstanceCount) {
    this.pendingInstanceCount = pendingInstanceCount;
    return this;
  }

  /**
   * Number of instances that are running the post-patch step.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPostPatchStepInstanceCount() {
    return postPatchStepInstanceCount;
  }

  /**
   * Number of instances that are running the post-patch step.
   * @param postPatchStepInstanceCount postPatchStepInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setPostPatchStepInstanceCount(java.lang.Long postPatchStepInstanceCount) {
    this.postPatchStepInstanceCount = postPatchStepInstanceCount;
    return this;
  }

  /**
   * Number of instances that are running the pre-patch step.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPrePatchStepInstanceCount() {
    return prePatchStepInstanceCount;
  }

  /**
   * Number of instances that are running the pre-patch step.
   * @param prePatchStepInstanceCount prePatchStepInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setPrePatchStepInstanceCount(java.lang.Long prePatchStepInstanceCount) {
    this.prePatchStepInstanceCount = prePatchStepInstanceCount;
    return this;
  }

  /**
   * Number of instances rebooting.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRebootingInstanceCount() {
    return rebootingInstanceCount;
  }

  /**
   * Number of instances rebooting.
   * @param rebootingInstanceCount rebootingInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setRebootingInstanceCount(java.lang.Long rebootingInstanceCount) {
    this.rebootingInstanceCount = rebootingInstanceCount;
    return this;
  }

  /**
   * Number of instances that have started.
   * @return value or {@code null} for none
   */
  public java.lang.Long getStartedInstanceCount() {
    return startedInstanceCount;
  }

  /**
   * Number of instances that have started.
   * @param startedInstanceCount startedInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setStartedInstanceCount(java.lang.Long startedInstanceCount) {
    this.startedInstanceCount = startedInstanceCount;
    return this;
  }

  /**
   * Number of instances that have completed successfully.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSucceededInstanceCount() {
    return succeededInstanceCount;
  }

  /**
   * Number of instances that have completed successfully.
   * @param succeededInstanceCount succeededInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setSucceededInstanceCount(java.lang.Long succeededInstanceCount) {
    this.succeededInstanceCount = succeededInstanceCount;
    return this;
  }

  /**
   * Number of instances that require reboot.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSucceededRebootRequiredInstanceCount() {
    return succeededRebootRequiredInstanceCount;
  }

  /**
   * Number of instances that require reboot.
   * @param succeededRebootRequiredInstanceCount succeededRebootRequiredInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setSucceededRebootRequiredInstanceCount(java.lang.Long succeededRebootRequiredInstanceCount) {
    this.succeededRebootRequiredInstanceCount = succeededRebootRequiredInstanceCount;
    return this;
  }

  /**
   * Number of instances that exceeded the time out while applying the patch.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimedOutInstanceCount() {
    return timedOutInstanceCount;
  }

  /**
   * Number of instances that exceeded the time out while applying the patch.
   * @param timedOutInstanceCount timedOutInstanceCount or {@code null} for none
   */
  public PatchJobInstanceDetailsSummary setTimedOutInstanceCount(java.lang.Long timedOutInstanceCount) {
    this.timedOutInstanceCount = timedOutInstanceCount;
    return this;
  }

  @Override
  public PatchJobInstanceDetailsSummary set(String fieldName, Object value) {
    return (PatchJobInstanceDetailsSummary) super.set(fieldName, value);
  }

  @Override
  public PatchJobInstanceDetailsSummary clone() {
    return (PatchJobInstanceDetailsSummary) super.clone();
  }

}
