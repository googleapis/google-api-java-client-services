/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Named entities in the document.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSaftEntity extends com.google.api.client.json.GenericJson {

  /**
   * Antecedent for entity. This is used to make coreference chains before the mentions in the
   * document are grouped by entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer antecedent;

  /**
   * Entity type (e.g. PER, ORG, LOC). WARNING: This field is deprecated. go/saft-replace-
   * deprecated-entity-type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entityType;

  /**
   * Probability distribution over entity types. These values correspond to Document.entity_label
   * values: doc.entity[e].entity_type_probability[n] is the probability that the correct label for
   * doc.entity[e] is doc.entity_label[n]. These probabilities sum to 1.0 (with possible rounding
   * error). WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Double> entityTypeProbability;

  /**
   * Gender for entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gender;

  /**
   * Application-specific information about this entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet info;

  /**
   * Mentions of the entity in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftMention> mention;

  /**
   * Representative entity name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Profile for entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSaftEntityProfile profile;

  /**
   * Referent information for discourse context entities that are not mentioned in the document.
   * These can be merged with mentioned entities during analysis if they are deemed to be
   * coreferent. Entities with referents should not have any mentions if they do not corefer with
   * anything. For example, when adding context entities to an input document prior to SAFT
   * analysis, those entities should have a referent and no mentions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSaftReferent referent;

  /**
   * Representative mention, as an index into mention.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer representativeMention;

  /**
   * Score indicating the saliency (centrality) of this entity to the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double salience;

  /**
   * Entity types of the entity. These can include SAFT types (/saft/location, /saft/art,
   * /saft/other/living_thing, etc), collections types (/collection/tv_personalities,
   * /collection/statistical_regions, etc), and more. This refers to the type of the entity itself:
   * in "She is on TV", "She" refers to a specific actor, with type "/collection/tv_personalities".
   * Cf. Mention.Type, which is the type of the referring mention.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSaftEntityType> type;

  /**
   * Antecedent for entity. This is used to make coreference chains before the mentions in the
   * document are grouped by entity.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAntecedent() {
    return antecedent;
  }

  /**
   * Antecedent for entity. This is used to make coreference chains before the mentions in the
   * document are grouped by entity.
   * @param antecedent antecedent or {@code null} for none
   */
  public NlpSaftEntity setAntecedent(java.lang.Integer antecedent) {
    this.antecedent = antecedent;
    return this;
  }

  /**
   * Entity type (e.g. PER, ORG, LOC). WARNING: This field is deprecated. go/saft-replace-
   * deprecated-entity-type
   * @return value or {@code null} for none
   */
  public java.lang.String getEntityType() {
    return entityType;
  }

  /**
   * Entity type (e.g. PER, ORG, LOC). WARNING: This field is deprecated. go/saft-replace-
   * deprecated-entity-type
   * @param entityType entityType or {@code null} for none
   */
  public NlpSaftEntity setEntityType(java.lang.String entityType) {
    this.entityType = entityType;
    return this;
  }

  /**
   * Probability distribution over entity types. These values correspond to Document.entity_label
   * values: doc.entity[e].entity_type_probability[n] is the probability that the correct label for
   * doc.entity[e] is doc.entity_label[n]. These probabilities sum to 1.0 (with possible rounding
   * error). WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Double> getEntityTypeProbability() {
    return entityTypeProbability;
  }

  /**
   * Probability distribution over entity types. These values correspond to Document.entity_label
   * values: doc.entity[e].entity_type_probability[n] is the probability that the correct label for
   * doc.entity[e] is doc.entity_label[n]. These probabilities sum to 1.0 (with possible rounding
   * error). WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
   * @param entityTypeProbability entityTypeProbability or {@code null} for none
   */
  public NlpSaftEntity setEntityTypeProbability(java.util.List<java.lang.Double> entityTypeProbability) {
    this.entityTypeProbability = entityTypeProbability;
    return this;
  }

  /**
   * Gender for entity.
   * @return value or {@code null} for none
   */
  public java.lang.String getGender() {
    return gender;
  }

  /**
   * Gender for entity.
   * @param gender gender or {@code null} for none
   */
  public NlpSaftEntity setGender(java.lang.String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Application-specific information about this entity.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getInfo() {
    return info;
  }

  /**
   * Application-specific information about this entity.
   * @param info info or {@code null} for none
   */
  public NlpSaftEntity setInfo(Proto2BridgeMessageSet info) {
    this.info = info;
    return this;
  }

  /**
   * Mentions of the entity in the document.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftMention> getMention() {
    return mention;
  }

  /**
   * Mentions of the entity in the document.
   * @param mention mention or {@code null} for none
   */
  public NlpSaftEntity setMention(java.util.List<NlpSaftMention> mention) {
    this.mention = mention;
    return this;
  }

  /**
   * Representative entity name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Representative entity name.
   * @param name name or {@code null} for none
   */
  public NlpSaftEntity setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Profile for entity.
   * @return value or {@code null} for none
   */
  public NlpSaftEntityProfile getProfile() {
    return profile;
  }

  /**
   * Profile for entity.
   * @param profile profile or {@code null} for none
   */
  public NlpSaftEntity setProfile(NlpSaftEntityProfile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Referent information for discourse context entities that are not mentioned in the document.
   * These can be merged with mentioned entities during analysis if they are deemed to be
   * coreferent. Entities with referents should not have any mentions if they do not corefer with
   * anything. For example, when adding context entities to an input document prior to SAFT
   * analysis, those entities should have a referent and no mentions.
   * @return value or {@code null} for none
   */
  public NlpSaftReferent getReferent() {
    return referent;
  }

  /**
   * Referent information for discourse context entities that are not mentioned in the document.
   * These can be merged with mentioned entities during analysis if they are deemed to be
   * coreferent. Entities with referents should not have any mentions if they do not corefer with
   * anything. For example, when adding context entities to an input document prior to SAFT
   * analysis, those entities should have a referent and no mentions.
   * @param referent referent or {@code null} for none
   */
  public NlpSaftEntity setReferent(NlpSaftReferent referent) {
    this.referent = referent;
    return this;
  }

  /**
   * Representative mention, as an index into mention.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRepresentativeMention() {
    return representativeMention;
  }

  /**
   * Representative mention, as an index into mention.
   * @param representativeMention representativeMention or {@code null} for none
   */
  public NlpSaftEntity setRepresentativeMention(java.lang.Integer representativeMention) {
    this.representativeMention = representativeMention;
    return this;
  }

  /**
   * Score indicating the saliency (centrality) of this entity to the document.
   * @return value or {@code null} for none
   */
  public java.lang.Double getSalience() {
    return salience;
  }

  /**
   * Score indicating the saliency (centrality) of this entity to the document.
   * @param salience salience or {@code null} for none
   */
  public NlpSaftEntity setSalience(java.lang.Double salience) {
    this.salience = salience;
    return this;
  }

  /**
   * Entity types of the entity. These can include SAFT types (/saft/location, /saft/art,
   * /saft/other/living_thing, etc), collections types (/collection/tv_personalities,
   * /collection/statistical_regions, etc), and more. This refers to the type of the entity itself:
   * in "She is on TV", "She" refers to a specific actor, with type "/collection/tv_personalities".
   * Cf. Mention.Type, which is the type of the referring mention.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSaftEntityType> getType() {
    return type;
  }

  /**
   * Entity types of the entity. These can include SAFT types (/saft/location, /saft/art,
   * /saft/other/living_thing, etc), collections types (/collection/tv_personalities,
   * /collection/statistical_regions, etc), and more. This refers to the type of the entity itself:
   * in "She is on TV", "She" refers to a specific actor, with type "/collection/tv_personalities".
   * Cf. Mention.Type, which is the type of the referring mention.
   * @param type type or {@code null} for none
   */
  public NlpSaftEntity setType(java.util.List<NlpSaftEntityType> type) {
    this.type = type;
    return this;
  }

  @Override
  public NlpSaftEntity set(String fieldName, Object value) {
    return (NlpSaftEntity) super.set(fieldName, value);
  }

  @Override
  public NlpSaftEntity clone() {
    return (NlpSaftEntity) super.clone();
  }

}
