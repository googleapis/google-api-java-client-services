/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.integrations.v1.model;

/**
 * Configuration information for Client's Cloud KMS information
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Application Integration API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIntegrationsV1alphaCloudKmsConfig extends com.google.api.client.json.GenericJson {

  /**
   * Required. A Cloud KMS key is a named object containing one or more key versions, along with
   * metadata for the key. A key exists on exactly one key ring tied to a specific location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyVersion;

  /**
   * Required. Location name of the key ring, e.g. "us-west1".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsLocation;

  /**
   * Required. A key ring organizes keys in a specific Google Cloud location and allows you to
   * manage access control on groups of keys. A key ring's name does not need to be unique across a
   * Google Cloud project, but must be unique within a given location.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsRing;

  /**
   * Required. A Cloud KMS key is a named object containing one or more key versions, along with
   * metadata for the key. A key exists on exactly one key ring tied to a specific location.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * Required. A Cloud KMS key is a named object containing one or more key versions, along with
   * metadata for the key. A key exists on exactly one key ring tied to a specific location.
   * @param key key or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyVersion() {
    return keyVersion;
  }

  /**
   * Optional. Each version of a key contains key material used for encryption or signing. A key's
   * version is represented by an integer, starting at 1. To decrypt data or verify a signature, you
   * must use the same key version that was used to encrypt or sign the data.
   * @param keyVersion keyVersion or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig setKeyVersion(java.lang.String keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

  /**
   * Required. Location name of the key ring, e.g. "us-west1".
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsLocation() {
    return kmsLocation;
  }

  /**
   * Required. Location name of the key ring, e.g. "us-west1".
   * @param kmsLocation kmsLocation or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig setKmsLocation(java.lang.String kmsLocation) {
    this.kmsLocation = kmsLocation;
    return this;
  }

  /**
   * Required. A key ring organizes keys in a specific Google Cloud location and allows you to
   * manage access control on groups of keys. A key ring's name does not need to be unique across a
   * Google Cloud project, but must be unique within a given location.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsRing() {
    return kmsRing;
  }

  /**
   * Required. A key ring organizes keys in a specific Google Cloud location and allows you to
   * manage access control on groups of keys. A key ring's name does not need to be unique across a
   * Google Cloud project, but must be unique within a given location.
   * @param kmsRing kmsRing or {@code null} for none
   */
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig setKmsRing(java.lang.String kmsRing) {
    this.kmsRing = kmsRing;
    return this;
  }

  @Override
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig set(String fieldName, Object value) {
    return (GoogleCloudIntegrationsV1alphaCloudKmsConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIntegrationsV1alphaCloudKmsConfig clone() {
    return (GoogleCloudIntegrationsV1alphaCloudKmsConfig) super.clone();
  }

}
