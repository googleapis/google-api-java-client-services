/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * A flattened description of a `PrimitiveTransformation` or `RecordSuppression`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2TransformationDescription extends com.google.api.client.json.GenericJson {

  /**
   * A human-readable string representation of the `RecordCondition` corresponding to this
   * transformation. Set if a `RecordCondition` was used to determine whether or not to apply this
   * transformation. Examples: * (age_field > 85) * (age_field <= 18) * (zip_field exists) *
   * (zip_field == 01234) && (city_field != "Springville") * (zip_field == 01234) && (age_field <=
   * 18) && (city_field exists)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String condition;

  /**
   * A description of the transformation. This is empty for a RECORD_SUPPRESSION, or is the output
   * of calling toString() on the `PrimitiveTransformation` protocol buffer message for any other
   * type of transformation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Set if the transformation was limited to a specific `InfoType`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2InfoType infoType;

  /**
   * The transformation type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * A human-readable string representation of the `RecordCondition` corresponding to this
   * transformation. Set if a `RecordCondition` was used to determine whether or not to apply this
   * transformation. Examples: * (age_field > 85) * (age_field <= 18) * (zip_field exists) *
   * (zip_field == 01234) && (city_field != "Springville") * (zip_field == 01234) && (age_field <=
   * 18) && (city_field exists)
   * @return value or {@code null} for none
   */
  public java.lang.String getCondition() {
    return condition;
  }

  /**
   * A human-readable string representation of the `RecordCondition` corresponding to this
   * transformation. Set if a `RecordCondition` was used to determine whether or not to apply this
   * transformation. Examples: * (age_field > 85) * (age_field <= 18) * (zip_field exists) *
   * (zip_field == 01234) && (city_field != "Springville") * (zip_field == 01234) && (age_field <=
   * 18) && (city_field exists)
   * @param condition condition or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDescription setCondition(java.lang.String condition) {
    this.condition = condition;
    return this;
  }

  /**
   * A description of the transformation. This is empty for a RECORD_SUPPRESSION, or is the output
   * of calling toString() on the `PrimitiveTransformation` protocol buffer message for any other
   * type of transformation.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A description of the transformation. This is empty for a RECORD_SUPPRESSION, or is the output
   * of calling toString() on the `PrimitiveTransformation` protocol buffer message for any other
   * type of transformation.
   * @param description description or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDescription setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Set if the transformation was limited to a specific `InfoType`.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2InfoType getInfoType() {
    return infoType;
  }

  /**
   * Set if the transformation was limited to a specific `InfoType`.
   * @param infoType infoType or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDescription setInfoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
    return this;
  }

  /**
   * The transformation type.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The transformation type.
   * @param type type or {@code null} for none
   */
  public GooglePrivacyDlpV2TransformationDescription setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2TransformationDescription set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2TransformationDescription) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2TransformationDescription clone() {
    return (GooglePrivacyDlpV2TransformationDescription) super.clone();
  }

}
