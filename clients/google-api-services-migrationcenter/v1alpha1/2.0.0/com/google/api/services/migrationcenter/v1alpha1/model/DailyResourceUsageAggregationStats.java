/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Statistical aggregation of samples for a single resource usage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DailyResourceUsageAggregationStats extends com.google.api.client.json.GenericJson {

  /**
   * Average usage value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float average;

  /**
   * Median usage value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float median;

  /**
   * 95th percentile usage value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float ninteyFifthPercentile;

  /**
   * Peak usage value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float peak;

  /**
   * Average usage value.
   * @return value or {@code null} for none
   */
  public java.lang.Float getAverage() {
    return average;
  }

  /**
   * Average usage value.
   * @param average average or {@code null} for none
   */
  public DailyResourceUsageAggregationStats setAverage(java.lang.Float average) {
    this.average = average;
    return this;
  }

  /**
   * Median usage value.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMedian() {
    return median;
  }

  /**
   * Median usage value.
   * @param median median or {@code null} for none
   */
  public DailyResourceUsageAggregationStats setMedian(java.lang.Float median) {
    this.median = median;
    return this;
  }

  /**
   * 95th percentile usage value.
   * @return value or {@code null} for none
   */
  public java.lang.Float getNinteyFifthPercentile() {
    return ninteyFifthPercentile;
  }

  /**
   * 95th percentile usage value.
   * @param ninteyFifthPercentile ninteyFifthPercentile or {@code null} for none
   */
  public DailyResourceUsageAggregationStats setNinteyFifthPercentile(java.lang.Float ninteyFifthPercentile) {
    this.ninteyFifthPercentile = ninteyFifthPercentile;
    return this;
  }

  /**
   * Peak usage value.
   * @return value or {@code null} for none
   */
  public java.lang.Float getPeak() {
    return peak;
  }

  /**
   * Peak usage value.
   * @param peak peak or {@code null} for none
   */
  public DailyResourceUsageAggregationStats setPeak(java.lang.Float peak) {
    this.peak = peak;
    return this;
  }

  @Override
  public DailyResourceUsageAggregationStats set(String fieldName, Object value) {
    return (DailyResourceUsageAggregationStats) super.set(fieldName, value);
  }

  @Override
  public DailyResourceUsageAggregationStats clone() {
    return (DailyResourceUsageAggregationStats) super.clone();
  }

}
