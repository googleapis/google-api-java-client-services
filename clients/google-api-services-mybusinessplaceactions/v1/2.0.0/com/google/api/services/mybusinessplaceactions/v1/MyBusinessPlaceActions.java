/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinessplaceactions.v1;

/**
 * Service definition for MyBusinessPlaceActions (v1).
 *
 * <p>
 * The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/my-business/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyBusinessPlaceActionsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyBusinessPlaceActions extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the My Business Place Actions API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://mybusinessplaceactions.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://mybusinessplaceactions.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyBusinessPlaceActions(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyBusinessPlaceActions(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Locations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code MyBusinessPlaceActions mybusinessplaceactions = new MyBusinessPlaceActions(...);}
   *   {@code MyBusinessPlaceActions.Locations.List request = mybusinessplaceactions.locations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Locations locations() {
    return new Locations();
  }

  /**
   * The "locations" collection of methods.
   */
  public class Locations {

    /**
     * An accessor for creating requests from the PlaceActionLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code MyBusinessPlaceActions mybusinessplaceactions = new MyBusinessPlaceActions(...);}
     *   {@code MyBusinessPlaceActions.PlaceActionLinks.List request = mybusinessplaceactions.placeActionLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public PlaceActionLinks placeActionLinks() {
      return new PlaceActionLinks();
    }

    /**
     * The "placeActionLinks" collection of methods.
     */
    public class PlaceActionLinks {

      /**
       * Creates a place action link associated with the specified location, and returns it. The request
       * is considered duplicate if the `parent`, `place_action_link.uri` and
       * `place_action_link.place_action_type` are the same as a previous request.
       *
       * Create a request for the method "placeActionLinks.create".
       *
       * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the location where to create this place action link.
       *        `locations/{location_id}`.
       * @param content the {@link com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink> {

        private static final String REST_PATH = "v1/{+parent}/placeActionLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+$");

        /**
         * Creates a place action link associated with the specified location, and returns it. The request
         * is considered duplicate if the `parent`, `place_action_link.uri` and
         * `place_action_link.place_action_type` are the same as a previous request.
         *
         * Create a request for the method "placeActionLinks.create".
         *
         * This request holds the parameters needed by the the mybusinessplaceactions server.  After
         * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the location where to create this place action link.
       *        `locations/{location_id}`.
         * @param content the {@link com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink content) {
          super(MyBusinessPlaceActions.this, "POST", REST_PATH, content, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^locations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the location where to create this place action link.
         * `locations/{location_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the location where to create this place action link.
       `locations/{location_id}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource name of the location where to create this place action link.
         * `locations/{location_id}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a place action link from the specified location.
       *
       * Create a request for the method "placeActionLinks.delete".
       *
       * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the place action link to remove from the location.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+/placeActionLinks/[^/]+$");

        /**
         * Deletes a place action link from the specified location.
         *
         * Create a request for the method "placeActionLinks.delete".
         *
         * This request holds the parameters needed by the the mybusinessplaceactions server.  After
         * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the place action link to remove from the location.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(MyBusinessPlaceActions.this, "DELETE", REST_PATH, null, com.google.api.services.mybusinessplaceactions.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of the place action link to remove from the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the place action link to remove from the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The resource name of the place action link to remove from the location. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the specified place action link.
       *
       * Create a request for the method "placeActionLinks.get".
       *
       * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the place action link to fetch.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+/placeActionLinks/[^/]+$");

        /**
         * Gets the specified place action link.
         *
         * Create a request for the method "placeActionLinks.get".
         *
         * This request holds the parameters needed by the the mybusinessplaceactions server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the place action link to fetch.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(MyBusinessPlaceActions.this, "GET", REST_PATH, null, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the place action link to fetch. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the place action link to fetch.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the place action link to fetch. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the place action links for the specified location.
       *
       * Create a request for the method "placeActionLinks.list".
       *
       * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the location whose place action links will be listed.
       *        `locations/{location_id}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.ListPlaceActionLinksResponse> {

        private static final String REST_PATH = "v1/{+parent}/placeActionLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+$");

        /**
         * Lists the place action links for the specified location.
         *
         * Create a request for the method "placeActionLinks.list".
         *
         * This request holds the parameters needed by the the mybusinessplaceactions server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the location whose place action links will be listed.
       *        `locations/{location_id}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(MyBusinessPlaceActions.this, "GET", REST_PATH, null, com.google.api.services.mybusinessplaceactions.v1.model.ListPlaceActionLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the location whose place action links will be listed.
         * `locations/{location_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the location whose place action links will be listed.
       `locations/{location_id}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the location whose place action links will be listed.
         * `locations/{location_id}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^locations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. A filter constraining the place action links to return. The response includes
         * entries that match the filter. We support only the following filter: 1.
         * place_action_type=XYZ where XYZ is a valid PlaceActionType.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. A filter constraining the place action links to return. The response includes entries
       that match the filter. We support only the following filter: 1. place_action_type=XYZ where XYZ is
       a valid PlaceActionType.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. A filter constraining the place action links to return. The response includes
         * entries that match the filter. We support only the following filter: 1.
         * place_action_type=XYZ where XYZ is a valid PlaceActionType.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. How many place action links to return per page. Default of 10. The minimum is
         * 1.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. How many place action links to return per page. Default of 10. The minimum is 1.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. How many place action links to return per page. Default of 10. The minimum is
         * 1.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Optional. If specified, returns the next page of place action links. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. If specified, returns the next page of place action links.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Optional. If specified, returns the next page of place action links. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the specified place action link and returns it.
       *
       * Create a request for the method "placeActionLinks.patch".
       *
       * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Optional. The resource name, in the format
       *        `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will
       *        only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for
       *        updating and deleting links respectively. However, it will be ignored in
       *        CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server
       *        on successful creation of a new link and returned as part of the response.
       * @param content the {@link com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^locations/[^/]+/placeActionLinks/[^/]+$");

        /**
         * Updates the specified place action link and returns it.
         *
         * Create a request for the method "placeActionLinks.patch".
         *
         * This request holds the parameters needed by the the mybusinessplaceactions server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Optional. The resource name, in the format
       *        `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will
       *        only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for
       *        updating and deleting links respectively. However, it will be ignored in
       *        CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server
       *        on successful creation of a new link and returned as part of the response.
         * @param content the {@link com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink content) {
          super(MyBusinessPlaceActions.this, "PATCH", REST_PATH, content, com.google.api.services.mybusinessplaceactions.v1.model.PlaceActionLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Optional. The resource name, in the format
         * `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will
         * only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for
         * updating and deleting links respectively. However, it will be ignored in
         * CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the
         * server on successful creation of a new link and returned as part of the response.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Optional. The resource name, in the format
       `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be
       considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting
       links respectively. However, it will be ignored in CreatePlaceActionLink request, where
       `place_action_link_id` will be assigned by the server on successful creation of a new link and
       returned as part of the response.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Optional. The resource name, in the format
         * `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will
         * only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for
         * updating and deleting links respectively. However, it will be ignored in
         * CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the
         * server on successful creation of a new link and returned as part of the response.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^locations/[^/]+/placeActionLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The specific fields to update. The only editable fields are `uri`,
         * `place_action_type` and `is_preferred`. If the updated link already exists at the same
         * location with the same `place_action_type` and `uri`, fails with an `ALREADY_EXISTS`
         * error.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The specific fields to update. The only editable fields are `uri`, `place_action_type`
       and `is_preferred`. If the updated link already exists at the same location with the same
       `place_action_type` and `uri`, fails with an `ALREADY_EXISTS` error.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The specific fields to update. The only editable fields are `uri`,
         * `place_action_type` and `is_preferred`. If the updated link already exists at the same
         * location with the same `place_action_type` and `uri`, fails with an `ALREADY_EXISTS`
         * error.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the PlaceActionTypeMetadata collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code MyBusinessPlaceActions mybusinessplaceactions = new MyBusinessPlaceActions(...);}
   *   {@code MyBusinessPlaceActions.PlaceActionTypeMetadata.List request = mybusinessplaceactions.placeActionTypeMetadata().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PlaceActionTypeMetadata placeActionTypeMetadata() {
    return new PlaceActionTypeMetadata();
  }

  /**
   * The "placeActionTypeMetadata" collection of methods.
   */
  public class PlaceActionTypeMetadata {

    /**
     * Returns the list of available place action types for a location or country.
     *
     * Create a request for the method "placeActionTypeMetadata.list".
     *
     * This request holds the parameters needed by the mybusinessplaceactions server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends MyBusinessPlaceActionsRequest<com.google.api.services.mybusinessplaceactions.v1.model.ListPlaceActionTypeMetadataResponse> {

      private static final String REST_PATH = "v1/placeActionTypeMetadata";

      /**
       * Returns the list of available place action types for a location or country.
       *
       * Create a request for the method "placeActionTypeMetadata.list".
       *
       * This request holds the parameters needed by the the mybusinessplaceactions server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(MyBusinessPlaceActions.this, "GET", REST_PATH, null, com.google.api.services.mybusinessplaceactions.v1.model.ListPlaceActionTypeMetadataResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Optional. A filter constraining the place action types to return metadata for. The response
       * includes entries that match the filter. We support only the following filters: 1.
       * location=XYZ where XYZ is a string indicating the resource name of a location, in the
       * format `locations/{location_id}`. 2. region_code=XYZ where XYZ is a Unicode CLDR region
       * code to find available action types. If no filter is provided, all place action types are
       * returned.
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Optional. A filter constraining the place action types to return metadata for. The response
     includes entries that match the filter. We support only the following filters: 1. location=XYZ
     where XYZ is a string indicating the resource name of a location, in the format
     `locations/{location_id}`. 2. region_code=XYZ where XYZ is a Unicode CLDR region code to find
     available action types. If no filter is provided, all place action types are returned.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Optional. A filter constraining the place action types to return metadata for. The response
       * includes entries that match the filter. We support only the following filters: 1.
       * location=XYZ where XYZ is a string indicating the resource name of a location, in the
       * format `locations/{location_id}`. 2. region_code=XYZ where XYZ is a Unicode CLDR region
       * code to find available action types. If no filter is provided, all place action types are
       * returned.
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Optional. The IETF BCP-47 code of language to get display names in. If this language is not
       * available, they will be provided in English.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. The IETF BCP-47 code of language to get display names in. If this language is not
     available, they will be provided in English.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. The IETF BCP-47 code of language to get display names in. If this language is not
       * available, they will be provided in English.
       */
      public List setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /** Optional. How many action types to include per page. Default is 10, minimum is 1. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Optional. How many action types to include per page. Default is 10, minimum is 1.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** Optional. How many action types to include per page. Default is 10, minimum is 1. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Optional. If specified, the next page of place action type metadata is retrieved. The
       * `pageToken` is returned when a call to `placeActionTypeMetadata.list` returns more results
       * than can fit into the requested page size.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. If specified, the next page of place action type metadata is retrieved. The `pageToken`
     is returned when a call to `placeActionTypeMetadata.list` returns more results than can fit into
     the requested page size.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. If specified, the next page of place action type metadata is retrieved. The
       * `pageToken` is returned when a call to `placeActionTypeMetadata.list` returns more results
       * than can fit into the requested page size.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link MyBusinessPlaceActions}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link MyBusinessPlaceActions}. */
    @Override
    public MyBusinessPlaceActions build() {
      return new MyBusinessPlaceActions(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyBusinessPlaceActionsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyBusinessPlaceActionsRequestInitializer(
        MyBusinessPlaceActionsRequestInitializer mybusinessplaceactionsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(mybusinessplaceactionsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
