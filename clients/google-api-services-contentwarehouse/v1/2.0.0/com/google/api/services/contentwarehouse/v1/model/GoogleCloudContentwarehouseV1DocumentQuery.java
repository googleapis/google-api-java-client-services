/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * NEXT_ID: 13
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudContentwarehouseV1DocumentQuery extends com.google.api.client.json.GenericJson {

  /**
   * This filter specifies a structured syntax to match against the
   * [PropertyDefinition].is_filterable marked as `true`. The syntax for this expression is a subset
   * of SQL syntax. Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where the left of
   * the operator is a property name and the right of the operator is a number or a quoted string.
   * You must escape backslash (\\) and quote (\") characters. Supported functions are
   * `LOWER([property_name])` to perform a case insensitive match and `EMPTY([property_name])` to
   * filter on the existence of a key. Boolean expressions (AND/OR/NOT) are supported up to 3 levels
   * of nesting (for example, "((A AND B AND C) OR NOT D) AND E"), a maximum of 100 comparisons or
   * functions are allowed in the expression. The expression must be < 6000 bytes in length. Sample
   * Query: `(LOWER(driving_license)="class \"a\"" OR EMPTY(driving_license)) AND driving_years >
   * 10`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customPropertyFilter;

  /**
   * The exact creator(s) of the documents to search against. If a value isn't specified, documents
   * within the search results are associated with any creator. If multiple values are specified,
   * documents within the search results may be associated with any of the specified creators.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> documentCreatorFilter;

  /**
   * This filter specifies the exact document schema Document.document_schema_name of the documents
   * to search against. If a value isn't specified, documents within the search results are
   * associated with any schema. If multiple values are specified, documents within the search
   * results may be associated with any of the specified schemas. At most 20 document schema names
   * are allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> documentSchemaNames;

  /**
   * This filter specifies the types of files to return: ALL, FOLDER, or FILE. If FOLDER or FILE is
   * specified, then only either folders or files will be returned, respectively. If ALL is
   * specified, both folders and files will be returned. If no value is specified, ALL files will be
   * returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudContentwarehouseV1FileTypeFilter fileTypeFilter;

  /**
   * Search all the documents under this specified folder. Format:
   * projects/{project_number}/locations/{location}/documents/{document_id}.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String folderNameFilter;

  /**
   * Experimental, do not use. If the query is a natural language question. False by default. If
   * true, then the question-answering feature will be used instead of search, and `result_count` in
   * SearchDocumentsRequest must be set. In addition, all other input fields related to search
   * (pagination, histograms, etc.) will be ignored.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isNlQuery;

  /**
   * This filter specifies a structured syntax to match against the PropertyDefinition.is_filterable
   * marked as `true`. The relationship between the PropertyFilters is OR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudContentwarehouseV1PropertyFilter> propertyFilter;

  /**
   * The query string that matches against the full text of the document and the searchable
   * properties. The maximum number of allowed characters is 255.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * For custom synonyms. Customers provide the synonyms based on context. One customer can provide
   * multiple set of synonyms based on different context. The search query will be expanded based on
   * the custom synonyms of the query context set. By default, no custom synonyms wll be applied if
   * no query context is provided. It is not supported for CMEK compliant deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> queryContext;

  /**
   * Documents created/updated within a range specified by this filter are searched against.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudContentwarehouseV1TimeFilter> timeFilters;

  /**
   * This filter specifies a structured syntax to match against the
   * [PropertyDefinition].is_filterable marked as `true`. The syntax for this expression is a subset
   * of SQL syntax. Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where the left of
   * the operator is a property name and the right of the operator is a number or a quoted string.
   * You must escape backslash (\\) and quote (\") characters. Supported functions are
   * `LOWER([property_name])` to perform a case insensitive match and `EMPTY([property_name])` to
   * filter on the existence of a key. Boolean expressions (AND/OR/NOT) are supported up to 3 levels
   * of nesting (for example, "((A AND B AND C) OR NOT D) AND E"), a maximum of 100 comparisons or
   * functions are allowed in the expression. The expression must be < 6000 bytes in length. Sample
   * Query: `(LOWER(driving_license)="class \"a\"" OR EMPTY(driving_license)) AND driving_years >
   * 10`
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomPropertyFilter() {
    return customPropertyFilter;
  }

  /**
   * This filter specifies a structured syntax to match against the
   * [PropertyDefinition].is_filterable marked as `true`. The syntax for this expression is a subset
   * of SQL syntax. Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where the left of
   * the operator is a property name and the right of the operator is a number or a quoted string.
   * You must escape backslash (\\) and quote (\") characters. Supported functions are
   * `LOWER([property_name])` to perform a case insensitive match and `EMPTY([property_name])` to
   * filter on the existence of a key. Boolean expressions (AND/OR/NOT) are supported up to 3 levels
   * of nesting (for example, "((A AND B AND C) OR NOT D) AND E"), a maximum of 100 comparisons or
   * functions are allowed in the expression. The expression must be < 6000 bytes in length. Sample
   * Query: `(LOWER(driving_license)="class \"a\"" OR EMPTY(driving_license)) AND driving_years >
   * 10`
   * @param customPropertyFilter customPropertyFilter or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setCustomPropertyFilter(java.lang.String customPropertyFilter) {
    this.customPropertyFilter = customPropertyFilter;
    return this;
  }

  /**
   * The exact creator(s) of the documents to search against. If a value isn't specified, documents
   * within the search results are associated with any creator. If multiple values are specified,
   * documents within the search results may be associated with any of the specified creators.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDocumentCreatorFilter() {
    return documentCreatorFilter;
  }

  /**
   * The exact creator(s) of the documents to search against. If a value isn't specified, documents
   * within the search results are associated with any creator. If multiple values are specified,
   * documents within the search results may be associated with any of the specified creators.
   * @param documentCreatorFilter documentCreatorFilter or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setDocumentCreatorFilter(java.util.List<java.lang.String> documentCreatorFilter) {
    this.documentCreatorFilter = documentCreatorFilter;
    return this;
  }

  /**
   * This filter specifies the exact document schema Document.document_schema_name of the documents
   * to search against. If a value isn't specified, documents within the search results are
   * associated with any schema. If multiple values are specified, documents within the search
   * results may be associated with any of the specified schemas. At most 20 document schema names
   * are allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDocumentSchemaNames() {
    return documentSchemaNames;
  }

  /**
   * This filter specifies the exact document schema Document.document_schema_name of the documents
   * to search against. If a value isn't specified, documents within the search results are
   * associated with any schema. If multiple values are specified, documents within the search
   * results may be associated with any of the specified schemas. At most 20 document schema names
   * are allowed.
   * @param documentSchemaNames documentSchemaNames or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setDocumentSchemaNames(java.util.List<java.lang.String> documentSchemaNames) {
    this.documentSchemaNames = documentSchemaNames;
    return this;
  }

  /**
   * This filter specifies the types of files to return: ALL, FOLDER, or FILE. If FOLDER or FILE is
   * specified, then only either folders or files will be returned, respectively. If ALL is
   * specified, both folders and files will be returned. If no value is specified, ALL files will be
   * returned.
   * @return value or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1FileTypeFilter getFileTypeFilter() {
    return fileTypeFilter;
  }

  /**
   * This filter specifies the types of files to return: ALL, FOLDER, or FILE. If FOLDER or FILE is
   * specified, then only either folders or files will be returned, respectively. If ALL is
   * specified, both folders and files will be returned. If no value is specified, ALL files will be
   * returned.
   * @param fileTypeFilter fileTypeFilter or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setFileTypeFilter(GoogleCloudContentwarehouseV1FileTypeFilter fileTypeFilter) {
    this.fileTypeFilter = fileTypeFilter;
    return this;
  }

  /**
   * Search all the documents under this specified folder. Format:
   * projects/{project_number}/locations/{location}/documents/{document_id}.
   * @return value or {@code null} for none
   */
  public java.lang.String getFolderNameFilter() {
    return folderNameFilter;
  }

  /**
   * Search all the documents under this specified folder. Format:
   * projects/{project_number}/locations/{location}/documents/{document_id}.
   * @param folderNameFilter folderNameFilter or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setFolderNameFilter(java.lang.String folderNameFilter) {
    this.folderNameFilter = folderNameFilter;
    return this;
  }

  /**
   * Experimental, do not use. If the query is a natural language question. False by default. If
   * true, then the question-answering feature will be used instead of search, and `result_count` in
   * SearchDocumentsRequest must be set. In addition, all other input fields related to search
   * (pagination, histograms, etc.) will be ignored.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsNlQuery() {
    return isNlQuery;
  }

  /**
   * Experimental, do not use. If the query is a natural language question. False by default. If
   * true, then the question-answering feature will be used instead of search, and `result_count` in
   * SearchDocumentsRequest must be set. In addition, all other input fields related to search
   * (pagination, histograms, etc.) will be ignored.
   * @param isNlQuery isNlQuery or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setIsNlQuery(java.lang.Boolean isNlQuery) {
    this.isNlQuery = isNlQuery;
    return this;
  }

  /**
   * This filter specifies a structured syntax to match against the PropertyDefinition.is_filterable
   * marked as `true`. The relationship between the PropertyFilters is OR.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudContentwarehouseV1PropertyFilter> getPropertyFilter() {
    return propertyFilter;
  }

  /**
   * This filter specifies a structured syntax to match against the PropertyDefinition.is_filterable
   * marked as `true`. The relationship between the PropertyFilters is OR.
   * @param propertyFilter propertyFilter or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setPropertyFilter(java.util.List<GoogleCloudContentwarehouseV1PropertyFilter> propertyFilter) {
    this.propertyFilter = propertyFilter;
    return this;
  }

  /**
   * The query string that matches against the full text of the document and the searchable
   * properties. The maximum number of allowed characters is 255.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * The query string that matches against the full text of the document and the searchable
   * properties. The maximum number of allowed characters is 255.
   * @param query query or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * For custom synonyms. Customers provide the synonyms based on context. One customer can provide
   * multiple set of synonyms based on different context. The search query will be expanded based on
   * the custom synonyms of the query context set. By default, no custom synonyms wll be applied if
   * no query context is provided. It is not supported for CMEK compliant deployment.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getQueryContext() {
    return queryContext;
  }

  /**
   * For custom synonyms. Customers provide the synonyms based on context. One customer can provide
   * multiple set of synonyms based on different context. The search query will be expanded based on
   * the custom synonyms of the query context set. By default, no custom synonyms wll be applied if
   * no query context is provided. It is not supported for CMEK compliant deployment.
   * @param queryContext queryContext or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setQueryContext(java.util.List<java.lang.String> queryContext) {
    this.queryContext = queryContext;
    return this;
  }

  /**
   * Documents created/updated within a range specified by this filter are searched against.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudContentwarehouseV1TimeFilter> getTimeFilters() {
    return timeFilters;
  }

  /**
   * Documents created/updated within a range specified by this filter are searched against.
   * @param timeFilters timeFilters or {@code null} for none
   */
  public GoogleCloudContentwarehouseV1DocumentQuery setTimeFilters(java.util.List<GoogleCloudContentwarehouseV1TimeFilter> timeFilters) {
    this.timeFilters = timeFilters;
    return this;
  }

  @Override
  public GoogleCloudContentwarehouseV1DocumentQuery set(String fieldName, Object value) {
    return (GoogleCloudContentwarehouseV1DocumentQuery) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudContentwarehouseV1DocumentQuery clone() {
    return (GoogleCloudContentwarehouseV1DocumentQuery) super.clone();
  }

}
