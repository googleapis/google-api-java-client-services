/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Specifies the compass heading, pitch & roll for the origin of the projection. The origin for the
 * "equirectangular" projection is the center of the image. The origin for the other projection
 * types is defined as the location in the image that corresponds to the origin of an
 * "equirectangular" projection.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoFileSphericalMetadataPose extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float headingDegrees;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float pitchDegrees;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float rollDegrees;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getHeadingDegrees() {
    return headingDegrees;
  }

  /**
   * @param headingDegrees headingDegrees or {@code null} for none
   */
  public VideoFileSphericalMetadataPose setHeadingDegrees(java.lang.Float headingDegrees) {
    this.headingDegrees = headingDegrees;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getPitchDegrees() {
    return pitchDegrees;
  }

  /**
   * @param pitchDegrees pitchDegrees or {@code null} for none
   */
  public VideoFileSphericalMetadataPose setPitchDegrees(java.lang.Float pitchDegrees) {
    this.pitchDegrees = pitchDegrees;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getRollDegrees() {
    return rollDegrees;
  }

  /**
   * @param rollDegrees rollDegrees or {@code null} for none
   */
  public VideoFileSphericalMetadataPose setRollDegrees(java.lang.Float rollDegrees) {
    this.rollDegrees = rollDegrees;
    return this;
  }

  @Override
  public VideoFileSphericalMetadataPose set(String fieldName, Object value) {
    return (VideoFileSphericalMetadataPose) super.set(fieldName, value);
  }

  @Override
  public VideoFileSphericalMetadataPose clone() {
    return (VideoFileSphericalMetadataPose) super.clone();
  }

}
