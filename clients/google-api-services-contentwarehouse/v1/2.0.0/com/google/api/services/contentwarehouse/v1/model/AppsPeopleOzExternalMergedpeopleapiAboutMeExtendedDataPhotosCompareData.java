/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData diffData;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String highResUrl;

  /**
   * True if photo diff is greater than 0.01 on any color band, or if the user has a low res photo
   * but no high res photo. This field is primarily for use in About Me and for other uses it's
   * recommended to use the DiffData values directly instead. The cutoff is based on a heuristic
   * determined in go/comparing-profile-photos
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inconsistentPhoto;

  /**
   * Only present if the photo diff is greater than 0.01 on any color band.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lowResData;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lowResUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String monogramUrl;

  /**
   * True if the low-res photo has a private ACL set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean privateLowResAcl;

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData getDiffData() {
    return diffData;
  }

  /**
   * @param diffData diffData or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setDiffData(AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData diffData) {
    this.diffData = diffData;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getHighResUrl() {
    return highResUrl;
  }

  /**
   * @param highResUrl highResUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setHighResUrl(java.lang.String highResUrl) {
    this.highResUrl = highResUrl;
    return this;
  }

  /**
   * True if photo diff is greater than 0.01 on any color band, or if the user has a low res photo
   * but no high res photo. This field is primarily for use in About Me and for other uses it's
   * recommended to use the DiffData values directly instead. The cutoff is based on a heuristic
   * determined in go/comparing-profile-photos
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInconsistentPhoto() {
    return inconsistentPhoto;
  }

  /**
   * True if photo diff is greater than 0.01 on any color band, or if the user has a low res photo
   * but no high res photo. This field is primarily for use in About Me and for other uses it's
   * recommended to use the DiffData values directly instead. The cutoff is based on a heuristic
   * determined in go/comparing-profile-photos
   * @param inconsistentPhoto inconsistentPhoto or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setInconsistentPhoto(java.lang.Boolean inconsistentPhoto) {
    this.inconsistentPhoto = inconsistentPhoto;
    return this;
  }

  /**
   * Only present if the photo diff is greater than 0.01 on any color band.
   * @see #decodeLowResData()
   * @return value or {@code null} for none
   */
  public java.lang.String getLowResData() {
    return lowResData;
  }

  /**
   * Only present if the photo diff is greater than 0.01 on any color band.
   * @see #getLowResData()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeLowResData() {
    return com.google.api.client.util.Base64.decodeBase64(lowResData);
  }

  /**
   * Only present if the photo diff is greater than 0.01 on any color band.
   * @see #encodeLowResData()
   * @param lowResData lowResData or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setLowResData(java.lang.String lowResData) {
    this.lowResData = lowResData;
    return this;
  }

  /**
   * Only present if the photo diff is greater than 0.01 on any color band.
   * @see #setLowResData()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData encodeLowResData(byte[] lowResData) {
    this.lowResData = com.google.api.client.util.Base64.encodeBase64URLSafeString(lowResData);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLowResUrl() {
    return lowResUrl;
  }

  /**
   * @param lowResUrl lowResUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setLowResUrl(java.lang.String lowResUrl) {
    this.lowResUrl = lowResUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMonogramUrl() {
    return monogramUrl;
  }

  /**
   * @param monogramUrl monogramUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setMonogramUrl(java.lang.String monogramUrl) {
    this.monogramUrl = monogramUrl;
    return this;
  }

  /**
   * True if the low-res photo has a private ACL set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPrivateLowResAcl() {
    return privateLowResAcl;
  }

  /**
   * True if the low-res photo has a private ACL set.
   * @param privateLowResAcl privateLowResAcl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData setPrivateLowResAcl(java.lang.Boolean privateLowResAcl) {
    this.privateLowResAcl = privateLowResAcl;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData clone() {
    return (AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData) super.clone();
  }

}
