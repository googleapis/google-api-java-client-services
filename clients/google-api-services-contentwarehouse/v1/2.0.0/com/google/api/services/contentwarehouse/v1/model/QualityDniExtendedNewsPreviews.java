/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * When making changes to this proto, make sure to run: blaze test
 * commerce/datastore/tools/codegen:code_generator_test blaze run
 * commerce/datastore/tools/codegen:code_generator See http://go/cds-schema-council for details.
 * LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityDniExtendedNewsPreviews extends com.google.api.client.json.GenericJson {

  /**
   * Publisher's country code (ISO-3166) Used in V0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String countryCode;

  /**
   * List of countries that desnippet the publisher. ISO 3166-1-alpha-2 country code (such as FR).
   * See go/iiuse#region-identifiers. Used in V1.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> desnippetedCountryCode;

  /**
   * Search Console Signals that modifies how policy are calculated. Didn't add
   * `wmconsole.EnpDesnippetingOverrideRules` direcly to avoid cicular dependency issue:
   * go/enp-v2#bookmark=id.dvb1qcltabv9 ENPv2 proto (EnpDesnippetingOverrideRules):
   * google3/crawler/wmconsole/proto/config_enp_desnippeting_override_rules.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String policyCriteriaBase64;

  /**
   * ENP status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * The default version is V0 (for backward compatibility).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Publisher's country code (ISO-3166) Used in V0.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }

  /**
   * Publisher's country code (ISO-3166) Used in V0.
   * @param countryCode countryCode or {@code null} for none
   */
  public QualityDniExtendedNewsPreviews setCountryCode(java.lang.String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * List of countries that desnippet the publisher. ISO 3166-1-alpha-2 country code (such as FR).
   * See go/iiuse#region-identifiers. Used in V1.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDesnippetedCountryCode() {
    return desnippetedCountryCode;
  }

  /**
   * List of countries that desnippet the publisher. ISO 3166-1-alpha-2 country code (such as FR).
   * See go/iiuse#region-identifiers. Used in V1.
   * @param desnippetedCountryCode desnippetedCountryCode or {@code null} for none
   */
  public QualityDniExtendedNewsPreviews setDesnippetedCountryCode(java.util.List<java.lang.String> desnippetedCountryCode) {
    this.desnippetedCountryCode = desnippetedCountryCode;
    return this;
  }

  /**
   * Search Console Signals that modifies how policy are calculated. Didn't add
   * `wmconsole.EnpDesnippetingOverrideRules` direcly to avoid cicular dependency issue:
   * go/enp-v2#bookmark=id.dvb1qcltabv9 ENPv2 proto (EnpDesnippetingOverrideRules):
   * google3/crawler/wmconsole/proto/config_enp_desnippeting_override_rules.proto
   * @return value or {@code null} for none
   */
  public java.lang.String getPolicyCriteriaBase64() {
    return policyCriteriaBase64;
  }

  /**
   * Search Console Signals that modifies how policy are calculated. Didn't add
   * `wmconsole.EnpDesnippetingOverrideRules` direcly to avoid cicular dependency issue:
   * go/enp-v2#bookmark=id.dvb1qcltabv9 ENPv2 proto (EnpDesnippetingOverrideRules):
   * google3/crawler/wmconsole/proto/config_enp_desnippeting_override_rules.proto
   * @param policyCriteriaBase64 policyCriteriaBase64 or {@code null} for none
   */
  public QualityDniExtendedNewsPreviews setPolicyCriteriaBase64(java.lang.String policyCriteriaBase64) {
    this.policyCriteriaBase64 = policyCriteriaBase64;
    return this;
  }

  /**
   * ENP status.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * ENP status.
   * @param status status or {@code null} for none
   */
  public QualityDniExtendedNewsPreviews setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * The default version is V0 (for backward compatibility).
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * The default version is V0 (for backward compatibility).
   * @param version version or {@code null} for none
   */
  public QualityDniExtendedNewsPreviews setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public QualityDniExtendedNewsPreviews set(String fieldName, Object value) {
    return (QualityDniExtendedNewsPreviews) super.set(fieldName, value);
  }

  @Override
  public QualityDniExtendedNewsPreviews clone() {
    return (QualityDniExtendedNewsPreviews) super.clone();
  }

}
