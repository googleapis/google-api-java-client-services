/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.serviceusage.v1beta1;

/**
 * Service definition for ServiceUsage (v1beta1).
 *
 * <p>
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/service-usage/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ServiceUsageRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ServiceUsage extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Service Usage API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://serviceusage.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://serviceusage.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ServiceUsage(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ServiceUsage(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
   *   {@code ServiceUsage.Operations.List request = serviceusage.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

      private static final String REST_PATH = "v1beta1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/[^/]+$");

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support
     * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override
     * the binding to use different resource name schemes, such as `users/operations`. To override the
     * binding, API services can add a binding such as `"/v1/{name=users}/operations"` to their service
     * configuration. For backwards compatibility, the default name includes the operations collection
     * id, however overriding users must ensure the name binding is the parent resource, without the
     * operations collection id.
     *
     * Create a request for the method "operations.list".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ListOperationsResponse> {

      private static final String REST_PATH = "v1beta1/operations";

      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to
       * override the binding to use different resource name schemes, such as `users/operations`. To
       * override the binding, API services can add a binding such as `"/v1/{name=users}/operations"` to
       * their service configuration. For backwards compatibility, the default name includes the
       * operations collection id, however overriding users must ensure the name binding is the parent
       * resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ListOperationsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The standard list filter. */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** The standard list filter.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /** The standard list filter. */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /** The name of the operation's parent resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation's parent resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation's parent resource. */
      public List setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      /** The standard list page size. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The standard list page size.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** The standard list page size. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The standard list page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The standard list page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The standard list page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Services collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
   *   {@code ServiceUsage.Services.List request = serviceusage.services().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Services services() {
    return new Services();
  }

  /**
   * The "services" collection of methods.
   */
  public class Services {

    /**
     * Enable multiple services on a project. The operation is atomic: if enabling any service fails,
     * then the entire batch fails, and no state changes occur. Operation
     *
     * Create a request for the method "services.batchEnable".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link BatchEnable#execute()} method to invoke the remote operation.
     *
     * @param parent Parent to enable services on. An example name would be: `projects/123` where `123` is the project
     *        number (not project ID). The `BatchEnableServices` method currently only supports
     *        projects.
     * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.BatchEnableServicesRequest}
     * @return the request
     */
    public BatchEnable batchEnable(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.BatchEnableServicesRequest content) throws java.io.IOException {
      BatchEnable result = new BatchEnable(parent, content);
      initialize(result);
      return result;
    }

    public class BatchEnable extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

      private static final String REST_PATH = "v1beta1/{+parent}/services:batchEnable";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * Enable multiple services on a project. The operation is atomic: if enabling any service fails,
       * then the entire batch fails, and no state changes occur. Operation
       *
       * Create a request for the method "services.batchEnable".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link BatchEnable#execute()} method to invoke the remote
       * operation. <p> {@link
       * BatchEnable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Parent to enable services on. An example name would be: `projects/123` where `123` is the project
     *        number (not project ID). The `BatchEnableServices` method currently only supports
     *        projects.
       * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.BatchEnableServicesRequest}
       * @since 1.13
       */
      protected BatchEnable(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.BatchEnableServicesRequest content) {
        super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public BatchEnable set$Xgafv(java.lang.String $Xgafv) {
        return (BatchEnable) super.set$Xgafv($Xgafv);
      }

      @Override
      public BatchEnable setAccessToken(java.lang.String accessToken) {
        return (BatchEnable) super.setAccessToken(accessToken);
      }

      @Override
      public BatchEnable setAlt(java.lang.String alt) {
        return (BatchEnable) super.setAlt(alt);
      }

      @Override
      public BatchEnable setCallback(java.lang.String callback) {
        return (BatchEnable) super.setCallback(callback);
      }

      @Override
      public BatchEnable setFields(java.lang.String fields) {
        return (BatchEnable) super.setFields(fields);
      }

      @Override
      public BatchEnable setKey(java.lang.String key) {
        return (BatchEnable) super.setKey(key);
      }

      @Override
      public BatchEnable setOauthToken(java.lang.String oauthToken) {
        return (BatchEnable) super.setOauthToken(oauthToken);
      }

      @Override
      public BatchEnable setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (BatchEnable) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public BatchEnable setQuotaUser(java.lang.String quotaUser) {
        return (BatchEnable) super.setQuotaUser(quotaUser);
      }

      @Override
      public BatchEnable setUploadType(java.lang.String uploadType) {
        return (BatchEnable) super.setUploadType(uploadType);
      }

      @Override
      public BatchEnable setUploadProtocol(java.lang.String uploadProtocol) {
        return (BatchEnable) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Parent to enable services on. An example name would be: `projects/123` where `123` is the
       * project number (not project ID). The `BatchEnableServices` method currently only supports
       * projects.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Parent to enable services on. An example name would be: `projects/123` where `123` is the project
     number (not project ID). The `BatchEnableServices` method currently only supports projects.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Parent to enable services on. An example name would be: `projects/123` where `123` is the
       * project number (not project ID). The `BatchEnableServices` method currently only supports
       * projects.
       */
      public BatchEnable setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public BatchEnable set(String parameterName, Object value) {
        return (BatchEnable) super.set(parameterName, value);
      }
    }
    /**
     * Disable a service so that it can no longer be used with a project. This prevents unintended usage
     * that may cause unexpected billing charges or security leaks. It is not valid to call the disable
     * method on a service that is not currently enabled. Callers will receive a `FAILED_PRECONDITION`
     * status if the target service is not currently enabled. Operation
     *
     * Create a request for the method "services.disable".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link Disable#execute()} method to invoke the remote operation.
     *
     * @param name Name of the consumer and service to disable the service on. The enable and disable methods currently
     *        only support projects. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
     * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.DisableServiceRequest}
     * @return the request
     */
    public Disable disable(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.DisableServiceRequest content) throws java.io.IOException {
      Disable result = new Disable(name, content);
      initialize(result);
      return result;
    }

    public class Disable extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

      private static final String REST_PATH = "v1beta1/{+name}:disable";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

      /**
       * Disable a service so that it can no longer be used with a project. This prevents unintended
       * usage that may cause unexpected billing charges or security leaks. It is not valid to call the
       * disable method on a service that is not currently enabled. Callers will receive a
       * `FAILED_PRECONDITION` status if the target service is not currently enabled. Operation
       *
       * Create a request for the method "services.disable".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link Disable#execute()} method to invoke the remote operation.
       * <p> {@link
       * Disable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Name of the consumer and service to disable the service on. The enable and disable methods currently
     *        only support projects. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
       * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.DisableServiceRequest}
       * @since 1.13
       */
      protected Disable(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.DisableServiceRequest content) {
        super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
      }

      @Override
      public Disable set$Xgafv(java.lang.String $Xgafv) {
        return (Disable) super.set$Xgafv($Xgafv);
      }

      @Override
      public Disable setAccessToken(java.lang.String accessToken) {
        return (Disable) super.setAccessToken(accessToken);
      }

      @Override
      public Disable setAlt(java.lang.String alt) {
        return (Disable) super.setAlt(alt);
      }

      @Override
      public Disable setCallback(java.lang.String callback) {
        return (Disable) super.setCallback(callback);
      }

      @Override
      public Disable setFields(java.lang.String fields) {
        return (Disable) super.setFields(fields);
      }

      @Override
      public Disable setKey(java.lang.String key) {
        return (Disable) super.setKey(key);
      }

      @Override
      public Disable setOauthToken(java.lang.String oauthToken) {
        return (Disable) super.setOauthToken(oauthToken);
      }

      @Override
      public Disable setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Disable) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Disable setQuotaUser(java.lang.String quotaUser) {
        return (Disable) super.setQuotaUser(quotaUser);
      }

      @Override
      public Disable setUploadType(java.lang.String uploadType) {
        return (Disable) super.setUploadType(uploadType);
      }

      @Override
      public Disable setUploadProtocol(java.lang.String uploadProtocol) {
        return (Disable) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Name of the consumer and service to disable the service on. The enable and disable methods
       * currently only support projects. An example name would be:
       * `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
       * project ID).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Name of the consumer and service to disable the service on. The enable and disable methods
     currently only support projects. An example name would be:
     `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not project
     ID).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Name of the consumer and service to disable the service on. The enable and disable methods
       * currently only support projects. An example name would be:
       * `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
       * project ID).
       */
      public Disable setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Disable set(String parameterName, Object value) {
        return (Disable) super.set(parameterName, value);
      }
    }
    /**
     * Enable a service so that it can be used with a project. Operation
     *
     * Create a request for the method "services.enable".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link Enable#execute()} method to invoke the remote operation.
     *
     * @param name Name of the consumer and service to enable the service on. The `EnableService` and `DisableService`
     *        methods currently only support projects. Enabling a service requires that the service is
     *        public or is shared with the user enabling the service. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
     * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.EnableServiceRequest}
     * @return the request
     */
    public Enable enable(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.EnableServiceRequest content) throws java.io.IOException {
      Enable result = new Enable(name, content);
      initialize(result);
      return result;
    }

    public class Enable extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

      private static final String REST_PATH = "v1beta1/{+name}:enable";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

      /**
       * Enable a service so that it can be used with a project. Operation
       *
       * Create a request for the method "services.enable".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link Enable#execute()} method to invoke the remote operation.
       * <p> {@link
       * Enable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Name of the consumer and service to enable the service on. The `EnableService` and `DisableService`
     *        methods currently only support projects. Enabling a service requires that the service is
     *        public or is shared with the user enabling the service. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
       * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.EnableServiceRequest}
       * @since 1.13
       */
      protected Enable(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.EnableServiceRequest content) {
        super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
      }

      @Override
      public Enable set$Xgafv(java.lang.String $Xgafv) {
        return (Enable) super.set$Xgafv($Xgafv);
      }

      @Override
      public Enable setAccessToken(java.lang.String accessToken) {
        return (Enable) super.setAccessToken(accessToken);
      }

      @Override
      public Enable setAlt(java.lang.String alt) {
        return (Enable) super.setAlt(alt);
      }

      @Override
      public Enable setCallback(java.lang.String callback) {
        return (Enable) super.setCallback(callback);
      }

      @Override
      public Enable setFields(java.lang.String fields) {
        return (Enable) super.setFields(fields);
      }

      @Override
      public Enable setKey(java.lang.String key) {
        return (Enable) super.setKey(key);
      }

      @Override
      public Enable setOauthToken(java.lang.String oauthToken) {
        return (Enable) super.setOauthToken(oauthToken);
      }

      @Override
      public Enable setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Enable) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Enable setQuotaUser(java.lang.String quotaUser) {
        return (Enable) super.setQuotaUser(quotaUser);
      }

      @Override
      public Enable setUploadType(java.lang.String uploadType) {
        return (Enable) super.setUploadType(uploadType);
      }

      @Override
      public Enable setUploadProtocol(java.lang.String uploadProtocol) {
        return (Enable) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Name of the consumer and service to enable the service on. The `EnableService` and
       * `DisableService` methods currently only support projects. Enabling a service requires that
       * the service is public or is shared with the user enabling the service. An example name
       * would be: `projects/123/services/serviceusage.googleapis.com` where `123` is the project
       * number (not project ID).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Name of the consumer and service to enable the service on. The `EnableService` and `DisableService`
     methods currently only support projects. Enabling a service requires that the service is public or
     is shared with the user enabling the service. An example name would be:
     `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not project
     ID).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Name of the consumer and service to enable the service on. The `EnableService` and
       * `DisableService` methods currently only support projects. Enabling a service requires that
       * the service is public or is shared with the user enabling the service. An example name
       * would be: `projects/123/services/serviceusage.googleapis.com` where `123` is the project
       * number (not project ID).
       */
      public Enable setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Enable set(String parameterName, Object value) {
        return (Enable) super.set(parameterName, value);
      }
    }
    /**
     * Generate service identity for service.
     *
     * Create a request for the method "services.generateServiceIdentity".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link GenerateServiceIdentity#execute()} method to invoke the remote
     * operation.
     *
     * @param parent Name of the consumer and service to generate an identity for. The `GenerateServiceIdentity` methods
     *        currently only support projects. An example name would be:
     *        `projects/123/services/example.googleapis.com` where `123` is the project number.
     * @return the request
     */
    public GenerateServiceIdentity generateServiceIdentity(java.lang.String parent) throws java.io.IOException {
      GenerateServiceIdentity result = new GenerateServiceIdentity(parent);
      initialize(result);
      return result;
    }

    public class GenerateServiceIdentity extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

      private static final String REST_PATH = "v1beta1/{+parent}:generateServiceIdentity";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

      /**
       * Generate service identity for service.
       *
       * Create a request for the method "services.generateServiceIdentity".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link GenerateServiceIdentity#execute()} method to invoke the
       * remote operation. <p> {@link GenerateServiceIdentity#initialize(com.google.api.client.googleapi
       * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param parent Name of the consumer and service to generate an identity for. The `GenerateServiceIdentity` methods
     *        currently only support projects. An example name would be:
     *        `projects/123/services/example.googleapis.com` where `123` is the project number.
       * @since 1.13
       */
      protected GenerateServiceIdentity(java.lang.String parent) {
        super(ServiceUsage.this, "POST", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
      }

      @Override
      public GenerateServiceIdentity set$Xgafv(java.lang.String $Xgafv) {
        return (GenerateServiceIdentity) super.set$Xgafv($Xgafv);
      }

      @Override
      public GenerateServiceIdentity setAccessToken(java.lang.String accessToken) {
        return (GenerateServiceIdentity) super.setAccessToken(accessToken);
      }

      @Override
      public GenerateServiceIdentity setAlt(java.lang.String alt) {
        return (GenerateServiceIdentity) super.setAlt(alt);
      }

      @Override
      public GenerateServiceIdentity setCallback(java.lang.String callback) {
        return (GenerateServiceIdentity) super.setCallback(callback);
      }

      @Override
      public GenerateServiceIdentity setFields(java.lang.String fields) {
        return (GenerateServiceIdentity) super.setFields(fields);
      }

      @Override
      public GenerateServiceIdentity setKey(java.lang.String key) {
        return (GenerateServiceIdentity) super.setKey(key);
      }

      @Override
      public GenerateServiceIdentity setOauthToken(java.lang.String oauthToken) {
        return (GenerateServiceIdentity) super.setOauthToken(oauthToken);
      }

      @Override
      public GenerateServiceIdentity setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GenerateServiceIdentity) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GenerateServiceIdentity setQuotaUser(java.lang.String quotaUser) {
        return (GenerateServiceIdentity) super.setQuotaUser(quotaUser);
      }

      @Override
      public GenerateServiceIdentity setUploadType(java.lang.String uploadType) {
        return (GenerateServiceIdentity) super.setUploadType(uploadType);
      }

      @Override
      public GenerateServiceIdentity setUploadProtocol(java.lang.String uploadProtocol) {
        return (GenerateServiceIdentity) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Name of the consumer and service to generate an identity for. The `GenerateServiceIdentity`
       * methods currently only support projects. An example name would be:
       * `projects/123/services/example.googleapis.com` where `123` is the project number.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Name of the consumer and service to generate an identity for. The `GenerateServiceIdentity` methods
     currently only support projects. An example name would be:
     `projects/123/services/example.googleapis.com` where `123` is the project number.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Name of the consumer and service to generate an identity for. The `GenerateServiceIdentity`
       * methods currently only support projects. An example name would be:
       * `projects/123/services/example.googleapis.com` where `123` is the project number.
       */
      public GenerateServiceIdentity setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public GenerateServiceIdentity set(String parameterName, Object value) {
        return (GenerateServiceIdentity) super.set(parameterName, value);
      }
    }
    /**
     * Returns the service configuration and enabled state for a given service.
     *
     * Create a request for the method "services.get".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Name of the consumer and service to get the `ConsumerState` for. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Service> {

      private static final String REST_PATH = "v1beta1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

      /**
       * Returns the service configuration and enabled state for a given service.
       *
       * Create a request for the method "services.get".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Name of the consumer and service to get the `ConsumerState` for. An example name would be:
     *        `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
     *        project ID).
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.Service.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Name of the consumer and service to get the `ConsumerState` for. An example name would be:
       * `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
       * project ID).
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Name of the consumer and service to get the `ConsumerState` for. An example name would be:
     `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not project
     ID).
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Name of the consumer and service to get the `ConsumerState` for. An example name would be:
       * `projects/123/services/serviceusage.googleapis.com` where `123` is the project number (not
       * project ID).
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^[^/]+/[^/]+/services/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * List all services available to the specified project, and the current state of those services
     * with respect to the project. The list includes all public services, all services for which the
     * calling user has the `servicemanagement.services.bind` permission, and all services that have
     * already been enabled on the project. The list can be filtered to only include services in a
     * specific state, for example to only include services enabled on the project.
     *
     * Create a request for the method "services.list".
     *
     * This request holds the parameters needed by the serviceusage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Parent to search for services on. An example name would be: `projects/123` where `123` is the
     *        project number (not project ID).
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ListServicesResponse> {

      private static final String REST_PATH = "v1beta1/{+parent}/services";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+/[^/]+$");

      /**
       * List all services available to the specified project, and the current state of those services
       * with respect to the project. The list includes all public services, all services for which the
       * calling user has the `servicemanagement.services.bind` permission, and all services that have
       * already been enabled on the project. The list can be filtered to only include services in a
       * specific state, for example to only include services enabled on the project.
       *
       * Create a request for the method "services.list".
       *
       * This request holds the parameters needed by the the serviceusage server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Parent to search for services on. An example name would be: `projects/123` where `123` is the
     *        project number (not project ID).
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ListServicesResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Parent to search for services on. An example name would be: `projects/123` where `123` is
       * the project number (not project ID).
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Parent to search for services on. An example name would be: `projects/123` where `123` is the
     project number (not project ID).
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Parent to search for services on. An example name would be: `projects/123` where `123` is
       * the project number (not project ID).
       */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^[^/]+/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /**
       * Only list services that conform to the given filter. The allowed filter strings are
       * `state:ENABLED` and `state:DISABLED`.
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Only list services that conform to the given filter. The allowed filter strings are `state:ENABLED`
     and `state:DISABLED`.
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Only list services that conform to the given filter. The allowed filter strings are
       * `state:ENABLED` and `state:DISABLED`.
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * Requested size of the next page of data. Requested page size cannot exceed 200. If not set,
       * the default page size is 50.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Requested size of the next page of data. Requested page size cannot exceed 200. If not set, the
     default page size is 50.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Requested size of the next page of data. Requested page size cannot exceed 200. If not set,
       * the default page size is 50.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Token identifying which result to start with, which is returned by a previous list call.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Token identifying which result to start with, which is returned by a previous list call.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Token identifying which result to start with, which is returned by a previous list call.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the ConsumerQuotaMetrics collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
     *   {@code ServiceUsage.ConsumerQuotaMetrics.List request = serviceusage.consumerQuotaMetrics().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ConsumerQuotaMetrics consumerQuotaMetrics() {
      return new ConsumerQuotaMetrics();
    }

    /**
     * The "consumerQuotaMetrics" collection of methods.
     */
    public class ConsumerQuotaMetrics {

      /**
       * Retrieves a summary of quota information for a specific quota metric
       *
       * Create a request for the method "consumerQuotaMetrics.get".
       *
       * This request holds the parameters needed by the serviceusage server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the quota limit. An example name would be: projects/123/services/serviceusage.g
       *        oogleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ConsumerQuotaMetric> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+$");

        /**
         * Retrieves a summary of quota information for a specific quota metric
         *
         * Create a request for the method "consumerQuotaMetrics.get".
         *
         * This request holds the parameters needed by the the serviceusage server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the quota limit. An example name would be: projects/123/services/serviceusage.g
       *        oogleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ConsumerQuotaMetric.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the quota limit. An example name would be: projects/123/services/ser
         * viceusage.googleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the quota limit. An example name would be: projects/123/services/serviceusage.
       googleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The resource name of the quota limit. An example name would be: projects/123/services/ser
         * viceusage.googleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Specifies the level of detail for quota information in the response. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Specifies the level of detail for quota information in the response.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Specifies the level of detail for quota information in the response. */
        public Get setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Create or update multiple admin overrides atomically, all on the same consumer, but on many
       * different metrics or limits. The name field in the quota override message should not be set.
       *
       * Create a request for the method "consumerQuotaMetrics.importAdminOverrides".
       *
       * This request holds the parameters needed by the serviceusage server.  After setting any optional
       * parameters, call the {@link ImportAdminOverrides#execute()} method to invoke the remote
       * operation.
       *
       * @param parent The resource name of the consumer. An example name would be:
       *        `projects/123/services/compute.googleapis.com`
       * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.ImportAdminOverridesRequest}
       * @return the request
       */
      public ImportAdminOverrides importAdminOverrides(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.ImportAdminOverridesRequest content) throws java.io.IOException {
        ImportAdminOverrides result = new ImportAdminOverrides(parent, content);
        initialize(result);
        return result;
      }

      public class ImportAdminOverrides extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

        private static final String REST_PATH = "v1beta1/{+parent}/consumerQuotaMetrics:importAdminOverrides";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

        /**
         * Create or update multiple admin overrides atomically, all on the same consumer, but on many
         * different metrics or limits. The name field in the quota override message should not be set.
         *
         * Create a request for the method "consumerQuotaMetrics.importAdminOverrides".
         *
         * This request holds the parameters needed by the the serviceusage server.  After setting any
         * optional parameters, call the {@link ImportAdminOverrides#execute()} method to invoke the
         * remote operation. <p> {@link ImportAdminOverrides#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param parent The resource name of the consumer. An example name would be:
       *        `projects/123/services/compute.googleapis.com`
         * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.ImportAdminOverridesRequest}
         * @since 1.13
         */
        protected ImportAdminOverrides(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.ImportAdminOverridesRequest content) {
          super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
        }

        @Override
        public ImportAdminOverrides set$Xgafv(java.lang.String $Xgafv) {
          return (ImportAdminOverrides) super.set$Xgafv($Xgafv);
        }

        @Override
        public ImportAdminOverrides setAccessToken(java.lang.String accessToken) {
          return (ImportAdminOverrides) super.setAccessToken(accessToken);
        }

        @Override
        public ImportAdminOverrides setAlt(java.lang.String alt) {
          return (ImportAdminOverrides) super.setAlt(alt);
        }

        @Override
        public ImportAdminOverrides setCallback(java.lang.String callback) {
          return (ImportAdminOverrides) super.setCallback(callback);
        }

        @Override
        public ImportAdminOverrides setFields(java.lang.String fields) {
          return (ImportAdminOverrides) super.setFields(fields);
        }

        @Override
        public ImportAdminOverrides setKey(java.lang.String key) {
          return (ImportAdminOverrides) super.setKey(key);
        }

        @Override
        public ImportAdminOverrides setOauthToken(java.lang.String oauthToken) {
          return (ImportAdminOverrides) super.setOauthToken(oauthToken);
        }

        @Override
        public ImportAdminOverrides setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ImportAdminOverrides) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ImportAdminOverrides setQuotaUser(java.lang.String quotaUser) {
          return (ImportAdminOverrides) super.setQuotaUser(quotaUser);
        }

        @Override
        public ImportAdminOverrides setUploadType(java.lang.String uploadType) {
          return (ImportAdminOverrides) super.setUploadType(uploadType);
        }

        @Override
        public ImportAdminOverrides setUploadProtocol(java.lang.String uploadProtocol) {
          return (ImportAdminOverrides) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the consumer. An example name would be:
         * `projects/123/services/compute.googleapis.com`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The resource name of the consumer. An example name would be:
       `projects/123/services/compute.googleapis.com`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The resource name of the consumer. An example name would be:
         * `projects/123/services/compute.googleapis.com`
         */
        public ImportAdminOverrides setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public ImportAdminOverrides set(String parameterName, Object value) {
          return (ImportAdminOverrides) super.set(parameterName, value);
        }
      }
      /**
       * Create or update multiple consumer overrides atomically, all on the same consumer, but on many
       * different metrics or limits. The name field in the quota override message should not be set.
       *
       * Create a request for the method "consumerQuotaMetrics.importConsumerOverrides".
       *
       * This request holds the parameters needed by the serviceusage server.  After setting any optional
       * parameters, call the {@link ImportConsumerOverrides#execute()} method to invoke the remote
       * operation.
       *
       * @param parent The resource name of the consumer. An example name would be:
       *        `projects/123/services/compute.googleapis.com`
       * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.ImportConsumerOverridesRequest}
       * @return the request
       */
      public ImportConsumerOverrides importConsumerOverrides(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.ImportConsumerOverridesRequest content) throws java.io.IOException {
        ImportConsumerOverrides result = new ImportConsumerOverrides(parent, content);
        initialize(result);
        return result;
      }

      public class ImportConsumerOverrides extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

        private static final String REST_PATH = "v1beta1/{+parent}/consumerQuotaMetrics:importConsumerOverrides";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

        /**
         * Create or update multiple consumer overrides atomically, all on the same consumer, but on many
         * different metrics or limits. The name field in the quota override message should not be set.
         *
         * Create a request for the method "consumerQuotaMetrics.importConsumerOverrides".
         *
         * This request holds the parameters needed by the the serviceusage server.  After setting any
         * optional parameters, call the {@link ImportConsumerOverrides#execute()} method to invoke the
         * remote operation. <p> {@link ImportConsumerOverrides#initialize(com.google.api.client.googleapi
         * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param parent The resource name of the consumer. An example name would be:
       *        `projects/123/services/compute.googleapis.com`
         * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.ImportConsumerOverridesRequest}
         * @since 1.13
         */
        protected ImportConsumerOverrides(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.ImportConsumerOverridesRequest content) {
          super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
        }

        @Override
        public ImportConsumerOverrides set$Xgafv(java.lang.String $Xgafv) {
          return (ImportConsumerOverrides) super.set$Xgafv($Xgafv);
        }

        @Override
        public ImportConsumerOverrides setAccessToken(java.lang.String accessToken) {
          return (ImportConsumerOverrides) super.setAccessToken(accessToken);
        }

        @Override
        public ImportConsumerOverrides setAlt(java.lang.String alt) {
          return (ImportConsumerOverrides) super.setAlt(alt);
        }

        @Override
        public ImportConsumerOverrides setCallback(java.lang.String callback) {
          return (ImportConsumerOverrides) super.setCallback(callback);
        }

        @Override
        public ImportConsumerOverrides setFields(java.lang.String fields) {
          return (ImportConsumerOverrides) super.setFields(fields);
        }

        @Override
        public ImportConsumerOverrides setKey(java.lang.String key) {
          return (ImportConsumerOverrides) super.setKey(key);
        }

        @Override
        public ImportConsumerOverrides setOauthToken(java.lang.String oauthToken) {
          return (ImportConsumerOverrides) super.setOauthToken(oauthToken);
        }

        @Override
        public ImportConsumerOverrides setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ImportConsumerOverrides) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ImportConsumerOverrides setQuotaUser(java.lang.String quotaUser) {
          return (ImportConsumerOverrides) super.setQuotaUser(quotaUser);
        }

        @Override
        public ImportConsumerOverrides setUploadType(java.lang.String uploadType) {
          return (ImportConsumerOverrides) super.setUploadType(uploadType);
        }

        @Override
        public ImportConsumerOverrides setUploadProtocol(java.lang.String uploadProtocol) {
          return (ImportConsumerOverrides) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The resource name of the consumer. An example name would be:
         * `projects/123/services/compute.googleapis.com`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The resource name of the consumer. An example name would be:
       `projects/123/services/compute.googleapis.com`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The resource name of the consumer. An example name would be:
         * `projects/123/services/compute.googleapis.com`
         */
        public ImportConsumerOverrides setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public ImportConsumerOverrides set(String parameterName, Object value) {
          return (ImportConsumerOverrides) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves a summary of all quota information visible to the service consumer, organized by
       * service metric. Each metric includes information about all of its defined limits. Each limit
       * includes the limit configuration (quota unit, preciseness, default value), the current effective
       * limit value, and all of the overrides applied to the limit.
       *
       * Create a request for the method "consumerQuotaMetrics.list".
       *
       * This request holds the parameters needed by the serviceusage server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Parent of the quotas resource. Some example names would be:
       *        projects/123/services/serviceconsumermanagement.googleapis.com
       *        folders/345/services/serviceconsumermanagement.googleapis.com
       *        organizations/456/services/serviceconsumermanagement.googleapis.com
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ListConsumerQuotaMetricsResponse> {

        private static final String REST_PATH = "v1beta1/{+parent}/consumerQuotaMetrics";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+$");

        /**
         * Retrieves a summary of all quota information visible to the service consumer, organized by
         * service metric. Each metric includes information about all of its defined limits. Each limit
         * includes the limit configuration (quota unit, preciseness, default value), the current
         * effective limit value, and all of the overrides applied to the limit.
         *
         * Create a request for the method "consumerQuotaMetrics.list".
         *
         * This request holds the parameters needed by the the serviceusage server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Parent of the quotas resource. Some example names would be:
       *        projects/123/services/serviceconsumermanagement.googleapis.com
       *        folders/345/services/serviceconsumermanagement.googleapis.com
       *        organizations/456/services/serviceconsumermanagement.googleapis.com
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ListConsumerQuotaMetricsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Parent of the quotas resource. Some example names would be:
         * projects/123/services/serviceconsumermanagement.googleapis.com
         * folders/345/services/serviceconsumermanagement.googleapis.com
         * organizations/456/services/serviceconsumermanagement.googleapis.com
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Parent of the quotas resource. Some example names would be:
       projects/123/services/serviceconsumermanagement.googleapis.com
       folders/345/services/serviceconsumermanagement.googleapis.com
       organizations/456/services/serviceconsumermanagement.googleapis.com
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Parent of the quotas resource. Some example names would be:
         * projects/123/services/serviceconsumermanagement.googleapis.com
         * folders/345/services/serviceconsumermanagement.googleapis.com
         * organizations/456/services/serviceconsumermanagement.googleapis.com
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^[^/]+/[^/]+/services/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Requested size of the next page of data. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested size of the next page of data.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Requested size of the next page of data. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token identifying which result to start with; returned by a previous list call. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token identifying which result to start with; returned by a previous list call.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token identifying which result to start with; returned by a previous list call. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Specifies the level of detail for quota information in the response. */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** Specifies the level of detail for quota information in the response.
         */
        public java.lang.String getView() {
          return view;
        }

        /** Specifies the level of detail for quota information in the response. */
        public List setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Limits collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
       *   {@code ServiceUsage.Limits.List request = serviceusage.limits().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Limits limits() {
        return new Limits();
      }

      /**
       * The "limits" collection of methods.
       */
      public class Limits {

        /**
         * Retrieves a summary of quota information for a specific quota limit.
         *
         * Create a request for the method "limits.get".
         *
         * This request holds the parameters needed by the serviceusage server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the quota limit. Use the quota limit resource name returned by previous
         *        ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ConsumerQuotaLimit> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");

          /**
           * Retrieves a summary of quota information for a specific quota limit.
           *
           * Create a request for the method "limits.get".
           *
           * This request holds the parameters needed by the the serviceusage server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the quota limit. Use the quota limit resource name returned by previous
         *        ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ConsumerQuotaLimit.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the quota limit. Use the quota limit resource name returned by
           * previous ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the quota limit. Use the quota limit resource name returned by previous
         ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the quota limit. Use the quota limit resource name returned by
           * previous ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Specifies the level of detail for quota information in the response. */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** Specifies the level of detail for quota information in the response.
           */
          public java.lang.String getView() {
            return view;
          }

          /** Specifies the level of detail for quota information in the response. */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the AdminOverrides collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
         *   {@code ServiceUsage.AdminOverrides.List request = serviceusage.adminOverrides().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public AdminOverrides adminOverrides() {
          return new AdminOverrides();
        }

        /**
         * The "adminOverrides" collection of methods.
         */
        public class AdminOverrides {

          /**
           * Creates an admin override. An admin override is applied by an administrator of a parent folder or
           * parent organization of the consumer receiving the override. An admin override is intended to
           * limit the amount of quota the consumer can use out of the total quota pool allocated to all
           * children of the folder or organization.
           *
           * Create a request for the method "adminOverrides.create".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
           * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/adminOverrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");

            /**
             * Creates an admin override. An admin override is applied by an administrator of a parent folder
             * or parent organization of the consumer receiving the override. An admin override is intended to
             * limit the amount of quota the consumer can use out of the total quota pool allocated to all
             * children of the folder or organization.
             *
             * Create a request for the method "adminOverrides.create".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) {
              super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.googleapis.co
           m/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Whether to force the creation of the quota override. If creating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the creation of the quota override. If creating an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the creation of the quota override. If creating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Create setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an admin override.
           *
           * Create a request for the method "adminOverrides.delete".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the override to delete. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/adminOverrides/4a3f2c1d`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");

            /**
             * Deletes an admin override.
             *
             * Create a request for the method "adminOverrides.delete".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the override to delete. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/adminOverrides/4a3f2c1d`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(ServiceUsage.this, "DELETE", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the override to delete. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the override to delete. An example name would be: `projects/123/services/compu
           te.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adm
           inOverrides/4a3f2c1d`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The resource name of the override to delete. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Whether to force the deletion of the quota override. If deleting an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the deletion of the quota override. If deleting an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the deletion of the quota override. If deleting an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Lists all admin overrides on this limit.
           *
           * Create a request for the method "adminOverrides.list".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ListAdminOverridesResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/adminOverrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");

            /**
             * Lists all admin overrides on this limit.
             *
             * Create a request for the method "adminOverrides.list".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ListAdminOverridesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.googleapis.co
           m/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Requested size of the next page of data. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Requested size of the next page of data.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Requested size of the next page of data. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Token identifying which result to start with; returned by a previous list call. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Token identifying which result to start with; returned by a previous list call.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Token identifying which result to start with; returned by a previous list call. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an admin override.
           *
           * Create a request for the method "adminOverrides.patch".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the override to update. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/adminOverrides/4a3f2c1d`
           * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");

            /**
             * Updates an admin override.
             *
             * Create a request for the method "adminOverrides.patch".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the override to update. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/adminOverrides/4a3f2c1d`
             * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) {
              super(ServiceUsage.this, "PATCH", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the override to update. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the override to update. An example name would be: `projects/123/services/compu
           te.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adm
           inOverrides/4a3f2c1d`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The resource name of the override to update. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/adminOverrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Whether to force the update of the quota override. If updating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the update of the quota override. If updating an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the update of the quota override. If updating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Patch setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            /**
             * Update only the specified fields of the override. If unset, all fields will be
             * updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Update only the specified fields of the override. If unset, all fields will be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Update only the specified fields of the override. If unset, all fields will be
             * updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the ConsumerOverrides collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code ServiceUsage serviceusage = new ServiceUsage(...);}
         *   {@code ServiceUsage.ConsumerOverrides.List request = serviceusage.consumerOverrides().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ConsumerOverrides consumerOverrides() {
          return new ConsumerOverrides();
        }

        /**
         * The "consumerOverrides" collection of methods.
         */
        public class ConsumerOverrides {

          /**
           * Creates a consumer override. A consumer override is applied to the consumer on its own authority
           * to limit its own quota usage. Consumer overrides cannot be used to grant more quota than would be
           * allowed by admin overrides, producer overrides, or the default limit of the service.
           *
           * Create a request for the method "consumerOverrides.create".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
           * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+parent}/consumerOverrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");

            /**
             * Creates a consumer override. A consumer override is applied to the consumer on its own
             * authority to limit its own quota usage. Consumer overrides cannot be used to grant more quota
             * than would be allowed by admin overrides, producer overrides, or the default limit of the
             * service.
             *
             * Create a request for the method "consumerOverrides.create".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) {
              super(ServiceUsage.this, "POST", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.googleapis.co
           m/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Whether to force the creation of the quota override. If creating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the creation of the quota override. If creating an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the creation of the quota override. If creating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Create setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a consumer override.
           *
           * Create a request for the method "consumerOverrides.delete".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the override to delete. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/consumerOverrides/4a3f2c1d`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");

            /**
             * Deletes a consumer override.
             *
             * Create a request for the method "consumerOverrides.delete".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the override to delete. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/consumerOverrides/4a3f2c1d`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(ServiceUsage.this, "DELETE", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the override to delete. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the override to delete. An example name would be: `projects/123/services/compu
           te.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/con
           sumerOverrides/4a3f2c1d`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The resource name of the override to delete. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Whether to force the deletion of the quota override. If deleting an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the deletion of the quota override. If deleting an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the deletion of the quota override. If deleting an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Lists all consumer overrides on this limit.
           *
           * Create a request for the method "consumerOverrides.list".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.ListConsumerOverridesResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/consumerOverrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");

            /**
             * Lists all consumer overrides on this limit.
             *
             * Create a request for the method "consumerOverrides.list".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           *        GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.goog
           *        leapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(ServiceUsage.this, "GET", REST_PATH, null, com.google.api.services.serviceusage.v1beta1.model.ListConsumerOverridesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics or
           GetConsumerQuotaMetric call. An example name would be: `projects/123/services/compute.googleapis.co
           m/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * The resource name of the parent quota limit, returned by a ListConsumerQuotaMetrics
             * or GetConsumerQuotaMetric call. An example name would be: `projects/123/services/comp
             * ute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproje
             * ct%2Fregion`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Requested size of the next page of data. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Requested size of the next page of data.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** Requested size of the next page of data. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** Token identifying which result to start with; returned by a previous list call. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Token identifying which result to start with; returned by a previous list call.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** Token identifying which result to start with; returned by a previous list call. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a consumer override.
           *
           * Create a request for the method "consumerOverrides.patch".
           *
           * This request holds the parameters needed by the serviceusage server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the override to update. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/consumerOverrides/4a3f2c1d`
           * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ServiceUsageRequest<com.google.api.services.serviceusage.v1beta1.model.Operation> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");

            /**
             * Updates a consumer override.
             *
             * Create a request for the method "consumerOverrides.patch".
             *
             * This request holds the parameters needed by the the serviceusage server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the override to update. An example name would be: `projects/123/services/comput
           *        e.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fre
           *        gion/consumerOverrides/4a3f2c1d`
             * @param content the {@link com.google.api.services.serviceusage.v1beta1.model.QuotaOverride}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.serviceusage.v1beta1.model.QuotaOverride content) {
              super(ServiceUsage.this, "PATCH", REST_PATH, content, com.google.api.services.serviceusage.v1beta1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the override to update. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the override to update. An example name would be: `projects/123/services/compu
           te.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/con
           sumerOverrides/4a3f2c1d`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The resource name of the override to update. An example name would be: `projects/123/
             * services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/li
             * mits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^[^/]+/[^/]+/services/[^/]+/consumerQuotaMetrics/[^/]+/limits/[^/]+/consumerOverrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Whether to force the update of the quota override. If updating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Whether to force the update of the quota override. If updating an override would cause the
           effective quota for the consumer to decrease by more than 10 percent, the call is rejected, as a
           safety measure to avoid accidentally decreasing quota too quickly. Setting the force parameter to
           true ignores this restriction.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Whether to force the update of the quota override. If updating an override would
             * cause the effective quota for the consumer to decrease by more than 10 percent, the
             * call is rejected, as a safety measure to avoid accidentally decreasing quota too
             * quickly. Setting the force parameter to true ignores this restriction.
             */
            public Patch setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            /**
             * Update only the specified fields of the override. If unset, all fields will be
             * updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Update only the specified fields of the override. If unset, all fields will be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Update only the specified fields of the override. If unset, all fields will be
             * updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link ServiceUsage}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ServiceUsage}. */
    @Override
    public ServiceUsage build() {
      return new ServiceUsage(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ServiceUsageRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setServiceUsageRequestInitializer(
        ServiceUsageRequestInitializer serviceusageRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(serviceusageRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
