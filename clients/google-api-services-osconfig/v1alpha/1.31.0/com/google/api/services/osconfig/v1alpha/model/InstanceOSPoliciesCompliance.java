/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1alpha.model;

/**
 * This API resource represents the OS policies compliance data for a Compute Engine virtual machine
 * (VM) instance at a given point in time. A Compute Engine VM can have multiple OS policy
 * assignments, and each assignment can have multiple OS policies. As a result, multiple OS policies
 * could be applied to a single VM. You can use this API resource to determine both the compliance
 * state of your VM as well as the compliance state of an individual OS policy. For more
 * information, see [View compliance](https://cloud.google.com/compute/docs/os-configuration-
 * management/view-compliance).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InstanceOSPoliciesCompliance extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Detailed compliance state of the VM. This field is populated only when compliance
   * state is `UNKNOWN`. It may contain one of the following values: * `no-compliance-data`:
   * Compliance data is not available for this VM. * `no-agent-detected`: OS Config agent is not
   * detected for this VM. * `config-not-supported-by-agent`: The version of the OS Config agent
   * running on this VM does not support configuration management. * `inactive`: VM is not running.
   * * `internal-service-errors`: There were internal service errors encountered while enforcing
   * compliance. * `agent-errors`: OS config agent encountered errors while enforcing compliance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String detailedState;

  /**
   * Output only. The reason for the `detailed_state` of the VM (if any).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String detailedStateReason;

  /**
   * Output only. The Compute Engine VM instance name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instance;

  /**
   * Output only. Timestamp of the last compliance check for the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastComplianceCheckTime;

  /**
   * Output only. Unique identifier for the last compliance run. This id will be logged by the OS
   * config agent during a compliance run and can be used for debugging and tracing purpose.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lastComplianceRunId;

  /**
   * Output only. The `InstanceOSPoliciesCompliance` API resource name. Format:
   * `projects/{project_number}/locations/{location}/instanceOSPoliciesCompliances/{instance_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Compliance data for each `OSPolicy` that is applied to the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<InstanceOSPoliciesComplianceOSPolicyCompliance> osPolicyCompliances;

  /**
   * Output only. Compliance state of the VM.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Detailed compliance state of the VM. This field is populated only when compliance
   * state is `UNKNOWN`. It may contain one of the following values: * `no-compliance-data`:
   * Compliance data is not available for this VM. * `no-agent-detected`: OS Config agent is not
   * detected for this VM. * `config-not-supported-by-agent`: The version of the OS Config agent
   * running on this VM does not support configuration management. * `inactive`: VM is not running.
   * * `internal-service-errors`: There were internal service errors encountered while enforcing
   * compliance. * `agent-errors`: OS config agent encountered errors while enforcing compliance.
   * @return value or {@code null} for none
   */
  public java.lang.String getDetailedState() {
    return detailedState;
  }

  /**
   * Output only. Detailed compliance state of the VM. This field is populated only when compliance
   * state is `UNKNOWN`. It may contain one of the following values: * `no-compliance-data`:
   * Compliance data is not available for this VM. * `no-agent-detected`: OS Config agent is not
   * detected for this VM. * `config-not-supported-by-agent`: The version of the OS Config agent
   * running on this VM does not support configuration management. * `inactive`: VM is not running.
   * * `internal-service-errors`: There were internal service errors encountered while enforcing
   * compliance. * `agent-errors`: OS config agent encountered errors while enforcing compliance.
   * @param detailedState detailedState or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setDetailedState(java.lang.String detailedState) {
    this.detailedState = detailedState;
    return this;
  }

  /**
   * Output only. The reason for the `detailed_state` of the VM (if any).
   * @return value or {@code null} for none
   */
  public java.lang.String getDetailedStateReason() {
    return detailedStateReason;
  }

  /**
   * Output only. The reason for the `detailed_state` of the VM (if any).
   * @param detailedStateReason detailedStateReason or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setDetailedStateReason(java.lang.String detailedStateReason) {
    this.detailedStateReason = detailedStateReason;
    return this;
  }

  /**
   * Output only. The Compute Engine VM instance name.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstance() {
    return instance;
  }

  /**
   * Output only. The Compute Engine VM instance name.
   * @param instance instance or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setInstance(java.lang.String instance) {
    this.instance = instance;
    return this;
  }

  /**
   * Output only. Timestamp of the last compliance check for the VM.
   * @return value or {@code null} for none
   */
  public String getLastComplianceCheckTime() {
    return lastComplianceCheckTime;
  }

  /**
   * Output only. Timestamp of the last compliance check for the VM.
   * @param lastComplianceCheckTime lastComplianceCheckTime or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setLastComplianceCheckTime(String lastComplianceCheckTime) {
    this.lastComplianceCheckTime = lastComplianceCheckTime;
    return this;
  }

  /**
   * Output only. Unique identifier for the last compliance run. This id will be logged by the OS
   * config agent during a compliance run and can be used for debugging and tracing purpose.
   * @return value or {@code null} for none
   */
  public java.lang.String getLastComplianceRunId() {
    return lastComplianceRunId;
  }

  /**
   * Output only. Unique identifier for the last compliance run. This id will be logged by the OS
   * config agent during a compliance run and can be used for debugging and tracing purpose.
   * @param lastComplianceRunId lastComplianceRunId or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setLastComplianceRunId(java.lang.String lastComplianceRunId) {
    this.lastComplianceRunId = lastComplianceRunId;
    return this;
  }

  /**
   * Output only. The `InstanceOSPoliciesCompliance` API resource name. Format:
   * `projects/{project_number}/locations/{location}/instanceOSPoliciesCompliances/{instance_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The `InstanceOSPoliciesCompliance` API resource name. Format:
   * `projects/{project_number}/locations/{location}/instanceOSPoliciesCompliances/{instance_id}`
   * @param name name or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Compliance data for each `OSPolicy` that is applied to the VM.
   * @return value or {@code null} for none
   */
  public java.util.List<InstanceOSPoliciesComplianceOSPolicyCompliance> getOsPolicyCompliances() {
    return osPolicyCompliances;
  }

  /**
   * Output only. Compliance data for each `OSPolicy` that is applied to the VM.
   * @param osPolicyCompliances osPolicyCompliances or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setOsPolicyCompliances(java.util.List<InstanceOSPoliciesComplianceOSPolicyCompliance> osPolicyCompliances) {
    this.osPolicyCompliances = osPolicyCompliances;
    return this;
  }

  /**
   * Output only. Compliance state of the VM.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Compliance state of the VM.
   * @param state state or {@code null} for none
   */
  public InstanceOSPoliciesCompliance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public InstanceOSPoliciesCompliance set(String fieldName, Object value) {
    return (InstanceOSPoliciesCompliance) super.set(fieldName, value);
  }

  @Override
  public InstanceOSPoliciesCompliance clone() {
    return (InstanceOSPoliciesCompliance) super.clone();
  }

}
