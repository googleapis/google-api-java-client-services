/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The docshards are a FlatSSTable from (64-bit) urlfp to data containing the information found in
 * this protocol buffer. (It's not actually one of these PBs for various performance reasons;
 * instead, the DocumentFormat class handles serialization and deserialization in our own way) Next
 * available ID: 37
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TeragoogleDocumentInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TeragoogleDocumentInfoAttachment> attachment;

  /**
   * The average weight of terms in the document. If not available, there will be no term weight
   * averaging: font sizes will be taken literally from the document HTML.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer averageTermWeight;

  /**
   * The document itself. If present, the docservers parse the contents to create a mustang
   * repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GDocumentBase doc;

  /**
   * The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo
   * request is missing it and it's present.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String extendedDocid;

  /**
   * the global docid, we need it in the docservers (Continuum mode) to construct proper docinfo
   * response when the docinfo request does not contain a valid global docid
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger globalDocid;

  /**
   * If the original encoding isn't UTF8
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer originalEncoding;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TeragoogleDocumentInfoSection> section;

  /**
   * Indicates format of 'tokens' field in all Section entries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sectionType;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<TeragoogleDocumentInfoAttachment> getAttachment() {
    return attachment;
  }

  /**
   * @param attachment attachment or {@code null} for none
   */
  public TeragoogleDocumentInfo setAttachment(java.util.List<TeragoogleDocumentInfoAttachment> attachment) {
    this.attachment = attachment;
    return this;
  }

  /**
   * The average weight of terms in the document. If not available, there will be no term weight
   * averaging: font sizes will be taken literally from the document HTML.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAverageTermWeight() {
    return averageTermWeight;
  }

  /**
   * The average weight of terms in the document. If not available, there will be no term weight
   * averaging: font sizes will be taken literally from the document HTML.
   * @param averageTermWeight averageTermWeight or {@code null} for none
   */
  public TeragoogleDocumentInfo setAverageTermWeight(java.lang.Integer averageTermWeight) {
    this.averageTermWeight = averageTermWeight;
    return this;
  }

  /**
   * The document itself. If present, the docservers parse the contents to create a mustang
   * repository.
   * @return value or {@code null} for none
   */
  public GDocumentBase getDoc() {
    return doc;
  }

  /**
   * The document itself. If present, the docservers parse the contents to create a mustang
   * repository.
   * @param doc doc or {@code null} for none
   */
  public TeragoogleDocumentInfo setDoc(GDocumentBase doc) {
    this.doc = doc;
    return this;
  }

  /**
   * The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo
   * request is missing it and it's present.
   * @see #decodeExtendedDocid()
   * @return value or {@code null} for none
   */
  public java.lang.String getExtendedDocid() {
    return extendedDocid;
  }

  /**
   * The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo
   * request is missing it and it's present.
   * @see #getExtendedDocid()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeExtendedDocid() {
    return com.google.api.client.util.Base64.decodeBase64(extendedDocid);
  }

  /**
   * The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo
   * request is missing it and it's present.
   * @see #encodeExtendedDocid()
   * @param extendedDocid extendedDocid or {@code null} for none
   */
  public TeragoogleDocumentInfo setExtendedDocid(java.lang.String extendedDocid) {
    this.extendedDocid = extendedDocid;
    return this;
  }

  /**
   * The serialized ExtendedDocId, needed to construct a proper docinfo response if the docinfo
   * request is missing it and it's present.
   * @see #setExtendedDocid()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public TeragoogleDocumentInfo encodeExtendedDocid(byte[] extendedDocid) {
    this.extendedDocid = com.google.api.client.util.Base64.encodeBase64URLSafeString(extendedDocid);
    return this;
  }

  /**
   * the global docid, we need it in the docservers (Continuum mode) to construct proper docinfo
   * response when the docinfo request does not contain a valid global docid
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getGlobalDocid() {
    return globalDocid;
  }

  /**
   * the global docid, we need it in the docservers (Continuum mode) to construct proper docinfo
   * response when the docinfo request does not contain a valid global docid
   * @param globalDocid globalDocid or {@code null} for none
   */
  public TeragoogleDocumentInfo setGlobalDocid(java.math.BigInteger globalDocid) {
    this.globalDocid = globalDocid;
    return this;
  }

  /**
   * If the original encoding isn't UTF8
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOriginalEncoding() {
    return originalEncoding;
  }

  /**
   * If the original encoding isn't UTF8
   * @param originalEncoding originalEncoding or {@code null} for none
   */
  public TeragoogleDocumentInfo setOriginalEncoding(java.lang.Integer originalEncoding) {
    this.originalEncoding = originalEncoding;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<TeragoogleDocumentInfoSection> getSection() {
    return section;
  }

  /**
   * @param section section or {@code null} for none
   */
  public TeragoogleDocumentInfo setSection(java.util.List<TeragoogleDocumentInfoSection> section) {
    this.section = section;
    return this;
  }

  /**
   * Indicates format of 'tokens' field in all Section entries.
   * @return value or {@code null} for none
   */
  public java.lang.String getSectionType() {
    return sectionType;
  }

  /**
   * Indicates format of 'tokens' field in all Section entries.
   * @param sectionType sectionType or {@code null} for none
   */
  public TeragoogleDocumentInfo setSectionType(java.lang.String sectionType) {
    this.sectionType = sectionType;
    return this;
  }

  @Override
  public TeragoogleDocumentInfo set(String fieldName, Object value) {
    return (TeragoogleDocumentInfo) super.set(fieldName, value);
  }

  @Override
  public TeragoogleDocumentInfo clone() {
    return (TeragoogleDocumentInfo) super.clone();
  }

}
