/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Status data for battery.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1BatteryStatusReport extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Battery health.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String batteryHealth;

  /**
   * Output only. Cycle count.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer cycleCount;

  /**
   * Output only. Full charge capacity (mAmpere-hours).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long fullChargeCapacity;

  /**
   * Output only. Timestamp of when the sample was collected on device
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String reportTime;

  /**
   * Output only. Sampling data for the battery.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleChromeManagementV1BatterySampleReport> sample;

  static {
    // hack to force ProGuard to consider GoogleChromeManagementV1BatterySampleReport used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleChromeManagementV1BatterySampleReport.class);
  }

  /**
   * Output only. Battery serial number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serialNumber;

  /**
   * Output only. Battery health.
   * @return value or {@code null} for none
   */
  public java.lang.String getBatteryHealth() {
    return batteryHealth;
  }

  /**
   * Output only. Battery health.
   * @param batteryHealth batteryHealth or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setBatteryHealth(java.lang.String batteryHealth) {
    this.batteryHealth = batteryHealth;
    return this;
  }

  /**
   * Output only. Cycle count.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCycleCount() {
    return cycleCount;
  }

  /**
   * Output only. Cycle count.
   * @param cycleCount cycleCount or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setCycleCount(java.lang.Integer cycleCount) {
    this.cycleCount = cycleCount;
    return this;
  }

  /**
   * Output only. Full charge capacity (mAmpere-hours).
   * @return value or {@code null} for none
   */
  public java.lang.Long getFullChargeCapacity() {
    return fullChargeCapacity;
  }

  /**
   * Output only. Full charge capacity (mAmpere-hours).
   * @param fullChargeCapacity fullChargeCapacity or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setFullChargeCapacity(java.lang.Long fullChargeCapacity) {
    this.fullChargeCapacity = fullChargeCapacity;
    return this;
  }

  /**
   * Output only. Timestamp of when the sample was collected on device
   * @return value or {@code null} for none
   */
  public String getReportTime() {
    return reportTime;
  }

  /**
   * Output only. Timestamp of when the sample was collected on device
   * @param reportTime reportTime or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setReportTime(String reportTime) {
    this.reportTime = reportTime;
    return this;
  }

  /**
   * Output only. Sampling data for the battery.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleChromeManagementV1BatterySampleReport> getSample() {
    return sample;
  }

  /**
   * Output only. Sampling data for the battery.
   * @param sample sample or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setSample(java.util.List<GoogleChromeManagementV1BatterySampleReport> sample) {
    this.sample = sample;
    return this;
  }

  /**
   * Output only. Battery serial number.
   * @return value or {@code null} for none
   */
  public java.lang.String getSerialNumber() {
    return serialNumber;
  }

  /**
   * Output only. Battery serial number.
   * @param serialNumber serialNumber or {@code null} for none
   */
  public GoogleChromeManagementV1BatteryStatusReport setSerialNumber(java.lang.String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  @Override
  public GoogleChromeManagementV1BatteryStatusReport set(String fieldName, Object value) {
    return (GoogleChromeManagementV1BatteryStatusReport) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1BatteryStatusReport clone() {
    return (GoogleChromeManagementV1BatteryStatusReport) super.clone();
  }

}
