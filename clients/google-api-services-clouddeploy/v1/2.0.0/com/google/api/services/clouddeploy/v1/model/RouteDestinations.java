/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * Information about route destinations for the Gateway API service mesh.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RouteDestinations extends com.google.api.client.json.GenericJson {

  /**
   * Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid
   * entries include the associated entities IDs configured in the Target resource and "@self" to
   * include the Target cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> destinationIds;

  /**
   * Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The
   * Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option
   * may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be
   * set to true if destinations are specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean propagateService;

  /**
   * Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid
   * entries include the associated entities IDs configured in the Target resource and "@self" to
   * include the Target cluster.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDestinationIds() {
    return destinationIds;
  }

  /**
   * Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid
   * entries include the associated entities IDs configured in the Target resource and "@self" to
   * include the Target cluster.
   * @param destinationIds destinationIds or {@code null} for none
   */
  public RouteDestinations setDestinationIds(java.util.List<java.lang.String> destinationIds) {
    this.destinationIds = destinationIds;
    return this;
  }

  /**
   * Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The
   * Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option
   * may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be
   * set to true if destinations are specified.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPropagateService() {
    return propagateService;
  }

  /**
   * Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The
   * Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option
   * may be used to facilitiate successful DNS lookup in the route destination clusters. Can only be
   * set to true if destinations are specified.
   * @param propagateService propagateService or {@code null} for none
   */
  public RouteDestinations setPropagateService(java.lang.Boolean propagateService) {
    this.propagateService = propagateService;
    return this;
  }

  @Override
  public RouteDestinations set(String fieldName, Object value) {
    return (RouteDestinations) super.set(fieldName, value);
  }

  @Override
  public RouteDestinations clone() {
    return (RouteDestinations) super.clone();
  }

}
