/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.css.v1;

/**
 * Service definition for Css (v1).
 *
 * <p>
 * Programmatically manage your Comparison Shopping Service (CSS) account data at scale.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/comparison-shopping-services/api/overview" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CssRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Css extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the CSS API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://css.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://css.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Css(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Css(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Css css = new Css(...);}
   *   {@code Css.Accounts.List request = css.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Retrieves a single CSS/MC account by ID.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the css server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the managed CSS/MC account. Format: accounts/{account}
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CssRequest<com.google.api.services.css.v1.model.Account> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Retrieves a single CSS/MC account by ID.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the css server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the managed CSS/MC account. Format: accounts/{account}
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Css.this, "GET", REST_PATH, null, com.google.api.services.css.v1.model.Account.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The name of the managed CSS/MC account. Format: accounts/{account} */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the managed CSS/MC account. Format: accounts/{account}
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The name of the managed CSS/MC account. Format: accounts/{account} */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. Only required when retrieving MC account information. The CSS domain that is the
       * parent resource of the MC account. Format: accounts/{account}
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Optional. Only required when retrieving MC account information. The CSS domain that is the parent
     resource of the MC account. Format: accounts/{account}
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Optional. Only required when retrieving MC account information. The CSS domain that is the
       * parent resource of the MC account. Format: accounts/{account}
       */
      public Get setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all the accounts under the specified CSS account ID, and optionally filters by label ID and
     * account name.
     *
     * Create a request for the method "accounts.listChildAccounts".
     *
     * This request holds the parameters needed by the css server.  After setting any optional
     * parameters, call the {@link ListChildAccounts#execute()} method to invoke the remote operation.
     *
     * @param parent Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}
     * @return the request
     */
    public ListChildAccounts listChildAccounts(java.lang.String parent) throws java.io.IOException {
      ListChildAccounts result = new ListChildAccounts(parent);
      initialize(result);
      return result;
    }

    public class ListChildAccounts extends CssRequest<com.google.api.services.css.v1.model.ListChildAccountsResponse> {

      private static final String REST_PATH = "v1/{+parent}:listChildAccounts";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Lists all the accounts under the specified CSS account ID, and optionally filters by label ID
       * and account name.
       *
       * Create a request for the method "accounts.listChildAccounts".
       *
       * This request holds the parameters needed by the the css server.  After setting any optional
       * parameters, call the {@link ListChildAccounts#execute()} method to invoke the remote operation.
       * <p> {@link ListChildAccounts#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param parent Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}
       * @since 1.13
       */
      protected ListChildAccounts(java.lang.String parent) {
        super(Css.this, "GET", REST_PATH, null, com.google.api.services.css.v1.model.ListChildAccountsResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListChildAccounts set$Xgafv(java.lang.String $Xgafv) {
        return (ListChildAccounts) super.set$Xgafv($Xgafv);
      }

      @Override
      public ListChildAccounts setAccessToken(java.lang.String accessToken) {
        return (ListChildAccounts) super.setAccessToken(accessToken);
      }

      @Override
      public ListChildAccounts setAlt(java.lang.String alt) {
        return (ListChildAccounts) super.setAlt(alt);
      }

      @Override
      public ListChildAccounts setCallback(java.lang.String callback) {
        return (ListChildAccounts) super.setCallback(callback);
      }

      @Override
      public ListChildAccounts setFields(java.lang.String fields) {
        return (ListChildAccounts) super.setFields(fields);
      }

      @Override
      public ListChildAccounts setKey(java.lang.String key) {
        return (ListChildAccounts) super.setKey(key);
      }

      @Override
      public ListChildAccounts setOauthToken(java.lang.String oauthToken) {
        return (ListChildAccounts) super.setOauthToken(oauthToken);
      }

      @Override
      public ListChildAccounts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListChildAccounts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListChildAccounts setQuotaUser(java.lang.String quotaUser) {
        return (ListChildAccounts) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListChildAccounts setUploadType(java.lang.String uploadType) {
        return (ListChildAccounts) super.setUploadType(uploadType);
      }

      @Override
      public ListChildAccounts setUploadProtocol(java.lang.String uploadProtocol) {
        return (ListChildAccounts) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. The parent account. Must be a CSS group or domain. Format: accounts/{account}
       */
      public ListChildAccounts setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      /** If set, only the MC accounts with the given name (case sensitive) will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String fullName;

      /** If set, only the MC accounts with the given name (case sensitive) will be returned.
       */
      public java.lang.String getFullName() {
        return fullName;
      }

      /** If set, only the MC accounts with the given name (case sensitive) will be returned. */
      public ListChildAccounts setFullName(java.lang.String fullName) {
        this.fullName = fullName;
        return this;
      }

      /** If set, only the MC accounts with the given label ID will be returned. */
      @com.google.api.client.util.Key
      private java.lang.Long labelId;

      /** If set, only the MC accounts with the given label ID will be returned.
       */
      public java.lang.Long getLabelId() {
        return labelId;
      }

      /** If set, only the MC accounts with the given label ID will be returned. */
      public ListChildAccounts setLabelId(java.lang.Long labelId) {
        this.labelId = labelId;
        return this;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 50 accounts will be returned. The maximum value is 100;
       * values above 100 will be coerced to 100.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Optional. The maximum number of accounts to return. The service may return fewer than this value.
     If unspecified, at most 50 accounts will be returned. The maximum value is 100; values above 100
     will be coerced to 100.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * Optional. The maximum number of accounts to return. The service may return fewer than this
       * value. If unspecified, at most 50 accounts will be returned. The maximum value is 100;
       * values above 100 will be coerced to 100.
       */
      public ListChildAccounts setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Optional. A page token, received from a previous `ListChildAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListChildAccounts` must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Optional. A page token, received from a previous `ListChildAccounts` call. Provide this to retrieve
     the subsequent page. When paginating, all other parameters provided to `ListChildAccounts` must
     match the call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Optional. A page token, received from a previous `ListChildAccounts` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListChildAccounts` must match the call that provided the page token.
       */
      public ListChildAccounts setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public ListChildAccounts set(String parameterName, Object value) {
        return (ListChildAccounts) super.set(parameterName, value);
      }
    }
    /**
     * Updates labels assigned to CSS/MC accounts by a CSS domain.
     *
     * Create a request for the method "accounts.updateLabels".
     *
     * This request holds the parameters needed by the css server.  After setting any optional
     * parameters, call the {@link UpdateLabels#execute()} method to invoke the remote operation.
     *
     * @param name Required. The label resource name. Format: accounts/{account}
     * @param content the {@link com.google.api.services.css.v1.model.UpdateAccountLabelsRequest}
     * @return the request
     */
    public UpdateLabels updateLabels(java.lang.String name, com.google.api.services.css.v1.model.UpdateAccountLabelsRequest content) throws java.io.IOException {
      UpdateLabels result = new UpdateLabels(name, content);
      initialize(result);
      return result;
    }

    public class UpdateLabels extends CssRequest<com.google.api.services.css.v1.model.Account> {

      private static final String REST_PATH = "v1/{+name}:updateLabels";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Updates labels assigned to CSS/MC accounts by a CSS domain.
       *
       * Create a request for the method "accounts.updateLabels".
       *
       * This request holds the parameters needed by the the css server.  After setting any optional
       * parameters, call the {@link UpdateLabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * UpdateLabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The label resource name. Format: accounts/{account}
       * @param content the {@link com.google.api.services.css.v1.model.UpdateAccountLabelsRequest}
       * @since 1.13
       */
      protected UpdateLabels(java.lang.String name, com.google.api.services.css.v1.model.UpdateAccountLabelsRequest content) {
        super(Css.this, "POST", REST_PATH, content, com.google.api.services.css.v1.model.Account.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public UpdateLabels set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateLabels) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateLabels setAccessToken(java.lang.String accessToken) {
        return (UpdateLabels) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateLabels setAlt(java.lang.String alt) {
        return (UpdateLabels) super.setAlt(alt);
      }

      @Override
      public UpdateLabels setCallback(java.lang.String callback) {
        return (UpdateLabels) super.setCallback(callback);
      }

      @Override
      public UpdateLabels setFields(java.lang.String fields) {
        return (UpdateLabels) super.setFields(fields);
      }

      @Override
      public UpdateLabels setKey(java.lang.String key) {
        return (UpdateLabels) super.setKey(key);
      }

      @Override
      public UpdateLabels setOauthToken(java.lang.String oauthToken) {
        return (UpdateLabels) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateLabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateLabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateLabels setQuotaUser(java.lang.String quotaUser) {
        return (UpdateLabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateLabels setUploadType(java.lang.String uploadType) {
        return (UpdateLabels) super.setUploadType(uploadType);
      }

      @Override
      public UpdateLabels setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateLabels) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The label resource name. Format: accounts/{account} */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The label resource name. Format: accounts/{account}
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. The label resource name. Format: accounts/{account} */
      public UpdateLabels setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public UpdateLabels set(String parameterName, Object value) {
        return (UpdateLabels) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the CssProductInputs collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Css css = new Css(...);}
     *   {@code Css.CssProductInputs.List request = css.cssProductInputs().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CssProductInputs cssProductInputs() {
      return new CssProductInputs();
    }

    /**
     * The "cssProductInputs" collection of methods.
     */
    public class CssProductInputs {

      /**
       * Deletes a CSS Product input from your CSS Center account. After a delete it may take several
       * minutes until the input is no longer available.
       *
       * Create a request for the method "cssProductInputs.delete".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CSS product input resource to delete. Format:
       *        accounts/{account}/cssProductInputs/{css_product_input}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends CssRequest<com.google.api.services.css.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/cssProductInputs/[^/]+$");

        /**
         * Deletes a CSS Product input from your CSS Center account. After a delete it may take several
         * minutes until the input is no longer available.
         *
         * Create a request for the method "cssProductInputs.delete".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CSS product input resource to delete. Format:
       *        accounts/{account}/cssProductInputs/{css_product_input}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Css.this, "DELETE", REST_PATH, null, com.google.api.services.css.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProductInputs/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CSS product input resource to delete. Format:
         * accounts/{account}/cssProductInputs/{css_product_input}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CSS product input resource to delete. Format:
       accounts/{account}/cssProductInputs/{css_product_input}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CSS product input resource to delete. Format:
         * accounts/{account}/cssProductInputs/{css_product_input}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProductInputs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The Content API Supplemental Feed ID. The field must not be set if the action applies to
         * a primary feed. If the field is set, then product action applies to a supplemental feed
         * instead of primary Content API feed.
         */
        @com.google.api.client.util.Key
        private java.lang.Long supplementalFeedId;

        /** The Content API Supplemental Feed ID. The field must not be set if the action applies to a primary
       feed. If the field is set, then product action applies to a supplemental feed instead of primary
       Content API feed.
         */
        public java.lang.Long getSupplementalFeedId() {
          return supplementalFeedId;
        }

        /**
         * The Content API Supplemental Feed ID. The field must not be set if the action applies to
         * a primary feed. If the field is set, then product action applies to a supplemental feed
         * instead of primary Content API feed.
         */
        public Delete setSupplementalFeedId(java.lang.Long supplementalFeedId) {
          this.supplementalFeedId = supplementalFeedId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Uploads a CssProductInput to your CSS Center account. If an input with the same contentLanguage,
       * identity, feedLabel and feedId already exists, this method replaces that entry. After inserting,
       * updating, or deleting a CSS Product input, it may take several minutes before the processed CSS
       * Product can be retrieved.
       *
       * Create a request for the method "cssProductInputs.insert".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account where this CSS Product will be inserted. Format: accounts/{account}
       * @param content the {@link com.google.api.services.css.v1.model.CssProductInput}
       * @return the request
       */
      public Insert insert(java.lang.String parent, com.google.api.services.css.v1.model.CssProductInput content) throws java.io.IOException {
        Insert result = new Insert(parent, content);
        initialize(result);
        return result;
      }

      public class Insert extends CssRequest<com.google.api.services.css.v1.model.CssProductInput> {

        private static final String REST_PATH = "v1/{+parent}/cssProductInputs:insert";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Uploads a CssProductInput to your CSS Center account. If an input with the same
         * contentLanguage, identity, feedLabel and feedId already exists, this method replaces that
         * entry. After inserting, updating, or deleting a CSS Product input, it may take several minutes
         * before the processed CSS Product can be retrieved.
         *
         * Create a request for the method "cssProductInputs.insert".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account where this CSS Product will be inserted. Format: accounts/{account}
         * @param content the {@link com.google.api.services.css.v1.model.CssProductInput}
         * @since 1.13
         */
        protected Insert(java.lang.String parent, com.google.api.services.css.v1.model.CssProductInput content) {
          super(Css.this, "POST", REST_PATH, content, com.google.api.services.css.v1.model.CssProductInput.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account where this CSS Product will be inserted. Format: accounts/{account}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account where this CSS Product will be inserted. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account where this CSS Product will be inserted. Format: accounts/{account}
         */
        public Insert setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. DEPRECATED. Feed id is not required for CSS Products. The primary or
         * supplemental feed id. If CSS Product already exists and feed id provided is different,
         * then the CSS Product will be moved to a new feed. Note: For now, CSSs do not need to
         * provide feed ids as we create feeds on the fly. We do not have supplemental feed support
         * for CSS Products yet.
         */
        @com.google.api.client.util.Key
        private java.lang.Long feedId;

        /** Optional. DEPRECATED. Feed id is not required for CSS Products. The primary or supplemental feed
       id. If CSS Product already exists and feed id provided is different, then the CSS Product will be
       moved to a new feed. Note: For now, CSSs do not need to provide feed ids as we create feeds on the
       fly. We do not have supplemental feed support for CSS Products yet.
         */
        public java.lang.Long getFeedId() {
          return feedId;
        }

        /**
         * Optional. DEPRECATED. Feed id is not required for CSS Products. The primary or
         * supplemental feed id. If CSS Product already exists and feed id provided is different,
         * then the CSS Product will be moved to a new feed. Note: For now, CSSs do not need to
         * provide feed ids as we create feeds on the fly. We do not have supplemental feed support
         * for CSS Products yet.
         */
        public Insert setFeedId(java.lang.Long feedId) {
          this.feedId = feedId;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }
      /**
       * Updates the existing Css Product input in your CSS Center account. After inserting, updating, or
       * deleting a CSS Product input, it may take several minutes before the processed Css Product can be
       * retrieved.
       *
       * Create a request for the method "cssProductInputs.patch".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the CSS Product input. Format: `accounts/{account}/cssProductInputs/{css_product_input}`
       * @param content the {@link com.google.api.services.css.v1.model.CssProductInput}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.css.v1.model.CssProductInput content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CssRequest<com.google.api.services.css.v1.model.CssProductInput> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/cssProductInputs/[^/]+$");

        /**
         * Updates the existing Css Product input in your CSS Center account. After inserting, updating,
         * or deleting a CSS Product input, it may take several minutes before the processed Css Product
         * can be retrieved.
         *
         * Create a request for the method "cssProductInputs.patch".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the CSS Product input. Format: `accounts/{account}/cssProductInputs/{css_product_input}`
         * @param content the {@link com.google.api.services.css.v1.model.CssProductInput}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.css.v1.model.CssProductInput content) {
          super(Css.this, "PATCH", REST_PATH, content, com.google.api.services.css.v1.model.CssProductInput.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProductInputs/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the CSS Product input. Format:
         * `accounts/{account}/cssProductInputs/{css_product_input}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the CSS Product input. Format:
       `accounts/{account}/cssProductInputs/{css_product_input}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The name of the CSS Product input. Format:
         * `accounts/{account}/cssProductInputs/{css_product_input}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProductInputs/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The list of CSS product attributes to be updated. If the update mask is omitted, then it
         * is treated as implied field mask equivalent to all fields that are populated (have a non-
         * empty value). Attributes specified in the update mask without a value specified in the
         * body will be deleted from the CSS product. Update mask can only be specified for top
         * level fields in attributes and custom attributes. To specify the update mask for custom
         * attributes you need to add the `custom_attribute.` prefix. Providing special "*" value
         * for full CSS product replacement is not supported.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The list of CSS product attributes to be updated. If the update mask is omitted, then it is treated
       as implied field mask equivalent to all fields that are populated (have a non-empty value).
       Attributes specified in the update mask without a value specified in the body will be deleted from
       the CSS product. Update mask can only be specified for top level fields in attributes and custom
       attributes. To specify the update mask for custom attributes you need to add the
       `custom_attribute.` prefix. Providing special "*" value for full CSS product replacement is not
       supported.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The list of CSS product attributes to be updated. If the update mask is omitted, then it
         * is treated as implied field mask equivalent to all fields that are populated (have a non-
         * empty value). Attributes specified in the update mask without a value specified in the
         * body will be deleted from the CSS product. Update mask can only be specified for top
         * level fields in attributes and custom attributes. To specify the update mask for custom
         * attributes you need to add the `custom_attribute.` prefix. Providing special "*" value
         * for full CSS product replacement is not supported.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the CssProducts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Css css = new Css(...);}
     *   {@code Css.CssProducts.List request = css.cssProducts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CssProducts cssProducts() {
      return new CssProducts();
    }

    /**
     * The "cssProducts" collection of methods.
     */
    public class CssProducts {

      /**
       * Retrieves the processed CSS Product from your CSS Center account. After inserting, updating, or
       * deleting a product input, it may take several minutes before the updated final product can be
       * retrieved.
       *
       * Create a request for the method "cssProducts.get".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CSS product to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CssRequest<com.google.api.services.css.v1.model.CssProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/cssProducts/[^/]+$");

        /**
         * Retrieves the processed CSS Product from your CSS Center account. After inserting, updating, or
         * deleting a product input, it may take several minutes before the updated final product can be
         * retrieved.
         *
         * Create a request for the method "cssProducts.get".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CSS product to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Css.this, "GET", REST_PATH, null, com.google.api.services.css.v1.model.CssProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProducts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the CSS product to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CSS product to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the CSS product to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/cssProducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the processed CSS Products in your CSS Center account. The response might contain fewer
       * items than specified by pageSize. Rely on pageToken to determine if there are more items to be
       * requested. After inserting, updating, or deleting a CSS product input, it may take several
       * minutes before the updated processed CSS product can be retrieved.
       *
       * Create a request for the method "cssProducts.list".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account/domain to list processed CSS Products for. Format: accounts/{account}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CssRequest<com.google.api.services.css.v1.model.ListCssProductsResponse> {

        private static final String REST_PATH = "v1/{+parent}/cssProducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the processed CSS Products in your CSS Center account. The response might contain fewer
         * items than specified by pageSize. Rely on pageToken to determine if there are more items to be
         * requested. After inserting, updating, or deleting a CSS product input, it may take several
         * minutes before the updated processed CSS product can be retrieved.
         *
         * Create a request for the method "cssProducts.list".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account/domain to list processed CSS Products for. Format: accounts/{account}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Css.this, "GET", REST_PATH, null, com.google.api.services.css.v1.model.ListCssProductsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account/domain to list processed CSS Products for. Format:
         * accounts/{account}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account/domain to list processed CSS Products for. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account/domain to list processed CSS Products for. Format:
         * accounts/{account}
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of CSS Products to return. The service may return fewer than this
         * value. The maximum value is 1000; values above 1000 will be coerced to 1000. If
         * unspecified, the maximum number of CSS products will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of CSS Products to return. The service may return fewer than this value. The
       maximum value is 1000; values above 1000 will be coerced to 1000. If unspecified, the maximum
       number of CSS products will be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of CSS Products to return. The service may return fewer than this
         * value. The maximum value is 1000; values above 1000 will be coerced to 1000. If
         * unspecified, the maximum number of CSS products will be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListCssProducts` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListCssProducts`
         * must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListCssProducts` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListCssProducts` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListCssProducts` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListCssProducts`
         * must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Labels collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Css css = new Css(...);}
     *   {@code Css.Labels.List request = css.labels().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Labels labels() {
      return new Labels();
    }

    /**
     * The "labels" collection of methods.
     */
    public class Labels {

      /**
       * Creates a new label, not assigned to any account.
       *
       * Create a request for the method "labels.create".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent account. Format: accounts/{account}
       * @param content the {@link com.google.api.services.css.v1.model.AccountLabel}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.css.v1.model.AccountLabel content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends CssRequest<com.google.api.services.css.v1.model.AccountLabel> {

        private static final String REST_PATH = "v1/{+parent}/labels";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a new label, not assigned to any account.
         *
         * Create a request for the method "labels.create".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent account. Format: accounts/{account}
         * @param content the {@link com.google.api.services.css.v1.model.AccountLabel}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.css.v1.model.AccountLabel content) {
          super(Css.this, "POST", REST_PATH, content, com.google.api.services.css.v1.model.AccountLabel.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent account. Format: accounts/{account} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent account. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent account. Format: accounts/{account} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a label and removes it from all accounts to which it was assigned.
       *
       * Create a request for the method "labels.delete".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the label to delete. Format: accounts/{account}/labels/{label}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends CssRequest<com.google.api.services.css.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/labels/[^/]+$");

        /**
         * Deletes a label and removes it from all accounts to which it was assigned.
         *
         * Create a request for the method "labels.delete".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the label to delete. Format: accounts/{account}/labels/{label}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Css.this, "DELETE", REST_PATH, null, com.google.api.services.css.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/labels/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the label to delete. Format: accounts/{account}/labels/{label} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the label to delete. Format: accounts/{account}/labels/{label}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name of the label to delete. Format: accounts/{account}/labels/{label} */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/labels/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists the labels owned by an account.
       *
       * Create a request for the method "labels.list".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent account. Format: accounts/{account}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CssRequest<com.google.api.services.css.v1.model.ListAccountLabelsResponse> {

        private static final String REST_PATH = "v1/{+parent}/labels";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the labels owned by an account.
         *
         * Create a request for the method "labels.list".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent account. Format: accounts/{account}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Css.this, "GET", REST_PATH, null, com.google.api.services.css.v1.model.ListAccountLabelsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent account. Format: accounts/{account} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent account. Format: accounts/{account}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent account. Format: accounts/{account} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of labels to return. The service may return fewer than this value. If
         * unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
         * 1000 will be coerced to 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of labels to return. The service may return fewer than this value. If
       unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will
       be coerced to 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of labels to return. The service may return fewer than this value. If
         * unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
         * 1000 will be coerced to 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListAccountLabels` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAccountLabels` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListAccountLabels` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a label.
       *
       * Create a request for the method "labels.patch".
       *
       * This request holds the parameters needed by the css server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the label. Format: accounts/{account}/labels/{label}
       * @param content the {@link com.google.api.services.css.v1.model.AccountLabel}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.css.v1.model.AccountLabel content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CssRequest<com.google.api.services.css.v1.model.AccountLabel> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/labels/[^/]+$");

        /**
         * Updates a label.
         *
         * Create a request for the method "labels.patch".
         *
         * This request holds the parameters needed by the the css server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the label. Format: accounts/{account}/labels/{label}
         * @param content the {@link com.google.api.services.css.v1.model.AccountLabel}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.css.v1.model.AccountLabel content) {
          super(Css.this, "PATCH", REST_PATH, content, com.google.api.services.css.v1.model.AccountLabel.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/labels/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the label. Format: accounts/{account}/labels/{label} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the label. Format: accounts/{account}/labels/{label}
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the label. Format: accounts/{account}/labels/{label} */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/labels/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Css}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Css}. */
    @Override
    public Css build() {
      return new Css(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CssRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCssRequestInitializer(
        CssRequestInitializer cssRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cssRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
