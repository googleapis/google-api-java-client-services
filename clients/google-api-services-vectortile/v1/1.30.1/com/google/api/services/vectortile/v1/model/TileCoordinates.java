/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vectortile.v1.model;

/**
 * Global tile coordinates. Global tile coordinates reference a specific tile on the map at a
 * specific zoom level. The origin of this coordinate system is always at the northwest corner of
 * the map, with x values increasing from west to east and y values increasing from north to south.
 * Tiles are indexed using x, y coordinates from that origin. The zoom level containing the entire
 * world in a tile is 0, and it increases as you zoom in. Zoom level n + 1 will contain 4 times as
 * many tiles as zoom level n. The zoom level controls the level of detail of the data that is
 * returned. In particular, this affects the set of feature types returned, their density, and
 * geometry simplification. The exact tile contents may change over time, but care will be taken to
 * keep supporting the most important use cases. For example, zoom level 15 shows roads for
 * orientation and planning in the local neighborhood and zoom level 17 shows buildings to give
 * users on foot a sense of situational awareness.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Semantic Tile API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TileCoordinates extends com.google.api.client.json.GenericJson {

  /**
   * Required. The x coordinate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer x;

  /**
   * Required. The y coordinate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer y;

  /**
   * Required. The Google Maps API zoom level.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer zoom;

  /**
   * Required. The x coordinate.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getX() {
    return x;
  }

  /**
   * Required. The x coordinate.
   * @param x x or {@code null} for none
   */
  public TileCoordinates setX(java.lang.Integer x) {
    this.x = x;
    return this;
  }

  /**
   * Required. The y coordinate.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getY() {
    return y;
  }

  /**
   * Required. The y coordinate.
   * @param y y or {@code null} for none
   */
  public TileCoordinates setY(java.lang.Integer y) {
    this.y = y;
    return this;
  }

  /**
   * Required. The Google Maps API zoom level.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getZoom() {
    return zoom;
  }

  /**
   * Required. The Google Maps API zoom level.
   * @param zoom zoom or {@code null} for none
   */
  public TileCoordinates setZoom(java.lang.Integer zoom) {
    this.zoom = zoom;
    return this;
  }

  @Override
  public TileCoordinates set(String fieldName, Object value) {
    return (TileCoordinates) super.set(fieldName, value);
  }

  @Override
  public TileCoordinates clone() {
    return (TileCoordinates) super.clone();
  }

}
