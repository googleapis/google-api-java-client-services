/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudcommerceprocurement.v1;

/**
 * Service definition for CloudCommercePartnerProcurementService (v1).
 *
 * <p>
 * Partner API for the Cloud Commerce Procurement Service.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/marketplace/docs/partners/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudCommercePartnerProcurementServiceRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudCommercePartnerProcurementService extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Cloud Commerce Partner Procurement API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudcommerceprocurement.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://cloudcommerceprocurement.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudCommercePartnerProcurementService(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudCommercePartnerProcurementService(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Providers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudCommercePartnerProcurementService cloudcommerceprocurement = new CloudCommercePartnerProcurementService(...);}
   *   {@code CloudCommercePartnerProcurementService.Providers.List request = cloudcommerceprocurement.providers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Providers providers() {
    return new Providers();
  }

  /**
   * The "providers" collection of methods.
   */
  public class Providers {

    /**
     * An accessor for creating requests from the Accounts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudCommercePartnerProcurementService cloudcommerceprocurement = new CloudCommercePartnerProcurementService(...);}
     *   {@code CloudCommercePartnerProcurementService.Accounts.List request = cloudcommerceprocurement.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts() {
      return new Accounts();
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts {

      /**
       * Grants an approval on an Account.
       *
       * Create a request for the method "accounts.approve".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Approve#execute()} method to invoke the remote
       * operation.
       *
       * @param name The resource name of the account. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveAccountRequest}
       * @return the request
       */
      public Approve approve(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveAccountRequest content) throws java.io.IOException {
        Approve result = new Approve(name, content);
        initialize(result);
        return result;
      }

      public class Approve extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:approve";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/accounts/[^/]+$");

        /**
         * Grants an approval on an Account.
         *
         * Create a request for the method "accounts.approve".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Approve#execute()} method to invoke the remote
         * operation. <p> {@link
         * Approve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the account. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveAccountRequest}
         * @since 1.13
         */
        protected Approve(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveAccountRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public Approve set$Xgafv(java.lang.String $Xgafv) {
          return (Approve) super.set$Xgafv($Xgafv);
        }

        @Override
        public Approve setAccessToken(java.lang.String accessToken) {
          return (Approve) super.setAccessToken(accessToken);
        }

        @Override
        public Approve setAlt(java.lang.String alt) {
          return (Approve) super.setAlt(alt);
        }

        @Override
        public Approve setCallback(java.lang.String callback) {
          return (Approve) super.setCallback(callback);
        }

        @Override
        public Approve setFields(java.lang.String fields) {
          return (Approve) super.setFields(fields);
        }

        @Override
        public Approve setKey(java.lang.String key) {
          return (Approve) super.setKey(key);
        }

        @Override
        public Approve setOauthToken(java.lang.String oauthToken) {
          return (Approve) super.setOauthToken(oauthToken);
        }

        @Override
        public Approve setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Approve) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Approve setQuotaUser(java.lang.String quotaUser) {
          return (Approve) super.setQuotaUser(quotaUser);
        }

        @Override
        public Approve setUploadType(java.lang.String uploadType) {
          return (Approve) super.setUploadType(uploadType);
        }

        @Override
        public Approve setUploadProtocol(java.lang.String uploadProtocol) {
          return (Approve) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the account. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the account. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the account. Required. */
        public Approve setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Approve set(String parameterName, Object value) {
          return (Approve) super.set(parameterName, value);
        }
      }
      /**
       * Gets a requested Account resource.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the account to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Account> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/accounts/[^/]+$");

        /**
         * Gets a requested Account resource.
         *
         * Create a request for the method "accounts.get".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the account to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudCommercePartnerProcurementService.this, "GET", REST_PATH, null, com.google.api.services.cloudcommerceprocurement.v1.model.Account.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the account to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the account to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the account to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists Accounts that the provider has access to.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.ListAccountsResponse> {

        private static final String REST_PATH = "v1/{+parent}/accounts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+$");

        /**
         * Lists Accounts that the provider has access to.
         *
         * Create a request for the method "accounts.list".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(CloudCommercePartnerProcurementService.this, "GET", REST_PATH, null, com.google.api.services.cloudcommerceprocurement.v1.model.ListAccountsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^providers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^providers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The maximum number of entries that are requested. Default size is 200. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested. Default size is 200.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. Default size is 200. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The token for fetching the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The token for fetching the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The token for fetching the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Rejects an approval on an Account.
       *
       * Create a request for the method "accounts.reject".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Reject#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the account. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectAccountRequest}
       * @return the request
       */
      public Reject reject(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectAccountRequest content) throws java.io.IOException {
        Reject result = new Reject(name, content);
        initialize(result);
        return result;
      }

      public class Reject extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:reject";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/accounts/[^/]+$");

        /**
         * Rejects an approval on an Account.
         *
         * Create a request for the method "accounts.reject".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Reject#execute()} method to invoke the remote
         * operation. <p> {@link
         * Reject#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the account. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectAccountRequest}
         * @since 1.13
         */
        protected Reject(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectAccountRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public Reject set$Xgafv(java.lang.String $Xgafv) {
          return (Reject) super.set$Xgafv($Xgafv);
        }

        @Override
        public Reject setAccessToken(java.lang.String accessToken) {
          return (Reject) super.setAccessToken(accessToken);
        }

        @Override
        public Reject setAlt(java.lang.String alt) {
          return (Reject) super.setAlt(alt);
        }

        @Override
        public Reject setCallback(java.lang.String callback) {
          return (Reject) super.setCallback(callback);
        }

        @Override
        public Reject setFields(java.lang.String fields) {
          return (Reject) super.setFields(fields);
        }

        @Override
        public Reject setKey(java.lang.String key) {
          return (Reject) super.setKey(key);
        }

        @Override
        public Reject setOauthToken(java.lang.String oauthToken) {
          return (Reject) super.setOauthToken(oauthToken);
        }

        @Override
        public Reject setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Reject) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Reject setQuotaUser(java.lang.String quotaUser) {
          return (Reject) super.setQuotaUser(quotaUser);
        }

        @Override
        public Reject setUploadType(java.lang.String uploadType) {
          return (Reject) super.setUploadType(uploadType);
        }

        @Override
        public Reject setUploadProtocol(java.lang.String uploadProtocol) {
          return (Reject) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the account. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the account. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the account. Required. */
        public Reject setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Reject set(String parameterName, Object value) {
          return (Reject) super.set(parameterName, value);
        }
      }
      /**
       * Resets an Account and cancel all associated Entitlements. Partner can only reset accounts they
       * own rather than customer accounts.
       *
       * Create a request for the method "accounts.reset".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Reset#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the account. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ResetAccountRequest}
       * @return the request
       */
      public Reset reset(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ResetAccountRequest content) throws java.io.IOException {
        Reset result = new Reset(name, content);
        initialize(result);
        return result;
      }

      public class Reset extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:reset";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/accounts/[^/]+$");

        /**
         * Resets an Account and cancel all associated Entitlements. Partner can only reset accounts they
         * own rather than customer accounts.
         *
         * Create a request for the method "accounts.reset".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Reset#execute()} method to invoke the remote
         * operation. <p> {@link
         * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the account. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ResetAccountRequest}
         * @since 1.13
         */
        protected Reset(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ResetAccountRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
        }

        @Override
        public Reset set$Xgafv(java.lang.String $Xgafv) {
          return (Reset) super.set$Xgafv($Xgafv);
        }

        @Override
        public Reset setAccessToken(java.lang.String accessToken) {
          return (Reset) super.setAccessToken(accessToken);
        }

        @Override
        public Reset setAlt(java.lang.String alt) {
          return (Reset) super.setAlt(alt);
        }

        @Override
        public Reset setCallback(java.lang.String callback) {
          return (Reset) super.setCallback(callback);
        }

        @Override
        public Reset setFields(java.lang.String fields) {
          return (Reset) super.setFields(fields);
        }

        @Override
        public Reset setKey(java.lang.String key) {
          return (Reset) super.setKey(key);
        }

        @Override
        public Reset setOauthToken(java.lang.String oauthToken) {
          return (Reset) super.setOauthToken(oauthToken);
        }

        @Override
        public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Reset) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Reset setQuotaUser(java.lang.String quotaUser) {
          return (Reset) super.setQuotaUser(quotaUser);
        }

        @Override
        public Reset setUploadType(java.lang.String uploadType) {
          return (Reset) super.setUploadType(uploadType);
        }

        @Override
        public Reset setUploadProtocol(java.lang.String uploadProtocol) {
          return (Reset) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the account. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the account. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the account. Required. */
        public Reset setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/accounts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Reset set(String parameterName, Object value) {
          return (Reset) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Entitlements collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudCommercePartnerProcurementService cloudcommerceprocurement = new CloudCommercePartnerProcurementService(...);}
     *   {@code CloudCommercePartnerProcurementService.Entitlements.List request = cloudcommerceprocurement.entitlements().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Entitlements entitlements() {
      return new Entitlements();
    }

    /**
     * The "entitlements" collection of methods.
     */
    public class Entitlements {

      /**
       * Approves an entitlement that is in the EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED state.
       * This method is invoked by the provider to approve the creation of the entitlement resource.
       *
       * Create a request for the method "entitlements.approve".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Approve#execute()} method to invoke the remote
       * operation.
       *
       * @param name The resource name of the entitlement. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementRequest}
       * @return the request
       */
      public Approve approve(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementRequest content) throws java.io.IOException {
        Approve result = new Approve(name, content);
        initialize(result);
        return result;
      }

      public class Approve extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:approve";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Approves an entitlement that is in the EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED state.
         * This method is invoked by the provider to approve the creation of the entitlement resource.
         *
         * Create a request for the method "entitlements.approve".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Approve#execute()} method to invoke the remote
         * operation. <p> {@link
         * Approve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the entitlement. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementRequest}
         * @since 1.13
         */
        protected Approve(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public Approve set$Xgafv(java.lang.String $Xgafv) {
          return (Approve) super.set$Xgafv($Xgafv);
        }

        @Override
        public Approve setAccessToken(java.lang.String accessToken) {
          return (Approve) super.setAccessToken(accessToken);
        }

        @Override
        public Approve setAlt(java.lang.String alt) {
          return (Approve) super.setAlt(alt);
        }

        @Override
        public Approve setCallback(java.lang.String callback) {
          return (Approve) super.setCallback(callback);
        }

        @Override
        public Approve setFields(java.lang.String fields) {
          return (Approve) super.setFields(fields);
        }

        @Override
        public Approve setKey(java.lang.String key) {
          return (Approve) super.setKey(key);
        }

        @Override
        public Approve setOauthToken(java.lang.String oauthToken) {
          return (Approve) super.setOauthToken(oauthToken);
        }

        @Override
        public Approve setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Approve) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Approve setQuotaUser(java.lang.String quotaUser) {
          return (Approve) super.setQuotaUser(quotaUser);
        }

        @Override
        public Approve setUploadType(java.lang.String uploadType) {
          return (Approve) super.setUploadType(uploadType);
        }

        @Override
        public Approve setUploadProtocol(java.lang.String uploadProtocol) {
          return (Approve) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the entitlement. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the entitlement. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the entitlement. Required. */
        public Approve setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Approve set(String parameterName, Object value) {
          return (Approve) super.set(parameterName, value);
        }
      }
      /**
       * Approves an entitlement plan change that is in the
       * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state. This method is invoked by the
       * provider to approve the plan change on the entitlement resource.
       *
       * Create a request for the method "entitlements.approvePlanChange".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link ApprovePlanChange#execute()} method to invoke the remote
       * operation.
       *
       * @param name The resource name of the entitlement. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementPlanChangeRequest}
       * @return the request
       */
      public ApprovePlanChange approvePlanChange(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementPlanChangeRequest content) throws java.io.IOException {
        ApprovePlanChange result = new ApprovePlanChange(name, content);
        initialize(result);
        return result;
      }

      public class ApprovePlanChange extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:approvePlanChange";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Approves an entitlement plan change that is in the
         * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state. This method is invoked by the
         * provider to approve the plan change on the entitlement resource.
         *
         * Create a request for the method "entitlements.approvePlanChange".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link ApprovePlanChange#execute()} method to invoke
         * the remote operation. <p> {@link ApprovePlanChange#initialize(com.google.api.client.googleapis.
         * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name The resource name of the entitlement. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementPlanChangeRequest}
         * @since 1.13
         */
        protected ApprovePlanChange(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.ApproveEntitlementPlanChangeRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public ApprovePlanChange set$Xgafv(java.lang.String $Xgafv) {
          return (ApprovePlanChange) super.set$Xgafv($Xgafv);
        }

        @Override
        public ApprovePlanChange setAccessToken(java.lang.String accessToken) {
          return (ApprovePlanChange) super.setAccessToken(accessToken);
        }

        @Override
        public ApprovePlanChange setAlt(java.lang.String alt) {
          return (ApprovePlanChange) super.setAlt(alt);
        }

        @Override
        public ApprovePlanChange setCallback(java.lang.String callback) {
          return (ApprovePlanChange) super.setCallback(callback);
        }

        @Override
        public ApprovePlanChange setFields(java.lang.String fields) {
          return (ApprovePlanChange) super.setFields(fields);
        }

        @Override
        public ApprovePlanChange setKey(java.lang.String key) {
          return (ApprovePlanChange) super.setKey(key);
        }

        @Override
        public ApprovePlanChange setOauthToken(java.lang.String oauthToken) {
          return (ApprovePlanChange) super.setOauthToken(oauthToken);
        }

        @Override
        public ApprovePlanChange setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ApprovePlanChange) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ApprovePlanChange setQuotaUser(java.lang.String quotaUser) {
          return (ApprovePlanChange) super.setQuotaUser(quotaUser);
        }

        @Override
        public ApprovePlanChange setUploadType(java.lang.String uploadType) {
          return (ApprovePlanChange) super.setUploadType(uploadType);
        }

        @Override
        public ApprovePlanChange setUploadProtocol(java.lang.String uploadProtocol) {
          return (ApprovePlanChange) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the entitlement. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the entitlement. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the entitlement. Required. */
        public ApprovePlanChange setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public ApprovePlanChange set(String parameterName, Object value) {
          return (ApprovePlanChange) super.set(parameterName, value);
        }
      }
      /**
       * Gets a requested Entitlement resource.
       *
       * Create a request for the method "entitlements.get".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the entitlement to retrieve.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Gets a requested Entitlement resource.
         *
         * Create a request for the method "entitlements.get".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the entitlement to retrieve.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudCommercePartnerProcurementService.this, "GET", REST_PATH, null, com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the entitlement to retrieve. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the entitlement to retrieve.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the entitlement to retrieve. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists Entitlements for which the provider has read access.
       *
       * Create a request for the method "entitlements.list".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent resource name.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.ListEntitlementsResponse> {

        private static final String REST_PATH = "v1/{+parent}/entitlements";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+$");

        /**
         * Lists Entitlements for which the provider has read access.
         *
         * Create a request for the method "entitlements.list".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent resource name.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(CloudCommercePartnerProcurementService.this, "GET", REST_PATH, null, com.google.api.services.cloudcommerceprocurement.v1.model.ListEntitlementsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^providers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The parent resource name. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent resource name.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** The parent resource name. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^providers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The filter that can be used to limit the list request. The filter is a query string that
         * can match a selected set of attributes with string values. For example
         * `account=E-1234-5678-ABCD-EFGH`, `state=pending_cancellation`, and `plan!=foo-plan`.
         * Supported query attributes are * `account` * `customer_billing_account` with value in the
         * format of: `billingAccounts/{id}` * `product_external_name` * `quote_external_name` *
         * `offer` * `new_pending_offer` * `plan` * `newPendingPlan` or `new_pending_plan` * `state`
         * * `consumers.project` Note that the consumers match works on repeated structures, so
         * equality (`consumers.project=projects/123456789`) is not supported. Set membership can be
         * expressed with the `:` operator. For example, `consumers.project:projects/123456789`
         * finds entitlements with at least one consumer with project field equal to
         * `projects/123456789`. Also note that the state name match is case-insensitive and query
         * can omit the prefix "ENTITLEMENT_". For example, `state=active` is equivalent to
         * `state=ENTITLEMENT_ACTIVE`. If the query contains some special characters other than
         * letters, underscore, or digits, the phrase must be quoted with double quotes. For
         * example, `product="providerId:productId"`, where the product name needs to be quoted
         * because it contains special character colon. Queries can be combined with `AND`, `OR`,
         * and `NOT` to form more complex queries. They can also be grouped to force a desired
         * evaluation order. For example, `state=active AND (account=E-1234 OR account=5678) AND NOT
         * (product=foo-product)`. Connective `AND` can be omitted between two predicates. For
         * example `account=E-1234 state=active` is equivalent to `account=E-1234 AND state=active`.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The filter that can be used to limit the list request. The filter is a query string that can match
       a selected set of attributes with string values. For example `account=E-1234-5678-ABCD-EFGH`,
       `state=pending_cancellation`, and `plan!=foo-plan`. Supported query attributes are * `account` *
       `customer_billing_account` with value in the format of: `billingAccounts/{id}` *
       `product_external_name` * `quote_external_name` * `offer` * `new_pending_offer` * `plan` *
       `newPendingPlan` or `new_pending_plan` * `state` * `consumers.project` Note that the consumers
       match works on repeated structures, so equality (`consumers.project=projects/123456789`) is not
       supported. Set membership can be expressed with the `:` operator. For example,
       `consumers.project:projects/123456789` finds entitlements with at least one consumer with project
       field equal to `projects/123456789`. Also note that the state name match is case-insensitive and
       query can omit the prefix "ENTITLEMENT_". For example, `state=active` is equivalent to
       `state=ENTITLEMENT_ACTIVE`. If the query contains some special characters other than letters,
       underscore, or digits, the phrase must be quoted with double quotes. For example,
       `product="providerId:productId"`, where the product name needs to be quoted because it contains
       special character colon. Queries can be combined with `AND`, `OR`, and `NOT` to form more complex
       queries. They can also be grouped to force a desired evaluation order. For example, `state=active
       AND (account=E-1234 OR account=5678) AND NOT (product=foo-product)`. Connective `AND` can be
       omitted between two predicates. For example `account=E-1234 state=active` is equivalent to
       `account=E-1234 AND state=active`.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * The filter that can be used to limit the list request. The filter is a query string that
         * can match a selected set of attributes with string values. For example
         * `account=E-1234-5678-ABCD-EFGH`, `state=pending_cancellation`, and `plan!=foo-plan`.
         * Supported query attributes are * `account` * `customer_billing_account` with value in the
         * format of: `billingAccounts/{id}` * `product_external_name` * `quote_external_name` *
         * `offer` * `new_pending_offer` * `plan` * `newPendingPlan` or `new_pending_plan` * `state`
         * * `consumers.project` Note that the consumers match works on repeated structures, so
         * equality (`consumers.project=projects/123456789`) is not supported. Set membership can be
         * expressed with the `:` operator. For example, `consumers.project:projects/123456789`
         * finds entitlements with at least one consumer with project field equal to
         * `projects/123456789`. Also note that the state name match is case-insensitive and query
         * can omit the prefix "ENTITLEMENT_". For example, `state=active` is equivalent to
         * `state=ENTITLEMENT_ACTIVE`. If the query contains some special characters other than
         * letters, underscore, or digits, the phrase must be quoted with double quotes. For
         * example, `product="providerId:productId"`, where the product name needs to be quoted
         * because it contains special character colon. Queries can be combined with `AND`, `OR`,
         * and `NOT` to form more complex queries. They can also be grouped to force a desired
         * evaluation order. For example, `state=active AND (account=E-1234 OR account=5678) AND NOT
         * (product=foo-product)`. Connective `AND` can be omitted between two predicates. For
         * example `account=E-1234 state=active` is equivalent to `account=E-1234 AND state=active`.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of entries that are requested. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of entries that are requested.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of entries that are requested. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The token for fetching the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The token for fetching the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The token for fetching the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing Entitlement.
       *
       * Create a request for the method "entitlements.patch".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name The name of the entitlement to update.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Updates an existing Entitlement.
         *
         * Create a request for the method "entitlements.patch".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the entitlement to update.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement content) {
          super(CloudCommercePartnerProcurementService.this, "PATCH", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Entitlement.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the entitlement to update. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the entitlement to update.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the entitlement to update. */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The update mask that applies to the resource. See the [FieldMask definition]
         * (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask)
         * for more details.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The update mask that applies to the resource. See the [FieldMask definition]
       (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask) for more
       details.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The update mask that applies to the resource. See the [FieldMask definition]
         * (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask)
         * for more details.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Rejects an entitlement that is in the EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED state.
       * This method is invoked by the provider to reject the creation of the entitlement resource.
       *
       * Create a request for the method "entitlements.reject".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Reject#execute()} method to invoke the remote operation.
       *
       * @param name The resource name of the entitlement. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementRequest}
       * @return the request
       */
      public Reject reject(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementRequest content) throws java.io.IOException {
        Reject result = new Reject(name, content);
        initialize(result);
        return result;
      }

      public class Reject extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:reject";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Rejects an entitlement that is in the EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED state.
         * This method is invoked by the provider to reject the creation of the entitlement resource.
         *
         * Create a request for the method "entitlements.reject".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Reject#execute()} method to invoke the remote
         * operation. <p> {@link
         * Reject#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource name of the entitlement. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementRequest}
         * @since 1.13
         */
        protected Reject(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public Reject set$Xgafv(java.lang.String $Xgafv) {
          return (Reject) super.set$Xgafv($Xgafv);
        }

        @Override
        public Reject setAccessToken(java.lang.String accessToken) {
          return (Reject) super.setAccessToken(accessToken);
        }

        @Override
        public Reject setAlt(java.lang.String alt) {
          return (Reject) super.setAlt(alt);
        }

        @Override
        public Reject setCallback(java.lang.String callback) {
          return (Reject) super.setCallback(callback);
        }

        @Override
        public Reject setFields(java.lang.String fields) {
          return (Reject) super.setFields(fields);
        }

        @Override
        public Reject setKey(java.lang.String key) {
          return (Reject) super.setKey(key);
        }

        @Override
        public Reject setOauthToken(java.lang.String oauthToken) {
          return (Reject) super.setOauthToken(oauthToken);
        }

        @Override
        public Reject setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Reject) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Reject setQuotaUser(java.lang.String quotaUser) {
          return (Reject) super.setQuotaUser(quotaUser);
        }

        @Override
        public Reject setUploadType(java.lang.String uploadType) {
          return (Reject) super.setUploadType(uploadType);
        }

        @Override
        public Reject setUploadProtocol(java.lang.String uploadProtocol) {
          return (Reject) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the entitlement. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the entitlement. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the entitlement. Required. */
        public Reject setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Reject set(String parameterName, Object value) {
          return (Reject) super.set(parameterName, value);
        }
      }
      /**
       * Rejects an entitlement plan change that is in the
       * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state. This method is invoked by the
       * provider to reject the plan change on the entitlement resource.
       *
       * Create a request for the method "entitlements.rejectPlanChange".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link RejectPlanChange#execute()} method to invoke the remote
       * operation.
       *
       * @param name The resource name of the entitlement. Required.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementPlanChangeRequest}
       * @return the request
       */
      public RejectPlanChange rejectPlanChange(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementPlanChangeRequest content) throws java.io.IOException {
        RejectPlanChange result = new RejectPlanChange(name, content);
        initialize(result);
        return result;
      }

      public class RejectPlanChange extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:rejectPlanChange";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Rejects an entitlement plan change that is in the
         * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state. This method is invoked by the
         * provider to reject the plan change on the entitlement resource.
         *
         * Create a request for the method "entitlements.rejectPlanChange".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link RejectPlanChange#execute()} method to invoke
         * the remote operation. <p> {@link RejectPlanChange#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name The resource name of the entitlement. Required.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementPlanChangeRequest}
         * @since 1.13
         */
        protected RejectPlanChange(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.RejectEntitlementPlanChangeRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public RejectPlanChange set$Xgafv(java.lang.String $Xgafv) {
          return (RejectPlanChange) super.set$Xgafv($Xgafv);
        }

        @Override
        public RejectPlanChange setAccessToken(java.lang.String accessToken) {
          return (RejectPlanChange) super.setAccessToken(accessToken);
        }

        @Override
        public RejectPlanChange setAlt(java.lang.String alt) {
          return (RejectPlanChange) super.setAlt(alt);
        }

        @Override
        public RejectPlanChange setCallback(java.lang.String callback) {
          return (RejectPlanChange) super.setCallback(callback);
        }

        @Override
        public RejectPlanChange setFields(java.lang.String fields) {
          return (RejectPlanChange) super.setFields(fields);
        }

        @Override
        public RejectPlanChange setKey(java.lang.String key) {
          return (RejectPlanChange) super.setKey(key);
        }

        @Override
        public RejectPlanChange setOauthToken(java.lang.String oauthToken) {
          return (RejectPlanChange) super.setOauthToken(oauthToken);
        }

        @Override
        public RejectPlanChange setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (RejectPlanChange) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public RejectPlanChange setQuotaUser(java.lang.String quotaUser) {
          return (RejectPlanChange) super.setQuotaUser(quotaUser);
        }

        @Override
        public RejectPlanChange setUploadType(java.lang.String uploadType) {
          return (RejectPlanChange) super.setUploadType(uploadType);
        }

        @Override
        public RejectPlanChange setUploadProtocol(java.lang.String uploadProtocol) {
          return (RejectPlanChange) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource name of the entitlement. Required. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource name of the entitlement. Required.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource name of the entitlement. Required. */
        public RejectPlanChange setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public RejectPlanChange set(String parameterName, Object value) {
          return (RejectPlanChange) super.set(parameterName, value);
        }
      }
      /**
       * Requests suspension of an active Entitlement. This is not yet supported.
       *
       * Create a request for the method "entitlements.suspend".
       *
       * This request holds the parameters needed by the cloudcommerceprocurement server.  After setting
       * any optional parameters, call the {@link Suspend#execute()} method to invoke the remote
       * operation.
       *
       * @param name The name of the entitlement to suspend.
       * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.SuspendEntitlementRequest}
       * @return the request
       */
      public Suspend suspend(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.SuspendEntitlementRequest content) throws java.io.IOException {
        Suspend result = new Suspend(name, content);
        initialize(result);
        return result;
      }

      public class Suspend extends CloudCommercePartnerProcurementServiceRequest<com.google.api.services.cloudcommerceprocurement.v1.model.Empty> {

        private static final String REST_PATH = "v1/{+name}:suspend";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^providers/[^/]+/entitlements/[^/]+$");

        /**
         * Requests suspension of an active Entitlement. This is not yet supported.
         *
         * Create a request for the method "entitlements.suspend".
         *
         * This request holds the parameters needed by the the cloudcommerceprocurement server.  After
         * setting any optional parameters, call the {@link Suspend#execute()} method to invoke the remote
         * operation. <p> {@link
         * Suspend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the entitlement to suspend.
         * @param content the {@link com.google.api.services.cloudcommerceprocurement.v1.model.SuspendEntitlementRequest}
         * @since 1.13
         */
        protected Suspend(java.lang.String name, com.google.api.services.cloudcommerceprocurement.v1.model.SuspendEntitlementRequest content) {
          super(CloudCommercePartnerProcurementService.this, "POST", REST_PATH, content, com.google.api.services.cloudcommerceprocurement.v1.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
        }

        @Override
        public Suspend set$Xgafv(java.lang.String $Xgafv) {
          return (Suspend) super.set$Xgafv($Xgafv);
        }

        @Override
        public Suspend setAccessToken(java.lang.String accessToken) {
          return (Suspend) super.setAccessToken(accessToken);
        }

        @Override
        public Suspend setAlt(java.lang.String alt) {
          return (Suspend) super.setAlt(alt);
        }

        @Override
        public Suspend setCallback(java.lang.String callback) {
          return (Suspend) super.setCallback(callback);
        }

        @Override
        public Suspend setFields(java.lang.String fields) {
          return (Suspend) super.setFields(fields);
        }

        @Override
        public Suspend setKey(java.lang.String key) {
          return (Suspend) super.setKey(key);
        }

        @Override
        public Suspend setOauthToken(java.lang.String oauthToken) {
          return (Suspend) super.setOauthToken(oauthToken);
        }

        @Override
        public Suspend setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Suspend) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Suspend setQuotaUser(java.lang.String quotaUser) {
          return (Suspend) super.setQuotaUser(quotaUser);
        }

        @Override
        public Suspend setUploadType(java.lang.String uploadType) {
          return (Suspend) super.setUploadType(uploadType);
        }

        @Override
        public Suspend setUploadProtocol(java.lang.String uploadProtocol) {
          return (Suspend) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the entitlement to suspend. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the entitlement to suspend.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the entitlement to suspend. */
        public Suspend setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^providers/[^/]+/entitlements/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Suspend set(String parameterName, Object value) {
          return (Suspend) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link CloudCommercePartnerProcurementService}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudCommercePartnerProcurementService}. */
    @Override
    public CloudCommercePartnerProcurementService build() {
      return new CloudCommercePartnerProcurementService(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudCommercePartnerProcurementServiceRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudCommercePartnerProcurementServiceRequestInitializer(
        CloudCommercePartnerProcurementServiceRequestInitializer cloudcommercepartnerprocurementserviceRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudcommercepartnerprocurementserviceRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
