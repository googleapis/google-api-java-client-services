{
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Run API",
  "ownerName": "Google",
  "resources": {
    "namespaces": {
      "resources": {
        "routes": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListRoutesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "labelSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn."
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number from which the routes should be listed.",
                  "required": true,
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "fieldSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                  "type": "string"
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "limit": {
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32",
                  "type": "integer"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/routes",
              "id": "run.namespaces.routes.list",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/routes",
              "description": "Rpc to list routes."
            },
            "get": {
              "description": "Rpc to get information about a route.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Route"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/routes/[^/]+$",
                  "location": "path",
                  "description": "The name of the route being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/routes/{routesId}",
              "id": "run.namespaces.routes.get",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}"
            }
          }
        },
        "revisions": {
          "methods": {
            "delete": {
              "description": "Rpc to delete a revision.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "orphanDependents": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info."
                },
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "description": "The name of the revision being deleted. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$",
                  "location": "path"
                },
                "propagationPolicy": {
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information.",
                  "type": "string"
                },
                "kind": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions/{revisionsId}",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "id": "run.namespaces.revisions.delete"
            },
            "list": {
              "response": {
                "$ref": "ListRevisionsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "fieldSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                  "type": "string"
                },
                "includeUninitialized": {
                  "location": "query",
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "description": "The project ID or project number from which the revisions should be listed.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/revisions",
              "id": "run.namespaces.revisions.list",
              "description": "Rpc to list revisions."
            },
            "get": {
              "response": {
                "$ref": "Revision"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the revision being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions/{revisionsId}",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "id": "run.namespaces.revisions.get",
              "description": "Rpc to get information about a revision."
            }
          }
        },
        "configurations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListConfigurationsResponse"
              },
              "parameters": {
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                },
                "parent": {
                  "location": "path",
                  "description": "The project ID or project number from which the configurations should be\nlisted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$"
                },
                "labelSelector": {
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string",
                  "location": "query"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "resourceVersion": {
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "limit": {
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/configurations",
              "id": "run.namespaces.configurations.list",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/configurations",
              "description": "Rpc to list configurations."
            },
            "get": {
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/configurations/{configurationsId}",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "id": "run.namespaces.configurations.get",
              "description": "Rpc to get information about a configuration.",
              "response": {
                "$ref": "Configuration"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the configuration being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/configurations/[^/]+$"
                }
              }
            }
          }
        },
        "domainmappings": {
          "methods": {
            "list": {
              "description": "Rpc to list domain mappings.",
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resourceVersion": {
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "fieldSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                  "type": "string"
                },
                "continue": {
                  "description": "Optional encoded string to continue paging.",
                  "type": "string",
                  "location": "query"
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "parent": {
                  "description": "The project ID or project number from which the domain mappings should be\nlisted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings",
              "id": "run.namespaces.domainmappings.list"
            },
            "get": {
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "id": "run.namespaces.domainmappings.get",
              "description": "Rpc to get information about a domain mapping.",
              "response": {
                "$ref": "DomainMapping"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$",
                  "location": "path",
                  "description": "The name of the domain mapping being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}"
            },
            "create": {
              "parameters": {
                "parent": {
                  "description": "The project ID or project number in which this domain mapping should be\ncreated.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "id": "run.namespaces.domainmappings.create",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings",
              "description": "Creates a new domain mapping.",
              "request": {
                "$ref": "DomainMapping"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "DomainMapping"
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "orphanDependents": {
                  "location": "query",
                  "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                  "type": "boolean"
                },
                "apiVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "name": {
                  "description": "The name of the domain mapping being deleted. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$",
                  "location": "path"
                },
                "propagationPolicy": {
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information.",
                  "type": "string"
                },
                "kind": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "id": "run.namespaces.domainmappings.delete",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "description": "Rpc to delete a domain mapping."
            }
          }
        },
        "authorizeddomains": {
          "methods": {
            "list": {
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/authorizeddomains",
              "id": "run.namespaces.authorizeddomains.list",
              "description": "RPC to list authorized domains.",
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "Name of the parent Application resource. Example: `apps/myapp`.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/authorizeddomains"
            }
          }
        },
        "eventtypes": {
          "methods": {
            "get": {
              "response": {
                "$ref": "EventType"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/eventtypes/[^/]+$",
                  "location": "path",
                  "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/eventtypes/{eventtypesId}",
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}",
              "id": "run.namespaces.eventtypes.get",
              "description": "Rpc to get information about an EventType."
            },
            "list": {
              "response": {
                "$ref": "ListEventTypesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run."
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                },
                "parent": {
                  "description": "The project ID or project number from which the EventTypes should be\nlisted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/eventtypes",
              "path": "apis/eventing.knative.dev/v1alpha1/{+parent}/eventtypes",
              "id": "run.namespaces.eventtypes.list",
              "description": "Rpc to list EventTypes."
            }
          }
        },
        "triggers": {
          "methods": {
            "delete": {
              "description": "Rpc to delete a trigger.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "apiVersion": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^namespaces/[^/]+/triggers/[^/]+$",
                  "location": "path",
                  "description": "The name of the trigger being deleted. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string"
                },
                "propagationPolicy": {
                  "type": "string",
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information."
                },
                "kind": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers/{triggersId}",
              "id": "run.namespaces.triggers.delete",
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}"
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListTriggersResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number from which the triggers should\nbe listed.",
                  "required": true,
                  "type": "string"
                },
                "resourceVersion": {
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "includeUninitialized": {
                  "location": "query",
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers",
              "id": "run.namespaces.triggers.list",
              "path": "apis/eventing.knative.dev/v1alpha1/{+parent}/triggers",
              "description": "Rpc to list triggers."
            },
            "get": {
              "response": {
                "$ref": "Trigger"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/triggers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers/{triggersId}",
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}",
              "id": "run.namespaces.triggers.get",
              "description": "Rpc to get information about a trigger."
            },
            "replaceTrigger": {
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/triggers/[^/]+$",
                  "location": "path",
                  "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers/{triggersId}",
              "id": "run.namespaces.triggers.replaceTrigger",
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}",
              "description": "Rpc to replace a trigger.\n\nOnly the spec and metadata labels and annotations are modifiable. After\nthe Update request, Cloud Run will work to make the 'status'\nmatch the requested 'spec'.\n\nMay provide metadata.resourceVersion to enforce update from last read for\noptimistic concurrency control.",
              "request": {
                "$ref": "Trigger"
              },
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Trigger"
              }
            },
            "create": {
              "response": {
                "$ref": "Trigger"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number in which this trigger should\nbe created.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers",
              "path": "apis/eventing.knative.dev/v1alpha1/{+parent}/triggers",
              "id": "run.namespaces.triggers.create",
              "request": {
                "$ref": "Trigger"
              },
              "description": "Creates a new trigger."
            }
          }
        },
        "services": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "location": "path",
                  "description": "The name of the service being deleted. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string"
                },
                "propagationPolicy": {
                  "type": "string",
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information."
                },
                "kind": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                },
                "orphanDependents": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info."
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}",
              "id": "run.namespaces.services.delete",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "description": "Rpc to delete a service.\nThis will cause the Service to stop serving traffic and will delete the\nchild entities like Routes, Configurations and Revisions."
            },
            "list": {
              "description": "Rpc to list services.",
              "response": {
                "$ref": "ListServicesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The project ID or project number from which the services should be listed.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "includeUninitialized": {
                  "location": "query",
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "limit": {
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32",
                  "type": "integer"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                  "type": "boolean"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/services",
              "id": "run.namespaces.services.list"
            },
            "get": {
              "description": "Rpc to get information about a service.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Service"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the service being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}",
              "id": "run.namespaces.services.get",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}"
            },
            "create": {
              "response": {
                "$ref": "Service"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number in which this service should be created.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/services",
              "id": "run.namespaces.services.create",
              "request": {
                "$ref": "Service"
              },
              "description": "Rpc to create a service."
            },
            "replaceService": {
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}",
              "id": "run.namespaces.services.replaceService",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "request": {
                "$ref": "Service"
              },
              "description": "Rpc to replace a service.\n\nOnly the spec and metadata labels and annotations are modifiable. After\nthe Update request, Cloud Run will work to make the 'status'\nmatch the requested 'spec'.\n\nMay provide metadata.resourceVersion to enforce update from last read for\noptimistic concurrency control.",
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Service"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the service being replaced. If needed, replace\n{namespace_id} with the project ID.",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/services/[^/]+$"
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list filter."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "path": "v1alpha1/{+name}/locations",
              "id": "run.projects.locations.list",
              "description": "Lists information about the supported locations for this service."
            }
          },
          "resources": {
            "routes": {
              "methods": {
                "list": {
                  "parameters": {
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run."
                    },
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number from which the routes should be listed.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "labelSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn."
                    },
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                      "type": "string"
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/routes",
                  "id": "run.projects.locations.routes.list",
                  "path": "v1alpha1/{+parent}/routes",
                  "description": "Rpc to list routes.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListRoutesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Route"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/routes/[^/]+$",
                      "location": "path",
                      "description": "The name of the route being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/routes/{routesId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.routes.get",
                  "description": "Rpc to get information about a route."
                }
              }
            },
            "revisions": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "apiVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$",
                      "location": "path",
                      "description": "The name of the revision being deleted. If needed, replace\n{namespace_id} with the project ID."
                    },
                    "propagationPolicy": {
                      "type": "string",
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information."
                    },
                    "kind": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    },
                    "orphanDependents": {
                      "location": "query",
                      "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                      "type": "boolean"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}",
                  "id": "run.projects.locations.revisions.delete",
                  "path": "v1alpha1/{+name}",
                  "description": "Rpc to delete a revision."
                },
                "list": {
                  "description": "Rpc to list revisions.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRevisionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project ID or project number from which the revisions should be listed."
                    },
                    "labelSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn."
                    },
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                      "type": "string"
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "limit": {
                      "location": "query",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                      "type": "boolean"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions",
                  "id": "run.projects.locations.revisions.list",
                  "path": "v1alpha1/{+parent}/revisions"
                },
                "get": {
                  "description": "Rpc to get information about a revision.",
                  "response": {
                    "$ref": "Revision"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$",
                      "location": "path",
                      "description": "The name of the revision being retrieved. If needed, replace\n{namespace_id} with the project ID."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.revisions.get"
                }
              }
            },
            "domainmappings": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project ID or project number in which this domain mapping should be\ncreated."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "id": "run.projects.locations.domainmappings.create",
                  "request": {
                    "$ref": "DomainMapping"
                  },
                  "description": "Creates a new domain mapping."
                },
                "delete": {
                  "description": "Rpc to delete a domain mapping.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "orphanDependents": {
                      "location": "query",
                      "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                      "type": "boolean"
                    },
                    "apiVersion": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "The name of the domain mapping being deleted. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$"
                    },
                    "propagationPolicy": {
                      "type": "string",
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information."
                    },
                    "kind": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.domainmappings.delete"
                },
                "list": {
                  "response": {
                    "$ref": "ListDomainMappingsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Not currently used by Cloud Run."
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run."
                    },
                    "parent": {
                      "description": "The project ID or project number from which the domain mappings should be\nlisted.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "id": "run.projects.locations.domainmappings.list",
                  "description": "Rpc to list domain mappings."
                },
                "get": {
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the domain mapping being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.domainmappings.get",
                  "description": "Rpc to get information about a domain mapping."
                }
              }
            },
            "configurations": {
              "methods": {
                "list": {
                  "description": "Rpc to list configurations.",
                  "response": {
                    "$ref": "ListConfigurationsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number from which the configurations should be\nlisted.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "labelSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn."
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run."
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Not currently used by Cloud Run."
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "location": "query",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/configurations",
                  "path": "v1alpha1/{+parent}/configurations",
                  "id": "run.projects.locations.configurations.list"
                },
                "get": {
                  "response": {
                    "$ref": "Configuration"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/configurations/[^/]+$",
                      "location": "path",
                      "description": "The name of the configuration being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/configurations/{configurationsId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.configurations.get",
                  "description": "Rpc to get information about a configuration."
                }
              }
            },
            "authorizeddomains": {
              "methods": {
                "list": {
                  "path": "v1alpha1/{+parent}/authorizeddomains",
                  "id": "run.projects.locations.authorizeddomains.list",
                  "description": "RPC to list authorized domains.",
                  "response": {
                    "$ref": "ListAuthorizedDomainsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Name of the parent Application resource. Example: `apps/myapp`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum results to return per page.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizeddomains"
                }
              }
            },
            "triggers": {
              "methods": {
                "list": {
                  "description": "Rpc to list triggers.",
                  "response": {
                    "$ref": "ListTriggersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "limit": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run."
                    },
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number from which the triggers should\nbe listed.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "path": "v1alpha1/{+parent}/triggers",
                  "id": "run.projects.locations.triggers.list"
                },
                "get": {
                  "description": "Rpc to get information about a trigger.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Trigger"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "location": "path",
                      "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "id": "run.projects.locations.triggers.get",
                  "path": "v1alpha1/{+name}"
                },
                "replaceTrigger": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "location": "path",
                      "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.triggers.replaceTrigger",
                  "request": {
                    "$ref": "Trigger"
                  },
                  "description": "Rpc to replace a trigger.\n\nOnly the spec and metadata labels and annotations are modifiable. After\nthe Update request, Cloud Run will work to make the 'status'\nmatch the requested 'spec'.\n\nMay provide metadata.resourceVersion to enforce update from last read for\noptimistic concurrency control.",
                  "response": {
                    "$ref": "Trigger"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PUT"
                },
                "create": {
                  "id": "run.projects.locations.triggers.create",
                  "path": "v1alpha1/{+parent}/triggers",
                  "description": "Creates a new trigger.",
                  "request": {
                    "$ref": "Trigger"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Trigger"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number in which this trigger should\nbe created.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers"
                },
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.triggers.delete",
                  "description": "Rpc to delete a trigger.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the trigger being deleted. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "location": "path"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information.",
                      "type": "string",
                      "location": "query"
                    },
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "apiVersion": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "eventtypes": {
              "methods": {
                "get": {
                  "id": "run.projects.locations.eventtypes.get",
                  "path": "v1alpha1/{+name}",
                  "description": "Rpc to get information about an EventType.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "EventType"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the trigger being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/eventtypes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/eventtypes/{eventtypesId}"
                },
                "list": {
                  "description": "Rpc to list EventTypes.",
                  "response": {
                    "$ref": "ListEventTypesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run."
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "continue": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional encoded string to continue paging."
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project ID or project number from which the EventTypes should be\nlisted."
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/eventtypes",
                  "path": "v1alpha1/{+parent}/eventtypes",
                  "id": "run.projects.locations.eventtypes.list"
                }
              }
            },
            "services": {
              "methods": {
                "delete": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.services.delete",
                  "description": "Rpc to delete a service.\nThis will cause the Service to stop serving traffic and will delete the\nchild entities like Routes, Configurations and Revisions.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "orphanDependents": {
                      "location": "query",
                      "description": "Deprecated.\nSpecifies the cascade behavior on delete.\nCloud Run only supports cascading behavior, so this must be false.\nThis attribute is deprecated, and is now replaced with PropagationPolicy\nSee https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                      "type": "boolean"
                    },
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path",
                      "description": "The name of the service being deleted. If needed, replace\n{namespace_id} with the project ID."
                    },
                    "propagationPolicy": {
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores\nthis setting, and deletes in the background. Please see\nkubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for\nmore information.",
                      "type": "string"
                    },
                    "kind": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services",
                  "path": "v1alpha1/{+parent}/services",
                  "id": "run.projects.locations.services.list",
                  "description": "Rpc to list services.",
                  "response": {
                    "$ref": "ListServicesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32"
                    },
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well.\nNot currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "parent": {
                      "description": "The project ID or project number from which the services should be listed.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should\nstart. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.\nNot currently used by Cloud Run."
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Service"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The project ID or project number in which this service should be created."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services",
                  "path": "v1alpha1/{+parent}/services",
                  "id": "run.projects.locations.services.create",
                  "request": {
                    "$ref": "Service"
                  },
                  "description": "Rpc to create a service."
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the IAM Access control policy for the specified Service. Overwrites\nany existing policy.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "id": "run.projects.locations.services.setIamPolicy"
                },
                "getIamPolicy": {
                  "description": "Get the IAM Access Control policy currently in effect for the given\nCloud Run service. This result does not include any inherited policies.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy",
                  "id": "run.projects.locations.services.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy"
                },
                "get": {
                  "description": "Rpc to get information about a service.",
                  "response": {
                    "$ref": "Service"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the service being retrieved. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.services.get"
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified Project.\n\nThere are no permissions required for making this API call.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "id": "run.projects.locations.services.testIamPermissions"
                },
                "replaceService": {
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Service"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the service being replaced. If needed, replace\n{namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "id": "run.projects.locations.services.replaceService",
                  "path": "v1alpha1/{+name}",
                  "description": "Rpc to replace a service.\n\nOnly the spec and metadata labels and annotations are modifiable. After\nthe Update request, Cloud Run will work to make the 'status'\nmatch the requested 'spec'.\n\nMay provide metadata.resourceVersion to enforce update from last read for\noptimistic concurrency control.",
                  "request": {
                    "$ref": "Service"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    }
  },
  "version": "v1alpha1",
  "baseUrl": "https://run.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "Deploy and manage user provided container images that scale automatically based on HTTP traffic.",
  "servicePath": "",
  "basePath": "",
  "id": "run:v1alpha1",
  "documentationLink": "https://cloud.google.com/run/",
  "revision": "20190620",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "Quantity": {
      "description": "The view model of a single quantity, e.g. \"800 MiB\". Corresponds to\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/generated.proto",
      "type": "object",
      "properties": {
        "string": {
          "description": "Stringified version of the quantity, e.g., \"800 MiB\".",
          "type": "string"
        }
      },
      "id": "Quantity"
    },
    "Initializers": {
      "type": "object",
      "properties": {
        "pending": {
          "type": "array",
          "items": {
            "$ref": "Initializer"
          },
          "description": "Pending is a list of initializers that must execute in order before this\nobject is visible. When the last pending initializer is removed, and no\nfailing result is set, the initializers struct will be set to nil and the\nobject is considered as initialized and visible to all clients.\n+patchMergeKey=name\n+patchStrategy=merge"
        }
      },
      "id": "Initializers",
      "description": "Initializers tracks the progress of initialization."
    },
    "VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional",
          "type": "boolean"
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationHostToContainer is used.\nThis field is beta in 1.10.\n+optional",
          "type": "string"
        },
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
          "type": "string"
        },
        "subPath": {
          "type": "string",
          "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
        }
      },
      "id": "VolumeMount"
    },
    "Revision": {
      "description": "Revision is an immutable snapshot of code and configuration.  A revision\nreferences a container image. Revisions are created by updates to a\nConfiguration.\n\nCloud Run does not currently support referencing a build that is responsible\nfor materializing the container image from source.\n\nSee also:\nhttps://github.com/knative/serving/blob/master/docs/spec/overview.md#revision",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "RevisionStatus",
          "description": "Status communicates the observed state of the Revision (from the\ncontroller)."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "RevisionSpec",
          "description": "Spec holds the desired state of the Revision (from the client)."
        },
        "kind": {
          "description": "The kind of this resource, in this case \"Revision\".",
          "type": "string"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Revision, including name, namespace, labels,\nand annotations."
        }
      },
      "id": "Revision"
    },
    "ListRevisionsResponse": {
      "description": "ListRevisionsResponse is a list of Revision resources.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this revision list."
        },
        "items": {
          "description": "List of Revisions.",
          "type": "array",
          "items": {
            "$ref": "Revision"
          }
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"RevisionList\".",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListRevisionsResponse"
    },
    "RevisionSpec": {
      "description": "RevisionSpec holds the desired state of the Revision (from the client).",
      "type": "object",
      "properties": {
        "containerConcurrency": {
          "type": "integer",
          "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent)\nrequests per container of the Revision. Values are:\n- `0` thread-safe, the system should manage the max concurrency. This is\n   the default value.\n- `1` not-thread-safe. Single concurrency\n- `2-N` thread-safe, max concurrency of N",
          "format": "int32"
        },
        "serviceAccountName": {
          "description": "Email address of the IAM service account associated with the revision\nof the service. The service account represents the identity of the\nrunning revision, and determines what permissions the revision has. If\nnot provided, the revision will use the project's default service account.",
          "type": "string"
        },
        "containers": {
          "description": "Containers holds the single container that defines the unit of execution\nfor this Revision. In the context of a Revision, we disallow a number of\nfields on this Container, including: name and lifecycle.\nIn Cloud Run, only a single container may be provided.",
          "type": "array",
          "items": {
            "$ref": "Container"
          }
        },
        "generation": {
          "type": "integer",
          "description": "Deprecated and not currently populated by Cloud Run. See\nmetadata.generation instead, which is the sequence number containing the\nlatest generation of the desired state.\n\nRead-only.",
          "format": "int32"
        },
        "servingState": {
          "description": "ServingState holds a value describing the state the resources\nare in for this Revision.\nUsers must not specify this when creating a revision. It is expected\nthat the system will manipulate this based on routability and load.\n\nPopulated by the system.\nRead-only.",
          "type": "string",
          "enumDescriptions": [
            "The revision serving state hasn't been specified.",
            "The revision is ready to serve traffic.",
            "The revision is not currently serving traffic, but could be made to serve\ntraffic quickly.\nNot currently used by Cloud Run.",
            "The revision has been decommissioned and is not needed to serve traffic\nanymore. A Revision may be brought out of retirement, but it may take\nlonger than it would from a \"Reserve\" state."
          ],
          "enum": [
            "REVISION_SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "RESERVE",
            "RETIRED"
          ]
        },
        "concurrencyModel": {
          "description": "ConcurrencyModel specifies the desired concurrency model\n(Single or Multi) for the Revision. Defaults to Multi.\nDeprecated in favor of ContainerConcurrency.\n+optional",
          "type": "string"
        },
        "container": {
          "$ref": "Container",
          "description": "Container defines the unit of execution for this Revision.\nIn the context of a Revision, we disallow a number of the fields of\nthis Container, including: name, ports, and volumeMounts.\nThe runtime contract is documented here:\nhttps://github.com/knative/serving/blob/master/docs/runtime-contract.md"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds holds the max duration the instance is allowed for\nresponding to a request.\nNot currently used by Cloud Run.",
          "format": "int32",
          "type": "integer"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "id": "RevisionSpec"
    },
    "EnvVar": {
      "id": "EnvVar",
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded\nusing the previous defined environment variables in the container and\nany route environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. The $(VAR_NAME)\nsyntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped\nreferences will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        }
      }
    },
    "ListTriggersResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"TriggerList\"."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Trigger list."
        },
        "items": {
          "description": "List of Triggers.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"v1alpha1\"."
        }
      },
      "id": "ListTriggersResponse",
      "description": "ListTriggersResponse is a list of Trigger resources."
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Binding"
    },
    "ConfigurationStatus": {
      "description": "ConfigurationStatus communicates the observed state of the Configuration\n(from the controller).",
      "type": "object",
      "properties": {
        "latestCreatedRevisionName": {
          "type": "string",
          "description": "LatestCreatedRevisionName is the last revision that was created from this\nConfiguration. It might not be ready yet, for that use\nLatestReadyRevisionName."
        },
        "latestReadyRevisionName": {
          "description": "LatestReadyRevisionName holds the name of the latest Revision stamped out\nfrom this Configuration that has had its \"Ready\" condition become \"True\".",
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "ConfigurationCondition"
          },
          "description": "Conditions communicates information about ongoing/complete\nreconciliation processes that bring the \"spec\" inline with the observed\nstate of the world."
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Configuration that\nwas last processed by the controller. The observed generation is updated\neven if the controller failed to process the spec and create the Revision.\n\nClients polling for completed reconciliation should poll until\nobservedGeneration = metadata.generation, and the Ready condition's status\nis True or False.",
          "format": "int32"
        }
      },
      "id": "ConfigurationStatus"
    },
    "ObjectMeta": {
      "id": "ObjectMeta",
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace, within a Cloud Run region.\nIs required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "description": "Not currently supported by Cloud Run.\n\nNumber of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also\nset. May only be shortened. Read-only. +optional",
          "format": "int32"
        },
        "clusterName": {
          "description": "Not currently supported by Cloud Run.\n\nThe name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request. +optional",
          "type": "string"
        },
        "finalizers": {
          "description": "Not currently supported by Cloud Run.\n\nMust be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
          "format": "google-datetime",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects that own this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected.\n+optional",
          "type": "array",
          "items": {
            "$ref": "OwnerReference"
          }
        },
        "creationTimestamp": {
          "type": "string",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "initializers": {
          "description": "Not currently supported by Cloud Run.\n\nAn initializer is a controller which enforces some system invariant at\nobject creation time. This field is a list of initializers that have not\nyet acted on this object. If nil or empty, this object has been completely\ninitialized. Otherwise, the object is considered uninitialized and is\nhidden (in list/watch and get calls) from clients that haven't explicitly\nasked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the\ncurrent set of initializers. Only privileged users may set or modify this\nlist. Once it is empty, it may not be modified further by any user.",
          "$ref": "Initializers"
        },
        "generation": {
          "type": "integer",
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "format": "int32"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional\n string selfLink = 4;",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique, within a\nCloud Run region. In Cloud Run the namespace must be equal to either the\nproject ID or project number."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional",
          "type": "object"
        },
        "generateName": {
          "description": "Not currently supported by Cloud Run.\n\nGenerateName is an optional prefix, used by the server, to generate a\nunique name ONLY IF the Name field has not been provided. If this field is\nused, the name returned to the client will be different than the name\npassed. This value will also be combined with a unique suffix. The provided\nvalue has the same validation rules as the Name field, and may be truncated\nby the length of the suffix required to make the value unique on the\nserver.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with\nReason ServerTimeout indicating a unique name could not be found in the\ntime allotted, and the client should retry (optionally after the time\nindicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional\n string generateName = 2;",
          "type": "string"
        }
      }
    },
    "ServiceSpecReleaseType": {
      "id": "ServiceSpecReleaseType",
      "description": "ServiceSpecReleaseType contains the options for slowly releasing revisions.\nSee ServiceSpec for more details.\n\nNot currently supported by Cloud Run.",
      "type": "object",
      "properties": {
        "revisions": {
          "description": "Revisions is an ordered list of 1 or 2 revisions. The first is the current\nrevision, and the second is the candidate revision. If a single revision\nis provided, traffic will be pinned at that revision.\n\n\"@latest\" is a shortcut for usage that refers to the latest created\nrevision by the configuration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rolloutPercent": {
          "description": "RolloutPercent is the percent of traffic that should be sent to the\ncandidate revision, i.e. the 2nd revision in the revisions list.\nValid values are between 0 and 99 inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "configuration": {
          "description": "The configuration for this service. All revisions from this service must\ncome from a single configuration.",
          "$ref": "ConfigurationSpec"
        }
      }
    },
    "TriggerCondition": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Human readable message indicating details about the current status.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "One-word CamelCase reason for the condition's current status.\n+optional"
        },
        "type": {
          "description": "Type of Trigger condition.",
          "type": "string"
        }
      },
      "id": "TriggerCondition",
      "description": "TriggerCondition contains state information for an Trigger."
    },
    "Service": {
      "description": "Service acts as a top-level container that manages a set of Routes and\nConfigurations which implement a network service. Service exists to provide a\nsingular abstraction which can be access controlled, reasoned about, and\nwhich encapsulates software lifecycle decisions such as rollout policy and\nteam resource ownership. Service acts only as an orchestrator of the\nunderlying Routes and Configurations (much as a kubernetes Deployment\norchestrates ReplicaSets).\n\nThe Service's controller will track the statuses of its owned Configuration\nand Route, reflecting their statuses and conditions as its own.\n\nSee also:\nhttps://github.com/knative/serving/blob/master/docs/spec/overview.md#service",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of resource, in this case \"Service\".",
          "type": "string"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Service, including name, namespace, labels,\nand annotations."
        },
        "status": {
          "$ref": "ServiceStatus",
          "description": "Status communicates the observed state of the Service (from the\ncontroller)."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "description": "Spec holds the desired state of the Service (from the client).",
          "$ref": "ServiceSpec"
        }
      },
      "id": "Service"
    },
    "ServiceSpec": {
      "type": "object",
      "properties": {
        "manual": {
          "$ref": "ServiceSpecManualType",
          "description": "Manual contains the options for configuring a manual service. See\nServiceSpec for more details.\n\nNot currently supported by Cloud Run."
        },
        "runLatest": {
          "$ref": "ServiceSpecRunLatest",
          "description": "RunLatest defines a simple Service. It will automatically\nconfigure a route that keeps the latest ready revision\nfrom the supplied configuration running.\n+optional"
        },
        "template": {
          "description": "Template holds the latest specification for the Revision to\nbe stamped out.\n\nNot currently supported by Cloud Run.",
          "$ref": "RevisionTemplate"
        },
        "release": {
          "description": "Release enables gradual promotion of new revisions by allowing traffic\nto be split between two revisions. This type replaces the deprecated\nPinned type.\n\nNot currently supported by Cloud Run.",
          "$ref": "ServiceSpecReleaseType"
        },
        "pinned": {
          "description": "Pins this service to a specific revision name. The revision must\nbe owned by the configuration provided.\n\nDeprecated and not supported by Cloud Run.\n+optional",
          "$ref": "ServiceSpecPinnedType"
        },
        "traffic": {
          "description": "Traffic specifies how to distribute traffic over a collection of Knative\nRevisions and Configurations. This will replace existing service specs\n(ServiceSpecRunLatest, ServiceSpecPinnedType, ServiceSpecReleaseType, and\nServiceSpecManualType).\n\nNot currently supported by Cloud Run.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "generation": {
          "type": "integer",
          "description": "Deprecated and not currently populated by Cloud Run. See\nmetadata.generation instead, which is the sequence number containing the\nlatest generation of the desired state.\n\nRead-only.",
          "format": "int32"
        }
      },
      "id": "ServiceSpec",
      "description": "ServiceSpec holds the desired state of the Route (from the client), which\nis used to manipulate the underlying Route and Configuration(s)."
    },
    "ObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.\n+optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this\nstring should contain a valid JSON/Go field access statement, such as\ndesiredState.manifest.containers[2]. For example, if the object reference\nis to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container\nthat triggered the event) or if no container name is specified\n\"spec.containers[2]\" (container with index 2 in this pod). This syntax is\nchosen only to have some well-defined way of referencing a part of an\nobject.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
          "type": "string"
        }
      },
      "id": "ObjectReference",
      "description": "ObjectReference contains enough information to let you inspect or modify the\nreferred object."
    },
    "Handler": {
      "type": "object",
      "properties": {
        "tcpSocket": {
          "$ref": "TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port.\nTCP hooks not yet supported"
        },
        "exec": {
          "$ref": "ExecAction",
          "description": "One and only one of the following should be specified.\nExec specifies the action to take.\n+optional"
        },
        "httpGet": {
          "$ref": "HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform.\n+optional"
        }
      },
      "id": "Handler",
      "description": "Handler defines a specific action that should be taken"
    },
    "Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Added capabilities\n+optional"
        },
        "drop": {
          "description": "Removed capabilities\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Capabilities"
    },
    "KeyToPath": {
      "id": "KeyToPath",
      "description": "Maps a string key to a path within a volume.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key to project.",
          "type": "string"
        },
        "path": {
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
          "type": "string"
        },
        "mode": {
          "type": "integer",
          "description": "Mode bits to use on this file, must be a value between 0 and 0777. If not\nspecified, the volume defaultMode will be used. This might be in conflict\nwith other options that affect the file mode, like fsGroup, and the result\ncan be other mode bits set. +optional",
          "format": "int32"
        }
      }
    },
    "EventType": {
      "id": "EventType",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "EventTypeSpec",
          "description": "Spec defines the desired state of the EventType."
        },
        "kind": {
          "description": "The kind of resource, in this case \"EventType\".",
          "type": "string"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this EventType."
        }
      }
    },
    "Container": {
      "type": "object",
      "properties": {
        "livenessProbe": {
          "$ref": "Probe",
          "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "env": {
          "description": "List of environment variables to set in the container.\nCannot be updated.\n+optional",
          "type": "array",
          "items": {
            "$ref": "EnvVar"
          }
        },
        "resources": {
          "$ref": "ResourceRequirements",
          "description": "Compute Resources required by this container.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional"
        },
        "readinessProbe": {
          "$ref": "Probe",
          "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
        },
        "lifecycle": {
          "$ref": "Lifecycle",
          "description": "Actions that the management system should take in response to container\nlifecycle events. Cannot be updated. +optional"
        },
        "terminationMessagePath": {
          "type": "string",
          "description": "Optional: Path at which the file to which the container's termination\nmessage will be written is mounted into the container's filesystem. Message\nwritten is intended to be brief final status, such as an assertion failure\nmessage. Will be truncated by the node if greater than 4096 bytes. The\ntotal message length across all containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container\nruntime. If this is not set, reads from stdin in the container will always\nresult in EOF. Default is false. +optional",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional",
          "type": "array",
          "items": {
            "$ref": "VolumeMount"
          }
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires\n'stdin' to be true. Default is false. +optional",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.\nThis is an alpha feature and may change in the future.\n+optional",
          "type": "array",
          "items": {
            "$ref": "VolumeDevice"
          }
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has\nbeen opened by a single attach. When stdin is true the stdin stream will\nremain open across multiple attach sessions. If stdinOnce is set to true,\nstdin is opened on container start, is empty until the first client\nattaches to stdin, and then remains open and accepts data until the client\ndisconnects, at which time stdin is closed and remains closed until the\ncontainer is restarted. If this flag is false, a container processes that\nreads from stdin will never receive an EOF. Default is false +optional",
          "type": "boolean"
        },
        "args": {
          "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's\nenvironment. If a variable cannot be resolved, the reference in the input\nstring will be unchanged. The $(VAR_NAME) syntax can be escaped with a\ndouble $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workingDir": {
          "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n+optional",
          "type": "array",
          "items": {
            "$ref": "ContainerPort"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "EnvFromSource"
          },
          "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key\nexists in multiple sources, the value associated with the last source will\ntake precedence. Values defined by an Env with a duplicate key will take\nprecedence. Cannot be updated. +optional"
        },
        "image": {
          "description": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images",
          "type": "string"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL.\nEach container must have a unique name (DNS_LABEL).\nCannot be updated.",
          "type": "string"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's\nenvironment. If a variable cannot be resolved, the reference in the input\nstring will be unchanged. The $(VAR_NAME) syntax can be escaped with a\ndouble $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info:\nhttps://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "description": "Indicate how the termination message should be populated. File will use the\ncontents of terminationMessagePath to populate the container status message\non both success and failure. FallbackToLogsOnError will use the last chunk\nof container log output if the termination message file is empty and the\ncontainer exited with an error. The log output is limited to 2048 bytes or\n80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n+optional"
        },
        "securityContext": {
          "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional",
          "$ref": "SecurityContext"
        }
      },
      "id": "Container",
      "description": "A single application container.\nThis specifies both the container to run, the command to run in the container\nand the arguments to supply to it.\nNote that additional arguments may be supplied by the system to the container\nat runtime."
    },
    "TCPSocketAction": {
      "id": "TCPSocketAction",
      "description": "TCPSocketAction describes an action based on opening a socket",
      "type": "object",
      "properties": {
        "port": {
          "$ref": "IntOrString",
          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.\n+optional",
          "type": "string"
        }
      }
    },
    "DomainMappingCondition": {
      "description": "DomainMappingCondition contains state information for a DomainMapping.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Human readable message indicating details about the current status.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's current status.\n+optional",
          "type": "string"
        },
        "type": {
          "description": "Type of domain mapping condition.",
          "type": "string"
        }
      },
      "id": "DomainMappingCondition"
    },
    "ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "requestsInMap": {
          "additionalProperties": {
            "$ref": "Quantity"
          },
          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value.\nThis is a temporary field created to migrate away from the\nmap\u003cstring, Quantity\u003e requests field. This is done to become compliant\nwith k8s style API.\nThis field is deprecated in favor of requests field.",
          "type": "object"
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is\nexplicitly specified, otherwise to an implementation-defined value.\nThe values of the map is string form of the 'quantity' k8s type:\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go"
        },
        "limits": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Limits describes the maximum amount of compute resources allowed.\nThe values of the map is string form of the 'quantity' k8s type:\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
          "type": "object"
        },
        "limitsInMap": {
          "additionalProperties": {
            "$ref": "Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed.\nThis is a temporary field created to migrate away from the\nmap\u003cstring, Quantity\u003e limits field. This is done to become compliant\nwith k8s style API.\nThis field is deprecated in favor of limits field.",
          "type": "object"
        }
      },
      "id": "ResourceRequirements"
    },
    "SecretEnvSource": {
      "id": "SecretEnvSource",
      "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "The Secret to select from."
        },
        "optional": {
          "description": "Specify whether the Secret must be defined\n+optional",
          "type": "boolean"
        }
      }
    },
    "TriggerFilterSourceAndType": {
      "description": "TriggerFilterSourceAndType filters events based on exact matches on the cloud\nevent's type and source attributes. Only exact matches will pass the filter.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "id": "TriggerFilterSourceAndType"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "Configuration": {
      "description": "Configuration represents the \"floating HEAD\" of a linear history of\nRevisions, and optionally how the containers those revisions reference are\nbuilt. Users create new Revisions by updating the Configuration's spec. The\n\"latest created\" revision's name is available under status, as is the \"latest\nready\" revision's name. See also:\nhttps://github.com/knative/serving/blob/master/docs/spec/overview.md#configuration",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Configuration, including name, namespace,\nlabels, and annotations."
        },
        "status": {
          "$ref": "ConfigurationStatus",
          "description": "Status communicates the observed state of the Configuration (from the\ncontroller)."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "ConfigurationSpec",
          "description": "Spec holds the desired state of the Configuration (from the client)."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case always \"Configuration\"."
        }
      },
      "id": "Configuration"
    },
    "ListRoutesResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource, in this case always \"RouteList\".",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Route list."
        },
        "items": {
          "description": "List of Routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"v1alpha1\"."
        }
      },
      "id": "ListRoutesResponse",
      "description": "ListRoutesResponse is a list of Route resources."
    },
    "Initializer": {
      "description": "Initializer is information about an initializer that has not yet completed.",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the process that is responsible for initializing this object.",
          "type": "string"
        }
      },
      "id": "Initializer"
    },
    "RevisionCondition": {
      "id": "RevisionCondition",
      "description": "RevisionCondition defines a readiness condition for a Revision.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's last transition.\n+optional",
          "type": "string"
        },
        "type": {
          "description": "RevisionConditionType is used to communicate the status of the\nreconciliation process. See also:\nhttps://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting\nTypes include:\n\n* \"Ready\": True when the Revision is ready.\n* \"ResourcesAvailable\": True when underlying resources have been\nprovisioned.\n* \"ContainerHealthy\": True when the Revision readiness check completes.\n* \"Active\": True when the Revision may receive traffic.",
          "type": "string"
        },
        "message": {
          "description": "Human readable message indicating details about the current status.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      },
      "id": "Location"
    },
    "ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including\nlists and various status objects. A resource may have only one of\n{ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items\nreturned, and indicates that the server has more data available. The value\nis opaque and may be used to issue another request to the endpoint that\nserved this list to retrieve the next set of available objects. Continuing\na list may not be possible if the server configuration has changed or more\nthan a few minutes have passed. The resourceVersion field returned when\nusing this continue value will be identical to the value in the first\nresponse.",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed. Value must\nbe treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string"
        }
      },
      "id": "ListMeta"
    },
    "IntOrString": {
      "description": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the value.",
          "format": "int64",
          "type": "string"
        },
        "intVal": {
          "description": "The int value.",
          "format": "int32",
          "type": "integer"
        },
        "strVal": {
          "type": "string",
          "description": "The string value."
        }
      },
      "id": "IntOrString"
    },
    "SecretVolumeSource": {
      "description": "The contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.",
      "type": "object",
      "properties": {
        "optional": {
          "description": "Specify whether the Secret or its keys must be defined.",
          "type": "boolean"
        },
        "defaultMode": {
          "description": "Mode bits to use on created files by default. Must be a value between 0 and\n0777. Defaults to 0644. Directories within the path are not affected by\nthis setting. This might be in conflict with other options that affect the\nfile mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "secretName": {
          "description": "Name of the secret in the container's namespace to use.",
          "type": "string"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional.",
          "type": "array",
          "items": {
            "$ref": "KeyToPath"
          }
        }
      },
      "id": "SecretVolumeSource"
    },
    "LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent.\nMore info:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "id": "LocalObjectReference",
      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace."
    },
    "Trigger": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"Trigger\"."
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Trigger."
        },
        "status": {
          "$ref": "TriggerStatus",
          "description": "Status represents the current state of the Trigger. This data may be out of\ndate.\n+optional"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "TriggerSpec",
          "description": "Spec defines the desired state of the Trigger."
        }
      },
      "id": "Trigger"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "ConfigMapVolumeSource": {
      "id": "ConfigMapVolumeSource",
      "description": "Adapts a ConfigMap into a volume.\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.",
      "type": "object",
      "properties": {
        "optional": {
          "description": "Specify whether the Secret or its keys must be defined.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the config.",
          "type": "string"
        },
        "defaultMode": {
          "description": "Mode bits to use on created files by default. Must be a value between 0 and\n0777. Defaults to 0644. Directories within the path are not affected by\nthis setting. This might be in conflict with other options that affect the\nfile mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional.",
          "type": "array",
          "items": {
            "$ref": "KeyToPath"
          }
        }
      }
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "id": "AuditConfig"
    },
    "ServiceSpecRunLatest": {
      "description": "ServiceSpecRunLatest contains the options for always having a route to the\nlatest configuration. See ServiceSpec for more details.",
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "ConfigurationSpec",
          "description": "The configuration for this service."
        }
      },
      "id": "ServiceSpecRunLatest"
    },
    "AuthorizedDomain": {
      "id": "AuthorizedDomain",
      "description": "A domain that a user has been authorized to administer. To authorize use\nof a domain, verify ownership via\n[Webmaster Central](https://www.google.com/webmasters/verification/home).",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative name of the domain authorized for use. Example: `example.com`.",
          "type": "string"
        },
        "name": {
          "description": "Read only. Full path to the `AuthorizedDomain` resource in the API.\nExample: `apps/myapp/authorizedDomains/example.com`.",
          "type": "string"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        }
      }
    },
    "ServiceSpecManualType": {
      "description": "ServiceSpecManualType contains the options for configuring a manual service.\nSee ServiceSpec for more details.\n\nNot currently supported by Cloud Run.",
      "type": "object",
      "properties": {},
      "id": "ServiceSpecManualType"
    },
    "TriggerStatus": {
      "description": "TriggerStatus represents the current state of a Trigger.",
      "type": "object",
      "properties": {
        "subscriberUri": {
          "description": "SubscriberURI is the resolved URI of the receiver for this Trigger.",
          "type": "string"
        },
        "conditions": {
          "description": "Array of observed TriggerConditions, indicating the current state\nof the Trigger.",
          "type": "array",
          "items": {
            "$ref": "TriggerCondition"
          }
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Trigger that\nwas last processed by the controller.",
          "format": "int32"
        }
      },
      "id": "TriggerStatus"
    },
    "ListServicesResponse": {
      "id": "ListServicesResponse",
      "description": "A list of Service resources.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Service list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Service"
          },
          "description": "List of Services."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"v1alpha1\"."
        },
        "kind": {
          "description": "The kind of this resource, in this case \"ServiceList\".",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "Addressable": {
      "id": "Addressable",
      "description": "Information for connecting over HTTP(s).",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "hostname": {
          "description": "Deprecated - use url instead.",
          "type": "string"
        }
      }
    },
    "SubscriberSpec": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Reference to a 'known' endpoint where no resolving is done.\nhttp://k8s-service for example\nhttp://myexternalhandler.example.com/foo/bar",
          "type": "string"
        },
        "ref": {
          "$ref": "ObjectReference",
          "description": "Reference to an object that will be used to find the target\nendpoint, which should implement the Addressable duck type.\nFor example, this could be a reference to a Route resource\nor a Knative Service resource."
        }
      },
      "id": "SubscriberSpec"
    },
    "ContainerPort": {
      "id": "ContainerPort",
      "description": "ContainerPort represents a network port in a single container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional",
          "type": "string"
        },
        "hostPort": {
          "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional",
          "format": "int32",
          "type": "integer"
        },
        "containerPort": {
          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol for port. Must be UDP or TCP.\nDefaults to \"TCP\".\n+optional"
        },
        "hostIP": {
          "description": "What host IP to bind the external port to.\n+optional",
          "type": "string"
        }
      }
    },
    "Volume": {
      "description": "Volume represents a named volume in a container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Volume's name.",
          "type": "string"
        },
        "secret": {
          "$ref": "SecretVolumeSource"
        },
        "configMap": {
          "$ref": "ConfigMapVolumeSource"
        }
      },
      "id": "Volume"
    },
    "ConfigurationCondition": {
      "id": "ConfigurationCondition",
      "description": "ConfigurationCondition defines a readiness condition for a Configuration.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "One-word CamelCase reason for the condition's last transition.\n+optional"
        },
        "type": {
          "description": "ConfigurationConditionType is used to communicate the status of the\nreconciliation process. See also:\nhttps://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting\nTypes include:\"Ready\"",
          "type": "string"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "EventTypeSpec": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description is a string describing what the EventType is about.\n+optional"
        },
        "type": {
          "description": "Type is authoritative. This refers to the CloudEvent type as it enters\ninto the eventing mesh.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Source is a valid URI. Refers to the CloudEvent source as it enters into\nthe eventing mesh."
        },
        "schema": {
          "type": "string",
          "description": "Schema is a URI with the EventType schema. It may be a JSON schema, a\nprotobuf schema, etc.\n+optional"
        },
        "broker": {
          "description": "Refers to the Broker that can provide the EventType.",
          "type": "string"
        }
      },
      "id": "EventTypeSpec"
    },
    "ServiceStatus": {
      "type": "object",
      "properties": {
        "latestCreatedRevisionName": {
          "type": "string",
          "description": "From ConfigurationStatus.\nLatestCreatedRevisionName is the last revision that was created from this\nService's Configuration. It might not be ready yet, for that use\nLatestReadyRevisionName."
        },
        "conditions": {
          "description": "Conditions communicates information about ongoing/complete\nreconciliation processes that bring the \"spec\" inline with the observed\nstate of the world.",
          "type": "array",
          "items": {
            "$ref": "ServiceCondition"
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Route that\nwas last processed by the controller.\n\nClients polling for completed reconciliation should poll until\nobservedGeneration = metadata.generation and the Ready condition's status\nis True or False.",
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "$ref": "Addressable",
          "description": "From RouteStatus.\nSimilar to url, information on where the service is available on HTTP."
        },
        "url": {
          "type": "string",
          "description": "From RouteStatus.\nURL holds the url that will distribute traffic over the provided traffic\ntargets. It generally has the form\nhttps://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        },
        "traffic": {
          "description": "From RouteStatus.\nTraffic holds the configured traffic distribution.\nThese entries will always contain RevisionName references.\nWhen ConfigurationName appears in the spec, this will hold the\nLatestReadyRevisionName that we last observed.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "domain": {
          "description": "From RouteStatus.\nDomain holds the top-level domain that will distribute traffic over the\nprovided targets. It generally has the form\nhttps://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app",
          "type": "string"
        },
        "latestReadyRevisionName": {
          "description": "From ConfigurationStatus.\nLatestReadyRevisionName holds the name of the latest Revision stamped out\nfrom this Service's Configuration that has had its \"Ready\" condition become\n\"True\".",
          "type": "string"
        }
      },
      "id": "ServiceStatus",
      "description": "The current state of the Service. Output only."
    },
    "ListConfigurationsResponse": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"ConfigurationList\".",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Configuration list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Configuration"
          },
          "description": "List of Configurations."
        }
      },
      "id": "ListConfigurationsResponse",
      "description": "ListConfigurationsResponse is a list of Configuration resources."
    },
    "RouteCondition": {
      "id": "RouteCondition",
      "description": "RouteCondition defines a readiness condition for a Route.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "One-word CamelCase reason for the condition's last transition.\n+optional",
          "type": "string"
        },
        "type": {
          "description": "RouteConditionType is used to communicate the status of the reconciliation\nprocess. See also:\nhttps://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting\nTypes include: \"Ready\".",
          "type": "string"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of \"True\", \"False\", \"Unknown\"."
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        }
      }
    },
    "TriggerFilter": {
      "type": "object",
      "properties": {
        "sourceAndType": {
          "$ref": "TriggerFilterSourceAndType"
        }
      },
      "id": "TriggerFilter"
    },
    "EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "type": "object",
      "properties": {
        "secretRef": {
          "$ref": "SecretEnvSource",
          "description": "The Secret to select from\n+optional"
        },
        "prefix": {
          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a\nC_IDENTIFIER. +optional",
          "type": "string"
        },
        "configMapRef": {
          "$ref": "ConfigMapEnvSource",
          "description": "The ConfigMap to select from\n+optional"
        }
      },
      "id": "EnvFromSource"
    },
    "HTTPGetAction": {
      "type": "object",
      "properties": {
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional",
          "type": "array",
          "items": {
            "$ref": "HTTPHeader"
          }
        },
        "path": {
          "description": "Path to access on the HTTP server.\n+optional",
          "type": "string"
        },
        "port": {
          "$ref": "IntOrString",
          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional",
          "type": "string"
        }
      },
      "id": "HTTPGetAction",
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "The ConfigMap to select from."
        },
        "optional": {
          "description": "Specify whether the ConfigMap must be defined\n+optional",
          "type": "boolean"
        }
      },
      "id": "ConfigMapEnvSource",
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
    },
    "VolumeDevice": {
      "description": "volumeDevice describes a mapping of a raw block device within a container.",
      "type": "object",
      "properties": {
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string"
        },
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be\nmapped to.",
          "type": "string"
        }
      },
      "id": "VolumeDevice"
    },
    "OwnerReference": {
      "id": "OwnerReference",
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.",
      "type": "object",
      "properties": {
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "description": "If true, this reference points to the managing controller.\n+optional"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        }
      }
    },
    "RouteSpec": {
      "id": "RouteSpec",
      "description": "RouteSpec holds the desired state of the Route (from the client).",
      "type": "object",
      "properties": {
        "traffic": {
          "description": "Traffic specifies how to distribute traffic over a collection of Knative\nRevisions and Configurations.\nCloud Run currently supports a single configurationName.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "generation": {
          "type": "integer",
          "description": "Deprecated and not currently populated by Cloud Run. See\nmetadata.generation instead, which is the sequence number containing the\nlatest generation of the desired state.\n\nRead-only.",
          "format": "int32"
        }
      }
    },
    "Route": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Route, including name, namespace, labels,\nand annotations."
        },
        "status": {
          "description": "Status communicates the observed state of the Route (from the controller).",
          "$ref": "RouteStatus"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "RouteSpec",
          "description": "Spec holds the desired state of the Route (from the client)."
        },
        "kind": {
          "description": "The kind of this resource, in this case always \"Route\".",
          "type": "string"
        }
      },
      "id": "Route",
      "description": "Route is responsible for configuring ingress over a collection of Revisions.\nSome of the Revisions a Route distributes traffic over may be specified by\nreferencing the Configuration responsible for creating them; in these cases\nthe Route is additionally responsible for monitoring the Configuration for\n\"latest ready\" revision changes, and smoothly rolling out latest revisions.\nSee also:\nhttps://github.com/knative/serving/blob/master/docs/spec/overview.md#route\n\nCloud Run currently supports referencing a single Configuration to\nautomatically deploy the \"latest ready\" Revision from that Configuration."
    },
    "Probe": {
      "id": "Probe",
      "description": "Probe describes a health check to be performed against a container to\ndetermine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "description": "Number of seconds after the container has started before liveness probes\nare initiated. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
          "format": "int32",
          "type": "integer"
        },
        "handler": {
          "$ref": "Handler",
          "description": "The action taken to determine the health of a container"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful\nafter having failed. Defaults to 1. Must be 1 for liveness. Minimum value\nis 1. +optional",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "type": "integer",
          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional",
          "format": "int32"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after\nhaving succeeded. Defaults to 3. Minimum value is 1. +optional",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListDomainMappingsResponse": {
      "id": "ListDomainMappingsResponse",
      "description": "ListDomainMappingsResponse is a list of DomainMapping resources.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"DomainMappingList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this DomainMapping list.",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "List of DomainMappings.",
          "type": "array",
          "items": {
            "$ref": "DomainMapping"
          }
        }
      }
    },
    "Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "Handler",
          "description": "PostStart is called immediately after a container is created. If the\nhandler fails, the container is terminated and restarted according to its\nrestart policy. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional"
        },
        "preStop": {
          "description": "PreStop is called immediately before a container is terminated.\nThe container is terminated after the handler completes.\nThe reason for termination is passed to the handler.\nRegardless of the outcome of the handler, the container is eventually\nterminated. Other management of the container blocks until the hook\ncompletes. More info:\nhttps://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional",
          "$ref": "Handler"
        }
      },
      "id": "Lifecycle",
      "description": "Lifecycle describes actions that the management system should take in\nresponse to container lifecycle events. For the PostStart and PreStop\nlifecycle handlers, management of the container blocks until the action is\ncomplete, unless the container process fails, in which case the handler is\naborted."
    },
    "RevisionStatus": {
      "description": "RevisionStatus communicates the observed state of the Revision (from the\ncontroller).",
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Not currently used by Cloud Run."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "RevisionCondition"
          },
          "description": "Conditions communicates information about ongoing/complete\nreconciliation processes that bring the \"spec\" inline with the observed\nstate of the world.\n\nAs a Revision is being prepared, it will incrementally\nupdate conditions \"ResourcesAvailable\", \"ContainerHealthy\", and \"Active\",\nwhich contribute to the overall \"Ready\" condition."
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Revision that\nwas last processed by the controller.\n\nClients polling for completed reconciliation should poll until\nobservedGeneration = metadata.generation, and the Ready condition's status\nis True or False.",
          "format": "int32",
          "type": "integer"
        },
        "imageDigest": {
          "description": "ImageDigest holds the resolved digest for the image specified\nwithin .Spec.Container.Image. The digest is resolved during the creation\nof Revision. This field holds the digest value regardless of whether\na tag or digest was originally specified in the Container object.",
          "type": "string"
        },
        "logUrl": {
          "description": "Specifies the generated logging url for this particular revision\nbased on the revision url template specified in the controller's config.\n+optional",
          "type": "string"
        }
      },
      "id": "RevisionStatus"
    },
    "ListAuthorizedDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "description": "The authorized domains belonging to the user.",
          "type": "array",
          "items": {
            "$ref": "AuthorizedDomain"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListAuthorizedDomainsResponse",
      "description": "A list of Authorized Domains."
    },
    "ListEventTypesResponse": {
      "id": "ListEventTypesResponse",
      "description": "ListEventTypesResponse is a list of EventType resources.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this EventType list."
        },
        "items": {
          "description": "List of EventTypes.",
          "type": "array",
          "items": {
            "$ref": "EventType"
          }
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"EventTypeList\".",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TriggerSpec": {
      "type": "object",
      "properties": {
        "broker": {
          "type": "string",
          "description": "Broker is the broker that this trigger receives events from. If not\nspecified, will default to 'default'.\n\nNot currently supported by Cloud Run."
        },
        "filter": {
          "description": "Filter is the filter to apply against all events from the Broker. Only\nevents that pass this filter will be sent to the Subscriber. If not\nspecified, will default to allowing all events.\n\nThis must be specified in Cloud Run.",
          "$ref": "TriggerFilter"
        },
        "subscriber": {
          "$ref": "SubscriberSpec",
          "description": "Subscriber is the addressable that receives events from the Broker that\npass the Filter. It is required.\n\nE.g. https://us-central1-myproject.cloudfunctions.net/myfunction or\n/namespaces/my-project/services/my-service."
        }
      },
      "id": "TriggerSpec",
      "description": "The desired state of the Trigger."
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "DomainMapping": {
      "description": "Resource to hold the state and status of a user's domain mapping.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "DomainMappingStatus",
          "description": "The current status of the DomainMapping."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"v1alpha1\".",
          "type": "string"
        },
        "spec": {
          "$ref": "DomainMappingSpec",
          "description": "The spec for this DomainMapping."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"DomainMapping\"."
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this BuildTemplate."
        }
      },
      "id": "DomainMapping"
    },
    "RouteStatus": {
      "description": "RouteStatus communicates the observed state of the Route (from the\ncontroller).",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions communicates information about ongoing/complete\nreconciliation processes that bring the \"spec\" inline with the observed\nstate of the world.",
          "type": "array",
          "items": {
            "$ref": "RouteCondition"
          }
        },
        "address": {
          "$ref": "Addressable",
          "description": "Similar to url, information on where the service is available on HTTP."
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Route that\nwas last processed by the controller.\n\nClients polling for completed reconciliation should poll until\nobservedGeneration = metadata.generation and the Ready condition's status\nis True or False.\n\nNote that providing a trafficTarget that only has a configurationName will\nresult in a Route that does not increment either its metadata.generation or\nits observedGeneration, as new \"latest ready\" revisions from the\nConfiguration are processed without an update to the Route's spec.",
          "format": "int32"
        },
        "url": {
          "type": "string",
          "description": "URL holds the url that will distribute traffic over the provided traffic\ntargets. It generally has the form\nhttps://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        },
        "traffic": {
          "description": "Traffic holds the configured traffic distribution.\nThese entries will always contain RevisionName references.\nWhen ConfigurationName appears in the spec, this will hold the\nLatestReadyRevisionName that we last observed.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "domain": {
          "description": "Deprecated - use url instead.\nDomain holds the top-level domain that will distribute traffic over the\nprovided targets.",
          "type": "string"
        },
        "domainInternal": {
          "type": "string",
          "description": "Deprecated - use address instead.\nFor Cloud Run, identifical to domain."
        }
      },
      "id": "RouteStatus"
    },
    "RevisionTemplate": {
      "description": "RevisionTemplateSpec describes the data a revision should have when created\nfrom a template. Based on:\nhttps://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Optional metadata for this Revision, including labels and annotations. Name\nwill be generated by the Configuration."
        },
        "spec": {
          "$ref": "RevisionSpec",
          "description": "RevisionSpec holds the desired state of the Revision (from the client)."
        }
      },
      "id": "RevisionTemplate"
    },
    "DomainMappingStatus": {
      "description": "The current state of the Domain Mapping.",
      "type": "object",
      "properties": {
        "mappedRouteName": {
          "description": "The name of the route that the mapping currently points to.",
          "type": "string"
        },
        "conditions": {
          "description": "Array of observed DomainMappingConditions, indicating the current state\nof the DomainMapping.",
          "type": "array",
          "items": {
            "$ref": "DomainMappingCondition"
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the DomainMapping that\nwas last processed by the controller.\n\nClients polling for completed reconciliation should poll until\nobservedGeneration = metadata.generation and the Ready condition's status\nis True or False.",
          "format": "int32",
          "type": "integer"
        },
        "resourceRecords": {
          "description": "The resource records required to configure this domain mapping. These\nrecords must be added to the domain's DNS configuration in order to\nserve the application via this domain mapping.",
          "type": "array",
          "items": {
            "$ref": "ResourceRecord"
          }
        }
      },
      "id": "DomainMappingStatus"
    },
    "ServiceSpecPinnedType": {
      "type": "object",
      "properties": {
        "revisionName": {
          "type": "string",
          "description": "The revision name to pin this service to until changed\nto a different service type."
        },
        "configuration": {
          "$ref": "ConfigurationSpec",
          "description": "The configuration for this service."
        }
      },
      "id": "ServiceSpecPinnedType",
      "description": "ServiceSpecPinnedType Pins this service to a specific revision name. The\nrevision must be owned by the configuration provided.\n\nDeprecated and not supported by Cloud Run."
    },
    "SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type is a SELinux type label that applies to the container.\n+optional",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.\n+optional",
          "type": "string"
        },
        "level": {
          "description": "Level is SELinux level label that applies to the container.\n+optional",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.\n+optional",
          "type": "string"
        }
      },
      "id": "SELinuxOptions"
    },
    "ResourceRecord": {
      "description": "A DNS resource record.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Relative name of the object affected by this record. Only applicable for\n`CNAME` records. Example: 'www'.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "An unknown resource record.",
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ],
          "enum": [
            "RECORD_TYPE_UNSPECIFIED",
            "A",
            "AAAA",
            "CNAME"
          ],
          "description": "Resource record type. Example: `AAAA`."
        },
        "rrdata": {
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035\n(section 5) and RFC 1034 (section 3.6.1).",
          "type": "string"
        }
      },
      "id": "ResourceRecord"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditLogConfig"
    },
    "TrafficTarget": {
      "id": "TrafficTarget",
      "description": "TrafficTarget holds a single entry of the routing table for a Route.",
      "type": "object",
      "properties": {
        "percent": {
          "type": "integer",
          "description": "Percent specifies percent of the traffic to this Revision or Configuration.\nThis defaults to zero if unspecified.\n\nCloud Run currently requires 100 percent for a single ConfigurationName\nTrafficTarget entry.",
          "format": "int32"
        },
        "revisionName": {
          "description": "RevisionName of a specific revision to which to send this portion of\ntraffic. This is mutually exclusive with ConfigurationName.\n\nProviding RevisionName in spec is not currently supported by Cloud Run.",
          "type": "string"
        },
        "latestRevision": {
          "description": "LatestRevision may be optionally provided to indicate that the latest\nready Revision of the Configuration should be used for this traffic\ntarget. When provided LatestRevision must be true if RevisionName is\nempty; it must be false when RevisionName is non-empty.\n\nNot currently supported in Cloud Run.\n+optional",
          "type": "boolean"
        },
        "tag": {
          "type": "string",
          "description": "Tag is optionally used to expose a dedicated url for referencing\nthis target exclusively.\n\nNot currently supported in Cloud Run.\n+optional"
        },
        "url": {
          "description": "Output only. URL displays the URL for accessing named traffic targets. URL\nis displayed in status, and is disallowed on spec. URL must contain a\nscheme (e.g. http://) and a hostname, but may not contain anything else\n(e.g. basic auth, url path, etc.\n\nNot currently supported in Cloud Run.",
          "type": "string"
        },
        "name": {
          "description": "Name is optionally used to expose a dedicated hostname for referencing this\ntarget exclusively.\n\nNot currently supported by Cloud Run.\n+optional",
          "type": "string"
        },
        "configurationName": {
          "type": "string",
          "description": "ConfigurationName of a configuration to whose latest revision we will\nsend this portion of traffic. When the \"status.latestReadyRevisionName\"\nof the referenced configuration changes, we will automatically migrate\ntraffic from the prior \"latest ready\" revision to the new one. This field\nis never set in Route's status, only its spec. This is mutually exclusive\nwith RevisionName.\n\nCloud Run currently supports a single ConfigurationName."
        }
      }
    },
    "HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The header field value"
        },
        "name": {
          "description": "The header field name",
          "type": "string"
        }
      },
      "id": "HTTPHeader"
    },
    "ServiceCondition": {
      "description": "ServiceCondition defines a readiness condition for a Service.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Human-readable message indicating details about last transition.\n+optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.\n+optional",
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info\n+optional",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's last transition.\n+optional",
          "type": "string"
        },
        "type": {
          "description": "ServiceConditionType is used to communicate the status of the\nreconciliation process. See also:\nhttps://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting\n\nTypes include: \"Ready\", \"ConfigurationsReady\", and \"RoutesReady\". \"Ready\"\nwill be true when the underlying Route and Configuration are ready.",
          "type": "string"
        }
      },
      "id": "ServiceCondition"
    },
    "SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a\ncontainer. Some fields are present in both SecurityContext and\nPodSecurityContext.  When both are set, the values in SecurityContext take\nprecedence.",
      "type": "object",
      "properties": {
        "capabilities": {
          "$ref": "Capabilities",
          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container\nruntime. +optional"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes\nprecedence. +optional",
          "type": "boolean"
        },
        "runAsGroup": {
          "type": "string",
          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes\nprecedence. +optional",
          "format": "int64"
        },
        "privileged": {
          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on\nthe host. Defaults to false. +optional",
          "type": "boolean"
        },
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\n+optional",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\n+optional",
          "type": "boolean"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux\ncontext for each container.  May also be set in PodSecurityContext.  If set\nin both SecurityContext and PodSecurityContext, the value specified in\nSecurityContext takes precedence. +optional",
          "$ref": "SELinuxOptions"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes\nprecedence. +optional",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "SecurityContext"
    },
    "DomainMappingSpec": {
      "description": "The desired state of the Domain Mapping.",
      "type": "object",
      "properties": {
        "forceOverride": {
          "description": "If set, the mapping will override any mapping set before this spec was set.\nIt is recommended that the user leaves this empty to receive an error\nwarning about a potential conflict and only set it once the respective UI\nhas given such a warning.",
          "type": "boolean"
        },
        "routeName": {
          "description": "The name of the Knative Route that this DomainMapping applies to.\nThe route must exist.",
          "type": "string"
        },
        "certificateMode": {
          "enumDescriptions": [
            "",
            "Do not provision an HTTPS certificate.",
            "Automatically provisions an HTTPS certificate via LetsEncrypt."
          ],
          "enum": [
            "CERTIFICATE_MODE_UNSPECIFIED",
            "NONE",
            "AUTOMATIC"
          ],
          "description": "The mode of the certificate.",
          "type": "string"
        }
      },
      "id": "DomainMappingSpec"
    },
    "ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working\ndirectory for the command  is root ('/') in the container's filesystem. The\ncommand is simply exec'd, it is not run inside a shell, so traditional\nshell instructions ('|', etc) won't work. To use a shell, you need to\nexplicitly call out to that shell. Exit status of 0 is treated as\nlive/healthy and non-zero is unhealthy. +optional",
          "type": "string"
        }
      },
      "id": "ExecAction",
      "description": "ExecAction describes a \"run in container\" action."
    },
    "ConfigurationSpec": {
      "id": "ConfigurationSpec",
      "description": "ConfigurationSpec holds the desired state of the Configuration (from the\nclient).",
      "type": "object",
      "properties": {
        "template": {
          "$ref": "RevisionTemplate",
          "description": "Template holds the latest specification for the Revision to be stamped out.\nNot currently supported by Cloud Run."
        },
        "revisionTemplate": {
          "$ref": "RevisionTemplate",
          "description": "RevisionTemplate holds the latest specification for the Revision to\nbe stamped out. The template references the container image, and may also\ninclude labels and annotations that should be attached to the Revision.\nTo correlate a Revision, and/or to force a Revision to be created when the\nspec doesn't otherwise change, a nonce label may be provided in the\ntemplate metadata. For more details, see:\nhttps://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions\n\nCloud Run does not currently support referencing a build that is\nresponsible for materializing the container image from source."
        },
        "generation": {
          "description": "Deprecated and not currently populated by Cloud Run. See\nmetadata.generation instead, which is the sequence number containing the\nlatest generation of the desired state.\n\nRead-only.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).",
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "Deprecated.",
          "format": "int32"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "Policy"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "Cloud Run",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://run.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "run"
}
