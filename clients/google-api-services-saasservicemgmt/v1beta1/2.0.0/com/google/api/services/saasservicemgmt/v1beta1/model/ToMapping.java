/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.saasservicemgmt.v1beta1.model;

/**
 * Input variables whose values will be passed on to dependencies
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the SaaS Service Management API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ToMapping extends com.google.api.client.json.GenericJson {

  /**
   * Required. Alias of the dependency that the inputVariable will pass its value to
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dependency;

  /**
   * Optional. Tells EasySaaS if this mapping should be used during lookup or not
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ignoreForLookup;

  /**
   * Required. Name of the inputVariable on the dependency
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inputVariable;

  /**
   * Required. Alias of the dependency that the inputVariable will pass its value to
   * @return value or {@code null} for none
   */
  public java.lang.String getDependency() {
    return dependency;
  }

  /**
   * Required. Alias of the dependency that the inputVariable will pass its value to
   * @param dependency dependency or {@code null} for none
   */
  public ToMapping setDependency(java.lang.String dependency) {
    this.dependency = dependency;
    return this;
  }

  /**
   * Optional. Tells EasySaaS if this mapping should be used during lookup or not
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIgnoreForLookup() {
    return ignoreForLookup;
  }

  /**
   * Optional. Tells EasySaaS if this mapping should be used during lookup or not
   * @param ignoreForLookup ignoreForLookup or {@code null} for none
   */
  public ToMapping setIgnoreForLookup(java.lang.Boolean ignoreForLookup) {
    this.ignoreForLookup = ignoreForLookup;
    return this;
  }

  /**
   * Required. Name of the inputVariable on the dependency
   * @return value or {@code null} for none
   */
  public java.lang.String getInputVariable() {
    return inputVariable;
  }

  /**
   * Required. Name of the inputVariable on the dependency
   * @param inputVariable inputVariable or {@code null} for none
   */
  public ToMapping setInputVariable(java.lang.String inputVariable) {
    this.inputVariable = inputVariable;
    return this;
  }

  @Override
  public ToMapping set(String fieldName, Object value) {
    return (ToMapping) super.set(fieldName, value);
  }

  @Override
  public ToMapping clone() {
    return (ToMapping) super.clone();
  }

}
