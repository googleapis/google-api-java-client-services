/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1beta1.model;

/**
 * Information about the ticket, if any, that is being used to track the resolution of the issue
 * that is identified by this finding.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TicketInfo extends com.google.api.client.json.GenericJson {

  /**
   * The assignee of the ticket in the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assignee;

  /**
   * The description of the ticket in the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The identifier of the ticket in the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The latest status of the ticket, as reported by the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * The time when the ticket was last updated, as reported by the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * The link to the ticket in the ticket system.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * The assignee of the ticket in the ticket system.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssignee() {
    return assignee;
  }

  /**
   * The assignee of the ticket in the ticket system.
   * @param assignee assignee or {@code null} for none
   */
  public TicketInfo setAssignee(java.lang.String assignee) {
    this.assignee = assignee;
    return this;
  }

  /**
   * The description of the ticket in the ticket system.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * The description of the ticket in the ticket system.
   * @param description description or {@code null} for none
   */
  public TicketInfo setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The identifier of the ticket in the ticket system.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The identifier of the ticket in the ticket system.
   * @param id id or {@code null} for none
   */
  public TicketInfo setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * The latest status of the ticket, as reported by the ticket system.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * The latest status of the ticket, as reported by the ticket system.
   * @param status status or {@code null} for none
   */
  public TicketInfo setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * The time when the ticket was last updated, as reported by the ticket system.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * The time when the ticket was last updated, as reported by the ticket system.
   * @param updateTime updateTime or {@code null} for none
   */
  public TicketInfo setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * The link to the ticket in the ticket system.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * The link to the ticket in the ticket system.
   * @param uri uri or {@code null} for none
   */
  public TicketInfo setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public TicketInfo set(String fieldName, Object value) {
    return (TicketInfo) super.set(fieldName, value);
  }

  @Override
  public TicketInfo clone() {
    return (TicketInfo) super.clone();
  }

}
