/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.lfp_v1beta;

/**
 * Service definition for Merchant (lfp_v1beta).
 *
 * <p>
 * Programmatically manage your Merchant Center Accounts.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.devsite.corp.google.com/merchant/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MerchantRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Merchant extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Merchant API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://merchantapi.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://merchantapi.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Merchant(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Merchant(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.Accounts.List request = merchantapi.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the LfpInventories collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.LfpInventories.List request = merchantapi.lfpInventories().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public LfpInventories lfpInventories() {
      return new LfpInventories();
    }

    /**
     * The "lfpInventories" collection of methods.
     */
    public class LfpInventories {

      /**
       * Inserts a `LfpInventory` resource for the given target merchant account. If the resource already
       * exists, it will be replaced. The inventory automatically expires after 30 days.
       *
       * Create a request for the method "lfpInventories.insert".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The LFP provider account. Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory}
       * @return the request
       */
      public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory content) throws java.io.IOException {
        Insert result = new Insert(parent, content);
        initialize(result);
        return result;
      }

      public class Insert extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory> {

        private static final String REST_PATH = "lfp/v1beta/{+parent}/lfpInventories:insert";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Inserts a `LfpInventory` resource for the given target merchant account. If the resource
         * already exists, it will be replaced. The inventory automatically expires after 30 days.
         *
         * Create a request for the method "lfpInventories.insert".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         * <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The LFP provider account. Format: `accounts/{account}`
         * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory}
         * @since 1.13
         */
        protected Insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.lfp_v1beta.model.LfpInventory.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The LFP provider account. Format: `accounts/{account}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The LFP provider account. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The LFP provider account. Format: `accounts/{account}` */
        public Insert setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the LfpSales collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.LfpSales.List request = merchantapi.lfpSales().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public LfpSales lfpSales() {
      return new LfpSales();
    }

    /**
     * The "lfpSales" collection of methods.
     */
    public class LfpSales {

      /**
       * Inserts a `LfpSale` for the given merchant.
       *
       * Create a request for the method "lfpSales.insert".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The LFP provider account. Format: `accounts/{lfp_partner}`
       * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale}
       * @return the request
       */
      public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale content) throws java.io.IOException {
        Insert result = new Insert(parent, content);
        initialize(result);
        return result;
      }

      public class Insert extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale> {

        private static final String REST_PATH = "lfp/v1beta/{+parent}/lfpSales:insert";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Inserts a `LfpSale` for the given merchant.
         *
         * Create a request for the method "lfpSales.insert".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         * <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The LFP provider account. Format: `accounts/{lfp_partner}`
         * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale}
         * @since 1.13
         */
        protected Insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.lfp_v1beta.model.LfpSale.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The LFP provider account. Format: `accounts/{lfp_partner}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The LFP provider account. Format: `accounts/{lfp_partner}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The LFP provider account. Format: `accounts/{lfp_partner}` */
        public Insert setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the LfpStores collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.LfpStores.List request = merchantapi.lfpStores().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public LfpStores lfpStores() {
      return new LfpStores();
    }

    /**
     * The "lfpStores" collection of methods.
     */
    public class LfpStores {

      /**
       * Deletes a store for a target merchant.
       *
       * Create a request for the method "lfpStores.delete".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the store to delete for the target merchant account. Format:
       *        `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.Empty> {

        private static final String REST_PATH = "lfp/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/lfpStores/[^/]+$");

        /**
         * Deletes a store for a target merchant.
         *
         * Create a request for the method "lfpStores.delete".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the store to delete for the target merchant account. Format:
       *        `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.lfp_v1beta.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/lfpStores/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the store to delete for the target merchant account. Format:
         * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the store to delete for the target merchant account. Format:
       `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the store to delete for the target merchant account. Format:
         * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/lfpStores/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves information about a store.
       *
       * Create a request for the method "lfpStores.get".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the store to retrieve. Format:
       *        `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore> {

        private static final String REST_PATH = "lfp/v1beta/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/lfpStores/[^/]+$");

        /**
         * Retrieves information about a store.
         *
         * Create a request for the method "lfpStores.get".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the store to retrieve. Format:
       *        `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/lfpStores/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the store to retrieve. Format:
         * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the store to retrieve. Format:
       `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the store to retrieve. Format:
         * `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/lfpStores/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Inserts a store for the target merchant. If the store with the same store code already exists, it
       * will be replaced.
       *
       * Create a request for the method "lfpStores.insert".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The LFP provider account Format: `accounts/{account}`
       * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore}
       * @return the request
       */
      public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore content) throws java.io.IOException {
        Insert result = new Insert(parent, content);
        initialize(result);
        return result;
      }

      public class Insert extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore> {

        private static final String REST_PATH = "lfp/v1beta/{+parent}/lfpStores:insert";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Inserts a store for the target merchant. If the store with the same store code already exists,
         * it will be replaced.
         *
         * Create a request for the method "lfpStores.insert".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         * <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The LFP provider account Format: `accounts/{account}`
         * @param content the {@link com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore}
         * @since 1.13
         */
        protected Insert(java.lang.String parent, com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore content) {
          super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.lfp_v1beta.model.LfpStore.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The LFP provider account Format: `accounts/{account}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The LFP provider account Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The LFP provider account Format: `accounts/{account}` */
        public Insert setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }
      /**
       * Lists the stores of the target merchant, specified by the filter in `ListLfpStoresRequest`.
       *
       * Create a request for the method "lfpStores.list".
       *
       * This request holds the parameters needed by the merchantapi server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The LFP partner. Format: `accounts/{account}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends MerchantRequest<com.google.api.services.merchantapi.lfp_v1beta.model.ListLfpStoresResponse> {

        private static final String REST_PATH = "lfp/v1beta/{+parent}/lfpStores";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists the stores of the target merchant, specified by the filter in `ListLfpStoresRequest`.
         *
         * Create a request for the method "lfpStores.list".
         *
         * This request holds the parameters needed by the the merchantapi server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The LFP partner. Format: `accounts/{account}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.lfp_v1beta.model.ListLfpStoresResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The LFP partner. Format: `accounts/{account}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The LFP partner. Format: `accounts/{account}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The LFP partner. Format: `accounts/{account}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of `LfpStore` resources for the given account to return. The
         * service returns fewer than this value if the number of stores for the given account is
         * less than the `pageSize`. The default value is 250. The maximum value is 1000; If a value
         * higher than the maximum is specified, then the `pageSize` will default to the maximum.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of `LfpStore` resources for the given account to return. The service
       returns fewer than this value if the number of stores for the given account is less than the
       `pageSize`. The default value is 250. The maximum value is 1000; If a value higher than the maximum
       is specified, then the `pageSize` will default to the maximum.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of `LfpStore` resources for the given account to return. The
         * service returns fewer than this value if the number of stores for the given account is
         * less than the `pageSize`. The default value is 250. The maximum value is 1000; If a value
         * higher than the maximum is specified, then the `pageSize` will default to the maximum.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListLfpStoresRequest` call. Provide the
         * page token to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListLfpStoresRequest` must match the call that provided the page token. The
         * token returned as nextPageToken in the response to the previous request.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListLfpStoresRequest` call. Provide the page
       token to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListLfpStoresRequest` must match the call that provided the page token. The token returned as
       nextPageToken in the response to the previous request.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListLfpStoresRequest` call. Provide the
         * page token to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListLfpStoresRequest` must match the call that provided the page token. The
         * token returned as nextPageToken in the response to the previous request.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Required. The Merchant Center id of the merchant to list stores for. */
        @com.google.api.client.util.Key
        private java.lang.Long targetAccount;

        /** Required. The Merchant Center id of the merchant to list stores for.
         */
        public java.lang.Long getTargetAccount() {
          return targetAccount;
        }

        /** Required. The Merchant Center id of the merchant to list stores for. */
        public List setTargetAccount(java.lang.Long targetAccount) {
          this.targetAccount = targetAccount;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Merchant}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Merchant}. */
    @Override
    public Merchant build() {
      return new Merchant(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MerchantRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMerchantRequestInitializer(
        MerchantRequestInitializer merchantRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(merchantRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
