/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workloadmanager.v1.model;

/**
 * Message describing the system component.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workload Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SapDiscoveryComponent extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The component is a SAP application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SapDiscoveryComponentApplicationProperties applicationProperties;

  /**
   * Optional. The component is a SAP database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SapDiscoveryComponentDatabaseProperties databaseProperties;

  /**
   * Optional. A list of host URIs that are part of the HA configuration if present. An empty list
   * indicates the component is not configured for HA.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> haHosts;

  /**
   * Required. Pantheon Project in which the resources reside.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostProject;

  /**
   * Optional. The region this component's resources are primarily located in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String region;

  /**
   * Optional. A list of replication sites used in Disaster Recovery (DR) configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SapDiscoveryComponentReplicationSite> replicationSites;

  /**
   * Optional. The resources in a component.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SapDiscoveryResource> resources;

  /**
   * Optional. The SAP identifier, used by the SAP software and helps differentiate systems for
   * customers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sid;

  /**
   * Optional. The detected topology of the component.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String topologyType;

  /**
   * Optional. The component is a SAP application.
   * @return value or {@code null} for none
   */
  public SapDiscoveryComponentApplicationProperties getApplicationProperties() {
    return applicationProperties;
  }

  /**
   * Optional. The component is a SAP application.
   * @param applicationProperties applicationProperties or {@code null} for none
   */
  public SapDiscoveryComponent setApplicationProperties(SapDiscoveryComponentApplicationProperties applicationProperties) {
    this.applicationProperties = applicationProperties;
    return this;
  }

  /**
   * Optional. The component is a SAP database.
   * @return value or {@code null} for none
   */
  public SapDiscoveryComponentDatabaseProperties getDatabaseProperties() {
    return databaseProperties;
  }

  /**
   * Optional. The component is a SAP database.
   * @param databaseProperties databaseProperties or {@code null} for none
   */
  public SapDiscoveryComponent setDatabaseProperties(SapDiscoveryComponentDatabaseProperties databaseProperties) {
    this.databaseProperties = databaseProperties;
    return this;
  }

  /**
   * Optional. A list of host URIs that are part of the HA configuration if present. An empty list
   * indicates the component is not configured for HA.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHaHosts() {
    return haHosts;
  }

  /**
   * Optional. A list of host URIs that are part of the HA configuration if present. An empty list
   * indicates the component is not configured for HA.
   * @param haHosts haHosts or {@code null} for none
   */
  public SapDiscoveryComponent setHaHosts(java.util.List<java.lang.String> haHosts) {
    this.haHosts = haHosts;
    return this;
  }

  /**
   * Required. Pantheon Project in which the resources reside.
   * @return value or {@code null} for none
   */
  public java.lang.String getHostProject() {
    return hostProject;
  }

  /**
   * Required. Pantheon Project in which the resources reside.
   * @param hostProject hostProject or {@code null} for none
   */
  public SapDiscoveryComponent setHostProject(java.lang.String hostProject) {
    this.hostProject = hostProject;
    return this;
  }

  /**
   * Optional. The region this component's resources are primarily located in.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegion() {
    return region;
  }

  /**
   * Optional. The region this component's resources are primarily located in.
   * @param region region or {@code null} for none
   */
  public SapDiscoveryComponent setRegion(java.lang.String region) {
    this.region = region;
    return this;
  }

  /**
   * Optional. A list of replication sites used in Disaster Recovery (DR) configurations.
   * @return value or {@code null} for none
   */
  public java.util.List<SapDiscoveryComponentReplicationSite> getReplicationSites() {
    return replicationSites;
  }

  /**
   * Optional. A list of replication sites used in Disaster Recovery (DR) configurations.
   * @param replicationSites replicationSites or {@code null} for none
   */
  public SapDiscoveryComponent setReplicationSites(java.util.List<SapDiscoveryComponentReplicationSite> replicationSites) {
    this.replicationSites = replicationSites;
    return this;
  }

  /**
   * Optional. The resources in a component.
   * @return value or {@code null} for none
   */
  public java.util.List<SapDiscoveryResource> getResources() {
    return resources;
  }

  /**
   * Optional. The resources in a component.
   * @param resources resources or {@code null} for none
   */
  public SapDiscoveryComponent setResources(java.util.List<SapDiscoveryResource> resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Optional. The SAP identifier, used by the SAP software and helps differentiate systems for
   * customers.
   * @return value or {@code null} for none
   */
  public java.lang.String getSid() {
    return sid;
  }

  /**
   * Optional. The SAP identifier, used by the SAP software and helps differentiate systems for
   * customers.
   * @param sid sid or {@code null} for none
   */
  public SapDiscoveryComponent setSid(java.lang.String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * Optional. The detected topology of the component.
   * @return value or {@code null} for none
   */
  public java.lang.String getTopologyType() {
    return topologyType;
  }

  /**
   * Optional. The detected topology of the component.
   * @param topologyType topologyType or {@code null} for none
   */
  public SapDiscoveryComponent setTopologyType(java.lang.String topologyType) {
    this.topologyType = topologyType;
    return this;
  }

  @Override
  public SapDiscoveryComponent set(String fieldName, Object value) {
    return (SapDiscoveryComponent) super.set(fieldName, value);
  }

  @Override
  public SapDiscoveryComponent clone() {
    return (SapDiscoveryComponent) super.clone();
  }

}
