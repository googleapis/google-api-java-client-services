/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudiot.v1.model;

/**
 * A server-stored device credential used for authentication.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud IoT API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DeviceCredential extends com.google.api.client.json.GenericJson {

  /**
   * [Optional] The time at which this credential becomes invalid. This credential will be ignored
   * for new client authentication requests after this timestamp; however, it will not be
   * automatically deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String expirationTime;

  /**
   * A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device
   * credential, either via device creation or via modifications, this public key credential may be
   * required to be signed by one of the registry level certificates. More specifically, if the
   * registry contains at least one certificate, any new device credential must be signed by one of
   * the registry certificates. As a result, when the registry contains certificates, only X.509
   * certificates are accepted as device credentials. However, if the registry does not contain a
   * certificate, self-signed certificates and public keys will be accepted. New device credentials
   * must be different from every registry-level certificate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PublicKeyCredential publicKey;

  /**
   * [Optional] The time at which this credential becomes invalid. This credential will be ignored
   * for new client authentication requests after this timestamp; however, it will not be
   * automatically deleted.
   * @return value or {@code null} for none
   */
  public String getExpirationTime() {
    return expirationTime;
  }

  /**
   * [Optional] The time at which this credential becomes invalid. This credential will be ignored
   * for new client authentication requests after this timestamp; however, it will not be
   * automatically deleted.
   * @param expirationTime expirationTime or {@code null} for none
   */
  public DeviceCredential setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device
   * credential, either via device creation or via modifications, this public key credential may be
   * required to be signed by one of the registry level certificates. More specifically, if the
   * registry contains at least one certificate, any new device credential must be signed by one of
   * the registry certificates. As a result, when the registry contains certificates, only X.509
   * certificates are accepted as device credentials. However, if the registry does not contain a
   * certificate, self-signed certificates and public keys will be accepted. New device credentials
   * must be different from every registry-level certificate.
   * @return value or {@code null} for none
   */
  public PublicKeyCredential getPublicKey() {
    return publicKey;
  }

  /**
   * A public key used to verify the signature of JSON Web Tokens (JWTs). When adding a new device
   * credential, either via device creation or via modifications, this public key credential may be
   * required to be signed by one of the registry level certificates. More specifically, if the
   * registry contains at least one certificate, any new device credential must be signed by one of
   * the registry certificates. As a result, when the registry contains certificates, only X.509
   * certificates are accepted as device credentials. However, if the registry does not contain a
   * certificate, self-signed certificates and public keys will be accepted. New device credentials
   * must be different from every registry-level certificate.
   * @param publicKey publicKey or {@code null} for none
   */
  public DeviceCredential setPublicKey(PublicKeyCredential publicKey) {
    this.publicKey = publicKey;
    return this;
  }

  @Override
  public DeviceCredential set(String fieldName, Object value) {
    return (DeviceCredential) super.set(fieldName, value);
  }

  @Override
  public DeviceCredential clone() {
    return (DeviceCredential) super.clone();
  }

}
