/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Information about the space that the item originated from. This will be used to display Activity
 * Feed items from rooms, and only contain the necessary information, such as the space name and
 * group attributes. NEXT TAG: 6
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteSharedChatItemGroupInfo extends com.google.api.client.json.GenericJson {

  /**
   * This is needed to determine what type of group the source message came from to support click-
   * to-source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String attributeCheckerGroupType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String groupName;

  /**
   * Timestamp of when the group containing the message has been read by the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long groupReadTimeUsec;

  /**
   * Indicates whether the group has inline replies enabled. If enabled, clients will render the
   * space with inline replies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inlineThreadingEnabled;

  /**
   * This is needed to determine what type of group the source message came from to support click-
   * to-source.
   * @return value or {@code null} for none
   */
  public java.lang.String getAttributeCheckerGroupType() {
    return attributeCheckerGroupType;
  }

  /**
   * This is needed to determine what type of group the source message came from to support click-
   * to-source.
   * @param attributeCheckerGroupType attributeCheckerGroupType or {@code null} for none
   */
  public AppsDynamiteSharedChatItemGroupInfo setAttributeCheckerGroupType(java.lang.String attributeCheckerGroupType) {
    this.attributeCheckerGroupType = attributeCheckerGroupType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getGroupName() {
    return groupName;
  }

  /**
   * @param groupName groupName or {@code null} for none
   */
  public AppsDynamiteSharedChatItemGroupInfo setGroupName(java.lang.String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * Timestamp of when the group containing the message has been read by the user.
   * @return value or {@code null} for none
   */
  public java.lang.Long getGroupReadTimeUsec() {
    return groupReadTimeUsec;
  }

  /**
   * Timestamp of when the group containing the message has been read by the user.
   * @param groupReadTimeUsec groupReadTimeUsec or {@code null} for none
   */
  public AppsDynamiteSharedChatItemGroupInfo setGroupReadTimeUsec(java.lang.Long groupReadTimeUsec) {
    this.groupReadTimeUsec = groupReadTimeUsec;
    return this;
  }

  /**
   * Indicates whether the group has inline replies enabled. If enabled, clients will render the
   * space with inline replies.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInlineThreadingEnabled() {
    return inlineThreadingEnabled;
  }

  /**
   * Indicates whether the group has inline replies enabled. If enabled, clients will render the
   * space with inline replies.
   * @param inlineThreadingEnabled inlineThreadingEnabled or {@code null} for none
   */
  public AppsDynamiteSharedChatItemGroupInfo setInlineThreadingEnabled(java.lang.Boolean inlineThreadingEnabled) {
    this.inlineThreadingEnabled = inlineThreadingEnabled;
    return this;
  }

  @Override
  public AppsDynamiteSharedChatItemGroupInfo set(String fieldName, Object value) {
    return (AppsDynamiteSharedChatItemGroupInfo) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteSharedChatItemGroupInfo clone() {
    return (AppsDynamiteSharedChatItemGroupInfo) super.clone();
  }

}
