/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebase.v1beta1.model;

/**
 * Message that groups a protocol type_id (as defined by MessageSet), with an encoded message of
 * that type. Its use is similar to MessageSet, except it represents a single (type, encoded
 * message) instead of a set. To embed "proto" inside "typed_msg": MyProtoMessage proto;
 * TypedMessage typed_msg; typed_msg.set_type_id(proto2::bridge::GetTypeId(proto));
 * proto.AppendToCord(typed_msg.mutable_message()); Error handling is omitted from the sample code
 * above. GetTypeId() will return 0 for messages that don't have a TypeId specified.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TypedMessage extends com.google.api.client.json.GenericJson {

  /**
   * Message bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String message;

  /**
   * Identifier for the type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer typeId;

  /**
   * Message bytes.
   * @see #decodeMessage()
   * @return value or {@code null} for none
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Message bytes.
   * @see #getMessage()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeMessage() {
    return com.google.api.client.util.Base64.decodeBase64(message);
  }

  /**
   * Message bytes.
   * @see #encodeMessage()
   * @param message message or {@code null} for none
   */
  public TypedMessage setMessage(java.lang.String message) {
    this.message = message;
    return this;
  }

  /**
   * Message bytes.
   * @see #setMessage()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public TypedMessage encodeMessage(byte[] message) {
    this.message = com.google.api.client.util.Base64.encodeBase64URLSafeString(message);
    return this;
  }

  /**
   * Identifier for the type.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTypeId() {
    return typeId;
  }

  /**
   * Identifier for the type.
   * @param typeId typeId or {@code null} for none
   */
  public TypedMessage setTypeId(java.lang.Integer typeId) {
    this.typeId = typeId;
    return this;
  }

  @Override
  public TypedMessage set(String fieldName, Object value) {
    return (TypedMessage) super.set(fieldName, value);
  }

  @Override
  public TypedMessage clone() {
    return (TypedMessage) super.clone();
  }

}
