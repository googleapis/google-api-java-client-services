/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigtableadmin.v2.model;

/**
 * A collection of Bigtable Tables and the resources that serve them. All tables in an instance are
 * served from all Clusters in the instance.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Bigtable Admin API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * The descriptive name for this instance as it appears in UIs. Can be changed at any time, but
   * should be kept globally unique to avoid confusion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that
   * reflect a customer's organizational needs and deployment strategies. They can be used to filter
   * resources and aggregate metrics.
   *
   * * Label keys must be between 1 and 63 characters long and must conform to   the regular
   * expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and
   * must conform to   the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64
   * labels can be associated with a given resource. * Keys and values must both be under 128 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * (`OutputOnly`) The unique name of the instance. Values are of the form
   * `projects//instances/a-z+[a-z0-9]`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * (`OutputOnly`) The current state of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * The type of the instance. Defaults to `PRODUCTION`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The descriptive name for this instance as it appears in UIs. Can be changed at any time, but
   * should be kept globally unique to avoid confusion.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The descriptive name for this instance as it appears in UIs. Can be changed at any time, but
   * should be kept globally unique to avoid confusion.
   * @param displayName displayName or {@code null} for none
   */
  public Instance setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that
   * reflect a customer's organizational needs and deployment strategies. They can be used to filter
   * resources and aggregate metrics.
   *
   * * Label keys must be between 1 and 63 characters long and must conform to   the regular
   * expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and
   * must conform to   the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64
   * labels can be associated with a given resource. * Keys and values must both be under 128 bytes.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that
   * reflect a customer's organizational needs and deployment strategies. They can be used to filter
   * resources and aggregate metrics.
   *
   * * Label keys must be between 1 and 63 characters long and must conform to   the regular
   * expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and
   * must conform to   the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64
   * labels can be associated with a given resource. * Keys and values must both be under 128 bytes.
   * @param labels labels or {@code null} for none
   */
  public Instance setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * (`OutputOnly`) The unique name of the instance. Values are of the form
   * `projects//instances/a-z+[a-z0-9]`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * (`OutputOnly`) The unique name of the instance. Values are of the form
   * `projects//instances/a-z+[a-z0-9]`.
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * (`OutputOnly`) The current state of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * (`OutputOnly`) The current state of the instance.
   * @param state state or {@code null} for none
   */
  public Instance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * The type of the instance. Defaults to `PRODUCTION`.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the instance. Defaults to `PRODUCTION`.
   * @param type type or {@code null} for none
   */
  public Instance setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
