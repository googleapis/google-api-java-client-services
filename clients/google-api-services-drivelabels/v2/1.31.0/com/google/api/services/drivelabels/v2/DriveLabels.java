/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.drivelabels.v2;

/**
 * Service definition for DriveLabels (v2).
 *
 * <p>
 * An API for managing Drive Labels
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/drive/labels" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DriveLabelsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DriveLabels extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.32.1 of the Drive Labels API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://drivelabels.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://drivelabels.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DriveLabels(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DriveLabels(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Labels collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DriveLabels drivelabels = new DriveLabels(...);}
   *   {@code DriveLabels.Labels.List request = drivelabels.labels().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Labels labels() {
    return new Labels();
  }

  /**
   * The "labels" collection of methods.
   */
  public class Labels {

    /**
     * Get a Label by its resource name. Resource name may be any of: * `labels/{id}` - See to
     * `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the Label. *
     * `labels/{id}@published` - Gets the current published revision of the Label. *
     * `labels/{id}@{revision_id}` - Gets the Label at the specified revision ID.
     *
     * Create a request for the method "labels.get".
     *
     * This request holds the parameters needed by the drivelabels server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) *
     *        `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends DriveLabelsRequest<com.google.api.services.drivelabels.v2.model.GoogleAppsDriveLabelsV2Label> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^labels/[^/]+$");

      /**
       * Get a Label by its resource name. Resource name may be any of: * `labels/{id}` - See to
       * `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the Label. *
       * `labels/{id}@published` - Gets the current published revision of the Label. *
       * `labels/{id}@{revision_id}` - Gets the Label at the specified revision ID.
       *
       * Create a request for the method "labels.get".
       *
       * This request holds the parameters needed by the the drivelabels server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) *
     *        `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(DriveLabels.this, "GET", REST_PATH, null, com.google.api.services.drivelabels.v2.model.GoogleAppsDriveLabelsV2Label.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^labels/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Label resource name. May be any of: * `labels/{id}` (equivalent to
       * labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` *
       * `labels/{id}@{revision_id}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) *
     `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Label resource name. May be any of: * `labels/{id}` (equivalent to
       * labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` *
       * `labels/{id}@{revision_id}`
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^labels/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * The BCP-47 language code to use for evaluating localized Field labels. When not specified,
       * values in the default configured language will be used.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** The BCP-47 language code to use for evaluating localized Field labels. When not specified, values
     in the default configured language will be used.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * The BCP-47 language code to use for evaluating localized Field labels. When not specified,
       * values in the default configured language will be used.
       */
      public Get setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Set to `true` in order to use the user's admin credentials. The server will verify the user
       * is an admin for the Label before allowing access.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean useAdminAccess;

      /** Set to `true` in order to use the user's admin credentials. The server will verify the user is an
     admin for the Label before allowing access.
       */
      public java.lang.Boolean getUseAdminAccess() {
        return useAdminAccess;
      }

      /**
       * Set to `true` in order to use the user's admin credentials. The server will verify the user
       * is an admin for the Label before allowing access.
       */
      public Get setUseAdminAccess(java.lang.Boolean useAdminAccess) {
        this.useAdminAccess = useAdminAccess;
        return this;
      }

      /** When specified, only certain Fields belonging to the indicated view will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String view;

      /** When specified, only certain Fields belonging to the indicated view will be returned.
       */
      public java.lang.String getView() {
        return view;
      }

      /** When specified, only certain Fields belonging to the indicated view will be returned. */
      public Get setView(java.lang.String view) {
        this.view = view;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * -------------------------------------------------------------------------- ## Label APIs
     * --------------------------------------------------------------- List Labels.
     *
     * Create a request for the method "labels.list".
     *
     * This request holds the parameters needed by the drivelabels server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends DriveLabelsRequest<com.google.api.services.drivelabels.v2.model.GoogleAppsDriveLabelsV2ListLabelsResponse> {

      private static final String REST_PATH = "v2/labels";

      /**
       * -------------------------------------------------------------------------- ## Label APIs
       * --------------------------------------------------------------- List Labels.
       *
       * Create a request for the method "labels.list".
       *
       * This request holds the parameters needed by the the drivelabels server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(DriveLabels.this, "GET", REST_PATH, null, com.google.api.services.drivelabels.v2.model.GoogleAppsDriveLabelsV2ListLabelsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The BCP-47 language code to use for evaluating localized field labels. When not specified,
       * values in the default configured language will be used.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** The BCP-47 language code to use for evaluating localized field labels. When not specified, values
     in the default configured language will be used.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * The BCP-47 language code to use for evaluating localized field labels. When not specified,
       * values in the default configured language will be used.
       */
      public List setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Specifies the level of access the user must have on the returned Labels. The minimum role a
       * user must have on a label. Defaults to `READER`.
       */
      @com.google.api.client.util.Key
      private java.lang.String minimumRole;

      /** Specifies the level of access the user must have on the returned Labels. The minimum role a user
     must have on a label. Defaults to `READER`.
       */
      public java.lang.String getMinimumRole() {
        return minimumRole;
      }

      /**
       * Specifies the level of access the user must have on the returned Labels. The minimum role a
       * user must have on a label. Defaults to `READER`.
       */
      public List setMinimumRole(java.lang.String minimumRole) {
        this.minimumRole = minimumRole;
        return this;
      }

      /** Maximum number of Labels to return per page. Default: 50. Max: 200. */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** Maximum number of Labels to return per page. Default: 50. Max: 200.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /** Maximum number of Labels to return per page. Default: 50. Max: 200. */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** The token of the page to return. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token of the page to return.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token of the page to return. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Whether to include only published labels in the results. * When `true`, only the current
       * published label revisions will be returned. Disabled labels will be included. Returned
       * Label resource names will reference the published revision (`labels/{id}/{revision_id}`). *
       * When `false`, the current label revisions will be returned, which may not by published.
       * Returned Label resource names will not reference a specific revision (`labels/{id}`).
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean publishedOnly;

      /** Whether to include only published labels in the results. * When `true`, only the current published
     label revisions will be returned. Disabled labels will be included. Returned Label resource names
     will reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current
     label revisions will be returned, which may not by published. Returned Label resource names will
     not reference a specific revision (`labels/{id}`).
       */
      public java.lang.Boolean getPublishedOnly() {
        return publishedOnly;
      }

      /**
       * Whether to include only published labels in the results. * When `true`, only the current
       * published label revisions will be returned. Disabled labels will be included. Returned
       * Label resource names will reference the published revision (`labels/{id}/{revision_id}`). *
       * When `false`, the current label revisions will be returned, which may not by published.
       * Returned Label resource names will not reference a specific revision (`labels/{id}`).
       */
      public List setPublishedOnly(java.lang.Boolean publishedOnly) {
        this.publishedOnly = publishedOnly;
        return this;
      }

      /**
       * Set to `true` in order to use the user's admin credentials. This will return all Labels
       * within the customer.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean useAdminAccess;

      /** Set to `true` in order to use the user's admin credentials. This will return all Labels within the
     customer.
       */
      public java.lang.Boolean getUseAdminAccess() {
        return useAdminAccess;
      }

      /**
       * Set to `true` in order to use the user's admin credentials. This will return all Labels
       * within the customer.
       */
      public List setUseAdminAccess(java.lang.Boolean useAdminAccess) {
        this.useAdminAccess = useAdminAccess;
        return this;
      }

      /** When specified, only certain fields belonging to the indicated view will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String view;

      /** When specified, only certain fields belonging to the indicated view will be returned.
       */
      public java.lang.String getView() {
        return view;
      }

      /** When specified, only certain fields belonging to the indicated view will be returned. */
      public List setView(java.lang.String view) {
        this.view = view;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link DriveLabels}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DriveLabels}. */
    @Override
    public DriveLabels build() {
      return new DriveLabels(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DriveLabelsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDriveLabelsRequestInitializer(
        DriveLabelsRequestInitializer drivelabelsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(drivelabelsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
