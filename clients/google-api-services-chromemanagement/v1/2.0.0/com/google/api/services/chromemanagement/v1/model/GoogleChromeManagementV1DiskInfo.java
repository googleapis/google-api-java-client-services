/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Status of the single storage device.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1DiskInfo extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Number of bytes read since last boot.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long bytesReadThisSession;

  /**
   * Output only. Number of bytes written since last boot.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long bytesWrittenThisSession;

  /**
   * Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which
   * are no longer in use. Supported on kernels 4.18+.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String discardTimeThisSession;

  /**
   * Output only. Disk health.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String health;

  /**
   * Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel
   * requests are not counted multiple times.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String ioTimeThisSession;

  /**
   * Output only. Disk manufacturer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String manufacturer;

  /**
   * Output only. Disk model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String model;

  /**
   * Output only. Time spent reading from disk since last boot.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String readTimeThisSession;

  /**
   * Output only. Disk serial number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serialNumber;

  /**
   * Output only. Disk size.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long sizeBytes;

  /**
   * Output only. Disk type: eMMC / NVMe / ATA / SCSI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Output only. Disk volumes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> volumeIds;

  /**
   * Output only. Time spent writing to disk since last boot.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String writeTimeThisSession;

  /**
   * Output only. Number of bytes read since last boot.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBytesReadThisSession() {
    return bytesReadThisSession;
  }

  /**
   * Output only. Number of bytes read since last boot.
   * @param bytesReadThisSession bytesReadThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setBytesReadThisSession(java.lang.Long bytesReadThisSession) {
    this.bytesReadThisSession = bytesReadThisSession;
    return this;
  }

  /**
   * Output only. Number of bytes written since last boot.
   * @return value or {@code null} for none
   */
  public java.lang.Long getBytesWrittenThisSession() {
    return bytesWrittenThisSession;
  }

  /**
   * Output only. Number of bytes written since last boot.
   * @param bytesWrittenThisSession bytesWrittenThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setBytesWrittenThisSession(java.lang.Long bytesWrittenThisSession) {
    this.bytesWrittenThisSession = bytesWrittenThisSession;
    return this;
  }

  /**
   * Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which
   * are no longer in use. Supported on kernels 4.18+.
   * @return value or {@code null} for none
   */
  public String getDiscardTimeThisSession() {
    return discardTimeThisSession;
  }

  /**
   * Output only. Time spent discarding since last boot. Discarding is writing to clear blocks which
   * are no longer in use. Supported on kernels 4.18+.
   * @param discardTimeThisSession discardTimeThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setDiscardTimeThisSession(String discardTimeThisSession) {
    this.discardTimeThisSession = discardTimeThisSession;
    return this;
  }

  /**
   * Output only. Disk health.
   * @return value or {@code null} for none
   */
  public java.lang.String getHealth() {
    return health;
  }

  /**
   * Output only. Disk health.
   * @param health health or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setHealth(java.lang.String health) {
    this.health = health;
    return this;
  }

  /**
   * Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel
   * requests are not counted multiple times.
   * @return value or {@code null} for none
   */
  public String getIoTimeThisSession() {
    return ioTimeThisSession;
  }

  /**
   * Output only. Counts the time the disk and queue were busy, so unlike the fields above, parallel
   * requests are not counted multiple times.
   * @param ioTimeThisSession ioTimeThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setIoTimeThisSession(String ioTimeThisSession) {
    this.ioTimeThisSession = ioTimeThisSession;
    return this;
  }

  /**
   * Output only. Disk manufacturer.
   * @return value or {@code null} for none
   */
  public java.lang.String getManufacturer() {
    return manufacturer;
  }

  /**
   * Output only. Disk manufacturer.
   * @param manufacturer manufacturer or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setManufacturer(java.lang.String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Output only. Disk model.
   * @return value or {@code null} for none
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * Output only. Disk model.
   * @param model model or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setModel(java.lang.String model) {
    this.model = model;
    return this;
  }

  /**
   * Output only. Time spent reading from disk since last boot.
   * @return value or {@code null} for none
   */
  public String getReadTimeThisSession() {
    return readTimeThisSession;
  }

  /**
   * Output only. Time spent reading from disk since last boot.
   * @param readTimeThisSession readTimeThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setReadTimeThisSession(String readTimeThisSession) {
    this.readTimeThisSession = readTimeThisSession;
    return this;
  }

  /**
   * Output only. Disk serial number.
   * @return value or {@code null} for none
   */
  public java.lang.String getSerialNumber() {
    return serialNumber;
  }

  /**
   * Output only. Disk serial number.
   * @param serialNumber serialNumber or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setSerialNumber(java.lang.String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * Output only. Disk size.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSizeBytes() {
    return sizeBytes;
  }

  /**
   * Output only. Disk size.
   * @param sizeBytes sizeBytes or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setSizeBytes(java.lang.Long sizeBytes) {
    this.sizeBytes = sizeBytes;
    return this;
  }

  /**
   * Output only. Disk type: eMMC / NVMe / ATA / SCSI.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Output only. Disk type: eMMC / NVMe / ATA / SCSI.
   * @param type type or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Output only. Disk volumes.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getVolumeIds() {
    return volumeIds;
  }

  /**
   * Output only. Disk volumes.
   * @param volumeIds volumeIds or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setVolumeIds(java.util.List<java.lang.String> volumeIds) {
    this.volumeIds = volumeIds;
    return this;
  }

  /**
   * Output only. Time spent writing to disk since last boot.
   * @return value or {@code null} for none
   */
  public String getWriteTimeThisSession() {
    return writeTimeThisSession;
  }

  /**
   * Output only. Time spent writing to disk since last boot.
   * @param writeTimeThisSession writeTimeThisSession or {@code null} for none
   */
  public GoogleChromeManagementV1DiskInfo setWriteTimeThisSession(String writeTimeThisSession) {
    this.writeTimeThisSession = writeTimeThisSession;
    return this;
  }

  @Override
  public GoogleChromeManagementV1DiskInfo set(String fieldName, Object value) {
    return (GoogleChromeManagementV1DiskInfo) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1DiskInfo clone() {
    return (GoogleChromeManagementV1DiskInfo) super.clone();
  }

}
