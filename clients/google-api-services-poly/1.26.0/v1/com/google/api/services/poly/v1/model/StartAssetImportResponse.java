/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.poly.v1.model;

/**
 * A response message from a request to startImport. This is returned in the response field of the
 * Operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Poly API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StartAssetImportResponse extends com.google.api.client.json.GenericJson {

  /**
   * The id of newly created asset. If this is empty when the operation is complete it means the
   * import failed. Please refer to the assetImportMessages field to understand what went wrong.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assetId;

  /**
   * The id of the asset import.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String assetImportId;

  /**
   * The message from the asset import. This will contain any warnings (or - in the case of failure
   * - errors) that occurred during import.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssetImportMessage> assetImportMessages;

  static {
    // hack to force ProGuard to consider AssetImportMessage used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssetImportMessage.class);
  }

  /**
   * The publish URL for the asset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publishUrl;

  /**
   * The id of newly created asset. If this is empty when the operation is complete it means the
   * import failed. Please refer to the assetImportMessages field to understand what went wrong.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssetId() {
    return assetId;
  }

  /**
   * The id of newly created asset. If this is empty when the operation is complete it means the
   * import failed. Please refer to the assetImportMessages field to understand what went wrong.
   * @param assetId assetId or {@code null} for none
   */
  public StartAssetImportResponse setAssetId(java.lang.String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * The id of the asset import.
   * @return value or {@code null} for none
   */
  public java.lang.String getAssetImportId() {
    return assetImportId;
  }

  /**
   * The id of the asset import.
   * @param assetImportId assetImportId or {@code null} for none
   */
  public StartAssetImportResponse setAssetImportId(java.lang.String assetImportId) {
    this.assetImportId = assetImportId;
    return this;
  }

  /**
   * The message from the asset import. This will contain any warnings (or - in the case of failure
   * - errors) that occurred during import.
   * @return value or {@code null} for none
   */
  public java.util.List<AssetImportMessage> getAssetImportMessages() {
    return assetImportMessages;
  }

  /**
   * The message from the asset import. This will contain any warnings (or - in the case of failure
   * - errors) that occurred during import.
   * @param assetImportMessages assetImportMessages or {@code null} for none
   */
  public StartAssetImportResponse setAssetImportMessages(java.util.List<AssetImportMessage> assetImportMessages) {
    this.assetImportMessages = assetImportMessages;
    return this;
  }

  /**
   * The publish URL for the asset.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublishUrl() {
    return publishUrl;
  }

  /**
   * The publish URL for the asset.
   * @param publishUrl publishUrl or {@code null} for none
   */
  public StartAssetImportResponse setPublishUrl(java.lang.String publishUrl) {
    this.publishUrl = publishUrl;
    return this;
  }

  @Override
  public StartAssetImportResponse set(String fieldName, Object value) {
    return (StartAssetImportResponse) super.set(fieldName, value);
  }

  @Override
  public StartAssetImportResponse clone() {
    return (StartAssetImportResponse) super.clone();
  }

}
