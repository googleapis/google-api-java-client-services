/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A single region within an image. NEXT_ID: 11
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageRegionsImageRegion extends com.google.api.client.json.GenericJson {

  /**
   * The bounding box of the region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PhotosVisionGroundtruthdbNormalizedBoundingBox boundingBox;

  /**
   * The confidence score associated with the bounding box.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float boundingBoxScore;

  /**
   * A unique identifier for the region within the image. The id is unique only among other regions
   * in the image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Set true if the region represents a product, i.e., if any of its labels are on a product labels
   * whitelist. See ImageRegionsConfig for details on the product whitelist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isProduct;

  /**
   * The score for this region based on how visually similar its neighbors are.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double knnScore;

  /**
   * The label group corresponding to the first LabelParams listed in ImageRegionsConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageUnderstandingIndexingLabelGroup labelGroup;

  /**
   * The version string of the labels with which the region was processed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String labelVersion;

  /**
   * The primary label associated with the region. Specifically, the highest-scored whitelisted
   * label associated with the region. See ImageRegionsConfig for details on the whitelist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageUnderstandingIndexingLabel primaryLabel;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String renderType;

  /**
   * The starburst v4 features and tokens for the region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ImageUnderstandingIndexingFeature starburstV4;

  /**
   * The bounding box of the region.
   * @return value or {@code null} for none
   */
  public PhotosVisionGroundtruthdbNormalizedBoundingBox getBoundingBox() {
    return boundingBox;
  }

  /**
   * The bounding box of the region.
   * @param boundingBox boundingBox or {@code null} for none
   */
  public ImageRegionsImageRegion setBoundingBox(PhotosVisionGroundtruthdbNormalizedBoundingBox boundingBox) {
    this.boundingBox = boundingBox;
    return this;
  }

  /**
   * The confidence score associated with the bounding box.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBoundingBoxScore() {
    return boundingBoxScore;
  }

  /**
   * The confidence score associated with the bounding box.
   * @param boundingBoxScore boundingBoxScore or {@code null} for none
   */
  public ImageRegionsImageRegion setBoundingBoxScore(java.lang.Float boundingBoxScore) {
    this.boundingBoxScore = boundingBoxScore;
    return this;
  }

  /**
   * A unique identifier for the region within the image. The id is unique only among other regions
   * in the image.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * A unique identifier for the region within the image. The id is unique only among other regions
   * in the image.
   * @param id id or {@code null} for none
   */
  public ImageRegionsImageRegion setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Set true if the region represents a product, i.e., if any of its labels are on a product labels
   * whitelist. See ImageRegionsConfig for details on the product whitelist.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsProduct() {
    return isProduct;
  }

  /**
   * Set true if the region represents a product, i.e., if any of its labels are on a product labels
   * whitelist. See ImageRegionsConfig for details on the product whitelist.
   * @param isProduct isProduct or {@code null} for none
   */
  public ImageRegionsImageRegion setIsProduct(java.lang.Boolean isProduct) {
    this.isProduct = isProduct;
    return this;
  }

  /**
   * The score for this region based on how visually similar its neighbors are.
   * @return value or {@code null} for none
   */
  public java.lang.Double getKnnScore() {
    return knnScore;
  }

  /**
   * The score for this region based on how visually similar its neighbors are.
   * @param knnScore knnScore or {@code null} for none
   */
  public ImageRegionsImageRegion setKnnScore(java.lang.Double knnScore) {
    this.knnScore = knnScore;
    return this;
  }

  /**
   * The label group corresponding to the first LabelParams listed in ImageRegionsConfig.
   * @return value or {@code null} for none
   */
  public ImageUnderstandingIndexingLabelGroup getLabelGroup() {
    return labelGroup;
  }

  /**
   * The label group corresponding to the first LabelParams listed in ImageRegionsConfig.
   * @param labelGroup labelGroup or {@code null} for none
   */
  public ImageRegionsImageRegion setLabelGroup(ImageUnderstandingIndexingLabelGroup labelGroup) {
    this.labelGroup = labelGroup;
    return this;
  }

  /**
   * The version string of the labels with which the region was processed.
   * @return value or {@code null} for none
   */
  public java.lang.String getLabelVersion() {
    return labelVersion;
  }

  /**
   * The version string of the labels with which the region was processed.
   * @param labelVersion labelVersion or {@code null} for none
   */
  public ImageRegionsImageRegion setLabelVersion(java.lang.String labelVersion) {
    this.labelVersion = labelVersion;
    return this;
  }

  /**
   * The primary label associated with the region. Specifically, the highest-scored whitelisted
   * label associated with the region. See ImageRegionsConfig for details on the whitelist.
   * @return value or {@code null} for none
   */
  public ImageUnderstandingIndexingLabel getPrimaryLabel() {
    return primaryLabel;
  }

  /**
   * The primary label associated with the region. Specifically, the highest-scored whitelisted
   * label associated with the region. See ImageRegionsConfig for details on the whitelist.
   * @param primaryLabel primaryLabel or {@code null} for none
   */
  public ImageRegionsImageRegion setPrimaryLabel(ImageUnderstandingIndexingLabel primaryLabel) {
    this.primaryLabel = primaryLabel;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRenderType() {
    return renderType;
  }

  /**
   * @param renderType renderType or {@code null} for none
   */
  public ImageRegionsImageRegion setRenderType(java.lang.String renderType) {
    this.renderType = renderType;
    return this;
  }

  /**
   * The starburst v4 features and tokens for the region.
   * @return value or {@code null} for none
   */
  public ImageUnderstandingIndexingFeature getStarburstV4() {
    return starburstV4;
  }

  /**
   * The starburst v4 features and tokens for the region.
   * @param starburstV4 starburstV4 or {@code null} for none
   */
  public ImageRegionsImageRegion setStarburstV4(ImageUnderstandingIndexingFeature starburstV4) {
    this.starburstV4 = starburstV4;
    return this;
  }

  @Override
  public ImageRegionsImageRegion set(String fieldName, Object value) {
    return (ImageRegionsImageRegion) super.set(fieldName, value);
  }

  @Override
  public ImageRegionsImageRegion clone() {
    return (ImageRegionsImageRegion) super.clone();
  }

}
