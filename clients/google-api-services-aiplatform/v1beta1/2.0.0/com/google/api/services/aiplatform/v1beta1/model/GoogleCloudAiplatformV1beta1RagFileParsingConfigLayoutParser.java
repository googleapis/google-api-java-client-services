/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Document AI Layout Parser config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser extends com.google.api.client.json.GenericJson {

  /**
   * The maximum number of requests the job is allowed to make to the Document AI processor per
   * minute. Consult https://cloud.google.com/document-ai/quotas and the Quota page for your project
   * to set an appropriate value here. If unspecified, a default value of 120 QPM would be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxParsingRequestsPerMin;

  /**
   * The full resource name of a Document AI processor or processor version. The processor must have
   * type `LAYOUT_PARSER_PROCESSOR`. If specified, the `additional_config.parse_as_scanned_pdf`
   * field must be false. Format: *
   * `projects/{project_id}/locations/{location}/processors/{processor_id}` * `projects/{project_id}
   * /locations/{location}/processors/{processor_id}/processorVersions/{processor_version_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String processorName;

  /**
   * The maximum number of requests the job is allowed to make to the Document AI processor per
   * minute. Consult https://cloud.google.com/document-ai/quotas and the Quota page for your project
   * to set an appropriate value here. If unspecified, a default value of 120 QPM would be used.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxParsingRequestsPerMin() {
    return maxParsingRequestsPerMin;
  }

  /**
   * The maximum number of requests the job is allowed to make to the Document AI processor per
   * minute. Consult https://cloud.google.com/document-ai/quotas and the Quota page for your project
   * to set an appropriate value here. If unspecified, a default value of 120 QPM would be used.
   * @param maxParsingRequestsPerMin maxParsingRequestsPerMin or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser setMaxParsingRequestsPerMin(java.lang.Integer maxParsingRequestsPerMin) {
    this.maxParsingRequestsPerMin = maxParsingRequestsPerMin;
    return this;
  }

  /**
   * The full resource name of a Document AI processor or processor version. The processor must have
   * type `LAYOUT_PARSER_PROCESSOR`. If specified, the `additional_config.parse_as_scanned_pdf`
   * field must be false. Format: *
   * `projects/{project_id}/locations/{location}/processors/{processor_id}` * `projects/{project_id}
   * /locations/{location}/processors/{processor_id}/processorVersions/{processor_version_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getProcessorName() {
    return processorName;
  }

  /**
   * The full resource name of a Document AI processor or processor version. The processor must have
   * type `LAYOUT_PARSER_PROCESSOR`. If specified, the `additional_config.parse_as_scanned_pdf`
   * field must be false. Format: *
   * `projects/{project_id}/locations/{location}/processors/{processor_id}` * `projects/{project_id}
   * /locations/{location}/processors/{processor_id}/processorVersions/{processor_version_id}`
   * @param processorName processorName or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser setProcessorName(java.lang.String processorName) {
    this.processorName = processorName;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser clone() {
    return (GoogleCloudAiplatformV1beta1RagFileParsingConfigLayoutParser) super.clone();
  }

}
