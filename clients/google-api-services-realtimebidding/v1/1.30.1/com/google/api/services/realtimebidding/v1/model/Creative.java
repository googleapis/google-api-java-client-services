/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * A creative and its classification data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Creative extends com.google.api.client.json.GenericJson {

  /**
   * Output only. ID of the buyer account that this creative is owned by. Can be used to filter the
   * response of the creatives.list method with equality and inequality check.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long accountId;

  /**
   * The link to AdChoices destination page. This is only supported for native ads.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String adChoicesDestinationUrl;

  /**
   * The name of the company being advertised in the creative. Can be used to filter the response of
   * the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String advertiserName;

  /**
   * The agency ID for this creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long agencyId;

  /**
   * Output only. The last update timestamp of the creative via API.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String apiUpdateTime;

  /**
   * Output only. The format of this creative. Can be used to filter the response of the
   * creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creativeFormat;

  /**
   * Buyer-specific creative ID that references this creative in bid responses. This field is
   * Ignored in update operations. Can be used to filter the response of the creatives.list method.
   * The maximum length of the creative ID is 128 bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creativeId;

  /**
   * Output only. Top level status and detected attributes of a creative (for example domain,
   * language, advertiser, product category, etc.) that affect whether (status) and where (context)
   * a creative will be allowed to serve.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CreativeServingDecision creativeServingDecision;

  /**
   * Output only. IDs of all of the deals with which this creative has been used in bidding. Can be
   * used to filter the response of the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> dealIds;

  /**
   * All declared attributes for the ads that may be shown from this creative. Can be used to filter
   * the response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto")
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> declaredAttributes;

  /**
   * The set of declared destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> declaredClickThroughUrls;

  /**
   * All declared restricted categories for the ads that may be shown from this creative. Can be
   * used to filter the response of the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> declaredRestrictedCategories;

  /**
   * IDs for the declared ad technology vendors that may be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> declaredVendorIds;

  /**
   * An HTML creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlContent html;

  /**
   * The set of URLs to be called to record an impression.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> impressionTrackingUrls;

  /**
   * Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`,
   * where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}`
   * is the buyer-specific creative ID that references this creative in the bid response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * A native creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("native")
  private NativeContent native__;

  /**
   * All restricted categories for the ads that may be shown from this creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> restrictedCategories;

  /**
   * Output only. The version of this creative. Version for a new creative is 1 and it increments
   * during subsequent creative updates.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer version;

  /**
   * A video creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContent video;

  /**
   * Output only. ID of the buyer account that this creative is owned by. Can be used to filter the
   * response of the creatives.list method with equality and inequality check.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAccountId() {
    return accountId;
  }

  /**
   * Output only. ID of the buyer account that this creative is owned by. Can be used to filter the
   * response of the creatives.list method with equality and inequality check.
   * @param accountId accountId or {@code null} for none
   */
  public Creative setAccountId(java.lang.Long accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * The link to AdChoices destination page. This is only supported for native ads.
   * @return value or {@code null} for none
   */
  public java.lang.String getAdChoicesDestinationUrl() {
    return adChoicesDestinationUrl;
  }

  /**
   * The link to AdChoices destination page. This is only supported for native ads.
   * @param adChoicesDestinationUrl adChoicesDestinationUrl or {@code null} for none
   */
  public Creative setAdChoicesDestinationUrl(java.lang.String adChoicesDestinationUrl) {
    this.adChoicesDestinationUrl = adChoicesDestinationUrl;
    return this;
  }

  /**
   * The name of the company being advertised in the creative. Can be used to filter the response of
   * the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.lang.String getAdvertiserName() {
    return advertiserName;
  }

  /**
   * The name of the company being advertised in the creative. Can be used to filter the response of
   * the creatives.list method.
   * @param advertiserName advertiserName or {@code null} for none
   */
  public Creative setAdvertiserName(java.lang.String advertiserName) {
    this.advertiserName = advertiserName;
    return this;
  }

  /**
   * The agency ID for this creative.
   * @return value or {@code null} for none
   */
  public java.lang.Long getAgencyId() {
    return agencyId;
  }

  /**
   * The agency ID for this creative.
   * @param agencyId agencyId or {@code null} for none
   */
  public Creative setAgencyId(java.lang.Long agencyId) {
    this.agencyId = agencyId;
    return this;
  }

  /**
   * Output only. The last update timestamp of the creative via API.
   * @return value or {@code null} for none
   */
  public String getApiUpdateTime() {
    return apiUpdateTime;
  }

  /**
   * Output only. The last update timestamp of the creative via API.
   * @param apiUpdateTime apiUpdateTime or {@code null} for none
   */
  public Creative setApiUpdateTime(String apiUpdateTime) {
    this.apiUpdateTime = apiUpdateTime;
    return this;
  }

  /**
   * Output only. The format of this creative. Can be used to filter the response of the
   * creatives.list method.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreativeFormat() {
    return creativeFormat;
  }

  /**
   * Output only. The format of this creative. Can be used to filter the response of the
   * creatives.list method.
   * @param creativeFormat creativeFormat or {@code null} for none
   */
  public Creative setCreativeFormat(java.lang.String creativeFormat) {
    this.creativeFormat = creativeFormat;
    return this;
  }

  /**
   * Buyer-specific creative ID that references this creative in bid responses. This field is
   * Ignored in update operations. Can be used to filter the response of the creatives.list method.
   * The maximum length of the creative ID is 128 bytes.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreativeId() {
    return creativeId;
  }

  /**
   * Buyer-specific creative ID that references this creative in bid responses. This field is
   * Ignored in update operations. Can be used to filter the response of the creatives.list method.
   * The maximum length of the creative ID is 128 bytes.
   * @param creativeId creativeId or {@code null} for none
   */
  public Creative setCreativeId(java.lang.String creativeId) {
    this.creativeId = creativeId;
    return this;
  }

  /**
   * Output only. Top level status and detected attributes of a creative (for example domain,
   * language, advertiser, product category, etc.) that affect whether (status) and where (context)
   * a creative will be allowed to serve.
   * @return value or {@code null} for none
   */
  public CreativeServingDecision getCreativeServingDecision() {
    return creativeServingDecision;
  }

  /**
   * Output only. Top level status and detected attributes of a creative (for example domain,
   * language, advertiser, product category, etc.) that affect whether (status) and where (context)
   * a creative will be allowed to serve.
   * @param creativeServingDecision creativeServingDecision or {@code null} for none
   */
  public Creative setCreativeServingDecision(CreativeServingDecision creativeServingDecision) {
    this.creativeServingDecision = creativeServingDecision;
    return this;
  }

  /**
   * Output only. IDs of all of the deals with which this creative has been used in bidding. Can be
   * used to filter the response of the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDealIds() {
    return dealIds;
  }

  /**
   * Output only. IDs of all of the deals with which this creative has been used in bidding. Can be
   * used to filter the response of the creatives.list method.
   * @param dealIds dealIds or {@code null} for none
   */
  public Creative setDealIds(java.util.List<java.lang.String> dealIds) {
    this.dealIds = dealIds;
    return this;
  }

  /**
   * All declared attributes for the ads that may be shown from this creative. Can be used to filter
   * the response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto")
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeclaredAttributes() {
    return declaredAttributes;
  }

  /**
   * All declared attributes for the ads that may be shown from this creative. Can be used to filter
   * the response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto")
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * @param declaredAttributes declaredAttributes or {@code null} for none
   */
  public Creative setDeclaredAttributes(java.util.List<java.lang.String> declaredAttributes) {
    this.declaredAttributes = declaredAttributes;
    return this;
  }

  /**
   * The set of declared destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeclaredClickThroughUrls() {
    return declaredClickThroughUrls;
  }

  /**
   * The set of declared destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * @param declaredClickThroughUrls declaredClickThroughUrls or {@code null} for none
   */
  public Creative setDeclaredClickThroughUrls(java.util.List<java.lang.String> declaredClickThroughUrls) {
    this.declaredClickThroughUrls = declaredClickThroughUrls;
    return this;
  }

  /**
   * All declared restricted categories for the ads that may be shown from this creative. Can be
   * used to filter the response of the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeclaredRestrictedCategories() {
    return declaredRestrictedCategories;
  }

  /**
   * All declared restricted categories for the ads that may be shown from this creative. Can be
   * used to filter the response of the creatives.list method.
   * @param declaredRestrictedCategories declaredRestrictedCategories or {@code null} for none
   */
  public Creative setDeclaredRestrictedCategories(java.util.List<java.lang.String> declaredRestrictedCategories) {
    this.declaredRestrictedCategories = declaredRestrictedCategories;
    return this;
  }

  /**
   * IDs for the declared ad technology vendors that may be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDeclaredVendorIds() {
    return declaredVendorIds;
  }

  /**
   * IDs for the declared ad technology vendors that may be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method.
   * @param declaredVendorIds declaredVendorIds or {@code null} for none
   */
  public Creative setDeclaredVendorIds(java.util.List<java.lang.Integer> declaredVendorIds) {
    this.declaredVendorIds = declaredVendorIds;
    return this;
  }

  /**
   * An HTML creative.
   * @return value or {@code null} for none
   */
  public HtmlContent getHtml() {
    return html;
  }

  /**
   * An HTML creative.
   * @param html html or {@code null} for none
   */
  public Creative setHtml(HtmlContent html) {
    this.html = html;
    return this;
  }

  /**
   * The set of URLs to be called to record an impression.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getImpressionTrackingUrls() {
    return impressionTrackingUrls;
  }

  /**
   * The set of URLs to be called to record an impression.
   * @param impressionTrackingUrls impressionTrackingUrls or {@code null} for none
   */
  public Creative setImpressionTrackingUrls(java.util.List<java.lang.String> impressionTrackingUrls) {
    this.impressionTrackingUrls = impressionTrackingUrls;
    return this;
  }

  /**
   * Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`,
   * where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}`
   * is the buyer-specific creative ID that references this creative in the bid response.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`,
   * where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}`
   * is the buyer-specific creative ID that references this creative in the bid response.
   * @param name name or {@code null} for none
   */
  public Creative setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * A native creative.
   * @return value or {@code null} for none
   */
  public NativeContent getNative() {
    return native__;
  }

  /**
   * A native creative.
   * @param native__ native__ or {@code null} for none
   */
  public Creative setNative(NativeContent native__) {
    this.native__ = native__;
    return this;
  }

  /**
   * All restricted categories for the ads that may be shown from this creative.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRestrictedCategories() {
    return restrictedCategories;
  }

  /**
   * All restricted categories for the ads that may be shown from this creative.
   * @param restrictedCategories restrictedCategories or {@code null} for none
   */
  public Creative setRestrictedCategories(java.util.List<java.lang.String> restrictedCategories) {
    this.restrictedCategories = restrictedCategories;
    return this;
  }

  /**
   * Output only. The version of this creative. Version for a new creative is 1 and it increments
   * during subsequent creative updates.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Output only. The version of this creative. Version for a new creative is 1 and it increments
   * during subsequent creative updates.
   * @param version version or {@code null} for none
   */
  public Creative setVersion(java.lang.Integer version) {
    this.version = version;
    return this;
  }

  /**
   * A video creative.
   * @return value or {@code null} for none
   */
  public VideoContent getVideo() {
    return video;
  }

  /**
   * A video creative.
   * @param video video or {@code null} for none
   */
  public Creative setVideo(VideoContent video) {
    this.video = video;
    return this;
  }

  @Override
  public Creative set(String fieldName, Object value) {
    return (Creative) super.set(fieldName, value);
  }

  @Override
  public Creative clone() {
    return (Creative) super.clone();
  }

}
