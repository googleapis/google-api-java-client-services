/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * Details of a machine.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MachineDetails extends com.google.api.client.json.GenericJson {

  /**
   * Architecture details (vendor, CPU architecture).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineArchitectureDetails architecture;

  /**
   * Number of logical CPU cores in the machine. Must be non-negative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer coreCount;

  /**
   * Machine creation time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Disk details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineDiskDetails disks;

  /**
   * Guest OS information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GuestOsDetails guestOs;

  /**
   * Machine name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String machineName;

  /**
   * The amount of memory in the machine. Must be non-negative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer memoryMb;

  /**
   * Network details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineNetworkDetails network;

  /**
   * Platform specific information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PlatformDetails platform;

  /**
   * Power state of the machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String powerState;

  /**
   * Machine unique identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uuid;

  /**
   * Architecture details (vendor, CPU architecture).
   * @return value or {@code null} for none
   */
  public MachineArchitectureDetails getArchitecture() {
    return architecture;
  }

  /**
   * Architecture details (vendor, CPU architecture).
   * @param architecture architecture or {@code null} for none
   */
  public MachineDetails setArchitecture(MachineArchitectureDetails architecture) {
    this.architecture = architecture;
    return this;
  }

  /**
   * Number of logical CPU cores in the machine. Must be non-negative.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCoreCount() {
    return coreCount;
  }

  /**
   * Number of logical CPU cores in the machine. Must be non-negative.
   * @param coreCount coreCount or {@code null} for none
   */
  public MachineDetails setCoreCount(java.lang.Integer coreCount) {
    this.coreCount = coreCount;
    return this;
  }

  /**
   * Machine creation time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Machine creation time.
   * @param createTime createTime or {@code null} for none
   */
  public MachineDetails setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Disk details.
   * @return value or {@code null} for none
   */
  public MachineDiskDetails getDisks() {
    return disks;
  }

  /**
   * Disk details.
   * @param disks disks or {@code null} for none
   */
  public MachineDetails setDisks(MachineDiskDetails disks) {
    this.disks = disks;
    return this;
  }

  /**
   * Guest OS information.
   * @return value or {@code null} for none
   */
  public GuestOsDetails getGuestOs() {
    return guestOs;
  }

  /**
   * Guest OS information.
   * @param guestOs guestOs or {@code null} for none
   */
  public MachineDetails setGuestOs(GuestOsDetails guestOs) {
    this.guestOs = guestOs;
    return this;
  }

  /**
   * Machine name.
   * @return value or {@code null} for none
   */
  public java.lang.String getMachineName() {
    return machineName;
  }

  /**
   * Machine name.
   * @param machineName machineName or {@code null} for none
   */
  public MachineDetails setMachineName(java.lang.String machineName) {
    this.machineName = machineName;
    return this;
  }

  /**
   * The amount of memory in the machine. Must be non-negative.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMemoryMb() {
    return memoryMb;
  }

  /**
   * The amount of memory in the machine. Must be non-negative.
   * @param memoryMb memoryMb or {@code null} for none
   */
  public MachineDetails setMemoryMb(java.lang.Integer memoryMb) {
    this.memoryMb = memoryMb;
    return this;
  }

  /**
   * Network details.
   * @return value or {@code null} for none
   */
  public MachineNetworkDetails getNetwork() {
    return network;
  }

  /**
   * Network details.
   * @param network network or {@code null} for none
   */
  public MachineDetails setNetwork(MachineNetworkDetails network) {
    this.network = network;
    return this;
  }

  /**
   * Platform specific information.
   * @return value or {@code null} for none
   */
  public PlatformDetails getPlatform() {
    return platform;
  }

  /**
   * Platform specific information.
   * @param platform platform or {@code null} for none
   */
  public MachineDetails setPlatform(PlatformDetails platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Power state of the machine.
   * @return value or {@code null} for none
   */
  public java.lang.String getPowerState() {
    return powerState;
  }

  /**
   * Power state of the machine.
   * @param powerState powerState or {@code null} for none
   */
  public MachineDetails setPowerState(java.lang.String powerState) {
    this.powerState = powerState;
    return this;
  }

  /**
   * Machine unique identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Machine unique identifier.
   * @param uuid uuid or {@code null} for none
   */
  public MachineDetails setUuid(java.lang.String uuid) {
    this.uuid = uuid;
    return this;
  }

  @Override
  public MachineDetails set(String fieldName, Object value) {
    return (MachineDetails) super.set(fieldName, value);
  }

  @Override
  public MachineDetails clone() {
    return (MachineDetails) super.clone();
  }

}
