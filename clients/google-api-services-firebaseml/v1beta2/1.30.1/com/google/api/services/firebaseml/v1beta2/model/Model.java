/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebaseml.v1beta2.model;

/**
 * An ML model hosted in Firebase ML
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase ML API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Model extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Lists operation ids associated with this model whose status is NOT done.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Operation> activeOperations;

  /**
   * Output only. Timestamp when this model was created in Firebase ML.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. The name of the model to create. The name can be up to 32 characters long and can
   * consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must
   * start with a letter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. The model_hash will change if a new file is available for download.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String modelHash;

  /**
   * The resource name of the Model. Model names have the form
   * `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * State common to all model types. Includes publishing and validation information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ModelState state;

  /**
   * User defined tags which can be used to group/filter models during listing
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> tags;

  /**
   * A TFLite Model
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TfLiteModel tfliteModel;

  /**
   * Output only. Timestamp when this model was updated in Firebase ML.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Lists operation ids associated with this model whose status is NOT done.
   * @return value or {@code null} for none
   */
  public java.util.List<Operation> getActiveOperations() {
    return activeOperations;
  }

  /**
   * Output only. Lists operation ids associated with this model whose status is NOT done.
   * @param activeOperations activeOperations or {@code null} for none
   */
  public Model setActiveOperations(java.util.List<Operation> activeOperations) {
    this.activeOperations = activeOperations;
    return this;
  }

  /**
   * Output only. Timestamp when this model was created in Firebase ML.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Timestamp when this model was created in Firebase ML.
   * @param createTime createTime or {@code null} for none
   */
  public Model setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. The name of the model to create. The name can be up to 32 characters long and can
   * consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must
   * start with a letter.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Required. The name of the model to create. The name can be up to 32 characters long and can
   * consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must
   * start with a letter.
   * @param displayName displayName or {@code null} for none
   */
  public Model setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
   * @param etag etag or {@code null} for none
   */
  public Model setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. The model_hash will change if a new file is available for download.
   * @return value or {@code null} for none
   */
  public java.lang.String getModelHash() {
    return modelHash;
  }

  /**
   * Output only. The model_hash will change if a new file is available for download.
   * @param modelHash modelHash or {@code null} for none
   */
  public Model setModelHash(java.lang.String modelHash) {
    this.modelHash = modelHash;
    return this;
  }

  /**
   * The resource name of the Model. Model names have the form
   * `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name of the Model. Model names have the form
   * `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
   * @param name name or {@code null} for none
   */
  public Model setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * State common to all model types. Includes publishing and validation information.
   * @return value or {@code null} for none
   */
  public ModelState getState() {
    return state;
  }

  /**
   * State common to all model types. Includes publishing and validation information.
   * @param state state or {@code null} for none
   */
  public Model setState(ModelState state) {
    this.state = state;
    return this;
  }

  /**
   * User defined tags which can be used to group/filter models during listing
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }

  /**
   * User defined tags which can be used to group/filter models during listing
   * @param tags tags or {@code null} for none
   */
  public Model setTags(java.util.List<java.lang.String> tags) {
    this.tags = tags;
    return this;
  }

  /**
   * A TFLite Model
   * @return value or {@code null} for none
   */
  public TfLiteModel getTfliteModel() {
    return tfliteModel;
  }

  /**
   * A TFLite Model
   * @param tfliteModel tfliteModel or {@code null} for none
   */
  public Model setTfliteModel(TfLiteModel tfliteModel) {
    this.tfliteModel = tfliteModel;
    return this;
  }

  /**
   * Output only. Timestamp when this model was updated in Firebase ML.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Timestamp when this model was updated in Firebase ML.
   * @param updateTime updateTime or {@code null} for none
   */
  public Model setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Model set(String fieldName, Object value) {
    return (Model) super.set(fieldName, value);
  }

  @Override
  public Model clone() {
    return (Model) super.clone();
  }

}
