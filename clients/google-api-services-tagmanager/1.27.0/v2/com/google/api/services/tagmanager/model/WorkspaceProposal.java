/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.tagmanager.model;

/**
 * A workspace proposal represents an ongoing review of workspace changes in an effort to gain
 * approval for container version creation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Tag Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WorkspaceProposal extends com.google.api.client.json.GenericJson {

  /**
   * List of authors for the workspace proposal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WorkspaceProposalUser> authors;

  /**
   * The fingerprint of the GTM workspace proposal as computed at storage time. This value is
   * recomputed whenever the proposal is modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fingerprint;

  /**
   * Records the history of comments and status changes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WorkspaceProposalHistory> history;

  /**
   * GTM workspace proposal's relative path.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Lists of reviewers for the workspace proposal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<WorkspaceProposalUser> reviewers;

  /**
   * The status of the workspace proposal as it goes through review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * List of authors for the workspace proposal.
   * @return value or {@code null} for none
   */
  public java.util.List<WorkspaceProposalUser> getAuthors() {
    return authors;
  }

  /**
   * List of authors for the workspace proposal.
   * @param authors authors or {@code null} for none
   */
  public WorkspaceProposal setAuthors(java.util.List<WorkspaceProposalUser> authors) {
    this.authors = authors;
    return this;
  }

  /**
   * The fingerprint of the GTM workspace proposal as computed at storage time. This value is
   * recomputed whenever the proposal is modified.
   * @return value or {@code null} for none
   */
  public java.lang.String getFingerprint() {
    return fingerprint;
  }

  /**
   * The fingerprint of the GTM workspace proposal as computed at storage time. This value is
   * recomputed whenever the proposal is modified.
   * @param fingerprint fingerprint or {@code null} for none
   */
  public WorkspaceProposal setFingerprint(java.lang.String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

  /**
   * Records the history of comments and status changes.
   * @return value or {@code null} for none
   */
  public java.util.List<WorkspaceProposalHistory> getHistory() {
    return history;
  }

  /**
   * Records the history of comments and status changes.
   * @param history history or {@code null} for none
   */
  public WorkspaceProposal setHistory(java.util.List<WorkspaceProposalHistory> history) {
    this.history = history;
    return this;
  }

  /**
   * GTM workspace proposal's relative path.
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * GTM workspace proposal's relative path.
   * @param path path or {@code null} for none
   */
  public WorkspaceProposal setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Lists of reviewers for the workspace proposal.
   * @return value or {@code null} for none
   */
  public java.util.List<WorkspaceProposalUser> getReviewers() {
    return reviewers;
  }

  /**
   * Lists of reviewers for the workspace proposal.
   * @param reviewers reviewers or {@code null} for none
   */
  public WorkspaceProposal setReviewers(java.util.List<WorkspaceProposalUser> reviewers) {
    this.reviewers = reviewers;
    return this;
  }

  /**
   * The status of the workspace proposal as it goes through review.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * The status of the workspace proposal as it goes through review.
   * @param status status or {@code null} for none
   */
  public WorkspaceProposal setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public WorkspaceProposal set(String fieldName, Object value) {
    return (WorkspaceProposal) super.set(fieldName, value);
  }

  @Override
  public WorkspaceProposal clone() {
    return (WorkspaceProposal) super.clone();
  }

}
