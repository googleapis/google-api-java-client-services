/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Config to store data store type configuration for workspace data
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaWorkspaceConfig extends com.google.api.client.json.GenericJson {

  /**
   * Obfuscated Dasher customer ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dasherCustomerId;

  /**
   * Optional. The super admin email address for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String superAdminEmailAddress;

  /**
   * Optional. The super admin service account for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String superAdminServiceAccount;

  /**
   * The Google Workspace data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Obfuscated Dasher customer ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getDasherCustomerId() {
    return dasherCustomerId;
  }

  /**
   * Obfuscated Dasher customer ID.
   * @param dasherCustomerId dasherCustomerId or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig setDasherCustomerId(java.lang.String dasherCustomerId) {
    this.dasherCustomerId = dasherCustomerId;
    return this;
  }

  /**
   * Optional. The super admin email address for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * @return value or {@code null} for none
   */
  public java.lang.String getSuperAdminEmailAddress() {
    return superAdminEmailAddress;
  }

  /**
   * Optional. The super admin email address for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * @param superAdminEmailAddress superAdminEmailAddress or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig setSuperAdminEmailAddress(java.lang.String superAdminEmailAddress) {
    this.superAdminEmailAddress = superAdminEmailAddress;
    return this;
  }

  /**
   * Optional. The super admin service account for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * @return value or {@code null} for none
   */
  public java.lang.String getSuperAdminServiceAccount() {
    return superAdminServiceAccount;
  }

  /**
   * Optional. The super admin service account for the workspace that will be used for access token
   * generation. For now we only use it for Native Google Drive connector data ingestion.
   * @param superAdminServiceAccount superAdminServiceAccount or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig setSuperAdminServiceAccount(java.lang.String superAdminServiceAccount) {
    this.superAdminServiceAccount = superAdminServiceAccount;
    return this;
  }

  /**
   * The Google Workspace data source.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The Google Workspace data source.
   * @param type type or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaWorkspaceConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaWorkspaceConfig clone() {
    return (GoogleCloudDiscoveryengineV1betaWorkspaceConfig) super.clone();
  }

}
