/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.bigtableadmin.v2;

/**
 * Service definition for BigtableAdmin (v2).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/bigtable/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BigtableAdminRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BigtableAdmin extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Cloud Bigtable Admin API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://bigtableadmin.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BigtableAdmin(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BigtableAdmin(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
   *   {@code BigtableAdmin.Operations.List request = bigtableadmin.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
     * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
     * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
     * methods to check whether the cancellation succeeded or whether the operation completed despite
     * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
     * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
     * `Code.CANCELLED`.
     *
     * Create a request for the method "operations.cancel".
     *
     * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
     * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be cancelled.
     * @return the request
     */
    public Cancel cancel(java.lang.String name) throws java.io.IOException {
      Cancel result = new Cancel(name);
      initialize(result);
      return result;
    }

    public class Cancel extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

      private static final String REST_PATH = "v2/{+name}:cancel";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
       * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
       * other methods to check whether the cancellation succeeded or whether the operation completed
       * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
       * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
       * corresponding to `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the the bigtableadmin server.  After setting any
       * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       * <p> {@link
       * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be cancelled.
       * @since 1.13
       */
      protected Cancel(java.lang.String name) {
        super(BigtableAdmin.this, "POST", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Cancel set$Xgafv(java.lang.String $Xgafv) {
        return (Cancel) super.set$Xgafv($Xgafv);
      }

      @Override
      public Cancel setAccessToken(java.lang.String accessToken) {
        return (Cancel) super.setAccessToken(accessToken);
      }

      @Override
      public Cancel setAlt(java.lang.String alt) {
        return (Cancel) super.setAlt(alt);
      }

      @Override
      public Cancel setCallback(java.lang.String callback) {
        return (Cancel) super.setCallback(callback);
      }

      @Override
      public Cancel setFields(java.lang.String fields) {
        return (Cancel) super.setFields(fields);
      }

      @Override
      public Cancel setKey(java.lang.String key) {
        return (Cancel) super.setKey(key);
      }

      @Override
      public Cancel setOauthToken(java.lang.String oauthToken) {
        return (Cancel) super.setOauthToken(oauthToken);
      }

      @Override
      public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Cancel) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Cancel setQuotaUser(java.lang.String quotaUser) {
        return (Cancel) super.setQuotaUser(quotaUser);
      }

      @Override
      public Cancel setUploadType(java.lang.String uploadType) {
        return (Cancel) super.setUploadType(uploadType);
      }

      @Override
      public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
        return (Cancel) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be cancelled. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be cancelled.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be cancelled. */
      public Cancel setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Cancel set(String parameterName, Object value) {
        return (Cancel) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested
     * in the operation result. It does not cancel the operation. If the server doesn't support this
     * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     *
     * Create a request for the method "operations.delete".
     *
     * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource to be deleted.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the the bigtableadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource to be deleted.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(BigtableAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource to be deleted. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource to be deleted.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource to be deleted. */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets the latest state of a long-running operation.  Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the bigtableadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Projects collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
     *   {@code BigtableAdmin.Projects.List request = bigtableadmin.projects().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Projects projects() {
      return new Projects();
    }

    /**
     * The "projects" collection of methods.
     */
    public class Projects {

      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
       *   {@code BigtableAdmin.Operations.List request = bigtableadmin.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding to use different resource
         * name schemes, such as `users/operations`. To override the binding, API services can add a binding
         * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
         * compatibility, the default name includes the operations collection id, however overriding users
         * must ensure the name binding is the parent resource, without the operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.ListOperationsResponse> {

          private static final String REST_PATH = "v2/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^operations/projects/.+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * NOTE: the `name` binding allows API services to override the binding to use different resource
           * name schemes, such as `users/operations`. To override the binding, API services can add a
           * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
           * compatibility, the default name includes the operations collection id, however overriding users
           * must ensure the name binding is the parent resource, without the operations collection id.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.ListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^operations/projects/.+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^operations/projects/.+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
   *   {@code BigtableAdmin.Projects.List request = bigtableadmin.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Instances collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
     *   {@code BigtableAdmin.Instances.List request = bigtableadmin.instances().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Instances instances() {
      return new Instances();
    }

    /**
     * The "instances" collection of methods.
     */
    public class Instances {

      /**
       * Create an instance within a project.
       *
       * Create a request for the method "instances.create".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent The unique name of the project in which to create the new instance.
      Values are of the form
       *        `projects/`.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CreateInstanceRequest}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.CreateInstanceRequest content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

        private static final String REST_PATH = "v2/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Create an instance within a project.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The unique name of the project in which to create the new instance.
      Values are of the form
       *        `projects/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CreateInstanceRequest}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.CreateInstanceRequest content) {
          super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Operation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique name of the project in which to create the new instance. Values are of the
         * form `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The unique name of the project in which to create the new instance. Values are of the form
       `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The unique name of the project in which to create the new instance. Values are of the
         * form `projects/`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete an instance from a project.
       *
       * Create a request for the method "instances.delete".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The unique name of the instance to be deleted.
      Values are of the form `projects//instances/`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Delete an instance from a project.
         *
         * Create a request for the method "instances.delete".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique name of the instance to be deleted.
      Values are of the form `projects//instances/`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(BigtableAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique name of the instance to be deleted. Values are of the form
         * `projects//instances/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique name of the instance to be deleted. Values are of the form `projects//instances/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The unique name of the instance to be deleted. Values are of the form
         * `projects//instances/`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about an instance.
       *
       * Create a request for the method "instances.get".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The unique name of the requested instance. Values are of the form
      `projects//instances/`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Instance> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Gets information about an instance.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The unique name of the requested instance. Values are of the form
      `projects//instances/`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Instance.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique name of the requested instance. Values are of the form `projects//instances/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The unique name of the requested instance. Values are of the form `projects//instances/`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The unique name of the requested instance. Values are of the form `projects//instances/`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the access control policy for an instance resource. Returns an empty policy if an instance
       * exists but does not have a policy set.
       *
       * Create a request for the method "instances.getIamPolicy".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.GetIamPolicyRequest}
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.GetIamPolicyRequest content) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Policy> {

        private static final String REST_PATH = "v2/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Gets the access control policy for an instance resource. Returns an empty policy if an instance
         * exists but does not have a policy set.
         *
         * Create a request for the method "instances.getIamPolicy".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.GetIamPolicyRequest}
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.GetIamPolicyRequest content) {
          super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about instances in a project.
       *
       * Create a request for the method "instances.list".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The unique name of the project for which a list of instances is requested.
      Values are of the form
       *        `projects/`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.ListInstancesResponse> {

        private static final String REST_PATH = "v2/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about instances in a project.
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The unique name of the project for which a list of instances is requested.
      Values are of the form
       *        `projects/`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.ListInstancesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The unique name of the project for which a list of instances is requested. Values are of
         * the form `projects/`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The unique name of the project for which a list of instances is requested. Values are of the form
       `projects/`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The unique name of the project for which a list of instances is requested. Values are of
         * the form `projects/`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** DEPRECATED: This field is unused and ignored. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** DEPRECATED: This field is unused and ignored.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** DEPRECATED: This field is unused and ignored. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Partially updates an instance within a project. This method can modify all fields of an Instance
       * and is the preferred way to update an Instance.
       *
       * Create a request for the method "instances.partialUpdateInstance".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link PartialUpdateInstance#execute()} method to invoke the remote
       * operation.
       *
       * @param name (`OutputOnly`)
      The unique name of the instance. Values are of the form
       *        `projects//instances/a-z+[a-z0-9]`.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Instance}
       * @return the request
       */
      public PartialUpdateInstance partialUpdateInstance(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Instance content) throws java.io.IOException {
        PartialUpdateInstance result = new PartialUpdateInstance(name, content);
        initialize(result);
        return result;
      }

      public class PartialUpdateInstance extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Partially updates an instance within a project. This method can modify all fields of an
         * Instance and is the preferred way to update an Instance.
         *
         * Create a request for the method "instances.partialUpdateInstance".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link PartialUpdateInstance#execute()} method to invoke the
         * remote operation. <p> {@link PartialUpdateInstance#initialize(com.google.api.client.googleapis.
         * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name (`OutputOnly`)
      The unique name of the instance. Values are of the form
       *        `projects//instances/a-z+[a-z0-9]`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Instance}
         * @since 1.13
         */
        protected PartialUpdateInstance(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Instance content) {
          super(BigtableAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Operation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public PartialUpdateInstance set$Xgafv(java.lang.String $Xgafv) {
          return (PartialUpdateInstance) super.set$Xgafv($Xgafv);
        }

        @Override
        public PartialUpdateInstance setAccessToken(java.lang.String accessToken) {
          return (PartialUpdateInstance) super.setAccessToken(accessToken);
        }

        @Override
        public PartialUpdateInstance setAlt(java.lang.String alt) {
          return (PartialUpdateInstance) super.setAlt(alt);
        }

        @Override
        public PartialUpdateInstance setCallback(java.lang.String callback) {
          return (PartialUpdateInstance) super.setCallback(callback);
        }

        @Override
        public PartialUpdateInstance setFields(java.lang.String fields) {
          return (PartialUpdateInstance) super.setFields(fields);
        }

        @Override
        public PartialUpdateInstance setKey(java.lang.String key) {
          return (PartialUpdateInstance) super.setKey(key);
        }

        @Override
        public PartialUpdateInstance setOauthToken(java.lang.String oauthToken) {
          return (PartialUpdateInstance) super.setOauthToken(oauthToken);
        }

        @Override
        public PartialUpdateInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (PartialUpdateInstance) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public PartialUpdateInstance setQuotaUser(java.lang.String quotaUser) {
          return (PartialUpdateInstance) super.setQuotaUser(quotaUser);
        }

        @Override
        public PartialUpdateInstance setUploadType(java.lang.String uploadType) {
          return (PartialUpdateInstance) super.setUploadType(uploadType);
        }

        @Override
        public PartialUpdateInstance setUploadProtocol(java.lang.String uploadProtocol) {
          return (PartialUpdateInstance) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * (`OutputOnly`) The unique name of the instance. Values are of the form
         * `projects//instances/a-z+[a-z0-9]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**(` OutputOnly`) The unique name of the instance. Values are of the form
      (` `projects//instances/a-z+[a-z0-9]`.
      (`

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * (`OutputOnly`) The unique name of the instance. Values are of the form
         * `projects//instances/a-z+[a-z0-9]`.
         */
        public PartialUpdateInstance setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The subset of Instance fields which should be replaced. Must be explicitly set.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The subset of Instance fields which should be replaced. Must be explicitly set.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * The subset of Instance fields which should be replaced. Must be explicitly set.
         */
        public PartialUpdateInstance setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public PartialUpdateInstance set(String parameterName, Object value) {
          return (PartialUpdateInstance) super.set(parameterName, value);
        }
      }
      /**
       * Sets the access control policy on an instance resource. Replaces any existing policy.
       *
       * Create a request for the method "instances.setIamPolicy".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Policy> {

        private static final String REST_PATH = "v2/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Sets the access control policy on an instance resource. Replaces any existing policy.
         *
         * Create a request for the method "instances.setIamPolicy".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
         * operation. <p> {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.SetIamPolicyRequest content) {
          super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Returns permissions that the caller has on the specified instance resource.
       *
       * Create a request for the method "instances.testIamPermissions".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsResponse> {

        private static final String REST_PATH = "v2/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Returns permissions that the caller has on the specified instance resource.
         *
         * Create a request for the method "instances.testIamPermissions".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsRequest content) {
          super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See the operation
       documentation for the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }
      /**
       * Updates an instance within a project. This method updates only the display name and type for an
       * Instance. To update other Instance properties, such as labels, use PartialUpdateInstance.
       *
       * Create a request for the method "instances.update".
       *
       * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name (`OutputOnly`)
      The unique name of the instance. Values are of the form
       *        `projects//instances/a-z+[a-z0-9]`.
       * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Instance}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Instance content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Instance> {

        private static final String REST_PATH = "v2/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

        /**
         * Updates an instance within a project. This method updates only the display name and type for an
         * Instance. To update other Instance properties, such as labels, use PartialUpdateInstance.
         *
         * Create a request for the method "instances.update".
         *
         * This request holds the parameters needed by the the bigtableadmin server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name (`OutputOnly`)
      The unique name of the instance. Values are of the form
       *        `projects//instances/a-z+[a-z0-9]`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Instance}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Instance content) {
          super(BigtableAdmin.this, "PUT", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Instance.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * (`OutputOnly`) The unique name of the instance. Values are of the form
         * `projects//instances/a-z+[a-z0-9]`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**(` OutputOnly`) The unique name of the instance. Values are of the form
      (` `projects//instances/a-z+[a-z0-9]`.
      (`

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * (`OutputOnly`) The unique name of the instance. Values are of the form
         * `projects//instances/a-z+[a-z0-9]`.
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the AppProfiles collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
       *   {@code BigtableAdmin.AppProfiles.List request = bigtableadmin.appProfiles().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AppProfiles appProfiles() {
        return new AppProfiles();
      }

      /**
       * The "appProfiles" collection of methods.
       */
      public class AppProfiles {

        /**
         * Creates an app profile within an instance.
         *
         * Create a request for the method "appProfiles.create".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance in which to create the new app profile.
        Values are of the form
         *        `projects//instances/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.AppProfile}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.AppProfile content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.AppProfile> {

          private static final String REST_PATH = "v2/{+parent}/appProfiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Creates an app profile within an instance.
           *
           * Create a request for the method "appProfiles.create".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance in which to create the new app profile.
        Values are of the form
         *        `projects//instances/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.AppProfile}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.AppProfile content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.AppProfile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance in which to create the new app profile. Values are of
           * the form `projects//instances/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance in which to create the new app profile. Values are of the form
         `projects//instances/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance in which to create the new app profile. Values are of
           * the form `projects//instances/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The ID to be used when referring to the new app profile within its instance, e.g., just
           * `myprofile` rather than
           * `projects/myproject/instances/myinstance/appProfiles/myprofile`.
           */
          @com.google.api.client.util.Key
          private java.lang.String appProfileId;

          /** The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile`
         rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`.
           */
          public java.lang.String getAppProfileId() {
            return appProfileId;
          }

          /**
           * The ID to be used when referring to the new app profile within its instance, e.g., just
           * `myprofile` rather than
           * `projects/myproject/instances/myinstance/appProfiles/myprofile`.
           */
          public Create setAppProfileId(java.lang.String appProfileId) {
            this.appProfileId = appProfileId;
            return this;
          }

          /** If true, ignore safety checks when creating the app profile. */
          @com.google.api.client.util.Key
          private java.lang.Boolean ignoreWarnings;

          /** If true, ignore safety checks when creating the app profile.
           */
          public java.lang.Boolean getIgnoreWarnings() {
            return ignoreWarnings;
          }

          /** If true, ignore safety checks when creating the app profile. */
          public Create setIgnoreWarnings(java.lang.Boolean ignoreWarnings) {
            this.ignoreWarnings = ignoreWarnings;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an app profile from an instance.
         *
         * Create a request for the method "appProfiles.delete".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the app profile to be deleted. Values are of the form
         *        `projects//instances//appProfiles/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");

          /**
           * Deletes an app profile from an instance.
           *
           * Create a request for the method "appProfiles.delete".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the app profile to be deleted. Values are of the form
         *        `projects//instances//appProfiles/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigtableAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the app profile to be deleted. Values are of the form
           * `projects//instances//appProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the app profile to be deleted. Values are of the form
         `projects//instances//appProfiles/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the app profile to be deleted. Values are of the form
           * `projects//instances//appProfiles/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** If true, ignore safety checks when deleting the app profile. */
          @com.google.api.client.util.Key
          private java.lang.Boolean ignoreWarnings;

          /** If true, ignore safety checks when deleting the app profile.
           */
          public java.lang.Boolean getIgnoreWarnings() {
            return ignoreWarnings;
          }

          /** If true, ignore safety checks when deleting the app profile. */
          public Delete setIgnoreWarnings(java.lang.Boolean ignoreWarnings) {
            this.ignoreWarnings = ignoreWarnings;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets information about an app profile.
         *
         * Create a request for the method "appProfiles.get".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the requested app profile. Values are of the form
         *        `projects//instances//appProfiles/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.AppProfile> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");

          /**
           * Gets information about an app profile.
           *
           * Create a request for the method "appProfiles.get".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the requested app profile. Values are of the form
         *        `projects//instances//appProfiles/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.AppProfile.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the requested app profile. Values are of the form
           * `projects//instances//appProfiles/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the requested app profile. Values are of the form
         `projects//instances//appProfiles/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the requested app profile. Values are of the form
           * `projects//instances//appProfiles/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists information about app profiles in an instance.
         *
         * Create a request for the method "appProfiles.list".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance for which a list of app profiles is
        requested. Values are of the
         *        form
        `projects//instances/`.
        Use ` = '-'` to list AppProfiles for all Instances in a
         *        project,
        e.g., `projects/myproject/instances/-`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.ListAppProfilesResponse> {

          private static final String REST_PATH = "v2/{+parent}/appProfiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Lists information about app profiles in an instance.
           *
           * Create a request for the method "appProfiles.list".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance for which a list of app profiles is
        requested. Values are of the
         *        form
        `projects//instances/`.
        Use ` = '-'` to list AppProfiles for all Instances in a
         *        project,
        e.g., `projects/myproject/instances/-`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.ListAppProfilesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance for which a list of app profiles is requested. Values
           * are of the form `projects//instances/`. Use ` = '-'` to list AppProfiles for all
           * Instances in a project, e.g., `projects/myproject/instances/-`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance for which a list of app profiles is requested. Values are of the
         form `projects//instances/`. Use ` = '-'` to list AppProfiles for all Instances in a project, e.g.,
         `projects/myproject/instances/-`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance for which a list of app profiles is requested. Values
           * are of the form `projects//instances/`. Use ` = '-'` to list AppProfiles for all
           * Instances in a project, e.g., `projects/myproject/instances/-`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The value of `next_page_token` returned by a previous call. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The value of `next_page_token` returned by a previous call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The value of `next_page_token` returned by a previous call. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an app profile within an instance.
         *
         * Create a request for the method "appProfiles.patch".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name (`OutputOnly`)
        The unique name of the app profile. Values are of the form
         *        `projects//instances//appProfiles/_a-zA-Z0-9*`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.AppProfile}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.AppProfile content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");

          /**
           * Updates an app profile within an instance.
           *
           * Create a request for the method "appProfiles.patch".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name (`OutputOnly`)
        The unique name of the app profile. Values are of the form
         *        `projects//instances//appProfiles/_a-zA-Z0-9*`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.AppProfile}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.AppProfile content) {
            super(BigtableAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * (`OutputOnly`) The unique name of the app profile. Values are of the form
           * `projects//instances//appProfiles/_a-zA-Z0-9*`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**(` OutputOnly`) The unique name of the app profile. Values are of the form
        (` `projects//instances//appProfiles/_a-zA-Z0-9*`.
        (`

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * (`OutputOnly`) The unique name of the app profile. Values are of the form
           * `projects//instances//appProfiles/_a-zA-Z0-9*`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** If true, ignore safety checks when updating the app profile. */
          @com.google.api.client.util.Key
          private java.lang.Boolean ignoreWarnings;

          /** If true, ignore safety checks when updating the app profile.
           */
          public java.lang.Boolean getIgnoreWarnings() {
            return ignoreWarnings;
          }

          /** If true, ignore safety checks when updating the app profile. */
          public Patch setIgnoreWarnings(java.lang.Boolean ignoreWarnings) {
            this.ignoreWarnings = ignoreWarnings;
            return this;
          }

          /**
           * The subset of app profile fields which should be replaced. If unset, all fields will be
           * replaced.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The subset of app profile fields which should be replaced. If unset, all fields will be replaced.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The subset of app profile fields which should be replaced. If unset, all fields will be
           * replaced.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Clusters collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
       *   {@code BigtableAdmin.Clusters.List request = bigtableadmin.clusters().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Clusters clusters() {
        return new Clusters();
      }

      /**
       * The "clusters" collection of methods.
       */
      public class Clusters {

        /**
         * Creates a cluster within an instance.
         *
         * Create a request for the method "clusters.create".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance in which to create the new cluster.
        Values are of the form
         *        `projects//instances/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Cluster}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.Cluster content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+parent}/clusters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Creates a cluster within an instance.
           *
           * Create a request for the method "clusters.create".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance in which to create the new cluster.
        Values are of the form
         *        `projects//instances/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Cluster}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.Cluster content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance in which to create the new cluster. Values are of the
           * form `projects//instances/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance in which to create the new cluster. Values are of the form
         `projects//instances/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance in which to create the new cluster. Values are of the
           * form `projects//instances/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The ID to be used when referring to the new cluster within its instance, e.g., just
           * `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.
           */
          @com.google.api.client.util.Key
          private java.lang.String clusterId;

          /** The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster`
         rather than `projects/myproject/instances/myinstance/clusters/mycluster`.
           */
          public java.lang.String getClusterId() {
            return clusterId;
          }

          /**
           * The ID to be used when referring to the new cluster within its instance, e.g., just
           * `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.
           */
          public Create setClusterId(java.lang.String clusterId) {
            this.clusterId = clusterId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a cluster from an instance.
         *
         * Create a request for the method "clusters.delete".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the cluster to be deleted. Values are of the form
         *        `projects//instances//clusters/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");

          /**
           * Deletes a cluster from an instance.
           *
           * Create a request for the method "clusters.delete".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the cluster to be deleted. Values are of the form
         *        `projects//instances//clusters/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigtableAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the cluster to be deleted. Values are of the form
           * `projects//instances//clusters/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the cluster to be deleted. Values are of the form
         `projects//instances//clusters/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the cluster to be deleted. Values are of the form
           * `projects//instances//clusters/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets information about a cluster.
         *
         * Create a request for the method "clusters.get".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the requested cluster. Values are of the form
        `projects//instances//clusters/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Cluster> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");

          /**
           * Gets information about a cluster.
           *
           * Create a request for the method "clusters.get".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the requested cluster. Values are of the form
        `projects//instances//clusters/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Cluster.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the requested cluster. Values are of the form
           * `projects//instances//clusters/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the requested cluster. Values are of the form `projects//instances//clusters/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the requested cluster. Values are of the form
           * `projects//instances//clusters/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists information about clusters in an instance.
         *
         * Create a request for the method "clusters.list".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance for which a list of clusters is requested.
        Values are of the form
         *        `projects//instances/`.
        Use ` = '-'` to list Clusters for all Instances in a project,
         *        e.g., `projects/myproject/instances/-`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.ListClustersResponse> {

          private static final String REST_PATH = "v2/{+parent}/clusters";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Lists information about clusters in an instance.
           *
           * Create a request for the method "clusters.list".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance for which a list of clusters is requested.
        Values are of the form
         *        `projects//instances/`.
        Use ` = '-'` to list Clusters for all Instances in a project,
         *        e.g., `projects/myproject/instances/-`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.ListClustersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance for which a list of clusters is requested. Values are
           * of the form `projects//instances/`. Use ` = '-'` to list Clusters for all Instances in
           * a project, e.g., `projects/myproject/instances/-`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance for which a list of clusters is requested. Values are of the form
         `projects//instances/`. Use ` = '-'` to list Clusters for all Instances in a project, e.g.,
         `projects/myproject/instances/-`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance for which a list of clusters is requested. Values are
           * of the form `projects//instances/`. Use ` = '-'` to list Clusters for all Instances in
           * a project, e.g., `projects/myproject/instances/-`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** DEPRECATED: This field is unused and ignored. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** DEPRECATED: This field is unused and ignored.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** DEPRECATED: This field is unused and ignored. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a cluster within an instance.
         *
         * Create a request for the method "clusters.update".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name (`OutputOnly`)
        The unique name of the cluster. Values are of the form
         *        `projects//instances//clusters/a-z*`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Cluster}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Cluster content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Operation> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");

          /**
           * Updates a cluster within an instance.
           *
           * Create a request for the method "clusters.update".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name (`OutputOnly`)
        The unique name of the cluster. Values are of the form
         *        `projects//instances//clusters/a-z*`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.Cluster}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.Cluster content) {
            super(BigtableAdmin.this, "PUT", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Operation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * (`OutputOnly`) The unique name of the cluster. Values are of the form
           * `projects//instances//clusters/a-z*`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**(` OutputOnly`) The unique name of the cluster. Values are of the form
        (` `projects//instances//clusters/a-z*`.
        (`

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * (`OutputOnly`) The unique name of the cluster. Values are of the form
           * `projects//instances//clusters/a-z*`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Tables collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BigtableAdmin bigtableadmin = new BigtableAdmin(...);}
       *   {@code BigtableAdmin.Tables.List request = bigtableadmin.tables().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Tables tables() {
        return new Tables();
      }

      /**
       * The "tables" collection of methods.
       */
      public class Tables {

        /**
         * Checks replication consistency based on a consistency token, that is, if replication has caught
         * up based on the conditions specified in the token and the check request.
         *
         * Create a request for the method "tables.checkConsistency".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link CheckConsistency#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the Table for which to check replication consistency.
        Values are of the form
         *        `projects//instances//tables/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CheckConsistencyRequest}
         * @return the request
         */
        public CheckConsistency checkConsistency(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.CheckConsistencyRequest content) throws java.io.IOException {
          CheckConsistency result = new CheckConsistency(name, content);
          initialize(result);
          return result;
        }

        public class CheckConsistency extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.CheckConsistencyResponse> {

          private static final String REST_PATH = "v2/{+name}:checkConsistency";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Checks replication consistency based on a consistency token, that is, if replication has caught
           * up based on the conditions specified in the token and the check request.
           *
           * Create a request for the method "tables.checkConsistency".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link CheckConsistency#execute()} method to invoke the remote
           * operation. <p> {@link CheckConsistency#initialize(com.google.api.client.googleapis.services.Abs
           * tractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name The unique name of the Table for which to check replication consistency.
        Values are of the form
         *        `projects//instances//tables/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CheckConsistencyRequest}
           * @since 1.13
           */
          protected CheckConsistency(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.CheckConsistencyRequest content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.CheckConsistencyResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public CheckConsistency set$Xgafv(java.lang.String $Xgafv) {
            return (CheckConsistency) super.set$Xgafv($Xgafv);
          }

          @Override
          public CheckConsistency setAccessToken(java.lang.String accessToken) {
            return (CheckConsistency) super.setAccessToken(accessToken);
          }

          @Override
          public CheckConsistency setAlt(java.lang.String alt) {
            return (CheckConsistency) super.setAlt(alt);
          }

          @Override
          public CheckConsistency setCallback(java.lang.String callback) {
            return (CheckConsistency) super.setCallback(callback);
          }

          @Override
          public CheckConsistency setFields(java.lang.String fields) {
            return (CheckConsistency) super.setFields(fields);
          }

          @Override
          public CheckConsistency setKey(java.lang.String key) {
            return (CheckConsistency) super.setKey(key);
          }

          @Override
          public CheckConsistency setOauthToken(java.lang.String oauthToken) {
            return (CheckConsistency) super.setOauthToken(oauthToken);
          }

          @Override
          public CheckConsistency setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CheckConsistency) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CheckConsistency setQuotaUser(java.lang.String quotaUser) {
            return (CheckConsistency) super.setQuotaUser(quotaUser);
          }

          @Override
          public CheckConsistency setUploadType(java.lang.String uploadType) {
            return (CheckConsistency) super.setUploadType(uploadType);
          }

          @Override
          public CheckConsistency setUploadProtocol(java.lang.String uploadProtocol) {
            return (CheckConsistency) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the Table for which to check replication consistency. Values are of
           * the form `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the Table for which to check replication consistency. Values are of the form
         `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the Table for which to check replication consistency. Values are of
           * the form `projects//instances//tables/`.
           */
          public CheckConsistency setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public CheckConsistency set(String parameterName, Object value) {
            return (CheckConsistency) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new table in the specified instance. The table can be created with a full set of
         * initial column families, specified in the request.
         *
         * Create a request for the method "tables.create".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance in which to create the table.
        Values are of the form
         *        `projects//instances/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CreateTableRequest}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.CreateTableRequest content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Table> {

          private static final String REST_PATH = "v2/{+parent}/tables";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Creates a new table in the specified instance. The table can be created with a full set of
           * initial column families, specified in the request.
           *
           * Create a request for the method "tables.create".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance in which to create the table.
        Values are of the form
         *        `projects//instances/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.CreateTableRequest}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.bigtableadmin.v2.model.CreateTableRequest content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Table.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance in which to create the table. Values are of the form
           * `projects//instances/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance in which to create the table. Values are of the form
         `projects//instances/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance in which to create the table. Values are of the form
           * `projects//instances/`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Permanently deletes a specified table and all of its data.
         *
         * Create a request for the method "tables.delete".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the table to be deleted.
        Values are of the form
        `projects//instances//tables/`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Permanently deletes a specified table and all of its data.
           *
           * Create a request for the method "tables.delete".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the table to be deleted.
        Values are of the form
        `projects//instances//tables/`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BigtableAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the table to be deleted. Values are of the form
           * `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the table to be deleted. Values are of the form `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the table to be deleted. Values are of the form
           * `projects//instances//tables/`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Permanently drop/delete a row range from a specified table. The request can specify whether to
         * delete all rows in a table, or only those that match a particular prefix.
         *
         * Create a request for the method "tables.dropRowRange".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link DropRowRange#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the table on which to drop a range of rows.
        Values are of the form
         *        `projects//instances//tables/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.DropRowRangeRequest}
         * @return the request
         */
        public DropRowRange dropRowRange(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.DropRowRangeRequest content) throws java.io.IOException {
          DropRowRange result = new DropRowRange(name, content);
          initialize(result);
          return result;
        }

        public class DropRowRange extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Empty> {

          private static final String REST_PATH = "v2/{+name}:dropRowRange";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Permanently drop/delete a row range from a specified table. The request can specify whether to
           * delete all rows in a table, or only those that match a particular prefix.
           *
           * Create a request for the method "tables.dropRowRange".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link DropRowRange#execute()} method to invoke the remote
           * operation. <p> {@link
           * DropRowRange#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the table on which to drop a range of rows.
        Values are of the form
         *        `projects//instances//tables/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.DropRowRangeRequest}
           * @since 1.13
           */
          protected DropRowRange(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.DropRowRangeRequest content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public DropRowRange set$Xgafv(java.lang.String $Xgafv) {
            return (DropRowRange) super.set$Xgafv($Xgafv);
          }

          @Override
          public DropRowRange setAccessToken(java.lang.String accessToken) {
            return (DropRowRange) super.setAccessToken(accessToken);
          }

          @Override
          public DropRowRange setAlt(java.lang.String alt) {
            return (DropRowRange) super.setAlt(alt);
          }

          @Override
          public DropRowRange setCallback(java.lang.String callback) {
            return (DropRowRange) super.setCallback(callback);
          }

          @Override
          public DropRowRange setFields(java.lang.String fields) {
            return (DropRowRange) super.setFields(fields);
          }

          @Override
          public DropRowRange setKey(java.lang.String key) {
            return (DropRowRange) super.setKey(key);
          }

          @Override
          public DropRowRange setOauthToken(java.lang.String oauthToken) {
            return (DropRowRange) super.setOauthToken(oauthToken);
          }

          @Override
          public DropRowRange setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DropRowRange) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DropRowRange setQuotaUser(java.lang.String quotaUser) {
            return (DropRowRange) super.setQuotaUser(quotaUser);
          }

          @Override
          public DropRowRange setUploadType(java.lang.String uploadType) {
            return (DropRowRange) super.setUploadType(uploadType);
          }

          @Override
          public DropRowRange setUploadProtocol(java.lang.String uploadProtocol) {
            return (DropRowRange) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the table on which to drop a range of rows. Values are of the form
           * `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the table on which to drop a range of rows. Values are of the form
         `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the table on which to drop a range of rows. Values are of the form
           * `projects//instances//tables/`.
           */
          public DropRowRange setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DropRowRange set(String parameterName, Object value) {
            return (DropRowRange) super.set(parameterName, value);
          }
        }
        /**
         * Generates a consistency token for a Table, which can be used in CheckConsistency to check whether
         * mutations to the table that finished before this call started have been replicated. The tokens
         * will be available for 90 days.
         *
         * Create a request for the method "tables.generateConsistencyToken".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link GenerateConsistencyToken#execute()} method to invoke the remote
         * operation.
         *
         * @param name The unique name of the Table for which to create a consistency token.
        Values are of the form
         *        `projects//instances//tables/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenRequest}
         * @return the request
         */
        public GenerateConsistencyToken generateConsistencyToken(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenRequest content) throws java.io.IOException {
          GenerateConsistencyToken result = new GenerateConsistencyToken(name, content);
          initialize(result);
          return result;
        }

        public class GenerateConsistencyToken extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenResponse> {

          private static final String REST_PATH = "v2/{+name}:generateConsistencyToken";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Generates a consistency token for a Table, which can be used in CheckConsistency to check
           * whether mutations to the table that finished before this call started have been replicated. The
           * tokens will be available for 90 days.
           *
           * Create a request for the method "tables.generateConsistencyToken".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link GenerateConsistencyToken#execute()} method to invoke the
           * remote operation. <p> {@link GenerateConsistencyToken#initialize(com.google.api.client.googleap
           * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
           * immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the Table for which to create a consistency token.
        Values are of the form
         *        `projects//instances//tables/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenRequest}
           * @since 1.13
           */
          protected GenerateConsistencyToken(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenRequest content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.GenerateConsistencyTokenResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public GenerateConsistencyToken set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateConsistencyToken) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateConsistencyToken setAccessToken(java.lang.String accessToken) {
            return (GenerateConsistencyToken) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateConsistencyToken setAlt(java.lang.String alt) {
            return (GenerateConsistencyToken) super.setAlt(alt);
          }

          @Override
          public GenerateConsistencyToken setCallback(java.lang.String callback) {
            return (GenerateConsistencyToken) super.setCallback(callback);
          }

          @Override
          public GenerateConsistencyToken setFields(java.lang.String fields) {
            return (GenerateConsistencyToken) super.setFields(fields);
          }

          @Override
          public GenerateConsistencyToken setKey(java.lang.String key) {
            return (GenerateConsistencyToken) super.setKey(key);
          }

          @Override
          public GenerateConsistencyToken setOauthToken(java.lang.String oauthToken) {
            return (GenerateConsistencyToken) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateConsistencyToken setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateConsistencyToken) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateConsistencyToken setQuotaUser(java.lang.String quotaUser) {
            return (GenerateConsistencyToken) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateConsistencyToken setUploadType(java.lang.String uploadType) {
            return (GenerateConsistencyToken) super.setUploadType(uploadType);
          }

          @Override
          public GenerateConsistencyToken setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateConsistencyToken) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the Table for which to create a consistency token. Values are of the
           * form `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the Table for which to create a consistency token. Values are of the form
         `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the Table for which to create a consistency token. Values are of the
           * form `projects//instances//tables/`.
           */
          public GenerateConsistencyToken setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GenerateConsistencyToken set(String parameterName, Object value) {
            return (GenerateConsistencyToken) super.set(parameterName, value);
          }
        }
        /**
         * Gets metadata information about the specified table.
         *
         * Create a request for the method "tables.get".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The unique name of the requested table.
        Values are of the form
        `projects//instances//tables/`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Table> {

          private static final String REST_PATH = "v2/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Gets metadata information about the specified table.
           *
           * Create a request for the method "tables.get".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The unique name of the requested table.
        Values are of the form
        `projects//instances//tables/`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.Table.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the requested table. Values are of the form
           * `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the requested table. Values are of the form `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the requested table. Values are of the form
           * `projects//instances//tables/`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The view to be applied to the returned table's fields. Defaults to `SCHEMA_VIEW` if
           * unspecified.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** The view to be applied to the returned table's fields. Defaults to `SCHEMA_VIEW` if unspecified.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * The view to be applied to the returned table's fields. Defaults to `SCHEMA_VIEW` if
           * unspecified.
           */
          public Get setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all tables served from a specified instance.
         *
         * Create a request for the method "tables.list".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The unique name of the instance for which tables should be listed.
        Values are of the form
         *        `projects//instances/`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.ListTablesResponse> {

          private static final String REST_PATH = "v2/{+parent}/tables";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+$");

          /**
           * Lists all tables served from a specified instance.
           *
           * Create a request for the method "tables.list".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The unique name of the instance for which tables should be listed.
        Values are of the form
         *        `projects//instances/`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BigtableAdmin.this, "GET", REST_PATH, null, com.google.api.services.bigtableadmin.v2.model.ListTablesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the instance for which tables should be listed. Values are of the
           * form `projects//instances/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The unique name of the instance for which tables should be listed. Values are of the form
         `projects//instances/`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The unique name of the instance for which tables should be listed. Values are of the
           * form `projects//instances/`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of results per page. CURRENTLY UNIMPLEMENTED AND IGNORED.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The value of `next_page_token` returned by a previous call. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The value of `next_page_token` returned by a previous call.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The value of `next_page_token` returned by a previous call. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /**
           * The view to be applied to the returned tables' fields. Defaults to `NAME_ONLY` if
           * unspecified; no others are currently supported.
           */
          @com.google.api.client.util.Key
          private java.lang.String view;

          /** The view to be applied to the returned tables' fields. Defaults to `NAME_ONLY` if unspecified; no
         others are currently supported.
           */
          public java.lang.String getView() {
            return view;
          }

          /**
           * The view to be applied to the returned tables' fields. Defaults to `NAME_ONLY` if
           * unspecified; no others are currently supported.
           */
          public List setView(java.lang.String view) {
            this.view = view;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Performs a series of column family modifications on the specified table. Either all or none of
         * the modifications will occur before this method returns, but data requests received prior to that
         * point may see a table where only some modifications have taken effect.
         *
         * Create a request for the method "tables.modifyColumnFamilies".
         *
         * This request holds the parameters needed by the bigtableadmin server.  After setting any optional
         * parameters, call the {@link ModifyColumnFamilies#execute()} method to invoke the remote
         * operation.
         *
         * @param name The unique name of the table whose families should be modified.
        Values are of the form
         *        `projects//instances//tables/`.
         * @param content the {@link com.google.api.services.bigtableadmin.v2.model.ModifyColumnFamiliesRequest}
         * @return the request
         */
        public ModifyColumnFamilies modifyColumnFamilies(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.ModifyColumnFamiliesRequest content) throws java.io.IOException {
          ModifyColumnFamilies result = new ModifyColumnFamilies(name, content);
          initialize(result);
          return result;
        }

        public class ModifyColumnFamilies extends BigtableAdminRequest<com.google.api.services.bigtableadmin.v2.model.Table> {

          private static final String REST_PATH = "v2/{+name}:modifyColumnFamilies";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/instances/[^/]+/tables/[^/]+$");

          /**
           * Performs a series of column family modifications on the specified table. Either all or none of
           * the modifications will occur before this method returns, but data requests received prior to
           * that point may see a table where only some modifications have taken effect.
           *
           * Create a request for the method "tables.modifyColumnFamilies".
           *
           * This request holds the parameters needed by the the bigtableadmin server.  After setting any
           * optional parameters, call the {@link ModifyColumnFamilies#execute()} method to invoke the
           * remote operation. <p> {@link ModifyColumnFamilies#initialize(com.google.api.client.googleapis.s
           * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name The unique name of the table whose families should be modified.
        Values are of the form
         *        `projects//instances//tables/`.
           * @param content the {@link com.google.api.services.bigtableadmin.v2.model.ModifyColumnFamiliesRequest}
           * @since 1.13
           */
          protected ModifyColumnFamilies(java.lang.String name, com.google.api.services.bigtableadmin.v2.model.ModifyColumnFamiliesRequest content) {
            super(BigtableAdmin.this, "POST", REST_PATH, content, com.google.api.services.bigtableadmin.v2.model.Table.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
          }

          @Override
          public ModifyColumnFamilies set$Xgafv(java.lang.String $Xgafv) {
            return (ModifyColumnFamilies) super.set$Xgafv($Xgafv);
          }

          @Override
          public ModifyColumnFamilies setAccessToken(java.lang.String accessToken) {
            return (ModifyColumnFamilies) super.setAccessToken(accessToken);
          }

          @Override
          public ModifyColumnFamilies setAlt(java.lang.String alt) {
            return (ModifyColumnFamilies) super.setAlt(alt);
          }

          @Override
          public ModifyColumnFamilies setCallback(java.lang.String callback) {
            return (ModifyColumnFamilies) super.setCallback(callback);
          }

          @Override
          public ModifyColumnFamilies setFields(java.lang.String fields) {
            return (ModifyColumnFamilies) super.setFields(fields);
          }

          @Override
          public ModifyColumnFamilies setKey(java.lang.String key) {
            return (ModifyColumnFamilies) super.setKey(key);
          }

          @Override
          public ModifyColumnFamilies setOauthToken(java.lang.String oauthToken) {
            return (ModifyColumnFamilies) super.setOauthToken(oauthToken);
          }

          @Override
          public ModifyColumnFamilies setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ModifyColumnFamilies) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ModifyColumnFamilies setQuotaUser(java.lang.String quotaUser) {
            return (ModifyColumnFamilies) super.setQuotaUser(quotaUser);
          }

          @Override
          public ModifyColumnFamilies setUploadType(java.lang.String uploadType) {
            return (ModifyColumnFamilies) super.setUploadType(uploadType);
          }

          @Override
          public ModifyColumnFamilies setUploadProtocol(java.lang.String uploadProtocol) {
            return (ModifyColumnFamilies) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The unique name of the table whose families should be modified. Values are of the form
           * `projects//instances//tables/`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The unique name of the table whose families should be modified. Values are of the form
         `projects//instances//tables/`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The unique name of the table whose families should be modified. Values are of the form
           * `projects//instances//tables/`.
           */
          public ModifyColumnFamilies setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/instances/[^/]+/tables/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ModifyColumnFamilies set(String parameterName, Object value) {
            return (ModifyColumnFamilies) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link BigtableAdmin}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link BigtableAdmin}. */
    @Override
    public BigtableAdmin build() {
      return new BigtableAdmin(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BigtableAdminRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBigtableAdminRequestInitializer(
        BigtableAdminRequestInitializer bigtableadminRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(bigtableadminRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
