/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Shipping service.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Service extends com.google.api.client.json.GenericJson {

  /**
   * Required. A boolean exposing the active status of the shipping service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean active;

  /**
   * The CLDR code of the currency to which this service applies. Must match that of the prices in
   * rate groups.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String currencyCode;

  /**
   * Required. The CLDR territory code of the countries to which the service applies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> deliveryCountries;

  /**
   * Required. Time spent in various aspects from order to the delivery of the product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DeliveryTime deliveryTime;

  /**
   * Optional. Loyalty programs that this shipping service is limited to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<LoyaltyProgram> loyaltyPrograms;

  static {
    // hack to force ProGuard to consider LoyaltyProgram used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(LoyaltyProgram.class);
  }

  /**
   * Minimum order value for this service. If set, indicates that customers will have to spend at
   * least this amount. All prices within a service must have the same currency. Cannot be set
   * together with minimum_order_value_table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price minimumOrderValue;

  /**
   * Table of per store minimum order values for the pickup fulfillment type. Cannot be set together
   * with minimum_order_value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MinimumOrderValueTable minimumOrderValueTable;

  /**
   * Optional. Shipping rate group definitions. Only the last one is allowed to have an empty
   * `applicable_shipping_labels`, which means "everything else". The other
   * `applicable_shipping_labels` must not overlap.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RateGroup> rateGroups;

  static {
    // hack to force ProGuard to consider RateGroup used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RateGroup.class);
  }

  /**
   * Required. Free-form name of the service. Must be unique within target account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceName;

  /**
   * Type of locations this service ships orders to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shipmentType;

  /**
   * A list of stores your products are delivered from. This is only valid for the local delivery
   * shipment type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StoreConfig storeConfig;

  /**
   * Required. A boolean exposing the active status of the shipping service.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Required. A boolean exposing the active status of the shipping service.
   * @param active active or {@code null} for none
   */
  public Service setActive(java.lang.Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * The CLDR code of the currency to which this service applies. Must match that of the prices in
   * rate groups.
   * @return value or {@code null} for none
   */
  public java.lang.String getCurrencyCode() {
    return currencyCode;
  }

  /**
   * The CLDR code of the currency to which this service applies. Must match that of the prices in
   * rate groups.
   * @param currencyCode currencyCode or {@code null} for none
   */
  public Service setCurrencyCode(java.lang.String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Required. The CLDR territory code of the countries to which the service applies.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDeliveryCountries() {
    return deliveryCountries;
  }

  /**
   * Required. The CLDR territory code of the countries to which the service applies.
   * @param deliveryCountries deliveryCountries or {@code null} for none
   */
  public Service setDeliveryCountries(java.util.List<java.lang.String> deliveryCountries) {
    this.deliveryCountries = deliveryCountries;
    return this;
  }

  /**
   * Required. Time spent in various aspects from order to the delivery of the product.
   * @return value or {@code null} for none
   */
  public DeliveryTime getDeliveryTime() {
    return deliveryTime;
  }

  /**
   * Required. Time spent in various aspects from order to the delivery of the product.
   * @param deliveryTime deliveryTime or {@code null} for none
   */
  public Service setDeliveryTime(DeliveryTime deliveryTime) {
    this.deliveryTime = deliveryTime;
    return this;
  }

  /**
   * Optional. Loyalty programs that this shipping service is limited to.
   * @return value or {@code null} for none
   */
  public java.util.List<LoyaltyProgram> getLoyaltyPrograms() {
    return loyaltyPrograms;
  }

  /**
   * Optional. Loyalty programs that this shipping service is limited to.
   * @param loyaltyPrograms loyaltyPrograms or {@code null} for none
   */
  public Service setLoyaltyPrograms(java.util.List<LoyaltyProgram> loyaltyPrograms) {
    this.loyaltyPrograms = loyaltyPrograms;
    return this;
  }

  /**
   * Minimum order value for this service. If set, indicates that customers will have to spend at
   * least this amount. All prices within a service must have the same currency. Cannot be set
   * together with minimum_order_value_table.
   * @return value or {@code null} for none
   */
  public Price getMinimumOrderValue() {
    return minimumOrderValue;
  }

  /**
   * Minimum order value for this service. If set, indicates that customers will have to spend at
   * least this amount. All prices within a service must have the same currency. Cannot be set
   * together with minimum_order_value_table.
   * @param minimumOrderValue minimumOrderValue or {@code null} for none
   */
  public Service setMinimumOrderValue(Price minimumOrderValue) {
    this.minimumOrderValue = minimumOrderValue;
    return this;
  }

  /**
   * Table of per store minimum order values for the pickup fulfillment type. Cannot be set together
   * with minimum_order_value.
   * @return value or {@code null} for none
   */
  public MinimumOrderValueTable getMinimumOrderValueTable() {
    return minimumOrderValueTable;
  }

  /**
   * Table of per store minimum order values for the pickup fulfillment type. Cannot be set together
   * with minimum_order_value.
   * @param minimumOrderValueTable minimumOrderValueTable or {@code null} for none
   */
  public Service setMinimumOrderValueTable(MinimumOrderValueTable minimumOrderValueTable) {
    this.minimumOrderValueTable = minimumOrderValueTable;
    return this;
  }

  /**
   * Optional. Shipping rate group definitions. Only the last one is allowed to have an empty
   * `applicable_shipping_labels`, which means "everything else". The other
   * `applicable_shipping_labels` must not overlap.
   * @return value or {@code null} for none
   */
  public java.util.List<RateGroup> getRateGroups() {
    return rateGroups;
  }

  /**
   * Optional. Shipping rate group definitions. Only the last one is allowed to have an empty
   * `applicable_shipping_labels`, which means "everything else". The other
   * `applicable_shipping_labels` must not overlap.
   * @param rateGroups rateGroups or {@code null} for none
   */
  public Service setRateGroups(java.util.List<RateGroup> rateGroups) {
    this.rateGroups = rateGroups;
    return this;
  }

  /**
   * Required. Free-form name of the service. Must be unique within target account.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceName() {
    return serviceName;
  }

  /**
   * Required. Free-form name of the service. Must be unique within target account.
   * @param serviceName serviceName or {@code null} for none
   */
  public Service setServiceName(java.lang.String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Type of locations this service ships orders to.
   * @return value or {@code null} for none
   */
  public java.lang.String getShipmentType() {
    return shipmentType;
  }

  /**
   * Type of locations this service ships orders to.
   * @param shipmentType shipmentType or {@code null} for none
   */
  public Service setShipmentType(java.lang.String shipmentType) {
    this.shipmentType = shipmentType;
    return this;
  }

  /**
   * A list of stores your products are delivered from. This is only valid for the local delivery
   * shipment type.
   * @return value or {@code null} for none
   */
  public StoreConfig getStoreConfig() {
    return storeConfig;
  }

  /**
   * A list of stores your products are delivered from. This is only valid for the local delivery
   * shipment type.
   * @param storeConfig storeConfig or {@code null} for none
   */
  public Service setStoreConfig(StoreConfig storeConfig) {
    this.storeConfig = storeConfig;
    return this;
  }

  @Override
  public Service set(String fieldName, Object value) {
    return (Service) super.set(fieldName, value);
  }

  @Override
  public Service clone() {
    return (Service) super.clone();
  }

}
