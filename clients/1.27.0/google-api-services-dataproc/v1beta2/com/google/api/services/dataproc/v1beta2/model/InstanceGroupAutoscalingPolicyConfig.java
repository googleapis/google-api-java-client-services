/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dataproc.v1beta2.model;

/**
 * Configuration for the size bounds of an instance group, including its proportional size to other
 * groups.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Dataproc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InstanceGroupAutoscalingPolicyConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Maximum number of instances for this group. Required for primary workers. Note that
   * by default, clusters will not use secondary workers. Required for secondary workers if the
   * minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Required.
   * Secondary workers - Bounds: [min_instances, ). Default: 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer maxInstances;

  /**
   * Optional. Minimum number of instances for this group.Primary workers - Bounds: 2,
   * max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minInstances;

  /**
   * Optional. Weight for the instance group, which is used to determine the fraction of total
   * workers in the cluster from this instance group. For example, if primary workers have weight 2,
   * and secondary workers have weight 1, the cluster will have approximately 2 primary workers for
   * each secondary worker.The cluster may not reach the specified balance if constrained by min/max
   * bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0,
   * then only primary workers will be added. The cluster can also be out of balance when created.If
   * weight is not set on any instance group, the cluster will default to equal weight for all
   * groups: the cluster will attempt to maintain an equal number of workers in each group within
   * the configured size bounds for each group. If weight is set for one group only, the cluster
   * will default to zero weight on the unset group. For example if weight is set only on primary
   * workers, the cluster will use primary workers only and no secondary workers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer weight;

  /**
   * Optional. Maximum number of instances for this group. Required for primary workers. Note that
   * by default, clusters will not use secondary workers. Required for secondary workers if the
   * minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Required.
   * Secondary workers - Bounds: [min_instances, ). Default: 0.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMaxInstances() {
    return maxInstances;
  }

  /**
   * Optional. Maximum number of instances for this group. Required for primary workers. Note that
   * by default, clusters will not use secondary workers. Required for secondary workers if the
   * minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Required.
   * Secondary workers - Bounds: [min_instances, ). Default: 0.
   * @param maxInstances maxInstances or {@code null} for none
   */
  public InstanceGroupAutoscalingPolicyConfig setMaxInstances(java.lang.Integer maxInstances) {
    this.maxInstances = maxInstances;
    return this;
  }

  /**
   * Optional. Minimum number of instances for this group.Primary workers - Bounds: 2,
   * max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinInstances() {
    return minInstances;
  }

  /**
   * Optional. Minimum number of instances for this group.Primary workers - Bounds: 2,
   * max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
   * @param minInstances minInstances or {@code null} for none
   */
  public InstanceGroupAutoscalingPolicyConfig setMinInstances(java.lang.Integer minInstances) {
    this.minInstances = minInstances;
    return this;
  }

  /**
   * Optional. Weight for the instance group, which is used to determine the fraction of total
   * workers in the cluster from this instance group. For example, if primary workers have weight 2,
   * and secondary workers have weight 1, the cluster will have approximately 2 primary workers for
   * each secondary worker.The cluster may not reach the specified balance if constrained by min/max
   * bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0,
   * then only primary workers will be added. The cluster can also be out of balance when created.If
   * weight is not set on any instance group, the cluster will default to equal weight for all
   * groups: the cluster will attempt to maintain an equal number of workers in each group within
   * the configured size bounds for each group. If weight is set for one group only, the cluster
   * will default to zero weight on the unset group. For example if weight is set only on primary
   * workers, the cluster will use primary workers only and no secondary workers.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWeight() {
    return weight;
  }

  /**
   * Optional. Weight for the instance group, which is used to determine the fraction of total
   * workers in the cluster from this instance group. For example, if primary workers have weight 2,
   * and secondary workers have weight 1, the cluster will have approximately 2 primary workers for
   * each secondary worker.The cluster may not reach the specified balance if constrained by min/max
   * bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0,
   * then only primary workers will be added. The cluster can also be out of balance when created.If
   * weight is not set on any instance group, the cluster will default to equal weight for all
   * groups: the cluster will attempt to maintain an equal number of workers in each group within
   * the configured size bounds for each group. If weight is set for one group only, the cluster
   * will default to zero weight on the unset group. For example if weight is set only on primary
   * workers, the cluster will use primary workers only and no secondary workers.
   * @param weight weight or {@code null} for none
   */
  public InstanceGroupAutoscalingPolicyConfig setWeight(java.lang.Integer weight) {
    this.weight = weight;
    return this;
  }

  @Override
  public InstanceGroupAutoscalingPolicyConfig set(String fieldName, Object value) {
    return (InstanceGroupAutoscalingPolicyConfig) super.set(fieldName, value);
  }

  @Override
  public InstanceGroupAutoscalingPolicyConfig clone() {
    return (InstanceGroupAutoscalingPolicyConfig) super.clone();
  }

}
