/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1alpha1.model;

/**
 * Instance represents the status of an instance of a Job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InstanceStatus extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Represents time when the instance was completed. It is not guaranteed to be set in
   * happens-before order across separate operations. It is represented in RFC3339 form and is in
   * UTC. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String completionTime;

  /**
   * Optional. The number of times this instance exited with code > 0; +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer failed;

  /**
   * Required. Index of the instance, unique per Job, and beginning at 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer index;

  /**
   * Optional. Result of the last attempt of this instance. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InstanceAttemptResult lastAttemptResult;

  /**
   * Optional. Last exit code seen for this instance. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer lastExitCode;

  /**
   * Optional. The number of times this instance was restarted. Instances are restarted according
   * the restartPolicy configured in the Job template. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer restarted;

  /**
   * Optional. Represents time when the instance was created by the job controller. It is not
   * guaranteed to be set in happens-before order across separate operations. It is represented in
   * RFC3339 form and is in UTC. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Optional. The number of times this instance exited with code == 0. +optional
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer succeeded;

  /**
   * Optional. Represents time when the instance was completed. It is not guaranteed to be set in
   * happens-before order across separate operations. It is represented in RFC3339 form and is in
   * UTC. +optional
   * @return value or {@code null} for none
   */
  public String getCompletionTime() {
    return completionTime;
  }

  /**
   * Optional. Represents time when the instance was completed. It is not guaranteed to be set in
   * happens-before order across separate operations. It is represented in RFC3339 form and is in
   * UTC. +optional
   * @param completionTime completionTime or {@code null} for none
   */
  public InstanceStatus setCompletionTime(String completionTime) {
    this.completionTime = completionTime;
    return this;
  }

  /**
   * Optional. The number of times this instance exited with code > 0; +optional
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFailed() {
    return failed;
  }

  /**
   * Optional. The number of times this instance exited with code > 0; +optional
   * @param failed failed or {@code null} for none
   */
  public InstanceStatus setFailed(java.lang.Integer failed) {
    this.failed = failed;
    return this;
  }

  /**
   * Required. Index of the instance, unique per Job, and beginning at 0.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIndex() {
    return index;
  }

  /**
   * Required. Index of the instance, unique per Job, and beginning at 0.
   * @param index index or {@code null} for none
   */
  public InstanceStatus setIndex(java.lang.Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Optional. Result of the last attempt of this instance. +optional
   * @return value or {@code null} for none
   */
  public InstanceAttemptResult getLastAttemptResult() {
    return lastAttemptResult;
  }

  /**
   * Optional. Result of the last attempt of this instance. +optional
   * @param lastAttemptResult lastAttemptResult or {@code null} for none
   */
  public InstanceStatus setLastAttemptResult(InstanceAttemptResult lastAttemptResult) {
    this.lastAttemptResult = lastAttemptResult;
    return this;
  }

  /**
   * Optional. Last exit code seen for this instance. +optional
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLastExitCode() {
    return lastExitCode;
  }

  /**
   * Optional. Last exit code seen for this instance. +optional
   * @param lastExitCode lastExitCode or {@code null} for none
   */
  public InstanceStatus setLastExitCode(java.lang.Integer lastExitCode) {
    this.lastExitCode = lastExitCode;
    return this;
  }

  /**
   * Optional. The number of times this instance was restarted. Instances are restarted according
   * the restartPolicy configured in the Job template. +optional
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRestarted() {
    return restarted;
  }

  /**
   * Optional. The number of times this instance was restarted. Instances are restarted according
   * the restartPolicy configured in the Job template. +optional
   * @param restarted restarted or {@code null} for none
   */
  public InstanceStatus setRestarted(java.lang.Integer restarted) {
    this.restarted = restarted;
    return this;
  }

  /**
   * Optional. Represents time when the instance was created by the job controller. It is not
   * guaranteed to be set in happens-before order across separate operations. It is represented in
   * RFC3339 form and is in UTC. +optional
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Optional. Represents time when the instance was created by the job controller. It is not
   * guaranteed to be set in happens-before order across separate operations. It is represented in
   * RFC3339 form and is in UTC. +optional
   * @param startTime startTime or {@code null} for none
   */
  public InstanceStatus setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Optional. The number of times this instance exited with code == 0. +optional
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSucceeded() {
    return succeeded;
  }

  /**
   * Optional. The number of times this instance exited with code == 0. +optional
   * @param succeeded succeeded or {@code null} for none
   */
  public InstanceStatus setSucceeded(java.lang.Integer succeeded) {
    this.succeeded = succeeded;
    return this;
  }

  @Override
  public InstanceStatus set(String fieldName, Object value) {
    return (InstanceStatus) super.set(fieldName, value);
  }

  @Override
  public InstanceStatus clone() {
    return (InstanceStatus) super.clone();
  }

}
