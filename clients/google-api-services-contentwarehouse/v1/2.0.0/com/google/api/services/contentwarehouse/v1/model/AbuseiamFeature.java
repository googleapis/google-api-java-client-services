/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AbuseiamFeature.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AbuseiamFeature extends com.google.api.client.json.GenericJson {

  /**
   * Exactly one of the following should be filled in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean booleanValue;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double doubleValue;

  /**
   * Useful for applications that need to know how many times a specific feature occurs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long featureCount;

  /**
   * Useful for timestamps, or for numerical features where it is helpful for decision scripts to
   * have exact values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long int64Value;

  /**
   * integer value field is deprecated and shall only be used for passing the following features
   * hardcoded in spamiam::SpamIAmMessage: spamiam::OrkutSenderId spamiam::OrkutPostnumReports
   * spamiam::BloggerNumComments spamiam::BloggerNumCommentsByOthers Another hard-coded spamiam
   * feature is spamiam::BlogName, which can be specified via string value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer integerValue;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> stringValue;

  /**
   * This field should only be used to store a sequence of timestamps associated with the feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> timestampSequence;

  /**
   * Exactly one of the following should be filled in.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBooleanValue() {
    return booleanValue;
  }

  /**
   * Exactly one of the following should be filled in.
   * @param booleanValue booleanValue or {@code null} for none
   */
  public AbuseiamFeature setBooleanValue(java.lang.Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getDoubleValue() {
    return doubleValue;
  }

  /**
   * @param doubleValue doubleValue or {@code null} for none
   */
  public AbuseiamFeature setDoubleValue(java.lang.Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * Useful for applications that need to know how many times a specific feature occurs
   * @return value or {@code null} for none
   */
  public java.lang.Long getFeatureCount() {
    return featureCount;
  }

  /**
   * Useful for applications that need to know how many times a specific feature occurs
   * @param featureCount featureCount or {@code null} for none
   */
  public AbuseiamFeature setFeatureCount(java.lang.Long featureCount) {
    this.featureCount = featureCount;
    return this;
  }

  /**
   * Useful for timestamps, or for numerical features where it is helpful for decision scripts to
   * have exact values.
   * @return value or {@code null} for none
   */
  public java.lang.Long getInt64Value() {
    return int64Value;
  }

  /**
   * Useful for timestamps, or for numerical features where it is helpful for decision scripts to
   * have exact values.
   * @param int64Value int64Value or {@code null} for none
   */
  public AbuseiamFeature setInt64Value(java.lang.Long int64Value) {
    this.int64Value = int64Value;
    return this;
  }

  /**
   * integer value field is deprecated and shall only be used for passing the following features
   * hardcoded in spamiam::SpamIAmMessage: spamiam::OrkutSenderId spamiam::OrkutPostnumReports
   * spamiam::BloggerNumComments spamiam::BloggerNumCommentsByOthers Another hard-coded spamiam
   * feature is spamiam::BlogName, which can be specified via string value.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIntegerValue() {
    return integerValue;
  }

  /**
   * integer value field is deprecated and shall only be used for passing the following features
   * hardcoded in spamiam::SpamIAmMessage: spamiam::OrkutSenderId spamiam::OrkutPostnumReports
   * spamiam::BloggerNumComments spamiam::BloggerNumCommentsByOthers Another hard-coded spamiam
   * feature is spamiam::BlogName, which can be specified via string value.
   * @param integerValue integerValue or {@code null} for none
   */
  public AbuseiamFeature setIntegerValue(java.lang.Integer integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public AbuseiamFeature setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getStringValue() {
    return stringValue;
  }

  /**
   * @param stringValue stringValue or {@code null} for none
   */
  public AbuseiamFeature setStringValue(java.util.List<java.lang.String> stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * This field should only be used to store a sequence of timestamps associated with the feature.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getTimestampSequence() {
    return timestampSequence;
  }

  /**
   * This field should only be used to store a sequence of timestamps associated with the feature.
   * @param timestampSequence timestampSequence or {@code null} for none
   */
  public AbuseiamFeature setTimestampSequence(java.util.List<java.lang.Long> timestampSequence) {
    this.timestampSequence = timestampSequence;
    return this;
  }

  @Override
  public AbuseiamFeature set(String fieldName, Object value) {
    return (AbuseiamFeature) super.set(fieldName, value);
  }

  @Override
  public AbuseiamFeature clone() {
    return (AbuseiamFeature) super.clone();
  }

}
