{
  "schemas": {
    "Empty": {
      "properties": {},
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "SplitCapacityCommitmentRequest": {
      "type": "object",
      "properties": {
        "slotCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of slots in the capacity commitment after the split."
        }
      },
      "id": "SplitCapacityCommitmentRequest",
      "description": "The request for ReservationService.SplitCapacityCommitment."
    },
    "Reservation": {
      "description": "A reservation is a mechanism used to guarantee slots to users.",
      "id": "Reservation",
      "properties": {
        "slotCapacity": {
          "type": "string",
          "description": "Minimum slots available to this reservation. A slot is a unit of\ncomputational power in BigQuery, and serves as the unit of parallelism.\n\nQueries using this reservation might use more slots during runtime if\nignore_idle_slots is set to false.\n\nIf the new reservation's slot capacity exceed the parent's slot capacity or\nif total slot capacity of the new reservation and its siblings exceeds the\nparent's slot capacity, the request will fail with\n`google.rpc.Code.RESOURCE_EXHAUSTED`.",
          "format": "int64"
        },
        "name": {
          "description": "The resource name of the reservation, e.g.,\n`projects/*/locations/*/reservations/team1-prod`.",
          "type": "string"
        },
        "ignoreIdleSlots": {
          "type": "boolean",
          "description": "If false, any query using this reservation will use idle slots from other\nreservations within the same admin project. If true, a query using this\nreservation will execute with the slot capacity specified above at most."
        }
      },
      "type": "object"
    },
    "SplitCapacityCommitmentResponse": {
      "properties": {
        "first": {
          "description": "First capacity commitment, result of a split.",
          "$ref": "CapacityCommitment"
        },
        "second": {
          "description": "Second capacity commitment, result of a split.",
          "$ref": "CapacityCommitment"
        }
      },
      "type": "object",
      "description": "The response for ReservationService.SplitCapacityCommitment.",
      "id": "SplitCapacityCommitmentResponse"
    },
    "MergeCapacityCommitmentsRequest": {
      "type": "object",
      "properties": {
        "capacityCommitmentIds": {
          "type": "array",
          "description": "Ids of capacity commitments to merge.\nThese capacity commitments must exist under admin project and location\nspecified in the parent.\nID is the last portion of capacity commitment name e.g., 'abc' for\nprojects/myproject/locations/US/capacityCommitments/abc",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "MergeCapacityCommitmentsRequest",
      "description": "The request for ReservationService.MergeCapacityCommitments."
    },
    "CreateSlotPoolMetadata": {
      "type": "object",
      "properties": {
        "slotPool": {
          "description": "Resource name of the slot pool that is being created. E.g.,\nprojects/myproject/locations/us-central1/reservations/foo/slotPools/123",
          "type": "string"
        }
      },
      "id": "CreateSlotPoolMetadata",
      "description": "The metadata for operation returned from\nReservationService.CreateSlotPool."
    },
    "ListReservationsResponse": {
      "type": "object",
      "id": "ListReservationsResponse",
      "description": "The response for ReservationService.ListReservations.",
      "properties": {
        "reservations": {
          "items": {
            "$ref": "Reservation"
          },
          "description": "List of reservations visible to the user.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      }
    },
    "ListAssignmentsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."
        },
        "assignments": {
          "description": "List of assignments visible to the user.",
          "items": {
            "$ref": "Assignment"
          },
          "type": "array"
        }
      },
      "description": "The response for ReservationService.ListAssignments.",
      "id": "ListAssignmentsResponse"
    },
    "BiReservation": {
      "properties": {
        "name": {
          "description": "The resource name of the singleton BI reservation.\nReservation names have the form\n`projects/{project_id}/locations/{location_id}/bireservation`.",
          "type": "string"
        },
        "size": {
          "description": "Size of a reservation, in bytes.",
          "format": "int64",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a reservation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Represents a BI Reservation.",
      "id": "BiReservation",
      "type": "object"
    },
    "CapacityCommitment": {
      "id": "CapacityCommitment",
      "properties": {
        "slotCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of slots in this commitment."
        },
        "renewalPlan": {
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "FLEX",
            "TRIAL",
            "MONTHLY",
            "ANNUAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid plan value. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Flex commitments have committed period of 1 minute after becoming ACTIVE.\nAfter that, they are not in a committed period anymore and can be removed\nany time.",
            "Trial commitments have a committed period of 182 days after becoming\nACTIVE. After that, they are converted to a new commitment based on the\n`renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so\nthat it can be deleted right after committed period ends.",
            "Monthly commitments have a committed period of 30 days after becoming\nACTIVE. After that, they are not in a committed period anymore and can be\nremoved any time.",
            "Annual commitments have a committed period of 365 days after becoming\nACTIVE. After that they are converted to a new commitment based on the\nrenewal_plan."
          ],
          "description": "The plan this capacity commitment is converted to after commitment_end_time\npasses. Once the plan is changed, committed period is extended according to\ncommitment plan. Only applicable for ANNUAL commitments."
        },
        "failureStatus": {
          "$ref": "Status",
          "description": "Output only. For FAILED commitment plan, provides the reason of failure."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the capacity commitment, e.g.,\n`projects/myproject/locations/US/capacityCommitments/123`"
        },
        "state": {
          "enumDescriptions": [
            "Invalid state value.",
            "Capacity commitment is pending provisioning. Pending capacity commitment\ndoes not contribute to the parent's slot_capacity.",
            "Once slots are provisioned, capacity commitment becomes active.\nslot_count is added to the parent's slot_capacity.",
            "Capacity commitment is failed to be activated by the backend."
          ],
          "description": "Output only. State of the commitment.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED"
          ]
        },
        "commitmentEndTime": {
          "format": "google-datetime",
          "description": "Output only. The end of the current commitment period. It is applicable only for ACTIVE\ncapacity commitments.",
          "type": "string"
        },
        "commitmentStartTime": {
          "description": "Output only. The start of the current commitment period. It is applicable only for\nACTIVE capacity commitments.",
          "type": "string",
          "format": "google-datetime"
        },
        "plan": {
          "description": "Capacity commitment commitment plan.",
          "enum": [
            "COMMITMENT_PLAN_UNSPECIFIED",
            "FLEX",
            "TRIAL",
            "MONTHLY",
            "ANNUAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid plan value. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Flex commitments have committed period of 1 minute after becoming ACTIVE.\nAfter that, they are not in a committed period anymore and can be removed\nany time.",
            "Trial commitments have a committed period of 182 days after becoming\nACTIVE. After that, they are converted to a new commitment based on the\n`renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so\nthat it can be deleted right after committed period ends.",
            "Monthly commitments have a committed period of 30 days after becoming\nACTIVE. After that, they are not in a committed period anymore and can be\nremoved any time.",
            "Annual commitments have a committed period of 365 days after becoming\nACTIVE. After that they are converted to a new commitment based on the\nrenewal_plan."
          ]
        }
      },
      "type": "object",
      "description": "Capacity commitment is a way to purchase compute capacity for BigQuery jobs\n(in the form of slots) with some committed period of usage. Annual\ncommitments renew by default. Commitments can be removed after their\ncommitment end time passes.\n\nIn order to remove annual commitment, its plan needs to be changed\nto monthly or flex first.\n\nA capacity commitment resource exists as a child resource of the admin\nproject."
    },
    "SearchAssignmentsResponse": {
      "description": "The response for ReservationService.SearchAssignments.",
      "id": "SearchAssignmentsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."
        },
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "Assignment"
          },
          "description": "List of assignments visible to the user."
        }
      }
    },
    "Assignment": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE"
          ],
          "type": "string",
          "description": "Output only. State of the assignment.",
          "enumDescriptions": [
            "Invalid state value.",
            "Queries from assignee will be executed as on-demand, if related\nassignment is pending.",
            "Assignment is ready."
          ]
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the resource. E.g.:\n`projects/myproject/locations/US/reservations/team1-prod/assignments/123`."
        },
        "jobType": {
          "enumDescriptions": [
            "Invalid type. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`.",
            "Pipeline (load/export) jobs from the project will use the reservation.",
            "Query jobs from the project will use the reservation.",
            "BigQuery ML jobs that use services external to BigQuery for model\ntraining. These jobs will not utilize idle slots from other reservations."
          ],
          "type": "string",
          "description": "Which type of jobs will use the reservation.",
          "enum": [
            "JOB_TYPE_UNSPECIFIED",
            "PIPELINE",
            "QUERY",
            "ML_EXTERNAL"
          ]
        },
        "assignee": {
          "type": "string",
          "description": "The resource which will use the reservation. E.g.\n`projects/myproject`, `folders/123`, or `organizations/456`."
        }
      },
      "id": "Assignment",
      "type": "object",
      "description": "A Assignment allows a project to submit jobs\nof a certain type using slots from the specified reservation."
    },
    "MoveAssignmentRequest": {
      "id": "MoveAssignmentRequest",
      "properties": {
        "destinationId": {
          "description": "The new reservation ID, e.g.:\n  `projects/myotherproject/locations/US/reservations/team2-prod`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request for\nReservationService.MoveAssignment.\n\n**Note**: \"bigquery.reservationAssignments.create\" permission is required on\nthe destination_id.\n\n**Note**: \"bigquery.reservationAssignments.create\" and\n\"bigquery.reservationAssignments.delete\" permission are required on the\nrelated assignee."
    },
    "ListCapacityCommitmentsResponse": {
      "description": "The response for ReservationService.ListCapacityCommitments.",
      "properties": {
        "capacityCommitments": {
          "items": {
            "$ref": "CapacityCommitment"
          },
          "description": "List of capacity commitments visible to the user.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "id": "ListCapacityCommitmentsResponse",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "searchAssignments": {
              "path": "v1beta1/{+parent}:searchAssignments",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}:searchAssignments",
              "response": {
                "$ref": "SearchAssignmentsResponse"
              },
              "id": "bigqueryreservation.projects.locations.searchAssignments",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The resource name of the admin project(containing project and location),\ne.g.:\n  `projects/myproject/locations/US`."
                },
                "query": {
                  "type": "string",
                  "location": "query",
                  "description": "Please specify resource name as assignee in the query.\n\nExamples:\n\n* `assignee=projects/myproject`\n* `assignee=folders/123`\n* `assignee=organizations/456`"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "description": "Looks up assignments for a specified resource for a particular region.\nIf the request is about a project:\n\n1. Assignments created on the project will be returned if they exist.\n2. Otherwise assignments created on the closest ancestor will be\n   returned.\n3. Assignments for different JobTypes will all be returned.\n\nThe same logic applies if the request is about a folder.\n\nIf the request is about an organization, then assignments created on the\norganization will be returned (organization doesn't have ancestors).\n\nComparing to ListAssignments, there are some behavior\ndifferences:\n\n1. permission on the assignee will be verified in this API.\n2. Hierarchy lookup (project-\u003efolder-\u003eorganization) happens in this API.\n3. Parent here is `projects/*/locations/*`, instead of\n   `projects/*/locations/*reservations/*`.\n\n**Note** \"-\" cannot be used for projects\nnor locations."
            },
            "updateBiReservation": {
              "request": {
                "$ref": "BiReservation"
              },
              "parameters": {
                "updateMask": {
                  "description": "A list of fields to be updated in this request.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "The resource name of the singleton BI reservation.\nReservation names have the form\n`projects/{project_id}/locations/{location_id}/bireservation`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/biReservation$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "BiReservation"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "bigqueryreservation.projects.locations.updateBiReservation",
              "description": "Updates a BI reservation.\n\nOnly fields specified in the `field_mask` are updated.\n\nA singleton BI reservation always exists with default size 0.\nIn order to reserve BI capacity it needs to be updated to an amount\ngreater than 0. In order to release BI capacity reservation size\nmust be set to 0.",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/biReservation",
              "path": "v1beta1/{+name}"
            },
            "getBiReservation": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/biReservation",
              "description": "Retrieves a BI reservation.",
              "id": "bigqueryreservation.projects.locations.getBiReservation",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the requested reservation, for example:\n`projects/{project_id}/locations/{location_id}/bireservation`",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/biReservation$"
                }
              },
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "BiReservation"
              }
            }
          },
          "resources": {
            "capacityCommitments": {
              "methods": {
                "merge": {
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:merge",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Parent resource that identifies admin project and location e.g.,\n `projects/myproject/locations/us`"
                    }
                  },
                  "description": "Merges capacity commitments of the same plan into a single commitment.\n\nThe resulting capacity commitment has the greater commitment_end_time\nout of the to-be-merged capacity commitments.\n\nAttempting to merge capacity commitments of different plan will fail\nwith the error code `google.rpc.Code.FAILED_PRECONDITION`.",
                  "request": {
                    "$ref": "MergeCapacityCommitmentsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/capacityCommitments:merge",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.merge"
                },
                "split": {
                  "path": "v1beta1/{+name}:split",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.split",
                  "response": {
                    "$ref": "SplitCapacityCommitmentResponse"
                  },
                  "description": "Splits capacity commitment to two commitments of the same plan and\n`commitment_end_time`.\n\nA common use case is to enable downgrading commitments.\n\nFor example, in order to downgrade from 10000 slots to 8000, you might\nsplit a 10000 capacity commitment into commitments of 2000 and 8000. Then,\nyou would change the plan of the first one to `FLEX` and then delete it.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name e.g.,:\n `projects/myproject/locations/US/capacityCommitments/123`"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:split",
                  "request": {
                    "$ref": "SplitCapacityCommitmentRequest"
                  }
                },
                "create": {
                  "request": {
                    "$ref": "CapacityCommitment"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments",
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "path": "v1beta1/{+parent}/capacityCommitments",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new capacity commitment resource.",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. Resource name of the parent reservation. E.g.,\n   `projects/myproject/locations/US`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "enforceSingleAdminProjectPerOrg": {
                      "type": "boolean",
                      "description": "If true, fail the request if another project in the organization has a\ncapacity commitment.",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "description": "Required. Resource name of the capacity commitment to retrieve. E.g.,\n   `projects/myproject/locations/US/capacityCommitments/123`"
                    }
                  },
                  "description": "Returns information about the capacity commitment.",
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "path": "v1beta1/{+name}"
                },
                "delete": {
                  "path": "v1beta1/{+name}",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.delete",
                  "description": "Deletes a capacity commitment. Attempting to delete capacity commitment\nbefore its commitment_end_time will fail with the error code\n`google.rpc.Code.FAILED_PRECONDITION`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Resource name of the capacity commitment to delete. E.g.,\n   `projects/myproject/locations/US/capacityCommitments/123`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}"
                },
                "patch": {
                  "response": {
                    "$ref": "CapacityCommitment"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Standard field mask for the set of fields to be updated.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/capacityCommitments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The resource name of the capacity commitment, e.g.,\n`projects/myproject/locations/US/capacityCommitments/123`",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "CapacityCommitment"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an existing capacity commitment.\n\nOnly `plan` and `renewal_plan` fields can be updated.\n\nPlan can only be changed to a plan of a longer commitment period.\nAttempting to change to a plan with shorter commitment period will fail\nwith the error code `google.rpc.Code.FAILED_PRECONDITION`.",
                  "path": "v1beta1/{+name}"
                },
                "list": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/capacityCommitments",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+parent}/capacityCommitments",
                  "id": "bigqueryreservation.projects.locations.capacityCommitments.list",
                  "response": {
                    "$ref": "ListCapacityCommitmentsResponse"
                  },
                  "description": "Lists all the capacity commitments for the admin project.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Resource name of the parent reservation. E.g.,\n   `projects/myproject/locations/US`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "reservations": {
              "resources": {
                "assignments": {
                  "methods": {
                    "move": {
                      "path": "v1beta1/{+name}:move",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the assignment,\ne.g.\n`projects/myproject/locations/US/reservations/team1-prod/assignments/123`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/assignments/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Assignment"
                      },
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.move",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:move",
                      "httpMethod": "POST",
                      "description": "Moves an assignment under a new reservation.\n\nThis differs from removing an existing assignment and recreating a new one\nby providing a transactional change that ensures an assignee always has an\nassociated reservation.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "MoveAssignmentRequest"
                      }
                    },
                    "create": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                          "description": "Required. The parent resource name of the assignment\nE.g. `projects/myproject/locations/US/reservations/team1-prod`",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+parent}/assignments",
                      "description": "Creates an assignment object which allows the given project to submit jobs\nof a certain type using slots from the specified reservation.\n\nCurrently a\nresource (project, folder, organization) can only have one assignment per\neach (job_type, location) combination, and that reservation will be used\nfor all jobs of the matching type.\n\nDifferent assignments can be created on different levels of the\nprojects, folders or organization hierarchy.  During query execution,\nthe assignment is looked up at the project, folder and organization levels\nin that order. The first assignment found is applied to the query.\n\nWhen creating assignments, it does not matter if other assignments exist at\nhigher levels.\n\nExample:\n\n* The organization `organizationA` contains two projects, `project1`\n  and `project2`.\n* Assignments for all three entities (`organizationA`, `project1`, and\n  `project2`) could all be created and mapped to the same or different\n  reservations.\n\nReturns `google.rpc.Code.PERMISSION_DENIED` if user does not have\n'bigquery.admin' permissions on the project using the reservation\nand the project that owns this reservation.\n\nReturns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment\ndoes not match location of the reservation.",
                      "request": {
                        "$ref": "Assignment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Assignment"
                      },
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.create"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent resource name e.g.:\n\n`projects/myproject/locations/US/reservations/team1-prod`\n\nOr:\n\n`projects/myproject/locations/US/reservations/-`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of items to return.",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.list",
                      "description": "Lists assignments.\n\nOnly explicitly created assignments will be returned.\n\nExample:\n\n* Organization `organizationA` contains two projects, `project1` and\n  `project2`.\n* Reservation `res1` exists and was created previously.\n* CreateAssignment was used previously to define the following\n  associations between entities and reservations: `\u003corganizationA, res1\u003e`\n  and `\u003cproject1, res1\u003e`\n\nIn this example, ListAssignments will just return the above two assignments\nfor reservation `res1`, and no expansion/merge will happen.\n\nThe wildcard \"-\" can be used for\nreservations in the request. In that case all assignments belongs to the\nspecified project and location will be listed.\n\n**Note** \"-\" cannot be used for projects nor locations.",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListAssignmentsResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta1/{+parent}/assignments"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+/assignments/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the resource, e.g.\n  `projects/myproject/locations/US/reservations/team1-prod/assignments/123`",
                          "required": true
                        }
                      },
                      "description": "Deletes a assignment. No expansion will happen.\n\nExample:\n\n* Organization `organizationA` contains two projects, `project1` and\n  `project2`.\n* Reservation `res1` exists and was created previously.\n* CreateAssignment was used previously to define the following\n  associations between entities and reservations: `\u003corganizationA, res1\u003e`\n  and `\u003cproject1, res1\u003e`\n\nIn this example, deletion of the `\u003corganizationA, res1\u003e` assignment won't\naffect the other assignment `\u003cproject1, res1\u003e`. After said deletion,\nqueries from `project1` will still use `res1` while queries from\n`project2` will switch to use on-demand mode.",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "bigqueryreservation.projects.locations.reservations.assignments.delete"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                      "type": "string",
                      "description": "Required. Resource name of the reservation to retrieve. E.g.,\n   `projects/myproject/locations/US/reservations/team1-prod`"
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "bigqueryreservation.projects.locations.reservations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a reservation.\nReturns `google.rpc.Code.FAILED_PRECONDITION` when reservation has\nassignments.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}",
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigqueryreservation.projects.locations.reservations.patch",
                  "description": "Updates an existing reservation resource.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The resource name of the reservation, e.g.,\n`projects/*/locations/*/reservations/team1-prod`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Standard field mask for the set of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Reservation"
                  },
                  "request": {
                    "$ref": "Reservation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}"
                },
                "get": {
                  "response": {
                    "$ref": "Reservation"
                  },
                  "description": "Returns information about the reservation.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigqueryreservation.projects.locations.reservations.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Resource name of the reservation to retrieve. E.g.,\n   `projects/myproject/locations/US/reservations/team1-prod`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reservations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1beta1/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListReservationsResponse"
                  },
                  "path": "v1beta1/{+parent}/reservations",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Can be used to filter out reservations based on names, capacity, etc, e.g.:\nfilter=\"reservation.slot_capacity \u003e 200\"\nfilter=\"reservation.name = \\\"*dev/*\\\"\"\nAdvanced filtering syntax can be\n[here](https://cloud.google.com/logging/docs/view/advanced-filters).",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource name containing project and location, e.g.:\n  `projects/myproject/locations/US`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "bigqueryreservation.projects.locations.reservations.list",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all the reservations for the project in the specified location."
                },
                "create": {
                  "request": {
                    "$ref": "Reservation"
                  },
                  "description": "Creates a new reservation resource.",
                  "response": {
                    "$ref": "Reservation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reservations",
                  "httpMethod": "POST",
                  "id": "bigqueryreservation.projects.locations.reservations.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Project, location. E.g.,\n`projects/myproject/locations/US`"
                    },
                    "reservationId": {
                      "type": "string",
                      "description": "The reservation ID. This field must only contain lower case alphanumeric\ncharacters or dash. Max length is 64 characters.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/reservations",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "servicePath": "",
  "protocol": "rest",
  "basePath": "",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    }
  },
  "revision": "20200702",
  "description": "A service to modify your BigQuery flat-rate reservations.",
  "ownerName": "Google",
  "rootUrl": "https://bigqueryreservation.googleapis.com/",
  "id": "bigqueryreservation:v1beta1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "baseUrl": "https://bigqueryreservation.googleapis.com/",
  "discoveryVersion": "v1",
  "version": "v1beta1",
  "mtlsRootUrl": "https://bigqueryreservation.mtls.googleapis.com/",
  "canonicalName": "BigQuery Reservation",
  "title": "BigQuery Reservation API",
  "name": "bigqueryreservation",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/bigquery/",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}
