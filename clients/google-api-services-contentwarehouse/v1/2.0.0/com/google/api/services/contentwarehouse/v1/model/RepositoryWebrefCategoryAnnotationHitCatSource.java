/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The HitCat page classifier. See go/hitcat2 If you use any HitCat score, please: 1. Add your use-
 * case to go/hits-clients. 2. Subscribe to hits-users@ to receive general updates.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefCategoryAnnotationHitCatSource extends com.google.api.client.json.GenericJson {

  /**
   * Confidence of the category in the range [0.0, 1.0). If a page has the category "NBA" with high
   * confidence we also expect it to have the "Basketball" with high confidence. Categories with a
   * confidence lower than 0.05 are omitted. This can be interpreted as a confidence of 0, i.e. a
   * strong signal that the category is not relevant for the page. For some categories this score is
   * calibrated per-category to estimate the true precision. E.g., 70% of documents retrieved within
   * the confidence range [0.7 - eps, 0.7 + eps] will be relevant when eps is close to 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float confidence;

  /**
   * Calibrated cumulative confidence guaranteeing maxmial recall for a precision target. E.g., At
   * least 90% of documents retrieved with cumulative_confidence >= 0.9 will be relevant. This score
   * is always calibrated per-category to estimate the true cumulative precision and is not set for
   * uncalibrated categories.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float cumulativeConfidence;

  /**
   * Note: For testing the next version. May change at any time. Experimental confidence of the
   * category in the range (0.0, 1.0).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float experimentalConfidence;

  /**
   * Confidence of the category in the range [0.0, 1.0). If a page has the category "NBA" with high
   * confidence we also expect it to have the "Basketball" with high confidence. Categories with a
   * confidence lower than 0.05 are omitted. This can be interpreted as a confidence of 0, i.e. a
   * strong signal that the category is not relevant for the page. For some categories this score is
   * calibrated per-category to estimate the true precision. E.g., 70% of documents retrieved within
   * the confidence range [0.7 - eps, 0.7 + eps] will be relevant when eps is close to 0.
   * @return value or {@code null} for none
   */
  public java.lang.Float getConfidence() {
    return confidence;
  }

  /**
   * Confidence of the category in the range [0.0, 1.0). If a page has the category "NBA" with high
   * confidence we also expect it to have the "Basketball" with high confidence. Categories with a
   * confidence lower than 0.05 are omitted. This can be interpreted as a confidence of 0, i.e. a
   * strong signal that the category is not relevant for the page. For some categories this score is
   * calibrated per-category to estimate the true precision. E.g., 70% of documents retrieved within
   * the confidence range [0.7 - eps, 0.7 + eps] will be relevant when eps is close to 0.
   * @param confidence confidence or {@code null} for none
   */
  public RepositoryWebrefCategoryAnnotationHitCatSource setConfidence(java.lang.Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Calibrated cumulative confidence guaranteeing maxmial recall for a precision target. E.g., At
   * least 90% of documents retrieved with cumulative_confidence >= 0.9 will be relevant. This score
   * is always calibrated per-category to estimate the true cumulative precision and is not set for
   * uncalibrated categories.
   * @return value or {@code null} for none
   */
  public java.lang.Float getCumulativeConfidence() {
    return cumulativeConfidence;
  }

  /**
   * Calibrated cumulative confidence guaranteeing maxmial recall for a precision target. E.g., At
   * least 90% of documents retrieved with cumulative_confidence >= 0.9 will be relevant. This score
   * is always calibrated per-category to estimate the true cumulative precision and is not set for
   * uncalibrated categories.
   * @param cumulativeConfidence cumulativeConfidence or {@code null} for none
   */
  public RepositoryWebrefCategoryAnnotationHitCatSource setCumulativeConfidence(java.lang.Float cumulativeConfidence) {
    this.cumulativeConfidence = cumulativeConfidence;
    return this;
  }

  /**
   * Note: For testing the next version. May change at any time. Experimental confidence of the
   * category in the range (0.0, 1.0).
   * @return value or {@code null} for none
   */
  public java.lang.Float getExperimentalConfidence() {
    return experimentalConfidence;
  }

  /**
   * Note: For testing the next version. May change at any time. Experimental confidence of the
   * category in the range (0.0, 1.0).
   * @param experimentalConfidence experimentalConfidence or {@code null} for none
   */
  public RepositoryWebrefCategoryAnnotationHitCatSource setExperimentalConfidence(java.lang.Float experimentalConfidence) {
    this.experimentalConfidence = experimentalConfidence;
    return this;
  }

  @Override
  public RepositoryWebrefCategoryAnnotationHitCatSource set(String fieldName, Object value) {
    return (RepositoryWebrefCategoryAnnotationHitCatSource) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefCategoryAnnotationHitCatSource clone() {
    return (RepositoryWebrefCategoryAnnotationHitCatSource) super.clone();
  }

}
