/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * The error payload that is populated on LRO sync APIs, including the following: *
 * `google.cloud.discoveryengine.v1main.DataConnectorService.SetUpDataConnector` *
 * `google.cloud.discoveryengine.v1main.DataConnectorService.StartConnectorRun`
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext extends com.google.api.client.json.GenericJson {

  /**
   * The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String connectorRun;

  /**
   * The full resource name of the DataConnector. Format:
   * `projects/locations/collections/dataConnector`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataConnector;

  /**
   * The time when the connector run ended.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * The entity to sync for the connector run.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entity;

  /**
   * The operation resource name of the LRO to sync the connector.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operation;

  /**
   * The time when the connector run started.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * The type of sync run. Can be one of the following: * `FULL` * `INCREMENTAL`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String syncType;

  /**
   * The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * @return value or {@code null} for none
   */
  public java.lang.String getConnectorRun() {
    return connectorRun;
  }

  /**
   * The full resource name of the Connector Run. Format:
   * `projects/locations/collections/dataConnector/connectorRuns`. The `connector_run_id` is system-
   * generated.
   * @param connectorRun connectorRun or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setConnectorRun(java.lang.String connectorRun) {
    this.connectorRun = connectorRun;
    return this;
  }

  /**
   * The full resource name of the DataConnector. Format:
   * `projects/locations/collections/dataConnector`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataConnector() {
    return dataConnector;
  }

  /**
   * The full resource name of the DataConnector. Format:
   * `projects/locations/collections/dataConnector`.
   * @param dataConnector dataConnector or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setDataConnector(java.lang.String dataConnector) {
    this.dataConnector = dataConnector;
    return this;
  }

  /**
   * The time when the connector run ended.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * The time when the connector run ended.
   * @param endTime endTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The entity to sync for the connector run.
   * @return value or {@code null} for none
   */
  public java.lang.String getEntity() {
    return entity;
  }

  /**
   * The entity to sync for the connector run.
   * @param entity entity or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setEntity(java.lang.String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * The operation resource name of the LRO to sync the connector.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperation() {
    return operation;
  }

  /**
   * The operation resource name of the LRO to sync the connector.
   * @param operation operation or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setOperation(java.lang.String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * The time when the connector run started.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * The time when the connector run started.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The type of sync run. Can be one of the following: * `FULL` * `INCREMENTAL`
   * @return value or {@code null} for none
   */
  public java.lang.String getSyncType() {
    return syncType;
  }

  /**
   * The type of sync run. Can be one of the following: * `FULL` * `INCREMENTAL`
   * @param syncType syncType or {@code null} for none
   */
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext setSyncType(java.lang.String syncType) {
    this.syncType = syncType;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext clone() {
    return (GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext) super.clone();
  }

}
