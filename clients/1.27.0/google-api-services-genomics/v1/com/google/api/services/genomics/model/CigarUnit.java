/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * A single CIGAR operation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CigarUnit extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operation;

  /**
   * The number of genomic bases that the operation runs for. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long operationLength;

  /**
   * `referenceSequence` is only used at mismatches (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).
   * Filling this field replaces SAM's MD tag. If the relevant information is not available, this
   * field is unset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String referenceSequence;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getOperation() {
    return operation;
  }

  /**
   * @param operation operation or {@code null} for none
   */
  public CigarUnit setOperation(java.lang.String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * The number of genomic bases that the operation runs for. Required.
   * @return value or {@code null} for none
   */
  public java.lang.Long getOperationLength() {
    return operationLength;
  }

  /**
   * The number of genomic bases that the operation runs for. Required.
   * @param operationLength operationLength or {@code null} for none
   */
  public CigarUnit setOperationLength(java.lang.Long operationLength) {
    this.operationLength = operationLength;
    return this;
  }

  /**
   * `referenceSequence` is only used at mismatches (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).
   * Filling this field replaces SAM's MD tag. If the relevant information is not available, this
   * field is unset.
   * @return value or {@code null} for none
   */
  public java.lang.String getReferenceSequence() {
    return referenceSequence;
  }

  /**
   * `referenceSequence` is only used at mismatches (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).
   * Filling this field replaces SAM's MD tag. If the relevant information is not available, this
   * field is unset.
   * @param referenceSequence referenceSequence or {@code null} for none
   */
  public CigarUnit setReferenceSequence(java.lang.String referenceSequence) {
    this.referenceSequence = referenceSequence;
    return this;
  }

  @Override
  public CigarUnit set(String fieldName, Object value) {
    return (CigarUnit) super.set(fieldName, value);
  }

  @Override
  public CigarUnit clone() {
    return (CigarUnit) super.clone();
  }

}
