/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * ImageTemplate contains local and/or global features generated from one image. User-defined
 * members can be set to any value within the constraints outlined below. Algorithms usually pass
 * these through without evaluation, unless documented otherwise. Next id: 29
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhotosVisionObjectrecImageTemplate extends com.google.api.client.json.GenericJson {

  /**
   * Name of the author or image source. User-defined. Must be NULL-terminated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authorName;

  /**
   * Identifier for which corpus the image belongs to. Currently Cyclone uses this field in: -
   * photos_vision_objectrec.SpatialMatcherRequest.residual_template to select which spatial matcher
   * should be applied to the candidate matches - photos_vision_objectrec.CustomCorpusQuantizer to
   * map a custom corpus to one or more posting lists
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String corpus;

  /**
   * The geolocation of the image. Assumed to represent the location where the photo was taken from.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PhotosVisionObjectrecGeoLocation geoLocation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PhotosVisionObjectrecGlobalFeature> globalFeature;

  static {
    // hack to force ProGuard to consider PhotosVisionObjectrecGlobalFeature used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(PhotosVisionObjectrecGlobalFeature.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer imageHeight;

  /**
   * Unique identifier for the image used to compute this template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long imageId;

  /**
   * URL or filename of the image used to compute this template. User-defined. Must contain only
   * ASCII characters and be NULL-terminated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imageUrl;

  /**
   * Dimension of the image used to compute this template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer imageWidth;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String info;

  /**
   * Tags pertaining to this image. User-defined. Must be NULL-terminated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> objectInfo;

  /**
   * Name of the object/scene depicted. User-defined. Must contain only ASCII characters and be
   * NULL-terminated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String objectName;

  /**
   * Opaque template data. May be used to pass through additional data from template sources to
   * processing modules, that is not already covered by other members of this PB. It is the
   * responsibility of processing modules to verify that the data is in a compatible format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String opaqueData;

  /**
   * Region-of-interest: The bounding box of the object or scene depicted in the image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PhotosVisionObjectrecROI roi;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PhotosVisionObjectrecImageTemplateSubSet> subset;

  /**
   * Feature version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Name of the author or image source. User-defined. Must be NULL-terminated.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorName() {
    return authorName;
  }

  /**
   * Name of the author or image source. User-defined. Must be NULL-terminated.
   * @param authorName authorName or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setAuthorName(java.lang.String authorName) {
    this.authorName = authorName;
    return this;
  }

  /**
   * Identifier for which corpus the image belongs to. Currently Cyclone uses this field in: -
   * photos_vision_objectrec.SpatialMatcherRequest.residual_template to select which spatial matcher
   * should be applied to the candidate matches - photos_vision_objectrec.CustomCorpusQuantizer to
   * map a custom corpus to one or more posting lists
   * @return value or {@code null} for none
   */
  public java.lang.String getCorpus() {
    return corpus;
  }

  /**
   * Identifier for which corpus the image belongs to. Currently Cyclone uses this field in: -
   * photos_vision_objectrec.SpatialMatcherRequest.residual_template to select which spatial matcher
   * should be applied to the candidate matches - photos_vision_objectrec.CustomCorpusQuantizer to
   * map a custom corpus to one or more posting lists
   * @param corpus corpus or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setCorpus(java.lang.String corpus) {
    this.corpus = corpus;
    return this;
  }

  /**
   * The geolocation of the image. Assumed to represent the location where the photo was taken from.
   * @return value or {@code null} for none
   */
  public PhotosVisionObjectrecGeoLocation getGeoLocation() {
    return geoLocation;
  }

  /**
   * The geolocation of the image. Assumed to represent the location where the photo was taken from.
   * @param geoLocation geoLocation or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setGeoLocation(PhotosVisionObjectrecGeoLocation geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<PhotosVisionObjectrecGlobalFeature> getGlobalFeature() {
    return globalFeature;
  }

  /**
   * @param globalFeature globalFeature or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setGlobalFeature(java.util.List<PhotosVisionObjectrecGlobalFeature> globalFeature) {
    this.globalFeature = globalFeature;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getImageHeight() {
    return imageHeight;
  }

  /**
   * @param imageHeight imageHeight or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setImageHeight(java.lang.Integer imageHeight) {
    this.imageHeight = imageHeight;
    return this;
  }

  /**
   * Unique identifier for the image used to compute this template.
   * @return value or {@code null} for none
   */
  public java.lang.Long getImageId() {
    return imageId;
  }

  /**
   * Unique identifier for the image used to compute this template.
   * @param imageId imageId or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setImageId(java.lang.Long imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * URL or filename of the image used to compute this template. User-defined. Must contain only
   * ASCII characters and be NULL-terminated.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * URL or filename of the image used to compute this template. User-defined. Must contain only
   * ASCII characters and be NULL-terminated.
   * @param imageUrl imageUrl or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Dimension of the image used to compute this template.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getImageWidth() {
    return imageWidth;
  }

  /**
   * Dimension of the image used to compute this template.
   * @param imageWidth imageWidth or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setImageWidth(java.lang.Integer imageWidth) {
    this.imageWidth = imageWidth;
    return this;
  }

  /**
   * @see #decodeInfo()
   * @return value or {@code null} for none
   */
  public java.lang.String getInfo() {
    return info;
  }

  /**

   * @see #getInfo()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeInfo() {
    return com.google.api.client.util.Base64.decodeBase64(info);
  }

  /**
   * @see #encodeInfo()
   * @param info info or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setInfo(java.lang.String info) {
    this.info = info;
    return this;
  }

  /**

   * @see #setInfo()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public PhotosVisionObjectrecImageTemplate encodeInfo(byte[] info) {
    this.info = com.google.api.client.util.Base64.encodeBase64URLSafeString(info);
    return this;
  }

  /**
   * Tags pertaining to this image. User-defined. Must be NULL-terminated.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getObjectInfo() {
    return objectInfo;
  }

  /**
   * Tags pertaining to this image. User-defined. Must be NULL-terminated.
   * @param objectInfo objectInfo or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setObjectInfo(java.util.List<java.lang.String> objectInfo) {
    this.objectInfo = objectInfo;
    return this;
  }

  /**
   * Name of the object/scene depicted. User-defined. Must contain only ASCII characters and be
   * NULL-terminated.
   * @return value or {@code null} for none
   */
  public java.lang.String getObjectName() {
    return objectName;
  }

  /**
   * Name of the object/scene depicted. User-defined. Must contain only ASCII characters and be
   * NULL-terminated.
   * @param objectName objectName or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setObjectName(java.lang.String objectName) {
    this.objectName = objectName;
    return this;
  }

  /**
   * Opaque template data. May be used to pass through additional data from template sources to
   * processing modules, that is not already covered by other members of this PB. It is the
   * responsibility of processing modules to verify that the data is in a compatible format.
   * @see #decodeOpaqueData()
   * @return value or {@code null} for none
   */
  public java.lang.String getOpaqueData() {
    return opaqueData;
  }

  /**
   * Opaque template data. May be used to pass through additional data from template sources to
   * processing modules, that is not already covered by other members of this PB. It is the
   * responsibility of processing modules to verify that the data is in a compatible format.
   * @see #getOpaqueData()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeOpaqueData() {
    return com.google.api.client.util.Base64.decodeBase64(opaqueData);
  }

  /**
   * Opaque template data. May be used to pass through additional data from template sources to
   * processing modules, that is not already covered by other members of this PB. It is the
   * responsibility of processing modules to verify that the data is in a compatible format.
   * @see #encodeOpaqueData()
   * @param opaqueData opaqueData or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setOpaqueData(java.lang.String opaqueData) {
    this.opaqueData = opaqueData;
    return this;
  }

  /**
   * Opaque template data. May be used to pass through additional data from template sources to
   * processing modules, that is not already covered by other members of this PB. It is the
   * responsibility of processing modules to verify that the data is in a compatible format.
   * @see #setOpaqueData()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public PhotosVisionObjectrecImageTemplate encodeOpaqueData(byte[] opaqueData) {
    this.opaqueData = com.google.api.client.util.Base64.encodeBase64URLSafeString(opaqueData);
    return this;
  }

  /**
   * Region-of-interest: The bounding box of the object or scene depicted in the image.
   * @return value or {@code null} for none
   */
  public PhotosVisionObjectrecROI getRoi() {
    return roi;
  }

  /**
   * Region-of-interest: The bounding box of the object or scene depicted in the image.
   * @param roi roi or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setRoi(PhotosVisionObjectrecROI roi) {
    this.roi = roi;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<PhotosVisionObjectrecImageTemplateSubSet> getSubset() {
    return subset;
  }

  /**
   * @param subset subset or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setSubset(java.util.List<PhotosVisionObjectrecImageTemplateSubSet> subset) {
    this.subset = subset;
    return this;
  }

  /**
   * Feature version.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Feature version.
   * @param version version or {@code null} for none
   */
  public PhotosVisionObjectrecImageTemplate setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public PhotosVisionObjectrecImageTemplate set(String fieldName, Object value) {
    return (PhotosVisionObjectrecImageTemplate) super.set(fieldName, value);
  }

  @Override
  public PhotosVisionObjectrecImageTemplate clone() {
    return (PhotosVisionObjectrecImageTemplate) super.clone();
  }

}
