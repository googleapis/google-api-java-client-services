/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudcommerceprocurement.v1.model;

/**
 * Represents a procured product of a customer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Commerce Partner Procurement API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Entitlement extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The resource name of the account that this entitlement is based on, if any.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String account;

  /**
   * Output only. The reason the entitlement was cancelled. If this entitlement was not cancelled,
   * this field will be empty. Possible values include "unknown", "expired", "user-cancelled",
   * "account-closed", "billing-disabled" (if the customer has manually disabled billing to their
   * resources), "user-aborted", and "migrated" (if the entitlement has migrated across products).
   * Values of this field are subject to change and should not be relied upon for technical
   * integration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cancellationReason;

  /**
   * Output only. The resources using this entitlement, if applicable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Consumer> consumers;

  static {
    // hack to force ProGuard to consider Consumer used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Consumer.class);
  }

  /**
   * Output only. The creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. The entitlement benefit IDs associated with the purchase.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> entitlementBenefitIds;

  /**
   * Output only. The custom properties that were collected from the user to create this
   * entitlement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> inputProperties;

  /**
   * Provider-supplied message that is displayed to the end user. Currently this is used to
   * communicate progress and ETA for provisioning. This field can be updated only when a user is
   * waiting for an action from the provider, i.e. entitlement state is
   * EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or
   * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically
   * when the entitlement state changes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messageToUser;

  /**
   * Output only. The resource name of the entitlement. Entitlement names have the form
   * `providers/{provider_id}/entitlements/{entitlement_id}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The end time of the new offer. If the offer was created with a term instead of a
   * specified end date, this field is empty. This field will be populated even if the entitlement
   * is not active yet. If there is no upcoming offer, the field will be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String newOfferEndTime;

  /**
   * Output only. The timestamp when the new offer will become effective. This field will be
   * populated even if the entitlement is not active yet. If there is no upcoming offer, the field
   * will be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String newOfferStartTime;

  /**
   * Output only. The name of the offer the entitlement is switching to upon a pending plan change.
   * Only exists if the pending plan change is moving to an offer. This field is not populated for
   * entitlements which are not active yet. Format:
   * 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String newPendingOffer;

  /**
   * Output only. The offer duration of the new offer in ISO 8601 duration format. This field is not
   * populated for entitlements which are not active yet, only for pending offer changes. If the
   * offer was created with a specified end date instead of a duration, this field is empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String newPendingOfferDuration;

  /**
   * Output only. The identifier of the pending new plan. Required if the product has plans and the
   * entitlement has a pending plan change.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String newPendingPlan;

  /**
   * Output only. The name of the offer that was procured. Field is empty if order was not made
   * using an offer. Format: 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String offer;

  /**
   * Output only. The offer duration of the current offer in ISO 8601 duration format. Field is
   * empty if entitlement was not made using an offer. If the offer was created with a specified end
   * date instead of a duration, this field is empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String offerDuration;

  /**
   * Output only. End time for the Offer association corresponding to this entitlement. The field is
   * only populated if the entitlement is currently associated with an Offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String offerEndTime;

  /**
   * Output only. The order ID of this entitlement, without any `orders/` resource name prefix.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orderId;

  /**
   * Output only. The identifier of the plan that was procured. Required if the product has plans.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String plan;

  /**
   * Output only. The identifier of the entity that was purchased. This may actually represent a
   * product, quote, or offer. We strongly recommend that you use the following more explicit
   * fields: productExternalName, quoteExternalName, or offer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String product;

  /**
   * Output only. The identifier of the product that was procured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String productExternalName;

  /**
   * Output only. The identifier of the service provider that this entitlement was created against.
   * Each service provider is assigned a unique provider value when they onboard with Cloud Commerce
   * platform.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String provider;

  /**
   * Output only. The identifier of the quote that was used to procure. Empty if the order is not
   * purchased using a quote.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String quoteExternalName;

  /**
   * Output only. The state of the entitlement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. End time for the subscription corresponding to this entitlement.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String subscriptionEndTime;

  /**
   * Output only. The last update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The consumerId to use when reporting usage through the Service Control API. See
   * the consumerId field at [Reporting Metrics](https://cloud.google.com/service-control/reporting-
   * metrics) for more details. This field is present only if the product has usage-based billing
   * configured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String usageReportingId;

  /**
   * Output only. The resource name of the account that this entitlement is based on, if any.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccount() {
    return account;
  }

  /**
   * Output only. The resource name of the account that this entitlement is based on, if any.
   * @param account account or {@code null} for none
   */
  public Entitlement setAccount(java.lang.String account) {
    this.account = account;
    return this;
  }

  /**
   * Output only. The reason the entitlement was cancelled. If this entitlement was not cancelled,
   * this field will be empty. Possible values include "unknown", "expired", "user-cancelled",
   * "account-closed", "billing-disabled" (if the customer has manually disabled billing to their
   * resources), "user-aborted", and "migrated" (if the entitlement has migrated across products).
   * Values of this field are subject to change and should not be relied upon for technical
   * integration.
   * @return value or {@code null} for none
   */
  public java.lang.String getCancellationReason() {
    return cancellationReason;
  }

  /**
   * Output only. The reason the entitlement was cancelled. If this entitlement was not cancelled,
   * this field will be empty. Possible values include "unknown", "expired", "user-cancelled",
   * "account-closed", "billing-disabled" (if the customer has manually disabled billing to their
   * resources), "user-aborted", and "migrated" (if the entitlement has migrated across products).
   * Values of this field are subject to change and should not be relied upon for technical
   * integration.
   * @param cancellationReason cancellationReason or {@code null} for none
   */
  public Entitlement setCancellationReason(java.lang.String cancellationReason) {
    this.cancellationReason = cancellationReason;
    return this;
  }

  /**
   * Output only. The resources using this entitlement, if applicable.
   * @return value or {@code null} for none
   */
  public java.util.List<Consumer> getConsumers() {
    return consumers;
  }

  /**
   * Output only. The resources using this entitlement, if applicable.
   * @param consumers consumers or {@code null} for none
   */
  public Entitlement setConsumers(java.util.List<Consumer> consumers) {
    this.consumers = consumers;
    return this;
  }

  /**
   * Output only. The creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public Entitlement setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The entitlement benefit IDs associated with the purchase.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEntitlementBenefitIds() {
    return entitlementBenefitIds;
  }

  /**
   * Output only. The entitlement benefit IDs associated with the purchase.
   * @param entitlementBenefitIds entitlementBenefitIds or {@code null} for none
   */
  public Entitlement setEntitlementBenefitIds(java.util.List<java.lang.String> entitlementBenefitIds) {
    this.entitlementBenefitIds = entitlementBenefitIds;
    return this;
  }

  /**
   * Output only. The custom properties that were collected from the user to create this
   * entitlement.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getInputProperties() {
    return inputProperties;
  }

  /**
   * Output only. The custom properties that were collected from the user to create this
   * entitlement.
   * @param inputProperties inputProperties or {@code null} for none
   */
  public Entitlement setInputProperties(java.util.Map<String, java.lang.Object> inputProperties) {
    this.inputProperties = inputProperties;
    return this;
  }

  /**
   * Provider-supplied message that is displayed to the end user. Currently this is used to
   * communicate progress and ETA for provisioning. This field can be updated only when a user is
   * waiting for an action from the provider, i.e. entitlement state is
   * EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or
   * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically
   * when the entitlement state changes.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessageToUser() {
    return messageToUser;
  }

  /**
   * Provider-supplied message that is displayed to the end user. Currently this is used to
   * communicate progress and ETA for provisioning. This field can be updated only when a user is
   * waiting for an action from the provider, i.e. entitlement state is
   * EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or
   * EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically
   * when the entitlement state changes.
   * @param messageToUser messageToUser or {@code null} for none
   */
  public Entitlement setMessageToUser(java.lang.String messageToUser) {
    this.messageToUser = messageToUser;
    return this;
  }

  /**
   * Output only. The resource name of the entitlement. Entitlement names have the form
   * `providers/{provider_id}/entitlements/{entitlement_id}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the entitlement. Entitlement names have the form
   * `providers/{provider_id}/entitlements/{entitlement_id}`.
   * @param name name or {@code null} for none
   */
  public Entitlement setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The end time of the new offer. If the offer was created with a term instead of a
   * specified end date, this field is empty. This field will be populated even if the entitlement
   * is not active yet. If there is no upcoming offer, the field will be empty.
   * @return value or {@code null} for none
   */
  public String getNewOfferEndTime() {
    return newOfferEndTime;
  }

  /**
   * Output only. The end time of the new offer. If the offer was created with a term instead of a
   * specified end date, this field is empty. This field will be populated even if the entitlement
   * is not active yet. If there is no upcoming offer, the field will be empty.
   * @param newOfferEndTime newOfferEndTime or {@code null} for none
   */
  public Entitlement setNewOfferEndTime(String newOfferEndTime) {
    this.newOfferEndTime = newOfferEndTime;
    return this;
  }

  /**
   * Output only. The timestamp when the new offer will become effective. This field will be
   * populated even if the entitlement is not active yet. If there is no upcoming offer, the field
   * will be empty.
   * @return value or {@code null} for none
   */
  public String getNewOfferStartTime() {
    return newOfferStartTime;
  }

  /**
   * Output only. The timestamp when the new offer will become effective. This field will be
   * populated even if the entitlement is not active yet. If there is no upcoming offer, the field
   * will be empty.
   * @param newOfferStartTime newOfferStartTime or {@code null} for none
   */
  public Entitlement setNewOfferStartTime(String newOfferStartTime) {
    this.newOfferStartTime = newOfferStartTime;
    return this;
  }

  /**
   * Output only. The name of the offer the entitlement is switching to upon a pending plan change.
   * Only exists if the pending plan change is moving to an offer. This field is not populated for
   * entitlements which are not active yet. Format:
   * 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * @return value or {@code null} for none
   */
  public java.lang.String getNewPendingOffer() {
    return newPendingOffer;
  }

  /**
   * Output only. The name of the offer the entitlement is switching to upon a pending plan change.
   * Only exists if the pending plan change is moving to an offer. This field is not populated for
   * entitlements which are not active yet. Format:
   * 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * @param newPendingOffer newPendingOffer or {@code null} for none
   */
  public Entitlement setNewPendingOffer(java.lang.String newPendingOffer) {
    this.newPendingOffer = newPendingOffer;
    return this;
  }

  /**
   * Output only. The offer duration of the new offer in ISO 8601 duration format. This field is not
   * populated for entitlements which are not active yet, only for pending offer changes. If the
   * offer was created with a specified end date instead of a duration, this field is empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getNewPendingOfferDuration() {
    return newPendingOfferDuration;
  }

  /**
   * Output only. The offer duration of the new offer in ISO 8601 duration format. This field is not
   * populated for entitlements which are not active yet, only for pending offer changes. If the
   * offer was created with a specified end date instead of a duration, this field is empty.
   * @param newPendingOfferDuration newPendingOfferDuration or {@code null} for none
   */
  public Entitlement setNewPendingOfferDuration(java.lang.String newPendingOfferDuration) {
    this.newPendingOfferDuration = newPendingOfferDuration;
    return this;
  }

  /**
   * Output only. The identifier of the pending new plan. Required if the product has plans and the
   * entitlement has a pending plan change.
   * @return value or {@code null} for none
   */
  public java.lang.String getNewPendingPlan() {
    return newPendingPlan;
  }

  /**
   * Output only. The identifier of the pending new plan. Required if the product has plans and the
   * entitlement has a pending plan change.
   * @param newPendingPlan newPendingPlan or {@code null} for none
   */
  public Entitlement setNewPendingPlan(java.lang.String newPendingPlan) {
    this.newPendingPlan = newPendingPlan;
    return this;
  }

  /**
   * Output only. The name of the offer that was procured. Field is empty if order was not made
   * using an offer. Format: 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * @return value or {@code null} for none
   */
  public java.lang.String getOffer() {
    return offer;
  }

  /**
   * Output only. The name of the offer that was procured. Field is empty if order was not made
   * using an offer. Format: 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
   * 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the
   * offer is private or public. The {service} in the name is the listing service of the offer. It
   * could be either the product service that the offer is referencing, or a generic private offer
   * parent service. We recommend that you don't build your integration to rely on the meaning of
   * this {service} part.
   * @param offer offer or {@code null} for none
   */
  public Entitlement setOffer(java.lang.String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Output only. The offer duration of the current offer in ISO 8601 duration format. Field is
   * empty if entitlement was not made using an offer. If the offer was created with a specified end
   * date instead of a duration, this field is empty.
   * @return value or {@code null} for none
   */
  public java.lang.String getOfferDuration() {
    return offerDuration;
  }

  /**
   * Output only. The offer duration of the current offer in ISO 8601 duration format. Field is
   * empty if entitlement was not made using an offer. If the offer was created with a specified end
   * date instead of a duration, this field is empty.
   * @param offerDuration offerDuration or {@code null} for none
   */
  public Entitlement setOfferDuration(java.lang.String offerDuration) {
    this.offerDuration = offerDuration;
    return this;
  }

  /**
   * Output only. End time for the Offer association corresponding to this entitlement. The field is
   * only populated if the entitlement is currently associated with an Offer.
   * @return value or {@code null} for none
   */
  public String getOfferEndTime() {
    return offerEndTime;
  }

  /**
   * Output only. End time for the Offer association corresponding to this entitlement. The field is
   * only populated if the entitlement is currently associated with an Offer.
   * @param offerEndTime offerEndTime or {@code null} for none
   */
  public Entitlement setOfferEndTime(String offerEndTime) {
    this.offerEndTime = offerEndTime;
    return this;
  }

  /**
   * Output only. The order ID of this entitlement, without any `orders/` resource name prefix.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrderId() {
    return orderId;
  }

  /**
   * Output only. The order ID of this entitlement, without any `orders/` resource name prefix.
   * @param orderId orderId or {@code null} for none
   */
  public Entitlement setOrderId(java.lang.String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Output only. The identifier of the plan that was procured. Required if the product has plans.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlan() {
    return plan;
  }

  /**
   * Output only. The identifier of the plan that was procured. Required if the product has plans.
   * @param plan plan or {@code null} for none
   */
  public Entitlement setPlan(java.lang.String plan) {
    this.plan = plan;
    return this;
  }

  /**
   * Output only. The identifier of the entity that was purchased. This may actually represent a
   * product, quote, or offer. We strongly recommend that you use the following more explicit
   * fields: productExternalName, quoteExternalName, or offer.
   * @return value or {@code null} for none
   */
  public java.lang.String getProduct() {
    return product;
  }

  /**
   * Output only. The identifier of the entity that was purchased. This may actually represent a
   * product, quote, or offer. We strongly recommend that you use the following more explicit
   * fields: productExternalName, quoteExternalName, or offer.
   * @param product product or {@code null} for none
   */
  public Entitlement setProduct(java.lang.String product) {
    this.product = product;
    return this;
  }

  /**
   * Output only. The identifier of the product that was procured.
   * @return value or {@code null} for none
   */
  public java.lang.String getProductExternalName() {
    return productExternalName;
  }

  /**
   * Output only. The identifier of the product that was procured.
   * @param productExternalName productExternalName or {@code null} for none
   */
  public Entitlement setProductExternalName(java.lang.String productExternalName) {
    this.productExternalName = productExternalName;
    return this;
  }

  /**
   * Output only. The identifier of the service provider that this entitlement was created against.
   * Each service provider is assigned a unique provider value when they onboard with Cloud Commerce
   * platform.
   * @return value or {@code null} for none
   */
  public java.lang.String getProvider() {
    return provider;
  }

  /**
   * Output only. The identifier of the service provider that this entitlement was created against.
   * Each service provider is assigned a unique provider value when they onboard with Cloud Commerce
   * platform.
   * @param provider provider or {@code null} for none
   */
  public Entitlement setProvider(java.lang.String provider) {
    this.provider = provider;
    return this;
  }

  /**
   * Output only. The identifier of the quote that was used to procure. Empty if the order is not
   * purchased using a quote.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuoteExternalName() {
    return quoteExternalName;
  }

  /**
   * Output only. The identifier of the quote that was used to procure. Empty if the order is not
   * purchased using a quote.
   * @param quoteExternalName quoteExternalName or {@code null} for none
   */
  public Entitlement setQuoteExternalName(java.lang.String quoteExternalName) {
    this.quoteExternalName = quoteExternalName;
    return this;
  }

  /**
   * Output only. The state of the entitlement.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the entitlement.
   * @param state state or {@code null} for none
   */
  public Entitlement setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. End time for the subscription corresponding to this entitlement.
   * @return value or {@code null} for none
   */
  public String getSubscriptionEndTime() {
    return subscriptionEndTime;
  }

  /**
   * Output only. End time for the subscription corresponding to this entitlement.
   * @param subscriptionEndTime subscriptionEndTime or {@code null} for none
   */
  public Entitlement setSubscriptionEndTime(String subscriptionEndTime) {
    this.subscriptionEndTime = subscriptionEndTime;
    return this;
  }

  /**
   * Output only. The last update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Entitlement setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The consumerId to use when reporting usage through the Service Control API. See
   * the consumerId field at [Reporting Metrics](https://cloud.google.com/service-control/reporting-
   * metrics) for more details. This field is present only if the product has usage-based billing
   * configured.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsageReportingId() {
    return usageReportingId;
  }

  /**
   * Output only. The consumerId to use when reporting usage through the Service Control API. See
   * the consumerId field at [Reporting Metrics](https://cloud.google.com/service-control/reporting-
   * metrics) for more details. This field is present only if the product has usage-based billing
   * configured.
   * @param usageReportingId usageReportingId or {@code null} for none
   */
  public Entitlement setUsageReportingId(java.lang.String usageReportingId) {
    this.usageReportingId = usageReportingId;
    return this;
  }

  @Override
  public Entitlement set(String fieldName, Object value) {
    return (Entitlement) super.set(fieldName, value);
  }

  @Override
  public Entitlement clone() {
    return (Entitlement) super.clone();
  }

}
