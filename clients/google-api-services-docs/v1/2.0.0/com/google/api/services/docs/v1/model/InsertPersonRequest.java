/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.docs.v1.model;

/**
 * Inserts a person mention.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Docs API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class InsertPersonRequest extends com.google.api.client.json.GenericJson {

  /**
   * Inserts the person at the end of a header, footer, footnote or the document body.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EndOfSegmentLocation endOfSegmentLocation;

  /**
   * Inserts the person at a specific index in the document. The person mention must be inserted
   * inside the bounds of an existing Paragraph. For instance, it cannot be inserted at a table's
   * start index (i.e. between the table and its preceding paragraph). People cannot be inserted
   * inside an equation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Location location;

  /**
   * The properties of the person mention to insert.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PersonProperties personProperties;

  /**
   * Inserts the person at the end of a header, footer, footnote or the document body.
   * @return value or {@code null} for none
   */
  public EndOfSegmentLocation getEndOfSegmentLocation() {
    return endOfSegmentLocation;
  }

  /**
   * Inserts the person at the end of a header, footer, footnote or the document body.
   * @param endOfSegmentLocation endOfSegmentLocation or {@code null} for none
   */
  public InsertPersonRequest setEndOfSegmentLocation(EndOfSegmentLocation endOfSegmentLocation) {
    this.endOfSegmentLocation = endOfSegmentLocation;
    return this;
  }

  /**
   * Inserts the person at a specific index in the document. The person mention must be inserted
   * inside the bounds of an existing Paragraph. For instance, it cannot be inserted at a table's
   * start index (i.e. between the table and its preceding paragraph). People cannot be inserted
   * inside an equation.
   * @return value or {@code null} for none
   */
  public Location getLocation() {
    return location;
  }

  /**
   * Inserts the person at a specific index in the document. The person mention must be inserted
   * inside the bounds of an existing Paragraph. For instance, it cannot be inserted at a table's
   * start index (i.e. between the table and its preceding paragraph). People cannot be inserted
   * inside an equation.
   * @param location location or {@code null} for none
   */
  public InsertPersonRequest setLocation(Location location) {
    this.location = location;
    return this;
  }

  /**
   * The properties of the person mention to insert.
   * @return value or {@code null} for none
   */
  public PersonProperties getPersonProperties() {
    return personProperties;
  }

  /**
   * The properties of the person mention to insert.
   * @param personProperties personProperties or {@code null} for none
   */
  public InsertPersonRequest setPersonProperties(PersonProperties personProperties) {
    this.personProperties = personProperties;
    return this;
  }

  @Override
  public InsertPersonRequest set(String fieldName, Object value) {
    return (InsertPersonRequest) super.set(fieldName, value);
  }

  @Override
  public InsertPersonRequest clone() {
    return (InsertPersonRequest) super.clone();
  }

}
