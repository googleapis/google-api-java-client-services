/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.binaryauthorization.v1beta1.model;

/**
 * A public key in the PkixPublicKey format (see https://tools.ietf.org/html/rfc5280#section-4.1.2.7
 * for details). Public keys of this type are typically textually encoded using the PEM format.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Binary Authorization API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PkixPublicKey extends com.google.api.client.json.GenericJson {

  /**
   * A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publicKeyPem;

  /**
   * The signature algorithm used to verify a message against a signature using this key. These
   * signature algorithm must match the structure and any object identifiers encoded in
   * `public_key_pem` (i.e. this algorithm must match that of the public key).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String signatureAlgorithm;

  /**
   * A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13
   * @return value or {@code null} for none
   */
  public java.lang.String getPublicKeyPem() {
    return publicKeyPem;
  }

  /**
   * A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13
   * @param publicKeyPem publicKeyPem or {@code null} for none
   */
  public PkixPublicKey setPublicKeyPem(java.lang.String publicKeyPem) {
    this.publicKeyPem = publicKeyPem;
    return this;
  }

  /**
   * The signature algorithm used to verify a message against a signature using this key. These
   * signature algorithm must match the structure and any object identifiers encoded in
   * `public_key_pem` (i.e. this algorithm must match that of the public key).
   * @return value or {@code null} for none
   */
  public java.lang.String getSignatureAlgorithm() {
    return signatureAlgorithm;
  }

  /**
   * The signature algorithm used to verify a message against a signature using this key. These
   * signature algorithm must match the structure and any object identifiers encoded in
   * `public_key_pem` (i.e. this algorithm must match that of the public key).
   * @param signatureAlgorithm signatureAlgorithm or {@code null} for none
   */
  public PkixPublicKey setSignatureAlgorithm(java.lang.String signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
    return this;
  }

  @Override
  public PkixPublicKey set(String fieldName, Object value) {
    return (PkixPublicKey) super.set(fieldName, value);
  }

  @Override
  public PkixPublicKey clone() {
    return (PkixPublicKey) super.clone();
  }

}
