/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Parameters for semantic similarity search based retrieval.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams extends com.google.api.client.json.GenericJson {

  /**
   * Required. Query to use for similarity search retrieval. If provided, then the parent
   * ReasoningEngine must have ReasoningEngineContextSpec.MemoryBankConfig.SimilaritySearchConfig
   * set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String searchQuery;

  /**
   * Optional. The maximum number of memories to return. The service may return fewer than this
   * value. If unspecified, at most 3 memories will be returned. The maximum value is 100; values
   * above 100 will be coerced to 100.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer topK;

  /**
   * Required. Query to use for similarity search retrieval. If provided, then the parent
   * ReasoningEngine must have ReasoningEngineContextSpec.MemoryBankConfig.SimilaritySearchConfig
   * set.
   * @return value or {@code null} for none
   */
  public java.lang.String getSearchQuery() {
    return searchQuery;
  }

  /**
   * Required. Query to use for similarity search retrieval. If provided, then the parent
   * ReasoningEngine must have ReasoningEngineContextSpec.MemoryBankConfig.SimilaritySearchConfig
   * set.
   * @param searchQuery searchQuery or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams setSearchQuery(java.lang.String searchQuery) {
    this.searchQuery = searchQuery;
    return this;
  }

  /**
   * Optional. The maximum number of memories to return. The service may return fewer than this
   * value. If unspecified, at most 3 memories will be returned. The maximum value is 100; values
   * above 100 will be coerced to 100.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTopK() {
    return topK;
  }

  /**
   * Optional. The maximum number of memories to return. The service may return fewer than this
   * value. If unspecified, at most 3 memories will be returned. The maximum value is 100; values
   * above 100 will be coerced to 100.
   * @param topK topK or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams setTopK(java.lang.Integer topK) {
    this.topK = topK;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams clone() {
    return (GoogleCloudAiplatformV1beta1RetrieveMemoriesRequestSimilaritySearchParams) super.clone();
  }

}
