/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.urlshortener.model;

/**
 * Model definition for Url.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the URL Shortener API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Url extends com.google.api.client.json.GenericJson {

  /**
   * A summary of the click analytics for the short and long URL. Might not be present if not
   * requested or currently unavailable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AnalyticsSummary analytics;

  /**
   * Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ
   * format, e.g. "2010-10-14T19:01:24.944+00:00".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String created;

  /**
   * Short URL, e.g. "http://goo.gl/l6MS".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The fixed string "urlshortener#url".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Long URL, e.g. "http://www.google.com/". Might not be present if the status is "REMOVED".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String longUrl;

  /**
   * Status of the target URL. Possible values: "OK", "MALWARE", "PHISHING", or "REMOVED". A URL
   * might be marked "REMOVED" if it was flagged as spam, for example.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * A summary of the click analytics for the short and long URL. Might not be present if not
   * requested or currently unavailable.
   * @return value or {@code null} for none
   */
  public AnalyticsSummary getAnalytics() {
    return analytics;
  }

  /**
   * A summary of the click analytics for the short and long URL. Might not be present if not
   * requested or currently unavailable.
   * @param analytics analytics or {@code null} for none
   */
  public Url setAnalytics(AnalyticsSummary analytics) {
    this.analytics = analytics;
    return this;
  }

  /**
   * Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ
   * format, e.g. "2010-10-14T19:01:24.944+00:00".
   * @return value or {@code null} for none
   */
  public java.lang.String getCreated() {
    return created;
  }

  /**
   * Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ
   * format, e.g. "2010-10-14T19:01:24.944+00:00".
   * @param created created or {@code null} for none
   */
  public Url setCreated(java.lang.String created) {
    this.created = created;
    return this;
  }

  /**
   * Short URL, e.g. "http://goo.gl/l6MS".
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Short URL, e.g. "http://goo.gl/l6MS".
   * @param id id or {@code null} for none
   */
  public Url setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * The fixed string "urlshortener#url".
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The fixed string "urlshortener#url".
   * @param kind kind or {@code null} for none
   */
  public Url setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Long URL, e.g. "http://www.google.com/". Might not be present if the status is "REMOVED".
   * @return value or {@code null} for none
   */
  public java.lang.String getLongUrl() {
    return longUrl;
  }

  /**
   * Long URL, e.g. "http://www.google.com/". Might not be present if the status is "REMOVED".
   * @param longUrl longUrl or {@code null} for none
   */
  public Url setLongUrl(java.lang.String longUrl) {
    this.longUrl = longUrl;
    return this;
  }

  /**
   * Status of the target URL. Possible values: "OK", "MALWARE", "PHISHING", or "REMOVED". A URL
   * might be marked "REMOVED" if it was flagged as spam, for example.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Status of the target URL. Possible values: "OK", "MALWARE", "PHISHING", or "REMOVED". A URL
   * might be marked "REMOVED" if it was flagged as spam, for example.
   * @param status status or {@code null} for none
   */
  public Url setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public Url set(String fieldName, Object value) {
    return (Url) super.set(fieldName, value);
  }

  @Override
  public Url clone() {
    return (Url) super.clone();
  }

}
