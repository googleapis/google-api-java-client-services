/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dfareporting.model;

/**
 * Contains field filter information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Campaign Manager 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FieldFilter extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The boolean values, only applicable when rhs_value_type is BOOL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean boolValue;

  /**
   * Optional. The dependent values, only applicable when rhs_value_type is DEPENDENT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DependentFieldValue dependentFieldValue;

  /**
   * Optional. The field ID on the left hand side of the expression.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer fieldId;

  /**
   * Optional. Left hand side of the expression match type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matchType;

  /**
   * Optional. The request value, only applicable when rhs_value_type is REQUEST.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RequestValue requestValue;

  /**
   * Optional. The string value, only applicable when rhs_value_type is STRING.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stringValue;

  /**
   * Optional. Right hand side of the expression.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String valueType;

  /**
   * Optional. The boolean values, only applicable when rhs_value_type is BOOL.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBoolValue() {
    return boolValue;
  }

  /**
   * Optional. The boolean values, only applicable when rhs_value_type is BOOL.
   * @param boolValue boolValue or {@code null} for none
   */
  public FieldFilter setBoolValue(java.lang.Boolean boolValue) {
    this.boolValue = boolValue;
    return this;
  }

  /**
   * Optional. The dependent values, only applicable when rhs_value_type is DEPENDENT.
   * @return value or {@code null} for none
   */
  public DependentFieldValue getDependentFieldValue() {
    return dependentFieldValue;
  }

  /**
   * Optional. The dependent values, only applicable when rhs_value_type is DEPENDENT.
   * @param dependentFieldValue dependentFieldValue or {@code null} for none
   */
  public FieldFilter setDependentFieldValue(DependentFieldValue dependentFieldValue) {
    this.dependentFieldValue = dependentFieldValue;
    return this;
  }

  /**
   * Optional. The field ID on the left hand side of the expression.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFieldId() {
    return fieldId;
  }

  /**
   * Optional. The field ID on the left hand side of the expression.
   * @param fieldId fieldId or {@code null} for none
   */
  public FieldFilter setFieldId(java.lang.Integer fieldId) {
    this.fieldId = fieldId;
    return this;
  }

  /**
   * Optional. Left hand side of the expression match type.
   * @return value or {@code null} for none
   */
  public java.lang.String getMatchType() {
    return matchType;
  }

  /**
   * Optional. Left hand side of the expression match type.
   * @param matchType matchType or {@code null} for none
   */
  public FieldFilter setMatchType(java.lang.String matchType) {
    this.matchType = matchType;
    return this;
  }

  /**
   * Optional. The request value, only applicable when rhs_value_type is REQUEST.
   * @return value or {@code null} for none
   */
  public RequestValue getRequestValue() {
    return requestValue;
  }

  /**
   * Optional. The request value, only applicable when rhs_value_type is REQUEST.
   * @param requestValue requestValue or {@code null} for none
   */
  public FieldFilter setRequestValue(RequestValue requestValue) {
    this.requestValue = requestValue;
    return this;
  }

  /**
   * Optional. The string value, only applicable when rhs_value_type is STRING.
   * @return value or {@code null} for none
   */
  public java.lang.String getStringValue() {
    return stringValue;
  }

  /**
   * Optional. The string value, only applicable when rhs_value_type is STRING.
   * @param stringValue stringValue or {@code null} for none
   */
  public FieldFilter setStringValue(java.lang.String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * Optional. Right hand side of the expression.
   * @return value or {@code null} for none
   */
  public java.lang.String getValueType() {
    return valueType;
  }

  /**
   * Optional. Right hand side of the expression.
   * @param valueType valueType or {@code null} for none
   */
  public FieldFilter setValueType(java.lang.String valueType) {
    this.valueType = valueType;
    return this;
  }

  @Override
  public FieldFilter set(String fieldName, Object value) {
    return (FieldFilter) super.set(fieldName, value);
  }

  @Override
  public FieldFilter clone() {
    return (FieldFilter) super.clone();
  }

}
