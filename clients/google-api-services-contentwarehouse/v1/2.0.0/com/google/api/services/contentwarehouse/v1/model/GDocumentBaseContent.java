/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Main content section
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GDocumentBaseContent extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("AuthMethod")
  private java.lang.Integer authMethod;

  /**
   * The actual length of the content: If Representation is compressed, this equals to
   * Content.UncompressedLength; otherwise it is the length of the representation string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("ContentLength")
  private java.lang.Integer contentLength;

  /**
   * See enum ContentType in //depot/google3/webutil/http/content-type.proto.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("ContentType")
  private java.lang.Integer contentType;

  /**
   * Seconds since Unix epoch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("CrawlTime") @com.google.api.client.json.JsonString
  private java.lang.Long crawlTime;

  /**
   * See //depot/google3/i18n/encodings/public/encodings.h Encoding of representation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Encoding")
  private java.lang.Integer encoding;

  /**
   * Set to false if Representation does not contain HTTP headers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("HasHttpHeader")
  private java.lang.Boolean hasHttpHeader;

  /**
   * A Language enum value. See: go/language-enum Default is english
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Language")
  private java.lang.Integer language;

  /**
   * If OriginalEncoding is present, the body part of the Representation was converted to UTF-8,
   * Encoding was set to UTF8, and OriginalEncoding was set to the original encoding before
   * conversion. However, the HTTP headers part of the content might not be valid UTF-8. -1=an
   * invalid value
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("OriginalEncoding")
  private java.lang.Integer originalEncoding;

  /**
   * Possibly compressed for old documents. It is not compressed for docjoins produced by Raffia
   * after ~2012.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Representation")
  private java.lang.String representation;

  /**
   * Historically present if Representation is compressed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("UncompressedLength")
  private java.lang.Integer uncompressedLength;

  /**
   * Whether the content was visual right-to-left, and if so, what type of visual document it is.
   * Must be one of the values in enum VisualType from google3/repository/rtl/visualtype.h Default
   * is NOT_VISUAL_DOCUMENT. See http://wiki/Main/RtlLanguages for background.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("VisualType")
  private java.lang.Integer visualType;

  /**
   * Crawled file size of the original document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer crawledFileSize;

  /**
   * GeometryAnnotations, encoded with GeometryUtil::DeltaEncode() to reduce disk space usage. Use
   * GeometryUtil::DeltaDecode() to decode this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encodedGeometryAnnotations;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getAuthMethod() {
    return authMethod;
  }

  /**
   * @param authMethod authMethod or {@code null} for none
   */
  public GDocumentBaseContent setAuthMethod(java.lang.Integer authMethod) {
    this.authMethod = authMethod;
    return this;
  }

  /**
   * The actual length of the content: If Representation is compressed, this equals to
   * Content.UncompressedLength; otherwise it is the length of the representation string.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContentLength() {
    return contentLength;
  }

  /**
   * The actual length of the content: If Representation is compressed, this equals to
   * Content.UncompressedLength; otherwise it is the length of the representation string.
   * @param contentLength contentLength or {@code null} for none
   */
  public GDocumentBaseContent setContentLength(java.lang.Integer contentLength) {
    this.contentLength = contentLength;
    return this;
  }

  /**
   * See enum ContentType in //depot/google3/webutil/http/content-type.proto.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContentType() {
    return contentType;
  }

  /**
   * See enum ContentType in //depot/google3/webutil/http/content-type.proto.
   * @param contentType contentType or {@code null} for none
   */
  public GDocumentBaseContent setContentType(java.lang.Integer contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Seconds since Unix epoch.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCrawlTime() {
    return crawlTime;
  }

  /**
   * Seconds since Unix epoch.
   * @param crawlTime crawlTime or {@code null} for none
   */
  public GDocumentBaseContent setCrawlTime(java.lang.Long crawlTime) {
    this.crawlTime = crawlTime;
    return this;
  }

  /**
   * See //depot/google3/i18n/encodings/public/encodings.h Encoding of representation
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEncoding() {
    return encoding;
  }

  /**
   * See //depot/google3/i18n/encodings/public/encodings.h Encoding of representation
   * @param encoding encoding or {@code null} for none
   */
  public GDocumentBaseContent setEncoding(java.lang.Integer encoding) {
    this.encoding = encoding;
    return this;
  }

  /**
   * Set to false if Representation does not contain HTTP headers.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasHttpHeader() {
    return hasHttpHeader;
  }

  /**
   * Set to false if Representation does not contain HTTP headers.
   * @param hasHttpHeader hasHttpHeader or {@code null} for none
   */
  public GDocumentBaseContent setHasHttpHeader(java.lang.Boolean hasHttpHeader) {
    this.hasHttpHeader = hasHttpHeader;
    return this;
  }

  /**
   * A Language enum value. See: go/language-enum Default is english
   * @return value or {@code null} for none
   */
  public java.lang.Integer getLanguage() {
    return language;
  }

  /**
   * A Language enum value. See: go/language-enum Default is english
   * @param language language or {@code null} for none
   */
  public GDocumentBaseContent setLanguage(java.lang.Integer language) {
    this.language = language;
    return this;
  }

  /**
   * If OriginalEncoding is present, the body part of the Representation was converted to UTF-8,
   * Encoding was set to UTF8, and OriginalEncoding was set to the original encoding before
   * conversion. However, the HTTP headers part of the content might not be valid UTF-8. -1=an
   * invalid value
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOriginalEncoding() {
    return originalEncoding;
  }

  /**
   * If OriginalEncoding is present, the body part of the Representation was converted to UTF-8,
   * Encoding was set to UTF8, and OriginalEncoding was set to the original encoding before
   * conversion. However, the HTTP headers part of the content might not be valid UTF-8. -1=an
   * invalid value
   * @param originalEncoding originalEncoding or {@code null} for none
   */
  public GDocumentBaseContent setOriginalEncoding(java.lang.Integer originalEncoding) {
    this.originalEncoding = originalEncoding;
    return this;
  }

  /**
   * Possibly compressed for old documents. It is not compressed for docjoins produced by Raffia
   * after ~2012.
   * @see #decodeRepresentation()
   * @return value or {@code null} for none
   */
  public java.lang.String getRepresentation() {
    return representation;
  }

  /**
   * Possibly compressed for old documents. It is not compressed for docjoins produced by Raffia
   * after ~2012.
   * @see #getRepresentation()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeRepresentation() {
    return com.google.api.client.util.Base64.decodeBase64(representation);
  }

  /**
   * Possibly compressed for old documents. It is not compressed for docjoins produced by Raffia
   * after ~2012.
   * @see #encodeRepresentation()
   * @param representation representation or {@code null} for none
   */
  public GDocumentBaseContent setRepresentation(java.lang.String representation) {
    this.representation = representation;
    return this;
  }

  /**
   * Possibly compressed for old documents. It is not compressed for docjoins produced by Raffia
   * after ~2012.
   * @see #setRepresentation()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GDocumentBaseContent encodeRepresentation(byte[] representation) {
    this.representation = com.google.api.client.util.Base64.encodeBase64URLSafeString(representation);
    return this;
  }

  /**
   * Historically present if Representation is compressed.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getUncompressedLength() {
    return uncompressedLength;
  }

  /**
   * Historically present if Representation is compressed.
   * @param uncompressedLength uncompressedLength or {@code null} for none
   */
  public GDocumentBaseContent setUncompressedLength(java.lang.Integer uncompressedLength) {
    this.uncompressedLength = uncompressedLength;
    return this;
  }

  /**
   * Whether the content was visual right-to-left, and if so, what type of visual document it is.
   * Must be one of the values in enum VisualType from google3/repository/rtl/visualtype.h Default
   * is NOT_VISUAL_DOCUMENT. See http://wiki/Main/RtlLanguages for background.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getVisualType() {
    return visualType;
  }

  /**
   * Whether the content was visual right-to-left, and if so, what type of visual document it is.
   * Must be one of the values in enum VisualType from google3/repository/rtl/visualtype.h Default
   * is NOT_VISUAL_DOCUMENT. See http://wiki/Main/RtlLanguages for background.
   * @param visualType visualType or {@code null} for none
   */
  public GDocumentBaseContent setVisualType(java.lang.Integer visualType) {
    this.visualType = visualType;
    return this;
  }

  /**
   * Crawled file size of the original document.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCrawledFileSize() {
    return crawledFileSize;
  }

  /**
   * Crawled file size of the original document.
   * @param crawledFileSize crawledFileSize or {@code null} for none
   */
  public GDocumentBaseContent setCrawledFileSize(java.lang.Integer crawledFileSize) {
    this.crawledFileSize = crawledFileSize;
    return this;
  }

  /**
   * GeometryAnnotations, encoded with GeometryUtil::DeltaEncode() to reduce disk space usage. Use
   * GeometryUtil::DeltaDecode() to decode this field.
   * @see #decodeEncodedGeometryAnnotations()
   * @return value or {@code null} for none
   */
  public java.lang.String getEncodedGeometryAnnotations() {
    return encodedGeometryAnnotations;
  }

  /**
   * GeometryAnnotations, encoded with GeometryUtil::DeltaEncode() to reduce disk space usage. Use
   * GeometryUtil::DeltaDecode() to decode this field.
   * @see #getEncodedGeometryAnnotations()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeEncodedGeometryAnnotations() {
    return com.google.api.client.util.Base64.decodeBase64(encodedGeometryAnnotations);
  }

  /**
   * GeometryAnnotations, encoded with GeometryUtil::DeltaEncode() to reduce disk space usage. Use
   * GeometryUtil::DeltaDecode() to decode this field.
   * @see #encodeEncodedGeometryAnnotations()
   * @param encodedGeometryAnnotations encodedGeometryAnnotations or {@code null} for none
   */
  public GDocumentBaseContent setEncodedGeometryAnnotations(java.lang.String encodedGeometryAnnotations) {
    this.encodedGeometryAnnotations = encodedGeometryAnnotations;
    return this;
  }

  /**
   * GeometryAnnotations, encoded with GeometryUtil::DeltaEncode() to reduce disk space usage. Use
   * GeometryUtil::DeltaDecode() to decode this field.
   * @see #setEncodedGeometryAnnotations()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GDocumentBaseContent encodeEncodedGeometryAnnotations(byte[] encodedGeometryAnnotations) {
    this.encodedGeometryAnnotations = com.google.api.client.util.Base64.encodeBase64URLSafeString(encodedGeometryAnnotations);
    return this;
  }

  @Override
  public GDocumentBaseContent set(String fieldName, Object value) {
    return (GDocumentBaseContent) super.set(fieldName, value);
  }

  @Override
  public GDocumentBaseContent clone() {
    return (GDocumentBaseContent) super.clone();
  }

}
