/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha.model;

/**
 * A Reporting Data Annotation is a comment connected to certain dates for reporting data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Admin API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAnalyticsAdminV1alphaReportingDataAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * If set, the Reporting Data Annotation is for a specific date represented by this field. The
   * date must be a valid date with year, month and day set. The date may be in the past, present,
   * or future.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate annotationDate;

  /**
   * If set, the Reporting Data Annotation is for a range of dates represented by this field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaReportingDataAnnotationDateRange annotationDateRange;

  /**
   * Required. The color used for display of this Reporting Data Annotation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String color;

  /**
   * Optional. Description for this Reporting Data Annotation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Identifier. Resource name of this Reporting Data Annotation. Format:
   * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}' Format:
   * 'properties/123/reportingDataAnnotations/456'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. If true, this annotation was generated by the Google Analytics system. System-
   * generated annotations cannot be updated or deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean systemGenerated;

  /**
   * Required. Human-readable title for this Reporting Data Annotation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * If set, the Reporting Data Annotation is for a specific date represented by this field. The
   * date must be a valid date with year, month and day set. The date may be in the past, present,
   * or future.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getAnnotationDate() {
    return annotationDate;
  }

  /**
   * If set, the Reporting Data Annotation is for a specific date represented by this field. The
   * date must be a valid date with year, month and day set. The date may be in the past, present,
   * or future.
   * @param annotationDate annotationDate or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setAnnotationDate(GoogleTypeDate annotationDate) {
    this.annotationDate = annotationDate;
    return this;
  }

  /**
   * If set, the Reporting Data Annotation is for a range of dates represented by this field.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotationDateRange getAnnotationDateRange() {
    return annotationDateRange;
  }

  /**
   * If set, the Reporting Data Annotation is for a range of dates represented by this field.
   * @param annotationDateRange annotationDateRange or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setAnnotationDateRange(GoogleAnalyticsAdminV1alphaReportingDataAnnotationDateRange annotationDateRange) {
    this.annotationDateRange = annotationDateRange;
    return this;
  }

  /**
   * Required. The color used for display of this Reporting Data Annotation.
   * @return value or {@code null} for none
   */
  public java.lang.String getColor() {
    return color;
  }

  /**
   * Required. The color used for display of this Reporting Data Annotation.
   * @param color color or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setColor(java.lang.String color) {
    this.color = color;
    return this;
  }

  /**
   * Optional. Description for this Reporting Data Annotation.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description for this Reporting Data Annotation.
   * @param description description or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Identifier. Resource name of this Reporting Data Annotation. Format:
   * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}' Format:
   * 'properties/123/reportingDataAnnotations/456'
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. Identifier. Resource name of this Reporting Data Annotation. Format:
   * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}' Format:
   * 'properties/123/reportingDataAnnotations/456'
   * @param name name or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. If true, this annotation was generated by the Google Analytics system. System-
   * generated annotations cannot be updated or deleted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSystemGenerated() {
    return systemGenerated;
  }

  /**
   * Output only. If true, this annotation was generated by the Google Analytics system. System-
   * generated annotations cannot be updated or deleted.
   * @param systemGenerated systemGenerated or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setSystemGenerated(java.lang.Boolean systemGenerated) {
    this.systemGenerated = systemGenerated;
    return this;
  }

  /**
   * Required. Human-readable title for this Reporting Data Annotation.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Required. Human-readable title for this Reporting Data Annotation.
   * @param title title or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation set(String fieldName, Object value) {
    return (GoogleAnalyticsAdminV1alphaReportingDataAnnotation) super.set(fieldName, value);
  }

  @Override
  public GoogleAnalyticsAdminV1alphaReportingDataAnnotation clone() {
    return (GoogleAnalyticsAdminV1alphaReportingDataAnnotation) super.clone();
  }

}
