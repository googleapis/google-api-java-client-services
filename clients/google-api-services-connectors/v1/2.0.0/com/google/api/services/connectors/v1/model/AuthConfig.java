/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * AuthConfig defines details of a authentication type.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthConfig extends com.google.api.client.json.GenericJson {

  /**
   * List containing additional auth configs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ConfigVariable> additionalVariables;

  /**
   * The type of authentication configured.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authType;

  /**
   * Oauth2AuthCodeFlow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Oauth2AuthCodeFlow oauth2AuthCodeFlow;

  /**
   * Oauth2ClientCredentials.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Oauth2ClientCredentials oauth2ClientCredentials;

  /**
   * Oauth2JwtBearer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Oauth2JwtBearer oauth2JwtBearer;

  /**
   * SSH Public Key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SshPublicKey sshPublicKey;

  /**
   * UserPassword.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UserPassword userPassword;

  /**
   * List containing additional auth configs.
   * @return value or {@code null} for none
   */
  public java.util.List<ConfigVariable> getAdditionalVariables() {
    return additionalVariables;
  }

  /**
   * List containing additional auth configs.
   * @param additionalVariables additionalVariables or {@code null} for none
   */
  public AuthConfig setAdditionalVariables(java.util.List<ConfigVariable> additionalVariables) {
    this.additionalVariables = additionalVariables;
    return this;
  }

  /**
   * The type of authentication configured.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthType() {
    return authType;
  }

  /**
   * The type of authentication configured.
   * @param authType authType or {@code null} for none
   */
  public AuthConfig setAuthType(java.lang.String authType) {
    this.authType = authType;
    return this;
  }

  /**
   * Oauth2AuthCodeFlow.
   * @return value or {@code null} for none
   */
  public Oauth2AuthCodeFlow getOauth2AuthCodeFlow() {
    return oauth2AuthCodeFlow;
  }

  /**
   * Oauth2AuthCodeFlow.
   * @param oauth2AuthCodeFlow oauth2AuthCodeFlow or {@code null} for none
   */
  public AuthConfig setOauth2AuthCodeFlow(Oauth2AuthCodeFlow oauth2AuthCodeFlow) {
    this.oauth2AuthCodeFlow = oauth2AuthCodeFlow;
    return this;
  }

  /**
   * Oauth2ClientCredentials.
   * @return value or {@code null} for none
   */
  public Oauth2ClientCredentials getOauth2ClientCredentials() {
    return oauth2ClientCredentials;
  }

  /**
   * Oauth2ClientCredentials.
   * @param oauth2ClientCredentials oauth2ClientCredentials or {@code null} for none
   */
  public AuthConfig setOauth2ClientCredentials(Oauth2ClientCredentials oauth2ClientCredentials) {
    this.oauth2ClientCredentials = oauth2ClientCredentials;
    return this;
  }

  /**
   * Oauth2JwtBearer.
   * @return value or {@code null} for none
   */
  public Oauth2JwtBearer getOauth2JwtBearer() {
    return oauth2JwtBearer;
  }

  /**
   * Oauth2JwtBearer.
   * @param oauth2JwtBearer oauth2JwtBearer or {@code null} for none
   */
  public AuthConfig setOauth2JwtBearer(Oauth2JwtBearer oauth2JwtBearer) {
    this.oauth2JwtBearer = oauth2JwtBearer;
    return this;
  }

  /**
   * SSH Public Key.
   * @return value or {@code null} for none
   */
  public SshPublicKey getSshPublicKey() {
    return sshPublicKey;
  }

  /**
   * SSH Public Key.
   * @param sshPublicKey sshPublicKey or {@code null} for none
   */
  public AuthConfig setSshPublicKey(SshPublicKey sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
    return this;
  }

  /**
   * UserPassword.
   * @return value or {@code null} for none
   */
  public UserPassword getUserPassword() {
    return userPassword;
  }

  /**
   * UserPassword.
   * @param userPassword userPassword or {@code null} for none
   */
  public AuthConfig setUserPassword(UserPassword userPassword) {
    this.userPassword = userPassword;
    return this;
  }

  @Override
  public AuthConfig set(String fieldName, Object value) {
    return (AuthConfig) super.set(fieldName, value);
  }

  @Override
  public AuthConfig clone() {
    return (AuthConfig) super.clone();
  }

}
