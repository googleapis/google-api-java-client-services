/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v2.model;

/**
 * ExecutionTemplate describes the data an execution should have when created from a template.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRunV2ExecutionTemplate extends com.google.api.client.json.GenericJson {

  /**
   * KRM-style annotations for the resource. Cloud Run API v2 does not support annotations with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1
   * now have a corresponding field in v2 ExecutionTemplate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * KRM-style labels for the resource. Cloud Run API v2 does not support labels with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now
   * have a corresponding field in v2 ExecutionTemplate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Specifies the maximum desired number of tasks the execution should run at given time. Must be
   * <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value
   * will be used for that execution. The actual number of tasks running in steady state will be
   * less than this number when there are fewer tasks waiting to be completed remaining, i.e. when
   * the work left to do is less than max parallelism.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer parallelism;

  /**
   * Specifies the desired number of tasks the execution should run. Setting to 1 means that
   * parallelism is limited to 1 and the success of that task signals the success of the execution.
   * More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer taskCount;

  /**
   * Required. Describes the task(s) that will be created when executing an execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRunV2TaskTemplate template;

  /**
   * KRM-style annotations for the resource. Cloud Run API v2 does not support annotations with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1
   * now have a corresponding field in v2 ExecutionTemplate.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * KRM-style annotations for the resource. Cloud Run API v2 does not support annotations with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1
   * now have a corresponding field in v2 ExecutionTemplate.
   * @param annotations annotations or {@code null} for none
   */
  public GoogleCloudRunV2ExecutionTemplate setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * KRM-style labels for the resource. Cloud Run API v2 does not support labels with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now
   * have a corresponding field in v2 ExecutionTemplate.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * KRM-style labels for the resource. Cloud Run API v2 does not support labels with
   * `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or
   * `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now
   * have a corresponding field in v2 ExecutionTemplate.
   * @param labels labels or {@code null} for none
   */
  public GoogleCloudRunV2ExecutionTemplate setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Specifies the maximum desired number of tasks the execution should run at given time. Must be
   * <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value
   * will be used for that execution. The actual number of tasks running in steady state will be
   * less than this number when there are fewer tasks waiting to be completed remaining, i.e. when
   * the work left to do is less than max parallelism.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getParallelism() {
    return parallelism;
  }

  /**
   * Specifies the maximum desired number of tasks the execution should run at given time. Must be
   * <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value
   * will be used for that execution. The actual number of tasks running in steady state will be
   * less than this number when there are fewer tasks waiting to be completed remaining, i.e. when
   * the work left to do is less than max parallelism.
   * @param parallelism parallelism or {@code null} for none
   */
  public GoogleCloudRunV2ExecutionTemplate setParallelism(java.lang.Integer parallelism) {
    this.parallelism = parallelism;
    return this;
  }

  /**
   * Specifies the desired number of tasks the execution should run. Setting to 1 means that
   * parallelism is limited to 1 and the success of that task signals the success of the execution.
   * More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTaskCount() {
    return taskCount;
  }

  /**
   * Specifies the desired number of tasks the execution should run. Setting to 1 means that
   * parallelism is limited to 1 and the success of that task signals the success of the execution.
   * More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * @param taskCount taskCount or {@code null} for none
   */
  public GoogleCloudRunV2ExecutionTemplate setTaskCount(java.lang.Integer taskCount) {
    this.taskCount = taskCount;
    return this;
  }

  /**
   * Required. Describes the task(s) that will be created when executing an execution.
   * @return value or {@code null} for none
   */
  public GoogleCloudRunV2TaskTemplate getTemplate() {
    return template;
  }

  /**
   * Required. Describes the task(s) that will be created when executing an execution.
   * @param template template or {@code null} for none
   */
  public GoogleCloudRunV2ExecutionTemplate setTemplate(GoogleCloudRunV2TaskTemplate template) {
    this.template = template;
    return this;
  }

  @Override
  public GoogleCloudRunV2ExecutionTemplate set(String fieldName, Object value) {
    return (GoogleCloudRunV2ExecutionTemplate) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRunV2ExecutionTemplate clone() {
    return (GoogleCloudRunV2ExecutionTemplate) super.clone();
  }

}
