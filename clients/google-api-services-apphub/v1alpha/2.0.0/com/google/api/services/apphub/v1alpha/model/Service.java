/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apphub.v1alpha.model;

/**
 * Service is an App Hub data model that contains a discovered service, which represents a
 * network/api interface that exposes some functionality to clients for consumption over the
 * network.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the App Hub API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Service extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Consumer provided attributes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Attributes attributes;

  /**
   * Output only. Create time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. User-defined description of a Service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Immutable. The resource name of the original discovered service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String discoveredService;

  /**
   * Optional. User-defined name for the Service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Identifier. The resource name of a Service. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/services/{service-id}"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Properties of an underlying compute resource that can comprise a Service. These
   * are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceProperties serviceProperties;

  /**
   * Output only. Reference to an underlying networking resource that can comprise a Service. These
   * are immutable.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceReference serviceReference;

  /**
   * Output only. Service state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. A universally unique identifier (UUID) for the `Service` in the UUID4 format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Update time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. Consumer provided attributes.
   * @return value or {@code null} for none
   */
  public Attributes getAttributes() {
    return attributes;
  }

  /**
   * Optional. Consumer provided attributes.
   * @param attributes attributes or {@code null} for none
   */
  public Service setAttributes(Attributes attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Output only. Create time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create time.
   * @param createTime createTime or {@code null} for none
   */
  public Service setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. User-defined description of a Service.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User-defined description of a Service.
   * @param description description or {@code null} for none
   */
  public Service setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Immutable. The resource name of the original discovered service.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiscoveredService() {
    return discoveredService;
  }

  /**
   * Required. Immutable. The resource name of the original discovered service.
   * @param discoveredService discoveredService or {@code null} for none
   */
  public Service setDiscoveredService(java.lang.String discoveredService) {
    this.discoveredService = discoveredService;
    return this;
  }

  /**
   * Optional. User-defined name for the Service.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. User-defined name for the Service.
   * @param displayName displayName or {@code null} for none
   */
  public Service setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Identifier. The resource name of a Service. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/services/{service-id}"
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of a Service. Format: "projects/{host-project-
   * id}/locations/{location}/applications/{application-id}/services/{service-id}"
   * @param name name or {@code null} for none
   */
  public Service setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Properties of an underlying compute resource that can comprise a Service. These
   * are immutable.
   * @return value or {@code null} for none
   */
  public ServiceProperties getServiceProperties() {
    return serviceProperties;
  }

  /**
   * Output only. Properties of an underlying compute resource that can comprise a Service. These
   * are immutable.
   * @param serviceProperties serviceProperties or {@code null} for none
   */
  public Service setServiceProperties(ServiceProperties serviceProperties) {
    this.serviceProperties = serviceProperties;
    return this;
  }

  /**
   * Output only. Reference to an underlying networking resource that can comprise a Service. These
   * are immutable.
   * @return value or {@code null} for none
   */
  public ServiceReference getServiceReference() {
    return serviceReference;
  }

  /**
   * Output only. Reference to an underlying networking resource that can comprise a Service. These
   * are immutable.
   * @param serviceReference serviceReference or {@code null} for none
   */
  public Service setServiceReference(ServiceReference serviceReference) {
    this.serviceReference = serviceReference;
    return this;
  }

  /**
   * Output only. Service state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Service state.
   * @param state state or {@code null} for none
   */
  public Service setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. A universally unique identifier (UUID) for the `Service` in the UUID4 format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. A universally unique identifier (UUID) for the `Service` in the UUID4 format.
   * @param uid uid or {@code null} for none
   */
  public Service setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Update time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update time.
   * @param updateTime updateTime or {@code null} for none
   */
  public Service setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Service set(String fieldName, Object value) {
    return (Service) super.set(fieldName, value);
  }

  @Override
  public Service clone() {
    return (Service) super.clone();
  }

}
