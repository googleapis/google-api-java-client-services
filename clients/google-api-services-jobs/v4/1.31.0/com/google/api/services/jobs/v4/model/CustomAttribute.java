/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.jobs.v4.model;

/**
 * Custom attribute values that are either filterable or non-filterable.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Talent Solution API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CustomAttribute extends com.google.api.client.json.GenericJson {

  /**
   * If the `filterable` flag is true, the custom field values may be used for custom attribute
   * filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom
   * attribute filters. Default is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean filterable;

  /**
   * If the `keyword_searchable` flag is true, the keywords in custom fields are searchable by
   * keyword match. If false, the values are not searchable by keyword match. Default is false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean keywordSearchable;

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform
   * number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at
   * most 1 long_values is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> longValues;

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform a
   * string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable
   * `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has
   * a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size
   * of unfilterable `string_values` is 50KB. Empty string isn't allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> stringValues;

  /**
   * If the `filterable` flag is true, the custom field values may be used for custom attribute
   * filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom
   * attribute filters. Default is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFilterable() {
    return filterable;
  }

  /**
   * If the `filterable` flag is true, the custom field values may be used for custom attribute
   * filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom
   * attribute filters. Default is false.
   * @param filterable filterable or {@code null} for none
   */
  public CustomAttribute setFilterable(java.lang.Boolean filterable) {
    this.filterable = filterable;
    return this;
  }

  /**
   * If the `keyword_searchable` flag is true, the keywords in custom fields are searchable by
   * keyword match. If false, the values are not searchable by keyword match. Default is false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getKeywordSearchable() {
    return keywordSearchable;
  }

  /**
   * If the `keyword_searchable` flag is true, the keywords in custom fields are searchable by
   * keyword match. If false, the values are not searchable by keyword match. Default is false.
   * @param keywordSearchable keywordSearchable or {@code null} for none
   */
  public CustomAttribute setKeywordSearchable(java.lang.Boolean keywordSearchable) {
    this.keywordSearchable = keywordSearchable;
    return this;
  }

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform
   * number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at
   * most 1 long_values is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getLongValues() {
    return longValues;
  }

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform
   * number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at
   * most 1 long_values is supported.
   * @param longValues longValues or {@code null} for none
   */
  public CustomAttribute setLongValues(java.util.List<java.lang.Long> longValues) {
    this.longValues = longValues;
    return this;
  }

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform a
   * string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable
   * `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has
   * a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size
   * of unfilterable `string_values` is 50KB. Empty string isn't allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getStringValues() {
    return stringValues;
  }

  /**
   * Exactly one of string_values or long_values must be specified. This field is used to perform a
   * string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable
   * `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has
   * a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size
   * of unfilterable `string_values` is 50KB. Empty string isn't allowed.
   * @param stringValues stringValues or {@code null} for none
   */
  public CustomAttribute setStringValues(java.util.List<java.lang.String> stringValues) {
    this.stringValues = stringValues;
    return this;
  }

  @Override
  public CustomAttribute set(String fieldName, Object value) {
    return (CustomAttribute) super.set(fieldName, value);
  }

  @Override
  public CustomAttribute clone() {
    return (CustomAttribute) super.clone();
  }

}
