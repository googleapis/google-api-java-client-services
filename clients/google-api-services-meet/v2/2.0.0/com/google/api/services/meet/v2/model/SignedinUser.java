/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.meet.v2.model;

/**
 * A signed-in user can be: a) An individual joining from a personal computer, mobile device, or
 * through companion mode. b) A robot account used by conference room devices.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Meet API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SignedinUser extends com.google.api.client.json.GenericJson {

  /**
   * Output only. For a personal device, it's the user's first name and last name. For a robot
   * account, it's the administrator-specified device name. For example, "Altostrat Room".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Unique ID for the user. Interoperable with Admin SDK API and People API. Format:
   * `users/{user}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String user;

  /**
   * Output only. For a personal device, it's the user's first name and last name. For a robot
   * account, it's the administrator-specified device name. For example, "Altostrat Room".
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. For a personal device, it's the user's first name and last name. For a robot
   * account, it's the administrator-specified device name. For example, "Altostrat Room".
   * @param displayName displayName or {@code null} for none
   */
  public SignedinUser setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Unique ID for the user. Interoperable with Admin SDK API and People API. Format:
   * `users/{user}`
   * @return value or {@code null} for none
   */
  public java.lang.String getUser() {
    return user;
  }

  /**
   * Output only. Unique ID for the user. Interoperable with Admin SDK API and People API. Format:
   * `users/{user}`
   * @param user user or {@code null} for none
   */
  public SignedinUser setUser(java.lang.String user) {
    this.user = user;
    return this;
  }

  @Override
  public SignedinUser set(String fieldName, Object value) {
    return (SignedinUser) super.set(fieldName, value);
  }

  @Override
  public SignedinUser clone() {
    return (SignedinUser) super.clone();
  }

}
