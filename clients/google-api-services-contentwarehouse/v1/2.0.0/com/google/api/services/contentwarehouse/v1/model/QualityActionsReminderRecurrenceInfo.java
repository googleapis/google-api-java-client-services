/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Recurrence rule for specifying time-based repeating reminders.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityActionsReminderRecurrenceInfo extends com.google.api.client.json.GenericJson {

  /**
   * OPTIONAL. Client-assigned-id for the recurring reminder
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * The recurrence pattern.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiRecurrence recurrence;

  /**
   * An id which uniquely identifies a recurrence series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String recurrenceId;

  /**
   * REQUIRED. Server-assigned-id for the recurring reminder
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serverId;

  /**
   * OPTIONAL. Client-assigned-id for the recurring reminder
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * OPTIONAL. Client-assigned-id for the recurring reminder
   * @param clientId clientId or {@code null} for none
   */
  public QualityActionsReminderRecurrenceInfo setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * The recurrence pattern.
   * @return value or {@code null} for none
   */
  public AssistantApiRecurrence getRecurrence() {
    return recurrence;
  }

  /**
   * The recurrence pattern.
   * @param recurrence recurrence or {@code null} for none
   */
  public QualityActionsReminderRecurrenceInfo setRecurrence(AssistantApiRecurrence recurrence) {
    this.recurrence = recurrence;
    return this;
  }

  /**
   * An id which uniquely identifies a recurrence series.
   * @return value or {@code null} for none
   */
  public java.lang.String getRecurrenceId() {
    return recurrenceId;
  }

  /**
   * An id which uniquely identifies a recurrence series.
   * @param recurrenceId recurrenceId or {@code null} for none
   */
  public QualityActionsReminderRecurrenceInfo setRecurrenceId(java.lang.String recurrenceId) {
    this.recurrenceId = recurrenceId;
    return this;
  }

  /**
   * REQUIRED. Server-assigned-id for the recurring reminder
   * @return value or {@code null} for none
   */
  public java.lang.String getServerId() {
    return serverId;
  }

  /**
   * REQUIRED. Server-assigned-id for the recurring reminder
   * @param serverId serverId or {@code null} for none
   */
  public QualityActionsReminderRecurrenceInfo setServerId(java.lang.String serverId) {
    this.serverId = serverId;
    return this;
  }

  @Override
  public QualityActionsReminderRecurrenceInfo set(String fieldName, Object value) {
    return (QualityActionsReminderRecurrenceInfo) super.set(fieldName, value);
  }

  @Override
  public QualityActionsReminderRecurrenceInfo clone() {
    return (QualityActionsReminderRecurrenceInfo) super.clone();
  }

}
