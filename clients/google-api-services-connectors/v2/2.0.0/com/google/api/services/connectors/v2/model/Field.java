/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v2.model;

/**
 * Message contains EntityType's Field metadata.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Field extends com.google.api.client.json.GenericJson {

  /**
   * The following map contains fields that are not explicitly mentioned above,this give connectors
   * the flexibility to add new metadata fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.Object> additionalDetails;

  /**
   * The data type of the Field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataType;

  /**
   * The following field specifies the default value of the Field provided by the external system if
   * a value is not provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Object defaultValue;

  /**
   * A brief description of the Field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The following boolean field specifies if the current Field acts as a primary key or id if the
   * parent is of type entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean key;

  /**
   * Name of the Field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Specifies whether a null value is allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean nullable;

  /**
   * Reference captures the association between two different entity types. Value links to the
   * reference of another entity type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Reference reference;

  /**
   * The following map contains fields that are not explicitly mentioned above,this give connectors
   * the flexibility to add new metadata fields.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Object> getAdditionalDetails() {
    return additionalDetails;
  }

  /**
   * The following map contains fields that are not explicitly mentioned above,this give connectors
   * the flexibility to add new metadata fields.
   * @param additionalDetails additionalDetails or {@code null} for none
   */
  public Field setAdditionalDetails(java.util.Map<String, java.lang.Object> additionalDetails) {
    this.additionalDetails = additionalDetails;
    return this;
  }

  /**
   * The data type of the Field.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataType() {
    return dataType;
  }

  /**
   * The data type of the Field.
   * @param dataType dataType or {@code null} for none
   */
  public Field setDataType(java.lang.String dataType) {
    this.dataType = dataType;
    return this;
  }

  /**
   * The following field specifies the default value of the Field provided by the external system if
   * a value is not provided.
   * @return value or {@code null} for none
   */
  public java.lang.Object getDefaultValue() {
    return defaultValue;
  }

  /**
   * The following field specifies the default value of the Field provided by the external system if
   * a value is not provided.
   * @param defaultValue defaultValue or {@code null} for none
   */
  public Field setDefaultValue(java.lang.Object defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * A brief description of the Field.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A brief description of the Field.
   * @param description description or {@code null} for none
   */
  public Field setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The following boolean field specifies if the current Field acts as a primary key or id if the
   * parent is of type entity.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getKey() {
    return key;
  }

  /**
   * The following boolean field specifies if the current Field acts as a primary key or id if the
   * parent is of type entity.
   * @param key key or {@code null} for none
   */
  public Field setKey(java.lang.Boolean key) {
    this.key = key;
    return this;
  }

  /**
   * Name of the Field.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the Field.
   * @param name name or {@code null} for none
   */
  public Field setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Specifies whether a null value is allowed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNullable() {
    return nullable;
  }

  /**
   * Specifies whether a null value is allowed.
   * @param nullable nullable or {@code null} for none
   */
  public Field setNullable(java.lang.Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

  /**
   * Reference captures the association between two different entity types. Value links to the
   * reference of another entity type.
   * @return value or {@code null} for none
   */
  public Reference getReference() {
    return reference;
  }

  /**
   * Reference captures the association between two different entity types. Value links to the
   * reference of another entity type.
   * @param reference reference or {@code null} for none
   */
  public Field setReference(Reference reference) {
    this.reference = reference;
    return this;
  }

  @Override
  public Field set(String fieldName, Object value) {
    return (Field) super.set(fieldName, value);
  }

  @Override
  public Field clone() {
    return (Field) super.clone();
  }

}
