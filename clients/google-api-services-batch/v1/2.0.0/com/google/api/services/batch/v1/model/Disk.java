/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.batch.v1.model;

/**
 * A new persistent disk or a local ssd. A VM can only have one local SSD setting but multiple local
 * SSD partitions. https://cloud.google.com/compute/docs/disks#pdspecs.
 * https://cloud.google.com/compute/docs/disks#localssds.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Batch API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Disk extends com.google.api.client.json.GenericJson {

  /**
   * Local SSDs are available through both "SCSI" and "NVMe" interfaces. If not indicated, "NVMe"
   * will be the default one for local ssds. We only support "SCSI" for persistent disks now.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskInterface;

  /**
   * Name of a public or custom image used as the data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String image;

  /**
   * Disk size in GB. This field is ignored if `data_source` is `disk` or `image`. If `type` is
   * `local-ssd`, size_gb should be a multiple of 375GB, otherwise, the final size will be the next
   * greater multiple of 375 GB.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long sizeGb;

  /**
   * Name of a snapshot used as the data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String snapshot;

  /**
   * Disk type as shown in `gcloud compute disk-types list` For example, "pd-ssd", "pd-standard",
   * "pd-balanced", "local-ssd".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Local SSDs are available through both "SCSI" and "NVMe" interfaces. If not indicated, "NVMe"
   * will be the default one for local ssds. We only support "SCSI" for persistent disks now.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskInterface() {
    return diskInterface;
  }

  /**
   * Local SSDs are available through both "SCSI" and "NVMe" interfaces. If not indicated, "NVMe"
   * will be the default one for local ssds. We only support "SCSI" for persistent disks now.
   * @param diskInterface diskInterface or {@code null} for none
   */
  public Disk setDiskInterface(java.lang.String diskInterface) {
    this.diskInterface = diskInterface;
    return this;
  }

  /**
   * Name of a public or custom image used as the data source.
   * @return value or {@code null} for none
   */
  public java.lang.String getImage() {
    return image;
  }

  /**
   * Name of a public or custom image used as the data source.
   * @param image image or {@code null} for none
   */
  public Disk setImage(java.lang.String image) {
    this.image = image;
    return this;
  }

  /**
   * Disk size in GB. This field is ignored if `data_source` is `disk` or `image`. If `type` is
   * `local-ssd`, size_gb should be a multiple of 375GB, otherwise, the final size will be the next
   * greater multiple of 375 GB.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSizeGb() {
    return sizeGb;
  }

  /**
   * Disk size in GB. This field is ignored if `data_source` is `disk` or `image`. If `type` is
   * `local-ssd`, size_gb should be a multiple of 375GB, otherwise, the final size will be the next
   * greater multiple of 375 GB.
   * @param sizeGb sizeGb or {@code null} for none
   */
  public Disk setSizeGb(java.lang.Long sizeGb) {
    this.sizeGb = sizeGb;
    return this;
  }

  /**
   * Name of a snapshot used as the data source.
   * @return value or {@code null} for none
   */
  public java.lang.String getSnapshot() {
    return snapshot;
  }

  /**
   * Name of a snapshot used as the data source.
   * @param snapshot snapshot or {@code null} for none
   */
  public Disk setSnapshot(java.lang.String snapshot) {
    this.snapshot = snapshot;
    return this;
  }

  /**
   * Disk type as shown in `gcloud compute disk-types list` For example, "pd-ssd", "pd-standard",
   * "pd-balanced", "local-ssd".
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Disk type as shown in `gcloud compute disk-types list` For example, "pd-ssd", "pd-standard",
   * "pd-balanced", "local-ssd".
   * @param type type or {@code null} for none
   */
  public Disk setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Disk set(String fieldName, Object value) {
    return (Disk) super.set(fieldName, value);
  }

  @Override
  public Disk clone() {
    return (Disk) super.clone();
  }

}
