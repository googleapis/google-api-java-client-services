/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.orgpolicy.v2.model;

/**
 * Defines a Cloud Organization `PolicySpec` which is used to specify `Constraints` for
 * configurations of Cloud Platform resources.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Organization Policy API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudOrgpolicyV2PolicySpec extends com.google.api.client.json.GenericJson {

  /**
   * An opaque tag indicating the current version of the `Policy`, used for concurrency control.
   * This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from
   * either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the
   * current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned
   * from a `GetEffectivePolicy` request, the `etag` will be unset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true,
   * PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present
   * in the effective policy. If it is false, then no rules are inherited, and this Policy becomes
   * the new root for evaluation. This field can be set only for Policies which configure list
   * constraints.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inheritFromParent;

  /**
   * Ignores policies set above this resource and restores the `constraint_default` enforcement
   * behavior of the specific `Constraint` at this resource. This field can be set in policies for
   * either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent`
   * must be set to false.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reset;

  /**
   * Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following
   * requirements apply: - There must be one and only one PolicyRule where condition is unset. -
   * BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule
   * without a condition. - During policy evaluation, PolicyRules with conditions that are true for
   * a target resource take precedence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudOrgpolicyV2PolicySpecPolicyRule> rules;

  /**
   * Output only. The time stamp this was previously updated. This represents the last time a call
   * to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * An opaque tag indicating the current version of the `Policy`, used for concurrency control.
   * This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from
   * either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the
   * current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned
   * from a `GetEffectivePolicy` request, the `etag` will be unset.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * An opaque tag indicating the current version of the `Policy`, used for concurrency control.
   * This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from
   * either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the
   * current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned
   * from a `GetEffectivePolicy` request, the `etag` will be unset.
   * @param etag etag or {@code null} for none
   */
  public GoogleCloudOrgpolicyV2PolicySpec setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true,
   * PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present
   * in the effective policy. If it is false, then no rules are inherited, and this Policy becomes
   * the new root for evaluation. This field can be set only for Policies which configure list
   * constraints.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInheritFromParent() {
    return inheritFromParent;
  }

  /**
   * Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true,
   * PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present
   * in the effective policy. If it is false, then no rules are inherited, and this Policy becomes
   * the new root for evaluation. This field can be set only for Policies which configure list
   * constraints.
   * @param inheritFromParent inheritFromParent or {@code null} for none
   */
  public GoogleCloudOrgpolicyV2PolicySpec setInheritFromParent(java.lang.Boolean inheritFromParent) {
    this.inheritFromParent = inheritFromParent;
    return this;
  }

  /**
   * Ignores policies set above this resource and restores the `constraint_default` enforcement
   * behavior of the specific `Constraint` at this resource. This field can be set in policies for
   * either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent`
   * must be set to false.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReset() {
    return reset;
  }

  /**
   * Ignores policies set above this resource and restores the `constraint_default` enforcement
   * behavior of the specific `Constraint` at this resource. This field can be set in policies for
   * either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent`
   * must be set to false.
   * @param reset reset or {@code null} for none
   */
  public GoogleCloudOrgpolicyV2PolicySpec setReset(java.lang.Boolean reset) {
    this.reset = reset;
    return this;
  }

  /**
   * Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following
   * requirements apply: - There must be one and only one PolicyRule where condition is unset. -
   * BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule
   * without a condition. - During policy evaluation, PolicyRules with conditions that are true for
   * a target resource take precedence.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudOrgpolicyV2PolicySpecPolicyRule> getRules() {
    return rules;
  }

  /**
   * Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following
   * requirements apply: - There must be one and only one PolicyRule where condition is unset. -
   * BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule
   * without a condition. - During policy evaluation, PolicyRules with conditions that are true for
   * a target resource take precedence.
   * @param rules rules or {@code null} for none
   */
  public GoogleCloudOrgpolicyV2PolicySpec setRules(java.util.List<GoogleCloudOrgpolicyV2PolicySpecPolicyRule> rules) {
    this.rules = rules;
    return this;
  }

  /**
   * Output only. The time stamp this was previously updated. This represents the last time a call
   * to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time stamp this was previously updated. This represents the last time a call
   * to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudOrgpolicyV2PolicySpec setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GoogleCloudOrgpolicyV2PolicySpec set(String fieldName, Object value) {
    return (GoogleCloudOrgpolicyV2PolicySpec) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudOrgpolicyV2PolicySpec clone() {
    return (GoogleCloudOrgpolicyV2PolicySpec) super.clone();
  }

}
