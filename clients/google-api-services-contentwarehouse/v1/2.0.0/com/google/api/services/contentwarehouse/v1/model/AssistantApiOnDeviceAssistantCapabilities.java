/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Definitions of on-device assistant capabilities.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiOnDeviceAssistantCapabilities extends com.google.api.client.json.GenericJson {

  /**
   * Capabilities related to local network arbitration (go/local-network-arbitration). Indicates if
   * the device is capable of being a host device in the LAN whiling doing local network
   * arbitration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isLocalNetworkArbitrationSupported;

  /**
   * Capabilities related to on-device arbitration(go/arbitration-on-device).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isOnDeviceArbitrationSupported;

  /**
   * Indicates if on-device assistant is enabled on this device. Example usecases: NGA (go/nga) or
   * Marble (go/marble).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isOnDeviceAssistantSupported;

  /**
   * This may be used by NGA. E.g. if understanding happens on device, we can have more aggressive
   * logic when fulfilling some features on the server side, like teleport.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isOnDeviceUnderstandingSupported;

  /**
   * Capabilities related to local network arbitration (go/local-network-arbitration). Indicates if
   * the device is capable of being a host device in the LAN whiling doing local network
   * arbitration.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsLocalNetworkArbitrationSupported() {
    return isLocalNetworkArbitrationSupported;
  }

  /**
   * Capabilities related to local network arbitration (go/local-network-arbitration). Indicates if
   * the device is capable of being a host device in the LAN whiling doing local network
   * arbitration.
   * @param isLocalNetworkArbitrationSupported isLocalNetworkArbitrationSupported or {@code null} for none
   */
  public AssistantApiOnDeviceAssistantCapabilities setIsLocalNetworkArbitrationSupported(java.lang.Boolean isLocalNetworkArbitrationSupported) {
    this.isLocalNetworkArbitrationSupported = isLocalNetworkArbitrationSupported;
    return this;
  }

  /**
   * Capabilities related to on-device arbitration(go/arbitration-on-device).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsOnDeviceArbitrationSupported() {
    return isOnDeviceArbitrationSupported;
  }

  /**
   * Capabilities related to on-device arbitration(go/arbitration-on-device).
   * @param isOnDeviceArbitrationSupported isOnDeviceArbitrationSupported or {@code null} for none
   */
  public AssistantApiOnDeviceAssistantCapabilities setIsOnDeviceArbitrationSupported(java.lang.Boolean isOnDeviceArbitrationSupported) {
    this.isOnDeviceArbitrationSupported = isOnDeviceArbitrationSupported;
    return this;
  }

  /**
   * Indicates if on-device assistant is enabled on this device. Example usecases: NGA (go/nga) or
   * Marble (go/marble).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsOnDeviceAssistantSupported() {
    return isOnDeviceAssistantSupported;
  }

  /**
   * Indicates if on-device assistant is enabled on this device. Example usecases: NGA (go/nga) or
   * Marble (go/marble).
   * @param isOnDeviceAssistantSupported isOnDeviceAssistantSupported or {@code null} for none
   */
  public AssistantApiOnDeviceAssistantCapabilities setIsOnDeviceAssistantSupported(java.lang.Boolean isOnDeviceAssistantSupported) {
    this.isOnDeviceAssistantSupported = isOnDeviceAssistantSupported;
    return this;
  }

  /**
   * This may be used by NGA. E.g. if understanding happens on device, we can have more aggressive
   * logic when fulfilling some features on the server side, like teleport.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsOnDeviceUnderstandingSupported() {
    return isOnDeviceUnderstandingSupported;
  }

  /**
   * This may be used by NGA. E.g. if understanding happens on device, we can have more aggressive
   * logic when fulfilling some features on the server side, like teleport.
   * @param isOnDeviceUnderstandingSupported isOnDeviceUnderstandingSupported or {@code null} for none
   */
  public AssistantApiOnDeviceAssistantCapabilities setIsOnDeviceUnderstandingSupported(java.lang.Boolean isOnDeviceUnderstandingSupported) {
    this.isOnDeviceUnderstandingSupported = isOnDeviceUnderstandingSupported;
    return this;
  }

  @Override
  public AssistantApiOnDeviceAssistantCapabilities set(String fieldName, Object value) {
    return (AssistantApiOnDeviceAssistantCapabilities) super.set(fieldName, value);
  }

  @Override
  public AssistantApiOnDeviceAssistantCapabilities clone() {
    return (AssistantApiOnDeviceAssistantCapabilities) super.clone();
  }

}
