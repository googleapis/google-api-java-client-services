/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Request message for the `CreateAndConfigureAccount` method.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CreateAndConfigureAccountRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. The account to be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Account account;

  /**
   * Required. An account service between the account to be created and the provider account is
   * initialized as part of the creation. At least one such service needs to be provided. Currently
   * exactly one of these needs to be `account_aggregation`, which means you can only create sub
   * accounts, not standalone account through this method. Additional `account_management` or
   * `product_management` services may be provided.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AddAccountService> service;

  static {
    // hack to force ProGuard to consider AddAccountService used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AddAccountService.class);
  }

  /**
   * Optional. Users to be added to the account.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AddUser> user;

  static {
    // hack to force ProGuard to consider AddUser used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AddUser.class);
  }

  /**
   * Optional. Users to be added to the account. This field is deprecated and will not exist after
   * the API evolves out of beta. Use the `user` field instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CreateUserRequest> users;

  /**
   * Required. The account to be created.
   * @return value or {@code null} for none
   */
  public Account getAccount() {
    return account;
  }

  /**
   * Required. The account to be created.
   * @param account account or {@code null} for none
   */
  public CreateAndConfigureAccountRequest setAccount(Account account) {
    this.account = account;
    return this;
  }

  /**
   * Required. An account service between the account to be created and the provider account is
   * initialized as part of the creation. At least one such service needs to be provided. Currently
   * exactly one of these needs to be `account_aggregation`, which means you can only create sub
   * accounts, not standalone account through this method. Additional `account_management` or
   * `product_management` services may be provided.
   * @return value or {@code null} for none
   */
  public java.util.List<AddAccountService> getService() {
    return service;
  }

  /**
   * Required. An account service between the account to be created and the provider account is
   * initialized as part of the creation. At least one such service needs to be provided. Currently
   * exactly one of these needs to be `account_aggregation`, which means you can only create sub
   * accounts, not standalone account through this method. Additional `account_management` or
   * `product_management` services may be provided.
   * @param service service or {@code null} for none
   */
  public CreateAndConfigureAccountRequest setService(java.util.List<AddAccountService> service) {
    this.service = service;
    return this;
  }

  /**
   * Optional. Users to be added to the account.
   * @return value or {@code null} for none
   */
  public java.util.List<AddUser> getUser() {
    return user;
  }

  /**
   * Optional. Users to be added to the account.
   * @param user user or {@code null} for none
   */
  public CreateAndConfigureAccountRequest setUser(java.util.List<AddUser> user) {
    this.user = user;
    return this;
  }

  /**
   * Optional. Users to be added to the account. This field is deprecated and will not exist after
   * the API evolves out of beta. Use the `user` field instead.
   * @return value or {@code null} for none
   */
  public java.util.List<CreateUserRequest> getUsers() {
    return users;
  }

  /**
   * Optional. Users to be added to the account. This field is deprecated and will not exist after
   * the API evolves out of beta. Use the `user` field instead.
   * @param users users or {@code null} for none
   */
  public CreateAndConfigureAccountRequest setUsers(java.util.List<CreateUserRequest> users) {
    this.users = users;
    return this;
  }

  @Override
  public CreateAndConfigureAccountRequest set(String fieldName, Object value) {
    return (CreateAndConfigureAccountRequest) super.set(fieldName, value);
  }

  @Override
  public CreateAndConfigureAccountRequest clone() {
    return (CreateAndConfigureAccountRequest) super.clone();
  }

}
