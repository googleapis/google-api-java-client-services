/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1.model;

/**
 * Model definition for
 * GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs extends com.google.api.client.json.GenericJson {

  /**
   * Additional experiment flags for the time series forcasting training.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> additionalExperiments;

  /**
   * Names of columns that are available and provided when a forecast is requested. These columns
   * contain information for the given entity (identified by the time_series_identifier_column
   * column) that is known at forecast. For example, predicted weather for a specific day.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> availableAtForecastColumns;

  /**
   * The amount of time into the past training and prediction data is used for model training and
   * prediction respectively. Expressed in number of units defined by the `data_granularity` field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long contextWindow;

  /**
   * Expected difference in time granularity between rows in the data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity dataGranularity;

  /**
   * Configuration for exporting test set predictions to a BigQuery table. If this configuration is
   * absent, then the export is not performed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig exportEvaluatedDataItemsConfig;

  /**
   * The amount of time into the future for which forecasted values for the target are returned.
   * Expressed in number of units defined by the `data_granularity` field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long forecastHorizon;

  /**
   * Configuration that defines the hierarchical relationship of time series and parameters for
   * hierarchical forecasting strategies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig hierarchyConfig;

  /**
   * The geographical region based on which the holiday effect is applied in modeling by adding
   * holiday categorical array feature that include all holidays matching the date. This option only
   * allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn
   * it on, specify the holiday region using this option.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> holidayRegions;

  /**
   * Objective function the model is optimizing towards. The training process creates a model that
   * optimizes the value of the objective function over the validation set. The supported
   * optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE).
   * * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
   * squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error
   * (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error
   * (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss
   * at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute
   * percentage error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String optimizationObjective;

  /**
   * Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are
   * allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective
   * is minimize-quantile-loss. Represents the percent quantiles to use for that objective.
   * Quantiles must be unique.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Double> quantiles;

  /**
   * The name of the column that the Model is to predict values for. This column must be unavailable
   * at forecast.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetColumn;

  /**
   * The name of the column that identifies time order in the time series. This column must be
   * available at forecast.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeColumn;

  /**
   * Column names that should be used as attribute columns. The value of these columns does not vary
   * as a function of time. For example, store ID or item color.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> timeSeriesAttributeColumns;

  /**
   * The name of the column that identifies the time series.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String timeSeriesIdentifierColumn;

  /**
   * Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000
   * value in this field means 1 node hour. The training cost of the model will not exceed this
   * budget. The final cost will be attempted to be close to the budget, though may end up being
   * (even) noticeably smaller - at the backend's discretion. This especially may happen when
   * further model training ceases to provide any improvements. If the budget is set to a value
   * known to be insufficient to train a model for the given dataset, the training won't be
   * attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours,
   * inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long trainBudgetMilliNodeHours;

  /**
   * Each transformation will apply transform function to given input column. And the result will be
   * used for training. When creating transformation for BigQuery Struct column, the column should
   * be flattened using "." as the delimiter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation> transformations;

  /**
   * Names of columns that are unavailable when a forecast is requested. This column contains
   * information for the given entity (identified by the time_series_identifier_column) that is
   * unknown before the forecast For example, actual weather on a given day.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> unavailableAtForecastColumns;

  /**
   * Validation options for the data validation component. The available options are: * "fail-
   * pipeline" - default, will validate against the validation and fail the pipeline if it fails. *
   * "ignore-validation" - ignore the results of the validation and continue
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String validationOptions;

  /**
   * Column name that should be used as the weight column. Higher values in this column give more
   * importance to the row during model training. The column must have numeric values between 0 and
   * 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set,
   * then all rows are assumed to have equal weight of 1. This column must be available at forecast.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String weightColumn;

  /**
   * Config containing strategy for generating sliding windows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig windowConfig;

  /**
   * Additional experiment flags for the time series forcasting training.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAdditionalExperiments() {
    return additionalExperiments;
  }

  /**
   * Additional experiment flags for the time series forcasting training.
   * @param additionalExperiments additionalExperiments or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setAdditionalExperiments(java.util.List<java.lang.String> additionalExperiments) {
    this.additionalExperiments = additionalExperiments;
    return this;
  }

  /**
   * Names of columns that are available and provided when a forecast is requested. These columns
   * contain information for the given entity (identified by the time_series_identifier_column
   * column) that is known at forecast. For example, predicted weather for a specific day.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAvailableAtForecastColumns() {
    return availableAtForecastColumns;
  }

  /**
   * Names of columns that are available and provided when a forecast is requested. These columns
   * contain information for the given entity (identified by the time_series_identifier_column
   * column) that is known at forecast. For example, predicted weather for a specific day.
   * @param availableAtForecastColumns availableAtForecastColumns or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setAvailableAtForecastColumns(java.util.List<java.lang.String> availableAtForecastColumns) {
    this.availableAtForecastColumns = availableAtForecastColumns;
    return this;
  }

  /**
   * The amount of time into the past training and prediction data is used for model training and
   * prediction respectively. Expressed in number of units defined by the `data_granularity` field.
   * @return value or {@code null} for none
   */
  public java.lang.Long getContextWindow() {
    return contextWindow;
  }

  /**
   * The amount of time into the past training and prediction data is used for model training and
   * prediction respectively. Expressed in number of units defined by the `data_granularity` field.
   * @param contextWindow contextWindow or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setContextWindow(java.lang.Long contextWindow) {
    this.contextWindow = contextWindow;
    return this;
  }

  /**
   * Expected difference in time granularity between rows in the data.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity getDataGranularity() {
    return dataGranularity;
  }

  /**
   * Expected difference in time granularity between rows in the data.
   * @param dataGranularity dataGranularity or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setDataGranularity(GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity dataGranularity) {
    this.dataGranularity = dataGranularity;
    return this;
  }

  /**
   * Configuration for exporting test set predictions to a BigQuery table. If this configuration is
   * absent, then the export is not performed.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig getExportEvaluatedDataItemsConfig() {
    return exportEvaluatedDataItemsConfig;
  }

  /**
   * Configuration for exporting test set predictions to a BigQuery table. If this configuration is
   * absent, then the export is not performed.
   * @param exportEvaluatedDataItemsConfig exportEvaluatedDataItemsConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setExportEvaluatedDataItemsConfig(GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig exportEvaluatedDataItemsConfig) {
    this.exportEvaluatedDataItemsConfig = exportEvaluatedDataItemsConfig;
    return this;
  }

  /**
   * The amount of time into the future for which forecasted values for the target are returned.
   * Expressed in number of units defined by the `data_granularity` field.
   * @return value or {@code null} for none
   */
  public java.lang.Long getForecastHorizon() {
    return forecastHorizon;
  }

  /**
   * The amount of time into the future for which forecasted values for the target are returned.
   * Expressed in number of units defined by the `data_granularity` field.
   * @param forecastHorizon forecastHorizon or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setForecastHorizon(java.lang.Long forecastHorizon) {
    this.forecastHorizon = forecastHorizon;
    return this;
  }

  /**
   * Configuration that defines the hierarchical relationship of time series and parameters for
   * hierarchical forecasting strategies.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig getHierarchyConfig() {
    return hierarchyConfig;
  }

  /**
   * Configuration that defines the hierarchical relationship of time series and parameters for
   * hierarchical forecasting strategies.
   * @param hierarchyConfig hierarchyConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setHierarchyConfig(GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig hierarchyConfig) {
    this.hierarchyConfig = hierarchyConfig;
    return this;
  }

  /**
   * The geographical region based on which the holiday effect is applied in modeling by adding
   * holiday categorical array feature that include all holidays matching the date. This option only
   * allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn
   * it on, specify the holiday region using this option.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHolidayRegions() {
    return holidayRegions;
  }

  /**
   * The geographical region based on which the holiday effect is applied in modeling by adding
   * holiday categorical array feature that include all holidays matching the date. This option only
   * allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn
   * it on, specify the holiday region using this option.
   * @param holidayRegions holidayRegions or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setHolidayRegions(java.util.List<java.lang.String> holidayRegions) {
    this.holidayRegions = holidayRegions;
    return this;
  }

  /**
   * Objective function the model is optimizing towards. The training process creates a model that
   * optimizes the value of the objective function over the validation set. The supported
   * optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE).
   * * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
   * squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error
   * (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error
   * (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss
   * at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute
   * percentage error.
   * @return value or {@code null} for none
   */
  public java.lang.String getOptimizationObjective() {
    return optimizationObjective;
  }

  /**
   * Objective function the model is optimizing towards. The training process creates a model that
   * optimizes the value of the objective function over the validation set. The supported
   * optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE).
   * * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
   * squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error
   * (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error
   * (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss
   * at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute
   * percentage error.
   * @param optimizationObjective optimizationObjective or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setOptimizationObjective(java.lang.String optimizationObjective) {
    this.optimizationObjective = optimizationObjective;
    return this;
  }

  /**
   * Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are
   * allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective
   * is minimize-quantile-loss. Represents the percent quantiles to use for that objective.
   * Quantiles must be unique.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Double> getQuantiles() {
    return quantiles;
  }

  /**
   * Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are
   * allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective
   * is minimize-quantile-loss. Represents the percent quantiles to use for that objective.
   * Quantiles must be unique.
   * @param quantiles quantiles or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setQuantiles(java.util.List<java.lang.Double> quantiles) {
    this.quantiles = quantiles;
    return this;
  }

  /**
   * The name of the column that the Model is to predict values for. This column must be unavailable
   * at forecast.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetColumn() {
    return targetColumn;
  }

  /**
   * The name of the column that the Model is to predict values for. This column must be unavailable
   * at forecast.
   * @param targetColumn targetColumn or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTargetColumn(java.lang.String targetColumn) {
    this.targetColumn = targetColumn;
    return this;
  }

  /**
   * The name of the column that identifies time order in the time series. This column must be
   * available at forecast.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeColumn() {
    return timeColumn;
  }

  /**
   * The name of the column that identifies time order in the time series. This column must be
   * available at forecast.
   * @param timeColumn timeColumn or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTimeColumn(java.lang.String timeColumn) {
    this.timeColumn = timeColumn;
    return this;
  }

  /**
   * Column names that should be used as attribute columns. The value of these columns does not vary
   * as a function of time. For example, store ID or item color.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTimeSeriesAttributeColumns() {
    return timeSeriesAttributeColumns;
  }

  /**
   * Column names that should be used as attribute columns. The value of these columns does not vary
   * as a function of time. For example, store ID or item color.
   * @param timeSeriesAttributeColumns timeSeriesAttributeColumns or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTimeSeriesAttributeColumns(java.util.List<java.lang.String> timeSeriesAttributeColumns) {
    this.timeSeriesAttributeColumns = timeSeriesAttributeColumns;
    return this;
  }

  /**
   * The name of the column that identifies the time series.
   * @return value or {@code null} for none
   */
  public java.lang.String getTimeSeriesIdentifierColumn() {
    return timeSeriesIdentifierColumn;
  }

  /**
   * The name of the column that identifies the time series.
   * @param timeSeriesIdentifierColumn timeSeriesIdentifierColumn or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTimeSeriesIdentifierColumn(java.lang.String timeSeriesIdentifierColumn) {
    this.timeSeriesIdentifierColumn = timeSeriesIdentifierColumn;
    return this;
  }

  /**
   * Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000
   * value in this field means 1 node hour. The training cost of the model will not exceed this
   * budget. The final cost will be attempted to be close to the budget, though may end up being
   * (even) noticeably smaller - at the backend's discretion. This especially may happen when
   * further model training ceases to provide any improvements. If the budget is set to a value
   * known to be insufficient to train a model for the given dataset, the training won't be
   * attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours,
   * inclusive.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTrainBudgetMilliNodeHours() {
    return trainBudgetMilliNodeHours;
  }

  /**
   * Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000
   * value in this field means 1 node hour. The training cost of the model will not exceed this
   * budget. The final cost will be attempted to be close to the budget, though may end up being
   * (even) noticeably smaller - at the backend's discretion. This especially may happen when
   * further model training ceases to provide any improvements. If the budget is set to a value
   * known to be insufficient to train a model for the given dataset, the training won't be
   * attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours,
   * inclusive.
   * @param trainBudgetMilliNodeHours trainBudgetMilliNodeHours or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTrainBudgetMilliNodeHours(java.lang.Long trainBudgetMilliNodeHours) {
    this.trainBudgetMilliNodeHours = trainBudgetMilliNodeHours;
    return this;
  }

  /**
   * Each transformation will apply transform function to given input column. And the result will be
   * used for training. When creating transformation for BigQuery Struct column, the column should
   * be flattened using "." as the delimiter.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation> getTransformations() {
    return transformations;
  }

  /**
   * Each transformation will apply transform function to given input column. And the result will be
   * used for training. When creating transformation for BigQuery Struct column, the column should
   * be flattened using "." as the delimiter.
   * @param transformations transformations or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setTransformations(java.util.List<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation> transformations) {
    this.transformations = transformations;
    return this;
  }

  /**
   * Names of columns that are unavailable when a forecast is requested. This column contains
   * information for the given entity (identified by the time_series_identifier_column) that is
   * unknown before the forecast For example, actual weather on a given day.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getUnavailableAtForecastColumns() {
    return unavailableAtForecastColumns;
  }

  /**
   * Names of columns that are unavailable when a forecast is requested. This column contains
   * information for the given entity (identified by the time_series_identifier_column) that is
   * unknown before the forecast For example, actual weather on a given day.
   * @param unavailableAtForecastColumns unavailableAtForecastColumns or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setUnavailableAtForecastColumns(java.util.List<java.lang.String> unavailableAtForecastColumns) {
    this.unavailableAtForecastColumns = unavailableAtForecastColumns;
    return this;
  }

  /**
   * Validation options for the data validation component. The available options are: * "fail-
   * pipeline" - default, will validate against the validation and fail the pipeline if it fails. *
   * "ignore-validation" - ignore the results of the validation and continue
   * @return value or {@code null} for none
   */
  public java.lang.String getValidationOptions() {
    return validationOptions;
  }

  /**
   * Validation options for the data validation component. The available options are: * "fail-
   * pipeline" - default, will validate against the validation and fail the pipeline if it fails. *
   * "ignore-validation" - ignore the results of the validation and continue
   * @param validationOptions validationOptions or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setValidationOptions(java.lang.String validationOptions) {
    this.validationOptions = validationOptions;
    return this;
  }

  /**
   * Column name that should be used as the weight column. Higher values in this column give more
   * importance to the row during model training. The column must have numeric values between 0 and
   * 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set,
   * then all rows are assumed to have equal weight of 1. This column must be available at forecast.
   * @return value or {@code null} for none
   */
  public java.lang.String getWeightColumn() {
    return weightColumn;
  }

  /**
   * Column name that should be used as the weight column. Higher values in this column give more
   * importance to the row during model training. The column must have numeric values between 0 and
   * 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set,
   * then all rows are assumed to have equal weight of 1. This column must be available at forecast.
   * @param weightColumn weightColumn or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setWeightColumn(java.lang.String weightColumn) {
    this.weightColumn = weightColumn;
    return this;
  }

  /**
   * Config containing strategy for generating sliding windows.
   * @return value or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig getWindowConfig() {
    return windowConfig;
  }

  /**
   * Config containing strategy for generating sliding windows.
   * @param windowConfig windowConfig or {@code null} for none
   */
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs setWindowConfig(GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig windowConfig) {
    this.windowConfig = windowConfig;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs clone() {
    return (GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs) super.clone();
  }

}
