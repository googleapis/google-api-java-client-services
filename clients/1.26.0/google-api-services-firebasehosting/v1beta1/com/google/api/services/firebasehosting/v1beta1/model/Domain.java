/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebasehosting.v1beta1.model;

/**
 * The intended behavior and status information of a domain.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Hosting API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Domain extends com.google.api.client.json.GenericJson {

  /**
   * Required. The domain name of the association.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String domainName;

  /**
   * If set, the domain should redirect with the provided parameters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DomainRedirect domainRedirect;

  /**
   * Output only. Information about the provisioning of certificates and the health of the DNS
   * resolution for the domain.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DomainProvisioning provisioning;

  /**
   * Required. The site name of the association.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String site;

  /**
   * Output only. Additional status of the domain association.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * Output only. The time at which the domain was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. The domain name of the association.
   * @return value or {@code null} for none
   */
  public java.lang.String getDomainName() {
    return domainName;
  }

  /**
   * Required. The domain name of the association.
   * @param domainName domainName or {@code null} for none
   */
  public Domain setDomainName(java.lang.String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * If set, the domain should redirect with the provided parameters.
   * @return value or {@code null} for none
   */
  public DomainRedirect getDomainRedirect() {
    return domainRedirect;
  }

  /**
   * If set, the domain should redirect with the provided parameters.
   * @param domainRedirect domainRedirect or {@code null} for none
   */
  public Domain setDomainRedirect(DomainRedirect domainRedirect) {
    this.domainRedirect = domainRedirect;
    return this;
  }

  /**
   * Output only. Information about the provisioning of certificates and the health of the DNS
   * resolution for the domain.
   * @return value or {@code null} for none
   */
  public DomainProvisioning getProvisioning() {
    return provisioning;
  }

  /**
   * Output only. Information about the provisioning of certificates and the health of the DNS
   * resolution for the domain.
   * @param provisioning provisioning or {@code null} for none
   */
  public Domain setProvisioning(DomainProvisioning provisioning) {
    this.provisioning = provisioning;
    return this;
  }

  /**
   * Required. The site name of the association.
   * @return value or {@code null} for none
   */
  public java.lang.String getSite() {
    return site;
  }

  /**
   * Required. The site name of the association.
   * @param site site or {@code null} for none
   */
  public Domain setSite(java.lang.String site) {
    this.site = site;
    return this;
  }

  /**
   * Output only. Additional status of the domain association.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Output only. Additional status of the domain association.
   * @param status status or {@code null} for none
   */
  public Domain setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * Output only. The time at which the domain was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time at which the domain was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Domain setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Domain set(String fieldName, Object value) {
    return (Domain) super.set(fieldName, value);
  }

  @Override
  public Domain clone() {
    return (Domain) super.clone();
  }

}
