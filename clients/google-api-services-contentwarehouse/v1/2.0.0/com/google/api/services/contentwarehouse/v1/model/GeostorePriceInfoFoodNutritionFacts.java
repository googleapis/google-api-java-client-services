/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * This message represents nutrition facts for a food dish.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GeostorePriceInfoFoodNutritionFacts extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsCaloriesFact calories;

  /**
   * Cholesterol information for a given food dish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsNutritionFact cholesterol;

  /**
   * Protein information for a given food dish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsNutritionFact protein;

  /**
   * Sodium information for a given food dish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsNutritionFact sodium;

  /**
   * Carbohydrate information for a given food dish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsNutritionFact totalCarbohydrate;

  /**
   * Fat information for a given food dish.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeostorePriceInfoFoodNutritionFactsNutritionFact totalFat;

  /**
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsCaloriesFact getCalories() {
    return calories;
  }

  /**
   * @param calories calories or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setCalories(GeostorePriceInfoFoodNutritionFactsCaloriesFact calories) {
    this.calories = calories;
    return this;
  }

  /**
   * Cholesterol information for a given food dish.
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsNutritionFact getCholesterol() {
    return cholesterol;
  }

  /**
   * Cholesterol information for a given food dish.
   * @param cholesterol cholesterol or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setCholesterol(GeostorePriceInfoFoodNutritionFactsNutritionFact cholesterol) {
    this.cholesterol = cholesterol;
    return this;
  }

  /**
   * Protein information for a given food dish.
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsNutritionFact getProtein() {
    return protein;
  }

  /**
   * Protein information for a given food dish.
   * @param protein protein or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setProtein(GeostorePriceInfoFoodNutritionFactsNutritionFact protein) {
    this.protein = protein;
    return this;
  }

  /**
   * Sodium information for a given food dish.
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsNutritionFact getSodium() {
    return sodium;
  }

  /**
   * Sodium information for a given food dish.
   * @param sodium sodium or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setSodium(GeostorePriceInfoFoodNutritionFactsNutritionFact sodium) {
    this.sodium = sodium;
    return this;
  }

  /**
   * Carbohydrate information for a given food dish.
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsNutritionFact getTotalCarbohydrate() {
    return totalCarbohydrate;
  }

  /**
   * Carbohydrate information for a given food dish.
   * @param totalCarbohydrate totalCarbohydrate or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setTotalCarbohydrate(GeostorePriceInfoFoodNutritionFactsNutritionFact totalCarbohydrate) {
    this.totalCarbohydrate = totalCarbohydrate;
    return this;
  }

  /**
   * Fat information for a given food dish.
   * @return value or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFactsNutritionFact getTotalFat() {
    return totalFat;
  }

  /**
   * Fat information for a given food dish.
   * @param totalFat totalFat or {@code null} for none
   */
  public GeostorePriceInfoFoodNutritionFacts setTotalFat(GeostorePriceInfoFoodNutritionFactsNutritionFact totalFat) {
    this.totalFat = totalFat;
    return this;
  }

  @Override
  public GeostorePriceInfoFoodNutritionFacts set(String fieldName, Object value) {
    return (GeostorePriceInfoFoodNutritionFacts) super.set(fieldName, value);
  }

  @Override
  public GeostorePriceInfoFoodNutritionFacts clone() {
    return (GeostorePriceInfoFoodNutritionFacts) super.clone();
  }

}
