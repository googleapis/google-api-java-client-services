/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.iam.v1.model;

/**
 * Represents an SAML 2.0 identity provider.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity and Access Management (IAM) API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Saml extends com.google.api.client.json.GenericJson {

  /**
   * Required. SAML identity provider (IdP) configuration metadata XML doc. The XML document must
   * comply with the [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-
   * metadata-2.0-os.pdf). The maximum size of an acceptable XML document is 128K characters. The
   * SAML metadata XML document must satisfy the following constraints: * Must contain an IdP Entity
   * ID. * Must contain at least one non-expired signing certificate. * For each signing
   * certificate, the expiration must be: * From no more than 7 days in the future. * To no more
   * than 15 years in the future. * Up to three IdP signing keys are allowed. When updating the
   * provider's metadata XML, at least one non-expired signing key must overlap with the existing
   * metadata. This requirement is skipped if there are no non-expired signing keys present in the
   * existing metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String idpMetadataXml;

  /**
   * Required. SAML identity provider (IdP) configuration metadata XML doc. The XML document must
   * comply with the [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-
   * metadata-2.0-os.pdf). The maximum size of an acceptable XML document is 128K characters. The
   * SAML metadata XML document must satisfy the following constraints: * Must contain an IdP Entity
   * ID. * Must contain at least one non-expired signing certificate. * For each signing
   * certificate, the expiration must be: * From no more than 7 days in the future. * To no more
   * than 15 years in the future. * Up to three IdP signing keys are allowed. When updating the
   * provider's metadata XML, at least one non-expired signing key must overlap with the existing
   * metadata. This requirement is skipped if there are no non-expired signing keys present in the
   * existing metadata.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdpMetadataXml() {
    return idpMetadataXml;
  }

  /**
   * Required. SAML identity provider (IdP) configuration metadata XML doc. The XML document must
   * comply with the [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-
   * metadata-2.0-os.pdf). The maximum size of an acceptable XML document is 128K characters. The
   * SAML metadata XML document must satisfy the following constraints: * Must contain an IdP Entity
   * ID. * Must contain at least one non-expired signing certificate. * For each signing
   * certificate, the expiration must be: * From no more than 7 days in the future. * To no more
   * than 15 years in the future. * Up to three IdP signing keys are allowed. When updating the
   * provider's metadata XML, at least one non-expired signing key must overlap with the existing
   * metadata. This requirement is skipped if there are no non-expired signing keys present in the
   * existing metadata.
   * @param idpMetadataXml idpMetadataXml or {@code null} for none
   */
  public Saml setIdpMetadataXml(java.lang.String idpMetadataXml) {
    this.idpMetadataXml = idpMetadataXml;
    return this;
  }

  @Override
  public Saml set(String fieldName, Object value) {
    return (Saml) super.set(fieldName, value);
  }

  @Override
  public Saml clone() {
    return (Saml) super.clone();
  }

}
