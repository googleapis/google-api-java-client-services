/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workstations.v1beta.model;

/**
 * A single instance of a developer workstation with its own persistent storage.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Workstations API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Workstation extends com.google.api.client.json.GenericJson {

  /**
   * Client-specified annotations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. Time when this resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Time when this resource was soft-deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * Human-readable name for this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Environment variables passed to the workstation container.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> env;

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the
   * client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. Host to which clients can send HTTPS traffic that will be received by the
   * workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send
   * traffic to a different port, clients may prefix the host with the destination port in the
   * format `{port}-{host}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String host;

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the
   * underlying Compute Engine resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Full name of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Indicates whether this resource is currently being updated to match its intended
   * state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reconciling;

  /**
   * Output only. Current state of the workstation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. A system-assigned unique identified for this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Time when this resource was most recently updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Client-specified annotations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Client-specified annotations.
   * @param annotations annotations or {@code null} for none
   */
  public Workstation setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. Time when this resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when this resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public Workstation setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Time when this resource was soft-deleted.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. Time when this resource was soft-deleted.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public Workstation setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Human-readable name for this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Human-readable name for this resource.
   * @param displayName displayName or {@code null} for none
   */
  public Workstation setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Environment variables passed to the workstation container.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getEnv() {
    return env;
  }

  /**
   * Environment variables passed to the workstation container.
   * @param env env or {@code null} for none
   */
  public Workstation setEnv(java.util.Map<String, java.lang.String> env) {
    this.env = env;
    return this;
  }

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the
   * client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the
   * client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public Workstation setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. Host to which clients can send HTTPS traffic that will be received by the
   * workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send
   * traffic to a different port, clients may prefix the host with the destination port in the
   * format `{port}-{host}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getHost() {
    return host;
  }

  /**
   * Output only. Host to which clients can send HTTPS traffic that will be received by the
   * workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send
   * traffic to a different port, clients may prefix the host with the destination port in the
   * format `{port}-{host}`.
   * @param host host or {@code null} for none
   */
  public Workstation setHost(java.lang.String host) {
    this.host = host;
    return this;
  }

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the
   * underlying Compute Engine resources.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the
   * underlying Compute Engine resources.
   * @param labels labels or {@code null} for none
   */
  public Workstation setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Full name of this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Full name of this resource.
   * @param name name or {@code null} for none
   */
  public Workstation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Indicates whether this resource is currently being updated to match its intended
   * state.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReconciling() {
    return reconciling;
  }

  /**
   * Output only. Indicates whether this resource is currently being updated to match its intended
   * state.
   * @param reconciling reconciling or {@code null} for none
   */
  public Workstation setReconciling(java.lang.Boolean reconciling) {
    this.reconciling = reconciling;
    return this;
  }

  /**
   * Output only. Current state of the workstation.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the workstation.
   * @param state state or {@code null} for none
   */
  public Workstation setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. A system-assigned unique identified for this resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. A system-assigned unique identified for this resource.
   * @param uid uid or {@code null} for none
   */
  public Workstation setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Time when this resource was most recently updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when this resource was most recently updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public Workstation setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Workstation set(String fieldName, Object value) {
    return (Workstation) super.set(fieldName, value);
  }

  @Override
  public Workstation clone() {
    return (Workstation) super.clone();
  }

}
