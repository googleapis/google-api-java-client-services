/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recommendationengine.v1beta1.model;

/**
 * Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then
 * this message is returned by the google.longrunning.Operations.response field.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Recommendations AI. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse extends com.google.api.client.json.GenericJson {

  /**
   * The total count of events purged as a result of the operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long purgedEventsCount;

  /**
   * A sampling of events deleted (or will be deleted) depending on the `force` property in the
   * request. Max of 500 items will be returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudRecommendationengineV1beta1UserEvent> userEventsSample;

  /**
   * The total count of events purged as a result of the operation.
   * @return value or {@code null} for none
   */
  public java.lang.Long getPurgedEventsCount() {
    return purgedEventsCount;
  }

  /**
   * The total count of events purged as a result of the operation.
   * @param purgedEventsCount purgedEventsCount or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse setPurgedEventsCount(java.lang.Long purgedEventsCount) {
    this.purgedEventsCount = purgedEventsCount;
    return this;
  }

  /**
   * A sampling of events deleted (or will be deleted) depending on the `force` property in the
   * request. Max of 500 items will be returned.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudRecommendationengineV1beta1UserEvent> getUserEventsSample() {
    return userEventsSample;
  }

  /**
   * A sampling of events deleted (or will be deleted) depending on the `force` property in the
   * request. Max of 500 items will be returned.
   * @param userEventsSample userEventsSample or {@code null} for none
   */
  public GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse setUserEventsSample(java.util.List<GoogleCloudRecommendationengineV1beta1UserEvent> userEventsSample) {
    this.userEventsSample = userEventsSample;
    return this;
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse set(String fieldName, Object value) {
    return (GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse clone() {
    return (GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse) super.clone();
  }

}
