/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securitycenter.v1beta1.model;

/**
 * Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Security Command Center API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Vulnerability extends com.google.api.client.json.GenericJson {

  /**
   * CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Cve cve;

  /**
   * Represents one or more Common Weakness Enumeration (CWE) information on this vulnerability.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Cwe> cwes;

  static {
    // hack to force ProGuard to consider Cwe used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Cwe.class);
  }

  /**
   * The fixed package is relevant to the finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCommandCenterPackage fixedPackage;

  /**
   * The offending package is relevant to the finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityCommandCenterPackage offendingPackage;

  /**
   * Provider provided risk_score based on multiple factors. The higher the risk score, the more
   * risky the vulnerability is.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long providerRiskScore;

  /**
   * Represents whether the vulnerability is reachable (detected via static analysis)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reachable;

  /**
   * The security bulletin is relevant to this finding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SecurityBulletin securityBulletin;

  /**
   * CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
   * @return value or {@code null} for none
   */
  public Cve getCve() {
    return cve;
  }

  /**
   * CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)
   * @param cve cve or {@code null} for none
   */
  public Vulnerability setCve(Cve cve) {
    this.cve = cve;
    return this;
  }

  /**
   * Represents one or more Common Weakness Enumeration (CWE) information on this vulnerability.
   * @return value or {@code null} for none
   */
  public java.util.List<Cwe> getCwes() {
    return cwes;
  }

  /**
   * Represents one or more Common Weakness Enumeration (CWE) information on this vulnerability.
   * @param cwes cwes or {@code null} for none
   */
  public Vulnerability setCwes(java.util.List<Cwe> cwes) {
    this.cwes = cwes;
    return this;
  }

  /**
   * The fixed package is relevant to the finding.
   * @return value or {@code null} for none
   */
  public SecurityCommandCenterPackage getFixedPackage() {
    return fixedPackage;
  }

  /**
   * The fixed package is relevant to the finding.
   * @param fixedPackage fixedPackage or {@code null} for none
   */
  public Vulnerability setFixedPackage(SecurityCommandCenterPackage fixedPackage) {
    this.fixedPackage = fixedPackage;
    return this;
  }

  /**
   * The offending package is relevant to the finding.
   * @return value or {@code null} for none
   */
  public SecurityCommandCenterPackage getOffendingPackage() {
    return offendingPackage;
  }

  /**
   * The offending package is relevant to the finding.
   * @param offendingPackage offendingPackage or {@code null} for none
   */
  public Vulnerability setOffendingPackage(SecurityCommandCenterPackage offendingPackage) {
    this.offendingPackage = offendingPackage;
    return this;
  }

  /**
   * Provider provided risk_score based on multiple factors. The higher the risk score, the more
   * risky the vulnerability is.
   * @return value or {@code null} for none
   */
  public java.lang.Long getProviderRiskScore() {
    return providerRiskScore;
  }

  /**
   * Provider provided risk_score based on multiple factors. The higher the risk score, the more
   * risky the vulnerability is.
   * @param providerRiskScore providerRiskScore or {@code null} for none
   */
  public Vulnerability setProviderRiskScore(java.lang.Long providerRiskScore) {
    this.providerRiskScore = providerRiskScore;
    return this;
  }

  /**
   * Represents whether the vulnerability is reachable (detected via static analysis)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReachable() {
    return reachable;
  }

  /**
   * Represents whether the vulnerability is reachable (detected via static analysis)
   * @param reachable reachable or {@code null} for none
   */
  public Vulnerability setReachable(java.lang.Boolean reachable) {
    this.reachable = reachable;
    return this;
  }

  /**
   * The security bulletin is relevant to this finding.
   * @return value or {@code null} for none
   */
  public SecurityBulletin getSecurityBulletin() {
    return securityBulletin;
  }

  /**
   * The security bulletin is relevant to this finding.
   * @param securityBulletin securityBulletin or {@code null} for none
   */
  public Vulnerability setSecurityBulletin(SecurityBulletin securityBulletin) {
    this.securityBulletin = securityBulletin;
    return this;
  }

  @Override
  public Vulnerability set(String fieldName, Object value) {
    return (Vulnerability) super.set(fieldName, value);
  }

  @Override
  public Vulnerability clone() {
    return (Vulnerability) super.clone();
  }

}
