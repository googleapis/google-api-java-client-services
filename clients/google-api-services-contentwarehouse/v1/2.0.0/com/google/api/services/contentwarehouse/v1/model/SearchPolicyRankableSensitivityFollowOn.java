/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Sensitivity is marked at end of the last turn. See go/followon-sensitivity for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SearchPolicyRankableSensitivityFollowOn extends com.google.api.client.json.GenericJson {

  /**
   * Should e2e search candidates running in parallel with QU (eg. GBot) be blocked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean blockNonV2SearchBackends;

  /**
   * Iff true this follow-on sensitivity will rank above the ones determined by query understanding
   * (QU).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean ignoreQueryUnderstanding;

  /**
   * Should e2e search candidates running in parallel with QU (eg. GBot) be blocked.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBlockNonV2SearchBackends() {
    return blockNonV2SearchBackends;
  }

  /**
   * Should e2e search candidates running in parallel with QU (eg. GBot) be blocked.
   * @param blockNonV2SearchBackends blockNonV2SearchBackends or {@code null} for none
   */
  public SearchPolicyRankableSensitivityFollowOn setBlockNonV2SearchBackends(java.lang.Boolean blockNonV2SearchBackends) {
    this.blockNonV2SearchBackends = blockNonV2SearchBackends;
    return this;
  }

  /**
   * Iff true this follow-on sensitivity will rank above the ones determined by query understanding
   * (QU).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIgnoreQueryUnderstanding() {
    return ignoreQueryUnderstanding;
  }

  /**
   * Iff true this follow-on sensitivity will rank above the ones determined by query understanding
   * (QU).
   * @param ignoreQueryUnderstanding ignoreQueryUnderstanding or {@code null} for none
   */
  public SearchPolicyRankableSensitivityFollowOn setIgnoreQueryUnderstanding(java.lang.Boolean ignoreQueryUnderstanding) {
    this.ignoreQueryUnderstanding = ignoreQueryUnderstanding;
    return this;
  }

  @Override
  public SearchPolicyRankableSensitivityFollowOn set(String fieldName, Object value) {
    return (SearchPolicyRankableSensitivityFollowOn) super.set(fieldName, value);
  }

  @Override
  public SearchPolicyRankableSensitivityFollowOn clone() {
    return (SearchPolicyRankableSensitivityFollowOn) super.clone();
  }

}
