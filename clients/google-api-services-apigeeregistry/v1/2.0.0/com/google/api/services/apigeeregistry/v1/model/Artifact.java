/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigeeregistry.v1.model;

/**
 * Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store
 * metadata that is too large or numerous to be stored directly on the resource. Since artifacts are
 * stored separately from parent resources, they should generally be used for metadata that is
 * needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed
 * or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated
 * and checked for presence without downloading their (potentially-large) contents.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Apigee Registry API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Artifact extends com.google.api.client.json.GenericJson {

  /**
   * Annotations attach non-identifying metadata to resources. Annotation keys and values are less
   * restricted than those of labels, but should be generally used for small values of broad
   * interest. Larger, topic- specific metadata should be stored in Artifacts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Input only. The contents of the artifact. Provided by API callers when artifacts are created or
   * replaced. To access the contents of an artifact, use GetArtifactContents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contents;

  /**
   * Output only. Creation timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the
   * hash of the uncompressed artifact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hash;

  /**
   * Labels attach identifying metadata to resources. Identifying metadata can be used to filter
   * list operations. Label keys and values can be no longer than 64 characters (Unicode
   * codepoints), can only contain lowercase letters, numeric characters, underscores and dashes.
   * International characters are allowed. No more than 64 user labels can be associated with one
   * resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and
   * examples of labels. System reserved label keys are prefixed with "registry.googleapis.com/" and
   * cannot be changed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * A content type specifier for the artifact. Content type specifiers are Media Types
   * (https://en.wikipedia.org/wiki/Media_type) with a possible "schema" parameter that specifies a
   * schema for the stored information. Content types can specify compression. Currently only GZip
   * compression is supported (indicated with "+gzip").
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * Resource name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of
   * the uncompressed artifact.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer sizeBytes;

  /**
   * Output only. Last update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Annotations attach non-identifying metadata to resources. Annotation keys and values are less
   * restricted than those of labels, but should be generally used for small values of broad
   * interest. Larger, topic- specific metadata should be stored in Artifacts.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Annotations attach non-identifying metadata to resources. Annotation keys and values are less
   * restricted than those of labels, but should be generally used for small values of broad
   * interest. Larger, topic- specific metadata should be stored in Artifacts.
   * @param annotations annotations or {@code null} for none
   */
  public Artifact setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Input only. The contents of the artifact. Provided by API callers when artifacts are created or
   * replaced. To access the contents of an artifact, use GetArtifactContents.
   * @see #decodeContents()
   * @return value or {@code null} for none
   */
  public java.lang.String getContents() {
    return contents;
  }

  /**
   * Input only. The contents of the artifact. Provided by API callers when artifacts are created or
   * replaced. To access the contents of an artifact, use GetArtifactContents.
   * @see #getContents()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeContents() {
    return com.google.api.client.util.Base64.decodeBase64(contents);
  }

  /**
   * Input only. The contents of the artifact. Provided by API callers when artifacts are created or
   * replaced. To access the contents of an artifact, use GetArtifactContents.
   * @see #encodeContents()
   * @param contents contents or {@code null} for none
   */
  public Artifact setContents(java.lang.String contents) {
    this.contents = contents;
    return this;
  }

  /**
   * Input only. The contents of the artifact. Provided by API callers when artifacts are created or
   * replaced. To access the contents of an artifact, use GetArtifactContents.
   * @see #setContents()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Artifact encodeContents(byte[] contents) {
    this.contents = com.google.api.client.util.Base64.encodeBase64URLSafeString(contents);
    return this;
  }

  /**
   * Output only. Creation timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Creation timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public Artifact setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the
   * hash of the uncompressed artifact.
   * @return value or {@code null} for none
   */
  public java.lang.String getHash() {
    return hash;
  }

  /**
   * Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the
   * hash of the uncompressed artifact.
   * @param hash hash or {@code null} for none
   */
  public Artifact setHash(java.lang.String hash) {
    this.hash = hash;
    return this;
  }

  /**
   * Labels attach identifying metadata to resources. Identifying metadata can be used to filter
   * list operations. Label keys and values can be no longer than 64 characters (Unicode
   * codepoints), can only contain lowercase letters, numeric characters, underscores and dashes.
   * International characters are allowed. No more than 64 user labels can be associated with one
   * resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and
   * examples of labels. System reserved label keys are prefixed with "registry.googleapis.com/" and
   * cannot be changed.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels attach identifying metadata to resources. Identifying metadata can be used to filter
   * list operations. Label keys and values can be no longer than 64 characters (Unicode
   * codepoints), can only contain lowercase letters, numeric characters, underscores and dashes.
   * International characters are allowed. No more than 64 user labels can be associated with one
   * resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and
   * examples of labels. System reserved label keys are prefixed with "registry.googleapis.com/" and
   * cannot be changed.
   * @param labels labels or {@code null} for none
   */
  public Artifact setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * A content type specifier for the artifact. Content type specifiers are Media Types
   * (https://en.wikipedia.org/wiki/Media_type) with a possible "schema" parameter that specifies a
   * schema for the stored information. Content types can specify compression. Currently only GZip
   * compression is supported (indicated with "+gzip").
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * A content type specifier for the artifact. Content type specifiers are Media Types
   * (https://en.wikipedia.org/wiki/Media_type) with a possible "schema" parameter that specifies a
   * schema for the stored information. Content types can specify compression. Currently only GZip
   * compression is supported (indicated with "+gzip").
   * @param mimeType mimeType or {@code null} for none
   */
  public Artifact setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Resource name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name.
   * @param name name or {@code null} for none
   */
  public Artifact setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of
   * the uncompressed artifact.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSizeBytes() {
    return sizeBytes;
  }

  /**
   * Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of
   * the uncompressed artifact.
   * @param sizeBytes sizeBytes or {@code null} for none
   */
  public Artifact setSizeBytes(java.lang.Integer sizeBytes) {
    this.sizeBytes = sizeBytes;
    return this;
  }

  /**
   * Output only. Last update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Artifact setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Artifact set(String fieldName, Object value) {
    return (Artifact) super.set(fieldName, value);
  }

  @Override
  public Artifact clone() {
    return (Artifact) super.clone();
  }

}
