/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2beta.model;

/**
 * The error payload that is populated on LRO import APIs. Including:
 * "google.cloud.retail.v2.ProductService.ImportProducts"
 * "google.cloud.retail.v2.EventService.ImportUserEvents"
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Retail API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailLoggingImportErrorContext extends com.google.api.client.json.GenericJson {

  /**
   * The detailed content which caused the error on importing a catalog item.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String catalogItem;

  /**
   * Cloud Storage file path of the import source. Can be set for batch operation error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gcsPath;

  /**
   * Line number of the content in file. Should be empty for permission or batch operation error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lineNumber;

  /**
   * The operation resource name of the LRO.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operationName;

  /**
   * The detailed content which caused the error on importing a product.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String product;

  /**
   * The detailed content which caused the error on importing a user event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userEvent;

  /**
   * The detailed content which caused the error on importing a catalog item.
   * @return value or {@code null} for none
   */
  public java.lang.String getCatalogItem() {
    return catalogItem;
  }

  /**
   * The detailed content which caused the error on importing a catalog item.
   * @param catalogItem catalogItem or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setCatalogItem(java.lang.String catalogItem) {
    this.catalogItem = catalogItem;
    return this;
  }

  /**
   * Cloud Storage file path of the import source. Can be set for batch operation error.
   * @return value or {@code null} for none
   */
  public java.lang.String getGcsPath() {
    return gcsPath;
  }

  /**
   * Cloud Storage file path of the import source. Can be set for batch operation error.
   * @param gcsPath gcsPath or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setGcsPath(java.lang.String gcsPath) {
    this.gcsPath = gcsPath;
    return this;
  }

  /**
   * Line number of the content in file. Should be empty for permission or batch operation error.
   * @return value or {@code null} for none
   */
  public java.lang.String getLineNumber() {
    return lineNumber;
  }

  /**
   * Line number of the content in file. Should be empty for permission or batch operation error.
   * @param lineNumber lineNumber or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setLineNumber(java.lang.String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * The operation resource name of the LRO.
   * @return value or {@code null} for none
   */
  public java.lang.String getOperationName() {
    return operationName;
  }

  /**
   * The operation resource name of the LRO.
   * @param operationName operationName or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setOperationName(java.lang.String operationName) {
    this.operationName = operationName;
    return this;
  }

  /**
   * The detailed content which caused the error on importing a product.
   * @return value or {@code null} for none
   */
  public java.lang.String getProduct() {
    return product;
  }

  /**
   * The detailed content which caused the error on importing a product.
   * @param product product or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setProduct(java.lang.String product) {
    this.product = product;
    return this;
  }

  /**
   * The detailed content which caused the error on importing a user event.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserEvent() {
    return userEvent;
  }

  /**
   * The detailed content which caused the error on importing a user event.
   * @param userEvent userEvent or {@code null} for none
   */
  public GoogleCloudRetailLoggingImportErrorContext setUserEvent(java.lang.String userEvent) {
    this.userEvent = userEvent;
    return this;
  }

  @Override
  public GoogleCloudRetailLoggingImportErrorContext set(String fieldName, Object value) {
    return (GoogleCloudRetailLoggingImportErrorContext) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailLoggingImportErrorContext clone() {
    return (GoogleCloudRetailLoggingImportErrorContext) super.clone();
  }

}
