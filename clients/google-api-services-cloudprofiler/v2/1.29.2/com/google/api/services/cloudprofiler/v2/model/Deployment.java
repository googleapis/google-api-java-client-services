/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudprofiler.v2.model;

/**
 * Deployment contains the deployment identification information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Stackdriver Profiler API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Deployment extends com.google.api.client.json.GenericJson {

  /**
   * Labels identify the deployment within the user universe and same target. Validation regex for
   * label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`. Value for an individual label must be <=
   * 512 bytes, the total size of all label names and values must be <= 1024 bytes.
   *
   * Label named "language" can be used to record the programming language of the profiled
   * deployment. The standard choices for the value include "java", "go", "python", "ruby",
   * "nodejs", "php", "dotnet".
   *
   * For deployments running on Google Cloud Platform, "zone" or "region" label should be present
   * describing the deployment location. An example of a zone is "us-central1-a", an example of a
   * region is "us-central1" or "us-central".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Project ID is the ID of a cloud project. Validation regex: `^a-z{4,61}[a-z0-9]$`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Target is the service name used to group related deployments: * Service name for GAE Flex /
   * Standard. * Cluster and container name for GKE. * User-specified string for direct GCE
   * profiling (e.g. Java). * Job name for Dataflow. Validation regex:
   * `^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String target;

  /**
   * Labels identify the deployment within the user universe and same target. Validation regex for
   * label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`. Value for an individual label must be <=
   * 512 bytes, the total size of all label names and values must be <= 1024 bytes.
   *
   * Label named "language" can be used to record the programming language of the profiled
   * deployment. The standard choices for the value include "java", "go", "python", "ruby",
   * "nodejs", "php", "dotnet".
   *
   * For deployments running on Google Cloud Platform, "zone" or "region" label should be present
   * describing the deployment location. An example of a zone is "us-central1-a", an example of a
   * region is "us-central1" or "us-central".
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels identify the deployment within the user universe and same target. Validation regex for
   * label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`. Value for an individual label must be <=
   * 512 bytes, the total size of all label names and values must be <= 1024 bytes.
   *
   * Label named "language" can be used to record the programming language of the profiled
   * deployment. The standard choices for the value include "java", "go", "python", "ruby",
   * "nodejs", "php", "dotnet".
   *
   * For deployments running on Google Cloud Platform, "zone" or "region" label should be present
   * describing the deployment location. An example of a zone is "us-central1-a", an example of a
   * region is "us-central1" or "us-central".
   * @param labels labels or {@code null} for none
   */
  public Deployment setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Project ID is the ID of a cloud project. Validation regex: `^a-z{4,61}[a-z0-9]$`.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Project ID is the ID of a cloud project. Validation regex: `^a-z{4,61}[a-z0-9]$`.
   * @param projectId projectId or {@code null} for none
   */
  public Deployment setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Target is the service name used to group related deployments: * Service name for GAE Flex /
   * Standard. * Cluster and container name for GKE. * User-specified string for direct GCE
   * profiling (e.g. Java). * Job name for Dataflow. Validation regex:
   * `^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$`.
   * @return value or {@code null} for none
   */
  public java.lang.String getTarget() {
    return target;
  }

  /**
   * Target is the service name used to group related deployments: * Service name for GAE Flex /
   * Standard. * Cluster and container name for GKE. * User-specified string for direct GCE
   * profiling (e.g. Java). * Job name for Dataflow. Validation regex:
   * `^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$`.
   * @param target target or {@code null} for none
   */
  public Deployment setTarget(java.lang.String target) {
    this.target = target;
    return this;
  }

  @Override
  public Deployment set(String fieldName, Object value) {
    return (Deployment) super.set(fieldName, value);
  }

  @Override
  public Deployment clone() {
    return (Deployment) super.clone();
  }

}
