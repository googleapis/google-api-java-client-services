/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Model definition for OpenCreatedDraftActionMarkup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OpenCreatedDraftActionMarkup extends com.google.api.client.json.GenericJson {

  /**
   * The ID of the newly created draft in the form "r123".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String draftId;

  /**
   * The server storage ID in hex format, for example,"15e9fa622ce1029d".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String draftStorageId;

  /**
   * The ID of the thread containing the newly created draft, for example, "15e9fa622ce1029d".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String draftThreadId;

  /**
   * The server permanent ID for the draft's thread. This field isn't set anywhere, and it's ignored
   * when processing OpenCreatedDraftActionMarkup. Supply and use draftThreadStorageId instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String draftThreadServerPermId;

  /**
   * The ID of the newly created draft in the form "r123".
   * @return value or {@code null} for none
   */
  public java.lang.String getDraftId() {
    return draftId;
  }

  /**
   * The ID of the newly created draft in the form "r123".
   * @param draftId draftId or {@code null} for none
   */
  public OpenCreatedDraftActionMarkup setDraftId(java.lang.String draftId) {
    this.draftId = draftId;
    return this;
  }

  /**
   * The server storage ID in hex format, for example,"15e9fa622ce1029d".
   * @return value or {@code null} for none
   */
  public java.lang.String getDraftStorageId() {
    return draftStorageId;
  }

  /**
   * The server storage ID in hex format, for example,"15e9fa622ce1029d".
   * @param draftStorageId draftStorageId or {@code null} for none
   */
  public OpenCreatedDraftActionMarkup setDraftStorageId(java.lang.String draftStorageId) {
    this.draftStorageId = draftStorageId;
    return this;
  }

  /**
   * The ID of the thread containing the newly created draft, for example, "15e9fa622ce1029d".
   * @return value or {@code null} for none
   */
  public java.lang.String getDraftThreadId() {
    return draftThreadId;
  }

  /**
   * The ID of the thread containing the newly created draft, for example, "15e9fa622ce1029d".
   * @param draftThreadId draftThreadId or {@code null} for none
   */
  public OpenCreatedDraftActionMarkup setDraftThreadId(java.lang.String draftThreadId) {
    this.draftThreadId = draftThreadId;
    return this;
  }

  /**
   * The server permanent ID for the draft's thread. This field isn't set anywhere, and it's ignored
   * when processing OpenCreatedDraftActionMarkup. Supply and use draftThreadStorageId instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getDraftThreadServerPermId() {
    return draftThreadServerPermId;
  }

  /**
   * The server permanent ID for the draft's thread. This field isn't set anywhere, and it's ignored
   * when processing OpenCreatedDraftActionMarkup. Supply and use draftThreadStorageId instead.
   * @param draftThreadServerPermId draftThreadServerPermId or {@code null} for none
   */
  public OpenCreatedDraftActionMarkup setDraftThreadServerPermId(java.lang.String draftThreadServerPermId) {
    this.draftThreadServerPermId = draftThreadServerPermId;
    return this;
  }

  @Override
  public OpenCreatedDraftActionMarkup set(String fieldName, Object value) {
    return (OpenCreatedDraftActionMarkup) super.set(fieldName, value);
  }

  @Override
  public OpenCreatedDraftActionMarkup clone() {
    return (OpenCreatedDraftActionMarkup) super.clone();
  }

}
