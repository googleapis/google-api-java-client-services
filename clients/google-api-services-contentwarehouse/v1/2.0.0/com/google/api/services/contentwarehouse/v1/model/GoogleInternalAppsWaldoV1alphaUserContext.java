/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Additional context about the user's current and/or future availability to give a better
 * understanding of the status ("Working from Zurich").
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleInternalAppsWaldoV1alphaUserContext extends com.google.api.client.json.GenericJson {

  /**
   * Helps to determine the user's local time by providing their current time zone.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaLocalTimeContext localTime;

  /**
   * Set if user has upcoming OOO.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaUpcomingOooContext upcomingOoo;

  /**
   * Set if the user is working remotely.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaWorkingElsewhereContext workingElsewhere;

  /**
   * Helps to determine the user's local time by providing their current time zone.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaLocalTimeContext getLocalTime() {
    return localTime;
  }

  /**
   * Helps to determine the user's local time by providing their current time zone.
   * @param localTime localTime or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserContext setLocalTime(GoogleInternalAppsWaldoV1alphaLocalTimeContext localTime) {
    this.localTime = localTime;
    return this;
  }

  /**
   * Set if user has upcoming OOO.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUpcomingOooContext getUpcomingOoo() {
    return upcomingOoo;
  }

  /**
   * Set if user has upcoming OOO.
   * @param upcomingOoo upcomingOoo or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserContext setUpcomingOoo(GoogleInternalAppsWaldoV1alphaUpcomingOooContext upcomingOoo) {
    this.upcomingOoo = upcomingOoo;
    return this;
  }

  /**
   * Set if the user is working remotely.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaWorkingElsewhereContext getWorkingElsewhere() {
    return workingElsewhere;
  }

  /**
   * Set if the user is working remotely.
   * @param workingElsewhere workingElsewhere or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserContext setWorkingElsewhere(GoogleInternalAppsWaldoV1alphaWorkingElsewhereContext workingElsewhere) {
    this.workingElsewhere = workingElsewhere;
    return this;
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaUserContext set(String fieldName, Object value) {
    return (GoogleInternalAppsWaldoV1alphaUserContext) super.set(fieldName, value);
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaUserContext clone() {
    return (GoogleInternalAppsWaldoV1alphaUserContext) super.clone();
  }

}
