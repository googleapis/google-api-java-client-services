/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * A widget that displays a list of error groups.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ErrorReportingPanel extends com.google.api.client.json.GenericJson {

  /**
   * The resource name of the Google Cloud Platform project. Written as projects/{projectID} or
   * projects/{projectNumber}, where {projectID} and {projectNumber} can be found in the Google
   * Cloud console (https://support.google.com/cloud/answer/6158840).Examples: projects/my-
   * project-123, projects/5551234.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> projectNames;

  /**
   * An identifier of the service, such as the name of the executable, job, or Google App Engine
   * service name. This field is expected to have a low number of values that are relatively stable
   * over time, as opposed to version, which can be changed whenever new code is deployed.Contains
   * the service name for error reports extracted from Google App Engine logs or default if the App
   * Engine default service is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> services;

  /**
   * Represents the source code version that the developer provided, which could represent a version
   * label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set
   * to the version of the app.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> versions;

  /**
   * The resource name of the Google Cloud Platform project. Written as projects/{projectID} or
   * projects/{projectNumber}, where {projectID} and {projectNumber} can be found in the Google
   * Cloud console (https://support.google.com/cloud/answer/6158840).Examples: projects/my-
   * project-123, projects/5551234.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getProjectNames() {
    return projectNames;
  }

  /**
   * The resource name of the Google Cloud Platform project. Written as projects/{projectID} or
   * projects/{projectNumber}, where {projectID} and {projectNumber} can be found in the Google
   * Cloud console (https://support.google.com/cloud/answer/6158840).Examples: projects/my-
   * project-123, projects/5551234.
   * @param projectNames projectNames or {@code null} for none
   */
  public ErrorReportingPanel setProjectNames(java.util.List<java.lang.String> projectNames) {
    this.projectNames = projectNames;
    return this;
  }

  /**
   * An identifier of the service, such as the name of the executable, job, or Google App Engine
   * service name. This field is expected to have a low number of values that are relatively stable
   * over time, as opposed to version, which can be changed whenever new code is deployed.Contains
   * the service name for error reports extracted from Google App Engine logs or default if the App
   * Engine default service is used.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getServices() {
    return services;
  }

  /**
   * An identifier of the service, such as the name of the executable, job, or Google App Engine
   * service name. This field is expected to have a low number of values that are relatively stable
   * over time, as opposed to version, which can be changed whenever new code is deployed.Contains
   * the service name for error reports extracted from Google App Engine logs or default if the App
   * Engine default service is used.
   * @param services services or {@code null} for none
   */
  public ErrorReportingPanel setServices(java.util.List<java.lang.String> services) {
    this.services = services;
    return this;
  }

  /**
   * Represents the source code version that the developer provided, which could represent a version
   * label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set
   * to the version of the app.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getVersions() {
    return versions;
  }

  /**
   * Represents the source code version that the developer provided, which could represent a version
   * label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set
   * to the version of the app.
   * @param versions versions or {@code null} for none
   */
  public ErrorReportingPanel setVersions(java.util.List<java.lang.String> versions) {
    this.versions = versions;
    return this;
  }

  @Override
  public ErrorReportingPanel set(String fieldName, Object value) {
    return (ErrorReportingPanel) super.set(fieldName, value);
  }

  @Override
  public ErrorReportingPanel clone() {
    return (ErrorReportingPanel) super.clone();
  }

}
