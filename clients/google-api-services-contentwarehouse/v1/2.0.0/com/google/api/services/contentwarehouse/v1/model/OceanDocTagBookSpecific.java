/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Book specific fields.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OceanDocTagBookSpecific extends com.google.api.client.json.GenericJson {

  /**
   * These are other bibkeys for this book beside the url_key, which is the primary key. For
   * example, a book may have ISBN, OCLC num etc. In that case ISBN is the url_key and the OCLC
   * number is the auxillary bibkey. The aux_bibkeys should have the same form as the url_key
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> auxBibkeys;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imprint;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numRatingHalfStars;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<OceanDocTagBookSpecificNumberingRange> numberingrange;

  /**
   * publisher id, if available
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long partnerId;

  /**
   * Set if the book is one of several editions or versions. Used by OFE to show numbered editions.
   * The value is copied from clustering information. See also
   * ocean/metadata/proto/bibdata_components.proto The value there is from metadata records by
   * ocean/metadata/parsing/parse_utils.cc, and is a 1-based value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer productEditionNumber;

  /**
   * In the format yyyy.mm.dd, or possibly just yyyy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publicationDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publisherName;

  /**
   * Subject (from Bisac)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subject;

  /**
   * These are other bibkeys for this book beside the url_key, which is the primary key. For
   * example, a book may have ISBN, OCLC num etc. In that case ISBN is the url_key and the OCLC
   * number is the auxillary bibkey. The aux_bibkeys should have the same form as the url_key
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAuxBibkeys() {
    return auxBibkeys;
  }

  /**
   * These are other bibkeys for this book beside the url_key, which is the primary key. For
   * example, a book may have ISBN, OCLC num etc. In that case ISBN is the url_key and the OCLC
   * number is the auxillary bibkey. The aux_bibkeys should have the same form as the url_key
   * @param auxBibkeys auxBibkeys or {@code null} for none
   */
  public OceanDocTagBookSpecific setAuxBibkeys(java.util.List<java.lang.String> auxBibkeys) {
    this.auxBibkeys = auxBibkeys;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getImprint() {
    return imprint;
  }

  /**
   * @param imprint imprint or {@code null} for none
   */
  public OceanDocTagBookSpecific setImprint(java.lang.String imprint) {
    this.imprint = imprint;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumRatingHalfStars() {
    return numRatingHalfStars;
  }

  /**
   * @param numRatingHalfStars numRatingHalfStars or {@code null} for none
   */
  public OceanDocTagBookSpecific setNumRatingHalfStars(java.lang.Integer numRatingHalfStars) {
    this.numRatingHalfStars = numRatingHalfStars;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<OceanDocTagBookSpecificNumberingRange> getNumberingrange() {
    return numberingrange;
  }

  /**
   * @param numberingrange numberingrange or {@code null} for none
   */
  public OceanDocTagBookSpecific setNumberingrange(java.util.List<OceanDocTagBookSpecificNumberingRange> numberingrange) {
    this.numberingrange = numberingrange;
    return this;
  }

  /**
   * publisher id, if available
   * @return value or {@code null} for none
   */
  public java.lang.Long getPartnerId() {
    return partnerId;
  }

  /**
   * publisher id, if available
   * @param partnerId partnerId or {@code null} for none
   */
  public OceanDocTagBookSpecific setPartnerId(java.lang.Long partnerId) {
    this.partnerId = partnerId;
    return this;
  }

  /**
   * Set if the book is one of several editions or versions. Used by OFE to show numbered editions.
   * The value is copied from clustering information. See also
   * ocean/metadata/proto/bibdata_components.proto The value there is from metadata records by
   * ocean/metadata/parsing/parse_utils.cc, and is a 1-based value.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getProductEditionNumber() {
    return productEditionNumber;
  }

  /**
   * Set if the book is one of several editions or versions. Used by OFE to show numbered editions.
   * The value is copied from clustering information. See also
   * ocean/metadata/proto/bibdata_components.proto The value there is from metadata records by
   * ocean/metadata/parsing/parse_utils.cc, and is a 1-based value.
   * @param productEditionNumber productEditionNumber or {@code null} for none
   */
  public OceanDocTagBookSpecific setProductEditionNumber(java.lang.Integer productEditionNumber) {
    this.productEditionNumber = productEditionNumber;
    return this;
  }

  /**
   * In the format yyyy.mm.dd, or possibly just yyyy.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublicationDate() {
    return publicationDate;
  }

  /**
   * In the format yyyy.mm.dd, or possibly just yyyy.
   * @param publicationDate publicationDate or {@code null} for none
   */
  public OceanDocTagBookSpecific setPublicationDate(java.lang.String publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPublisherName() {
    return publisherName;
  }

  /**
   * @param publisherName publisherName or {@code null} for none
   */
  public OceanDocTagBookSpecific setPublisherName(java.lang.String publisherName) {
    this.publisherName = publisherName;
    return this;
  }

  /**
   * Subject (from Bisac)
   * @return value or {@code null} for none
   */
  public java.lang.String getSubject() {
    return subject;
  }

  /**
   * Subject (from Bisac)
   * @param subject subject or {@code null} for none
   */
  public OceanDocTagBookSpecific setSubject(java.lang.String subject) {
    this.subject = subject;
    return this;
  }

  @Override
  public OceanDocTagBookSpecific set(String fieldName, Object value) {
    return (OceanDocTagBookSpecific) super.set(fieldName, value);
  }

  @Override
  public OceanDocTagBookSpecific clone() {
    return (OceanDocTagBookSpecific) super.clone();
  }

}
