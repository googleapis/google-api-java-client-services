/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * Defines RPO scheduling configuration for automatically creating Backups via this BackupPlan.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RpoConfig extends com.google.api.client.json.GenericJson {

  /**
   * Optional. User specified time windows during which backup can NOT happen for this BackupPlan -
   * backups should start and finish outside of any given exclusion window. Note: backup jobs will
   * be scheduled to start and finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window. All the time and date values
   * in exclusion_windows entry in the API are in UTC. We only allow <=1 recurrence (daily or
   * weekly) exclusion window for a BackupPlan while no restriction on number of single occurrence
   * windows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ExclusionWindow> exclusionWindows;

  static {
    // hack to force ProGuard to consider ExclusionWindow used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(ExclusionWindow.class);
  }

  /**
   * Required. Defines the target RPO for the BackupPlan in minutes, which means the target maximum
   * data loss in time that is acceptable for this BackupPlan. This must be at least 60, i.e., 1
   * hour, and at most 86400, i.e., 60 days.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer targetRpoMinutes;

  /**
   * Optional. User specified time windows during which backup can NOT happen for this BackupPlan -
   * backups should start and finish outside of any given exclusion window. Note: backup jobs will
   * be scheduled to start and finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window. All the time and date values
   * in exclusion_windows entry in the API are in UTC. We only allow <=1 recurrence (daily or
   * weekly) exclusion window for a BackupPlan while no restriction on number of single occurrence
   * windows.
   * @return value or {@code null} for none
   */
  public java.util.List<ExclusionWindow> getExclusionWindows() {
    return exclusionWindows;
  }

  /**
   * Optional. User specified time windows during which backup can NOT happen for this BackupPlan -
   * backups should start and finish outside of any given exclusion window. Note: backup jobs will
   * be scheduled to start and finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window. All the time and date values
   * in exclusion_windows entry in the API are in UTC. We only allow <=1 recurrence (daily or
   * weekly) exclusion window for a BackupPlan while no restriction on number of single occurrence
   * windows.
   * @param exclusionWindows exclusionWindows or {@code null} for none
   */
  public RpoConfig setExclusionWindows(java.util.List<ExclusionWindow> exclusionWindows) {
    this.exclusionWindows = exclusionWindows;
    return this;
  }

  /**
   * Required. Defines the target RPO for the BackupPlan in minutes, which means the target maximum
   * data loss in time that is acceptable for this BackupPlan. This must be at least 60, i.e., 1
   * hour, and at most 86400, i.e., 60 days.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTargetRpoMinutes() {
    return targetRpoMinutes;
  }

  /**
   * Required. Defines the target RPO for the BackupPlan in minutes, which means the target maximum
   * data loss in time that is acceptable for this BackupPlan. This must be at least 60, i.e., 1
   * hour, and at most 86400, i.e., 60 days.
   * @param targetRpoMinutes targetRpoMinutes or {@code null} for none
   */
  public RpoConfig setTargetRpoMinutes(java.lang.Integer targetRpoMinutes) {
    this.targetRpoMinutes = targetRpoMinutes;
    return this;
  }

  @Override
  public RpoConfig set(String fieldName, Object value) {
    return (RpoConfig) super.set(fieldName, value);
  }

  @Override
  public RpoConfig clone() {
    return (RpoConfig) super.clone();
  }

}
