/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.mybusinessplaceactions.v1.model;

/**
 * Represents a place action link and its attributes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the My Business Place Actions API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PlaceActionLink extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The time when the place action link was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Indicates whether this link can be edited by the client.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isEditable;

  /**
   * Optional. Whether this link is preferred by the merchant. Only one link can be marked as
   * preferred per place action type at a location. If a future request marks a different link as
   * preferred for the same place action type, then the current preferred link (if any exists) will
   * lose its preference.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isPreferred;

  /**
   * Optional. The resource name, in the format
   * `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be
   * considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and
   * deleting links respectively. However, it will be ignored in CreatePlaceActionLink request,
   * where `place_action_link_id` will be assigned by the server on successful creation of a new
   * link and returned as part of the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. The type of place action that can be performed using this link.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String placeActionType;

  /**
   * Output only. Specifies the provider type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String providerType;

  /**
   * Output only. The time when the place action link was last modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. The link uri. The same uri can be reused for different action types across different
   * locations. However, only one place action link is allowed for each unique combination of (uri,
   * place action type, location).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * Output only. The time when the place action link was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the place action link was created.
   * @param createTime createTime or {@code null} for none
   */
  public PlaceActionLink setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Indicates whether this link can be edited by the client.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsEditable() {
    return isEditable;
  }

  /**
   * Output only. Indicates whether this link can be edited by the client.
   * @param isEditable isEditable or {@code null} for none
   */
  public PlaceActionLink setIsEditable(java.lang.Boolean isEditable) {
    this.isEditable = isEditable;
    return this;
  }

  /**
   * Optional. Whether this link is preferred by the merchant. Only one link can be marked as
   * preferred per place action type at a location. If a future request marks a different link as
   * preferred for the same place action type, then the current preferred link (if any exists) will
   * lose its preference.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsPreferred() {
    return isPreferred;
  }

  /**
   * Optional. Whether this link is preferred by the merchant. Only one link can be marked as
   * preferred per place action type at a location. If a future request marks a different link as
   * preferred for the same place action type, then the current preferred link (if any exists) will
   * lose its preference.
   * @param isPreferred isPreferred or {@code null} for none
   */
  public PlaceActionLink setIsPreferred(java.lang.Boolean isPreferred) {
    this.isPreferred = isPreferred;
    return this;
  }

  /**
   * Optional. The resource name, in the format
   * `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be
   * considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and
   * deleting links respectively. However, it will be ignored in CreatePlaceActionLink request,
   * where `place_action_link_id` will be assigned by the server on successful creation of a new
   * link and returned as part of the response.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. The resource name, in the format
   * `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be
   * considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and
   * deleting links respectively. However, it will be ignored in CreatePlaceActionLink request,
   * where `place_action_link_id` will be assigned by the server on successful creation of a new
   * link and returned as part of the response.
   * @param name name or {@code null} for none
   */
  public PlaceActionLink setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. The type of place action that can be performed using this link.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaceActionType() {
    return placeActionType;
  }

  /**
   * Required. The type of place action that can be performed using this link.
   * @param placeActionType placeActionType or {@code null} for none
   */
  public PlaceActionLink setPlaceActionType(java.lang.String placeActionType) {
    this.placeActionType = placeActionType;
    return this;
  }

  /**
   * Output only. Specifies the provider type.
   * @return value or {@code null} for none
   */
  public java.lang.String getProviderType() {
    return providerType;
  }

  /**
   * Output only. Specifies the provider type.
   * @param providerType providerType or {@code null} for none
   */
  public PlaceActionLink setProviderType(java.lang.String providerType) {
    this.providerType = providerType;
    return this;
  }

  /**
   * Output only. The time when the place action link was last modified.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the place action link was last modified.
   * @param updateTime updateTime or {@code null} for none
   */
  public PlaceActionLink setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Required. The link uri. The same uri can be reused for different action types across different
   * locations. However, only one place action link is allowed for each unique combination of (uri,
   * place action type, location).
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * Required. The link uri. The same uri can be reused for different action types across different
   * locations. However, only one place action link is allowed for each unique combination of (uri,
   * place action type, location).
   * @param uri uri or {@code null} for none
   */
  public PlaceActionLink setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public PlaceActionLink set(String fieldName, Object value) {
    return (PlaceActionLink) super.set(fieldName, value);
  }

  @Override
  public PlaceActionLink clone() {
    return (PlaceActionLink) super.clone();
  }

}
