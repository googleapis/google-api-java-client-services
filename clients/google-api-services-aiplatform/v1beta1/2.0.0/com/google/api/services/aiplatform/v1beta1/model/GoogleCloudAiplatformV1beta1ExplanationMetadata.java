/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.aiplatform.v1beta1.model;

/**
 * Metadata describing the Model's input and output for explanation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudAiplatformV1beta1ExplanationMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Points to a YAML file stored on Google Cloud Storage describing the format of the feature
   * attributions. The schema is defined as an OpenAPI 3.0.2 [Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on
   * output may be different, including the URI scheme, than the one given on input. The output URI
   * will point to a location where the user only has a read access.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String featureAttributionsSchemaUri;

  /**
   * Required. Map from feature names to feature input metadata. Keys are the name of the features.
   * Values are the specification of the feature. An empty InputMetadata is valid. It describes a
   * text feature which has the name specified as the key in ExplanationMetadata.inputs. The
   * baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images,
   * the key can be any friendly name of the feature. Once specified, featureAttributions are keyed
   * by this key (if not grouped with another feature). For custom images, the key must match with
   * the key in instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> inputs;

  /**
   * Name of the source to generate embeddings for example based explanations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String latentSpaceSource;

  /**
   * Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images,
   * keys can be any user defined string that consists of any UTF-8 characters. For custom images,
   * keys are the name of the output field in the prediction to be explained. Currently only one key
   * is allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> outputs;

  /**
   * Points to a YAML file stored on Google Cloud Storage describing the format of the feature
   * attributions. The schema is defined as an OpenAPI 3.0.2 [Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on
   * output may be different, including the URI scheme, than the one given on input. The output URI
   * will point to a location where the user only has a read access.
   * @return value or {@code null} for none
   */
  public java.lang.String getFeatureAttributionsSchemaUri() {
    return featureAttributionsSchemaUri;
  }

  /**
   * Points to a YAML file stored on Google Cloud Storage describing the format of the feature
   * attributions. The schema is defined as an OpenAPI 3.0.2 [Schema
   * Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on
   * output may be different, including the URI scheme, than the one given on input. The output URI
   * will point to a location where the user only has a read access.
   * @param featureAttributionsSchemaUri featureAttributionsSchemaUri or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ExplanationMetadata setFeatureAttributionsSchemaUri(java.lang.String featureAttributionsSchemaUri) {
    this.featureAttributionsSchemaUri = featureAttributionsSchemaUri;
    return this;
  }

  /**
   * Required. Map from feature names to feature input metadata. Keys are the name of the features.
   * Values are the specification of the feature. An empty InputMetadata is valid. It describes a
   * text feature which has the name specified as the key in ExplanationMetadata.inputs. The
   * baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images,
   * the key can be any friendly name of the feature. Once specified, featureAttributions are keyed
   * by this key (if not grouped with another feature). For custom images, the key must match with
   * the key in instance.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> getInputs() {
    return inputs;
  }

  /**
   * Required. Map from feature names to feature input metadata. Keys are the name of the features.
   * Values are the specification of the feature. An empty InputMetadata is valid. It describes a
   * text feature which has the name specified as the key in ExplanationMetadata.inputs. The
   * baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images,
   * the key can be any friendly name of the feature. Once specified, featureAttributions are keyed
   * by this key (if not grouped with another feature). For custom images, the key must match with
   * the key in instance.
   * @param inputs inputs or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ExplanationMetadata setInputs(java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> inputs) {
    this.inputs = inputs;
    return this;
  }

  /**
   * Name of the source to generate embeddings for example based explanations.
   * @return value or {@code null} for none
   */
  public java.lang.String getLatentSpaceSource() {
    return latentSpaceSource;
  }

  /**
   * Name of the source to generate embeddings for example based explanations.
   * @param latentSpaceSource latentSpaceSource or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ExplanationMetadata setLatentSpaceSource(java.lang.String latentSpaceSource) {
    this.latentSpaceSource = latentSpaceSource;
    return this;
  }

  /**
   * Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images,
   * keys can be any user defined string that consists of any UTF-8 characters. For custom images,
   * keys are the name of the output field in the prediction to be explained. Currently only one key
   * is allowed.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> getOutputs() {
    return outputs;
  }

  /**
   * Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images,
   * keys can be any user defined string that consists of any UTF-8 characters. For custom images,
   * keys are the name of the output field in the prediction to be explained. Currently only one key
   * is allowed.
   * @param outputs outputs or {@code null} for none
   */
  public GoogleCloudAiplatformV1beta1ExplanationMetadata setOutputs(java.util.Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> outputs) {
    this.outputs = outputs;
    return this;
  }

  @Override
  public GoogleCloudAiplatformV1beta1ExplanationMetadata set(String fieldName, Object value) {
    return (GoogleCloudAiplatformV1beta1ExplanationMetadata) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudAiplatformV1beta1ExplanationMetadata clone() {
    return (GoogleCloudAiplatformV1beta1ExplanationMetadata) super.clone();
  }

}
