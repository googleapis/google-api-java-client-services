/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.reports_v1beta.model;

/**
 * Result row returned from the search query. Only the message corresponding to the queried table is
 * populated in the response. Within the populated message, only the fields requested explicitly in
 * the query are populated.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ReportRow extends com.google.api.client.json.GenericJson {

  /**
   * Fields available for query in `best_sellers_brand_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BestSellersBrandView bestSellersBrandView;

  /**
   * Fields available for query in `best_sellers_product_cluster_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BestSellersProductClusterView bestSellersProductClusterView;

  /**
   * Fields available for query in `competitive_visibility_benchmark_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CompetitiveVisibilityBenchmarkView competitiveVisibilityBenchmarkView;

  /**
   * Fields available for query in `competitive_visibility_competitor_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CompetitiveVisibilityCompetitorView competitiveVisibilityCompetitorView;

  /**
   * Fields available for query in `competitive_visibility_top_merchant_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CompetitiveVisibilityTopMerchantView competitiveVisibilityTopMerchantView;

  /**
   * Fields available for query in `non_product_performance_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NonProductPerformanceView nonProductPerformanceView;

  /**
   * Fields available for query in `price_competitiveness_product_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PriceCompetitivenessProductView priceCompetitivenessProductView;

  /**
   * Fields available for query in `price_insights_product_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PriceInsightsProductView priceInsightsProductView;

  /**
   * Fields available for query in `product_performance_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ProductPerformanceView productPerformanceView;

  /**
   * Fields available for query in `product_view` table.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ProductView productView;

  /**
   * Fields available for query in `best_sellers_brand_view` table.
   * @return value or {@code null} for none
   */
  public BestSellersBrandView getBestSellersBrandView() {
    return bestSellersBrandView;
  }

  /**
   * Fields available for query in `best_sellers_brand_view` table.
   * @param bestSellersBrandView bestSellersBrandView or {@code null} for none
   */
  public ReportRow setBestSellersBrandView(BestSellersBrandView bestSellersBrandView) {
    this.bestSellersBrandView = bestSellersBrandView;
    return this;
  }

  /**
   * Fields available for query in `best_sellers_product_cluster_view` table.
   * @return value or {@code null} for none
   */
  public BestSellersProductClusterView getBestSellersProductClusterView() {
    return bestSellersProductClusterView;
  }

  /**
   * Fields available for query in `best_sellers_product_cluster_view` table.
   * @param bestSellersProductClusterView bestSellersProductClusterView or {@code null} for none
   */
  public ReportRow setBestSellersProductClusterView(BestSellersProductClusterView bestSellersProductClusterView) {
    this.bestSellersProductClusterView = bestSellersProductClusterView;
    return this;
  }

  /**
   * Fields available for query in `competitive_visibility_benchmark_view` table.
   * @return value or {@code null} for none
   */
  public CompetitiveVisibilityBenchmarkView getCompetitiveVisibilityBenchmarkView() {
    return competitiveVisibilityBenchmarkView;
  }

  /**
   * Fields available for query in `competitive_visibility_benchmark_view` table.
   * @param competitiveVisibilityBenchmarkView competitiveVisibilityBenchmarkView or {@code null} for none
   */
  public ReportRow setCompetitiveVisibilityBenchmarkView(CompetitiveVisibilityBenchmarkView competitiveVisibilityBenchmarkView) {
    this.competitiveVisibilityBenchmarkView = competitiveVisibilityBenchmarkView;
    return this;
  }

  /**
   * Fields available for query in `competitive_visibility_competitor_view` table.
   * @return value or {@code null} for none
   */
  public CompetitiveVisibilityCompetitorView getCompetitiveVisibilityCompetitorView() {
    return competitiveVisibilityCompetitorView;
  }

  /**
   * Fields available for query in `competitive_visibility_competitor_view` table.
   * @param competitiveVisibilityCompetitorView competitiveVisibilityCompetitorView or {@code null} for none
   */
  public ReportRow setCompetitiveVisibilityCompetitorView(CompetitiveVisibilityCompetitorView competitiveVisibilityCompetitorView) {
    this.competitiveVisibilityCompetitorView = competitiveVisibilityCompetitorView;
    return this;
  }

  /**
   * Fields available for query in `competitive_visibility_top_merchant_view` table.
   * @return value or {@code null} for none
   */
  public CompetitiveVisibilityTopMerchantView getCompetitiveVisibilityTopMerchantView() {
    return competitiveVisibilityTopMerchantView;
  }

  /**
   * Fields available for query in `competitive_visibility_top_merchant_view` table.
   * @param competitiveVisibilityTopMerchantView competitiveVisibilityTopMerchantView or {@code null} for none
   */
  public ReportRow setCompetitiveVisibilityTopMerchantView(CompetitiveVisibilityTopMerchantView competitiveVisibilityTopMerchantView) {
    this.competitiveVisibilityTopMerchantView = competitiveVisibilityTopMerchantView;
    return this;
  }

  /**
   * Fields available for query in `non_product_performance_view` table.
   * @return value or {@code null} for none
   */
  public NonProductPerformanceView getNonProductPerformanceView() {
    return nonProductPerformanceView;
  }

  /**
   * Fields available for query in `non_product_performance_view` table.
   * @param nonProductPerformanceView nonProductPerformanceView or {@code null} for none
   */
  public ReportRow setNonProductPerformanceView(NonProductPerformanceView nonProductPerformanceView) {
    this.nonProductPerformanceView = nonProductPerformanceView;
    return this;
  }

  /**
   * Fields available for query in `price_competitiveness_product_view` table.
   * @return value or {@code null} for none
   */
  public PriceCompetitivenessProductView getPriceCompetitivenessProductView() {
    return priceCompetitivenessProductView;
  }

  /**
   * Fields available for query in `price_competitiveness_product_view` table.
   * @param priceCompetitivenessProductView priceCompetitivenessProductView or {@code null} for none
   */
  public ReportRow setPriceCompetitivenessProductView(PriceCompetitivenessProductView priceCompetitivenessProductView) {
    this.priceCompetitivenessProductView = priceCompetitivenessProductView;
    return this;
  }

  /**
   * Fields available for query in `price_insights_product_view` table.
   * @return value or {@code null} for none
   */
  public PriceInsightsProductView getPriceInsightsProductView() {
    return priceInsightsProductView;
  }

  /**
   * Fields available for query in `price_insights_product_view` table.
   * @param priceInsightsProductView priceInsightsProductView or {@code null} for none
   */
  public ReportRow setPriceInsightsProductView(PriceInsightsProductView priceInsightsProductView) {
    this.priceInsightsProductView = priceInsightsProductView;
    return this;
  }

  /**
   * Fields available for query in `product_performance_view` table.
   * @return value or {@code null} for none
   */
  public ProductPerformanceView getProductPerformanceView() {
    return productPerformanceView;
  }

  /**
   * Fields available for query in `product_performance_view` table.
   * @param productPerformanceView productPerformanceView or {@code null} for none
   */
  public ReportRow setProductPerformanceView(ProductPerformanceView productPerformanceView) {
    this.productPerformanceView = productPerformanceView;
    return this;
  }

  /**
   * Fields available for query in `product_view` table.
   * @return value or {@code null} for none
   */
  public ProductView getProductView() {
    return productView;
  }

  /**
   * Fields available for query in `product_view` table.
   * @param productView productView or {@code null} for none
   */
  public ReportRow setProductView(ProductView productView) {
    this.productView = productView;
    return this;
  }

  @Override
  public ReportRow set(String fieldName, Object value) {
    return (ReportRow) super.set(fieldName, value);
  }

  @Override
  public ReportRow clone() {
    return (ReportRow) super.clone();
  }

}
