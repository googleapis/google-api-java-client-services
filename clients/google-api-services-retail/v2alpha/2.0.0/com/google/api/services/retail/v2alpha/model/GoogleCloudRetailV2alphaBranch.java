/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.retail.v2alpha.model;

/**
 * A data branch that stores all instances of Products.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Vertex AI Search for Retail API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRetailV2alphaBranch extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Human readable name of the branch to display in the UI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. Indicates whether this branch is set as the default branch of its parent catalog.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDefault;

  /**
   * Output only. Timestamp of last import through ProductService.ImportProducts. Empty value means
   * no import has been made to this branch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastProductImportTime;

  /**
   * Immutable. Full resource name of the branch, such as
   * `projects/locations/global/catalogs/default_catalog/branches/branch_id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Statistics for number of products in the branch, provided for different scopes.
   * This field is not populated in BranchView.BASIC view.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudRetailV2alphaBranchProductCountStatistic> productCountStats;

  /**
   * Output only. The number of products in different groups that this branch has. The key is a
   * group representing a set of products, and the value is the number of products in that group.
   * Note: keys in this map may change over time. Possible keys: * "primary-in-stock", products have
   * Product.Type.PRIMARY type and Product.Availability.IN_STOCK availability. * "primary-out-of-
   * stock", products have Product.Type.PRIMARY type and Product.Availability.OUT_OF_STOCK
   * availability. * "primary-preorder", products have Product.Type.PRIMARY type and
   * Product.Availability.PREORDER availability. * "primary-backorder", products have
   * Product.Type.PRIMARY type and Product.Availability.BACKORDER availability. * "variant-in-
   * stock", products have Product.Type.VARIANT type and Product.Availability.IN_STOCK availability.
   * * "variant-out-of-stock", products have Product.Type.VARIANT type and
   * Product.Availability.OUT_OF_STOCK availability. * "variant-preorder", products have
   * Product.Type.VARIANT type and Product.Availability.PREORDER availability. * "variant-
   * backorder", products have Product.Type.VARIANT type and Product.Availability.BACKORDER
   * availability. * "price-discounted", products have [Product.price_info.price] <
   * [Product.price_info.original_price]. This field is not populated in BranchView.BASIC view.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.Map<String, java.lang.Long> productCounts;

  /**
   * Output only. The quality metrics measured among products of this branch. See
   * QualityMetric.requirement_key for supported metrics. Metrics could be missing if failed to
   * retrieve. This field is not populated in BranchView.BASIC view.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudRetailV2alphaBranchQualityMetric> qualityMetrics;

  /**
   * Output only. Human readable name of the branch to display in the UI.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Output only. Human readable name of the branch to display in the UI.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. Indicates whether this branch is set as the default branch of its parent catalog.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDefault() {
    return isDefault;
  }

  /**
   * Output only. Indicates whether this branch is set as the default branch of its parent catalog.
   * @param isDefault isDefault or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setIsDefault(java.lang.Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  /**
   * Output only. Timestamp of last import through ProductService.ImportProducts. Empty value means
   * no import has been made to this branch.
   * @return value or {@code null} for none
   */
  public String getLastProductImportTime() {
    return lastProductImportTime;
  }

  /**
   * Output only. Timestamp of last import through ProductService.ImportProducts. Empty value means
   * no import has been made to this branch.
   * @param lastProductImportTime lastProductImportTime or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setLastProductImportTime(String lastProductImportTime) {
    this.lastProductImportTime = lastProductImportTime;
    return this;
  }

  /**
   * Immutable. Full resource name of the branch, such as
   * `projects/locations/global/catalogs/default_catalog/branches/branch_id`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Immutable. Full resource name of the branch, such as
   * `projects/locations/global/catalogs/default_catalog/branches/branch_id`.
   * @param name name or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Statistics for number of products in the branch, provided for different scopes.
   * This field is not populated in BranchView.BASIC view.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudRetailV2alphaBranchProductCountStatistic> getProductCountStats() {
    return productCountStats;
  }

  /**
   * Output only. Statistics for number of products in the branch, provided for different scopes.
   * This field is not populated in BranchView.BASIC view.
   * @param productCountStats productCountStats or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setProductCountStats(java.util.List<GoogleCloudRetailV2alphaBranchProductCountStatistic> productCountStats) {
    this.productCountStats = productCountStats;
    return this;
  }

  /**
   * Output only. The number of products in different groups that this branch has. The key is a
   * group representing a set of products, and the value is the number of products in that group.
   * Note: keys in this map may change over time. Possible keys: * "primary-in-stock", products have
   * Product.Type.PRIMARY type and Product.Availability.IN_STOCK availability. * "primary-out-of-
   * stock", products have Product.Type.PRIMARY type and Product.Availability.OUT_OF_STOCK
   * availability. * "primary-preorder", products have Product.Type.PRIMARY type and
   * Product.Availability.PREORDER availability. * "primary-backorder", products have
   * Product.Type.PRIMARY type and Product.Availability.BACKORDER availability. * "variant-in-
   * stock", products have Product.Type.VARIANT type and Product.Availability.IN_STOCK availability.
   * * "variant-out-of-stock", products have Product.Type.VARIANT type and
   * Product.Availability.OUT_OF_STOCK availability. * "variant-preorder", products have
   * Product.Type.VARIANT type and Product.Availability.PREORDER availability. * "variant-
   * backorder", products have Product.Type.VARIANT type and Product.Availability.BACKORDER
   * availability. * "price-discounted", products have [Product.price_info.price] <
   * [Product.price_info.original_price]. This field is not populated in BranchView.BASIC view.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Long> getProductCounts() {
    return productCounts;
  }

  /**
   * Output only. The number of products in different groups that this branch has. The key is a
   * group representing a set of products, and the value is the number of products in that group.
   * Note: keys in this map may change over time. Possible keys: * "primary-in-stock", products have
   * Product.Type.PRIMARY type and Product.Availability.IN_STOCK availability. * "primary-out-of-
   * stock", products have Product.Type.PRIMARY type and Product.Availability.OUT_OF_STOCK
   * availability. * "primary-preorder", products have Product.Type.PRIMARY type and
   * Product.Availability.PREORDER availability. * "primary-backorder", products have
   * Product.Type.PRIMARY type and Product.Availability.BACKORDER availability. * "variant-in-
   * stock", products have Product.Type.VARIANT type and Product.Availability.IN_STOCK availability.
   * * "variant-out-of-stock", products have Product.Type.VARIANT type and
   * Product.Availability.OUT_OF_STOCK availability. * "variant-preorder", products have
   * Product.Type.VARIANT type and Product.Availability.PREORDER availability. * "variant-
   * backorder", products have Product.Type.VARIANT type and Product.Availability.BACKORDER
   * availability. * "price-discounted", products have [Product.price_info.price] <
   * [Product.price_info.original_price]. This field is not populated in BranchView.BASIC view.
   * @param productCounts productCounts or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setProductCounts(java.util.Map<String, java.lang.Long> productCounts) {
    this.productCounts = productCounts;
    return this;
  }

  /**
   * Output only. The quality metrics measured among products of this branch. See
   * QualityMetric.requirement_key for supported metrics. Metrics could be missing if failed to
   * retrieve. This field is not populated in BranchView.BASIC view.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudRetailV2alphaBranchQualityMetric> getQualityMetrics() {
    return qualityMetrics;
  }

  /**
   * Output only. The quality metrics measured among products of this branch. See
   * QualityMetric.requirement_key for supported metrics. Metrics could be missing if failed to
   * retrieve. This field is not populated in BranchView.BASIC view.
   * @param qualityMetrics qualityMetrics or {@code null} for none
   */
  public GoogleCloudRetailV2alphaBranch setQualityMetrics(java.util.List<GoogleCloudRetailV2alphaBranchQualityMetric> qualityMetrics) {
    this.qualityMetrics = qualityMetrics;
    return this;
  }

  @Override
  public GoogleCloudRetailV2alphaBranch set(String fieldName, Object value) {
    return (GoogleCloudRetailV2alphaBranch) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRetailV2alphaBranch clone() {
    return (GoogleCloudRetailV2alphaBranch) super.clone();
  }

}
