/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * External display data.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementV1TelemetryExternalDisplayData extends com.google.api.client.json.GenericJson {

  /**
   * The display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The EDID version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String edidVersion;

  /**
   * The refresh rate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long refreshRate;

  /**
   * The horizontal resolution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resolutionHorizontal;

  /**
   * The vertical resolution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer resolutionVertical;

  /**
   * The serial number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer serialNumber;

  /**
   * The display name.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name.
   * @param displayName displayName or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The EDID version.
   * @return value or {@code null} for none
   */
  public java.lang.String getEdidVersion() {
    return edidVersion;
  }

  /**
   * The EDID version.
   * @param edidVersion edidVersion or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setEdidVersion(java.lang.String edidVersion) {
    this.edidVersion = edidVersion;
    return this;
  }

  /**
   * The refresh rate.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRefreshRate() {
    return refreshRate;
  }

  /**
   * The refresh rate.
   * @param refreshRate refreshRate or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setRefreshRate(java.lang.Long refreshRate) {
    this.refreshRate = refreshRate;
    return this;
  }

  /**
   * The horizontal resolution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResolutionHorizontal() {
    return resolutionHorizontal;
  }

  /**
   * The horizontal resolution.
   * @param resolutionHorizontal resolutionHorizontal or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setResolutionHorizontal(java.lang.Integer resolutionHorizontal) {
    this.resolutionHorizontal = resolutionHorizontal;
    return this;
  }

  /**
   * The vertical resolution.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getResolutionVertical() {
    return resolutionVertical;
  }

  /**
   * The vertical resolution.
   * @param resolutionVertical resolutionVertical or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setResolutionVertical(java.lang.Integer resolutionVertical) {
    this.resolutionVertical = resolutionVertical;
    return this;
  }

  /**
   * The serial number.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSerialNumber() {
    return serialNumber;
  }

  /**
   * The serial number.
   * @param serialNumber serialNumber or {@code null} for none
   */
  public GoogleChromeManagementV1TelemetryExternalDisplayData setSerialNumber(java.lang.Integer serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  @Override
  public GoogleChromeManagementV1TelemetryExternalDisplayData set(String fieldName, Object value) {
    return (GoogleChromeManagementV1TelemetryExternalDisplayData) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementV1TelemetryExternalDisplayData clone() {
    return (GoogleChromeManagementV1TelemetryExternalDisplayData) super.clone();
  }

}
