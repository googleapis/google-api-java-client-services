/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.beyondcorp.v1.model;

/**
 * ConnectionConfig represents a Connection Configuration object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the BeyondCorp API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig extends com.google.api.client.json.GenericJson {

  /**
   * application_endpoint is the endpoint of the application the form of host:port. For example,
   * "localhost:80".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String applicationEndpoint;

  /**
   * application_name represents the given name of the application the connection is connecting
   * with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String applicationName;

  /**
   * gateway lists all instances running a gateway in GCP. They all connect to a connector on the
   * host.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> gateway;

  /**
   * name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-
   * specified name in config. Now, name = ${application_name}:${application_endpoint}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * project represents the consumer project the connection belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String project;

  /**
   * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long tunnelsPerGateway;

  /**
   * user_port specifies the reserved port on gateways for user connections.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer userPort;

  /**
   * application_endpoint is the endpoint of the application the form of host:port. For example,
   * "localhost:80".
   * @return value or {@code null} for none
   */
  public java.lang.String getApplicationEndpoint() {
    return applicationEndpoint;
  }

  /**
   * application_endpoint is the endpoint of the application the form of host:port. For example,
   * "localhost:80".
   * @param applicationEndpoint applicationEndpoint or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setApplicationEndpoint(java.lang.String applicationEndpoint) {
    this.applicationEndpoint = applicationEndpoint;
    return this;
  }

  /**
   * application_name represents the given name of the application the connection is connecting
   * with.
   * @return value or {@code null} for none
   */
  public java.lang.String getApplicationName() {
    return applicationName;
  }

  /**
   * application_name represents the given name of the application the connection is connecting
   * with.
   * @param applicationName applicationName or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setApplicationName(java.lang.String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

  /**
   * gateway lists all instances running a gateway in GCP. They all connect to a connector on the
   * host.
   * @return value or {@code null} for none
   */
  public java.util.List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> getGateway() {
    return gateway;
  }

  /**
   * gateway lists all instances running a gateway in GCP. They all connect to a connector on the
   * host.
   * @param gateway gateway or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setGateway(java.util.List<CloudSecurityZerotrustApplinkAppConnectorProtoGateway> gateway) {
    this.gateway = gateway;
    return this;
  }

  /**
   * name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-
   * specified name in config. Now, name = ${application_name}:${application_endpoint}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * name is the unique ID for each connection. TODO(b/190732451) returns connection name from user-
   * specified name in config. Now, name = ${application_name}:${application_endpoint}
   * @param name name or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * project represents the consumer project the connection belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getProject() {
    return project;
  }

  /**
   * project represents the consumer project the connection belongs to.
   * @param project project or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setProject(java.lang.String project) {
    this.project = project;
    return this;
  }

  /**
   * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTunnelsPerGateway() {
    return tunnelsPerGateway;
  }

  /**
   * tunnels_per_gateway reflects the number of tunnels between a connector and a gateway.
   * @param tunnelsPerGateway tunnelsPerGateway or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setTunnelsPerGateway(java.lang.Long tunnelsPerGateway) {
    this.tunnelsPerGateway = tunnelsPerGateway;
    return this;
  }

  /**
   * user_port specifies the reserved port on gateways for user connections.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getUserPort() {
    return userPort;
  }

  /**
   * user_port specifies the reserved port on gateways for user connections.
   * @param userPort userPort or {@code null} for none
   */
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig setUserPort(java.lang.Integer userPort) {
    this.userPort = userPort;
    return this;
  }

  @Override
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig set(String fieldName, Object value) {
    return (CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig) super.set(fieldName, value);
  }

  @Override
  public CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig clone() {
    return (CloudSecurityZerotrustApplinkAppConnectorProtoConnectionConfig) super.clone();
  }

}
