/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.saasservicemgmt.v1beta1.model;

/**
 * ReplicationStats contains the stats of the replication. It contains the resources that are
 * pending, finished, failed, and the errors if any.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the SaaS Runtime API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ReplicationStats extends com.google.api.client.json.GenericJson {

  /**
   * The errors that occurred during replication, one error for each failed resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Status> errors;

  /**
   * The resources that are failed replication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> failedResources;

  /**
   * The resources that are finished replication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> finishedResources;

  /**
   * The resources that are pending replication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> pendingResources;

  /**
   * The number of retries for the failed resources.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> retryCount;

  /**
   * The errors that occurred during replication, one error for each failed resource.
   * @return value or {@code null} for none
   */
  public java.util.List<Status> getErrors() {
    return errors;
  }

  /**
   * The errors that occurred during replication, one error for each failed resource.
   * @param errors errors or {@code null} for none
   */
  public ReplicationStats setErrors(java.util.List<Status> errors) {
    this.errors = errors;
    return this;
  }

  /**
   * The resources that are failed replication.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFailedResources() {
    return failedResources;
  }

  /**
   * The resources that are failed replication.
   * @param failedResources failedResources or {@code null} for none
   */
  public ReplicationStats setFailedResources(java.util.List<java.lang.String> failedResources) {
    this.failedResources = failedResources;
    return this;
  }

  /**
   * The resources that are finished replication.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFinishedResources() {
    return finishedResources;
  }

  /**
   * The resources that are finished replication.
   * @param finishedResources finishedResources or {@code null} for none
   */
  public ReplicationStats setFinishedResources(java.util.List<java.lang.String> finishedResources) {
    this.finishedResources = finishedResources;
    return this;
  }

  /**
   * The resources that are pending replication.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPendingResources() {
    return pendingResources;
  }

  /**
   * The resources that are pending replication.
   * @param pendingResources pendingResources or {@code null} for none
   */
  public ReplicationStats setPendingResources(java.util.List<java.lang.String> pendingResources) {
    this.pendingResources = pendingResources;
    return this;
  }

  /**
   * The number of retries for the failed resources.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getRetryCount() {
    return retryCount;
  }

  /**
   * The number of retries for the failed resources.
   * @param retryCount retryCount or {@code null} for none
   */
  public ReplicationStats setRetryCount(java.util.List<java.lang.Integer> retryCount) {
    this.retryCount = retryCount;
    return this;
  }

  @Override
  public ReplicationStats set(String fieldName, Object value) {
    return (ReplicationStats) super.set(fieldName, value);
  }

  @Override
  public ReplicationStats clone() {
    return (ReplicationStats) super.clone();
  }

}
