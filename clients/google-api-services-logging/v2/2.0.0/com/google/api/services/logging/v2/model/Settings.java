/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.logging.v2.model;

/**
 * Describes the settings associated with a project, folder, organization, or billing account.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Logging API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Settings extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Overrides the built-in configuration for _Default sink.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DefaultSinkConfig defaultSinkConfig;

  /**
   * Optional. If set to true, the _Default sink in newly created projects and folders will created
   * in a disabled state. This can be used to automatically disable log storage if there is already
   * an aggregated sink configured in the hierarchy. The _Default sink can be re-enabled manually if
   * needed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disableDefaultSink;

  /**
   * Optional. The resource name for the configured Cloud KMS key.KMS key name format:
   * "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]" For
   * example:"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"To enable
   * CMEK, set this field to a valid kms_key_name for which the associated service account has the
   * required roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key.The Cloud KMS key
   * used by the Log Router can be updated by changing the kms_key_name to a new valid key name.To
   * disable CMEK for the Log Router, set this field to an empty string.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsKeyName;

  /**
   * Output only. The service account that will be used by the Log Router to access your Cloud KMS
   * key.Before enabling CMEK, you must first assign the role
   * roles/cloudkms.cryptoKeyEncrypterDecrypter to the service account that will be used to access
   * your Cloud KMS key. Use GetSettings to obtain the service account ID.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kmsServiceAccountId;

  /**
   * Output only. The service account for the given resource container, such as project or folder.
   * Log sinks use this service account as their writer_identity if no custom service account is
   * provided in the request when calling the create sink method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String loggingServiceAccountId;

  /**
   * Output only. The resource name of the settings.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. The storage location that Cloud Logging will use to create new resources when a
   * location is needed but not explicitly provided. The use cases includes: The location of
   * _Default and _Required log bucket for newly created projects and folders.Example value: europe-
   * west1.Note: this setting does not affect the location of resources where a location is
   * explicitly provided when created, such as custom log buckets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageLocation;

  /**
   * Optional. Overrides the built-in configuration for _Default sink.
   * @return value or {@code null} for none
   */
  public DefaultSinkConfig getDefaultSinkConfig() {
    return defaultSinkConfig;
  }

  /**
   * Optional. Overrides the built-in configuration for _Default sink.
   * @param defaultSinkConfig defaultSinkConfig or {@code null} for none
   */
  public Settings setDefaultSinkConfig(DefaultSinkConfig defaultSinkConfig) {
    this.defaultSinkConfig = defaultSinkConfig;
    return this;
  }

  /**
   * Optional. If set to true, the _Default sink in newly created projects and folders will created
   * in a disabled state. This can be used to automatically disable log storage if there is already
   * an aggregated sink configured in the hierarchy. The _Default sink can be re-enabled manually if
   * needed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisableDefaultSink() {
    return disableDefaultSink;
  }

  /**
   * Optional. If set to true, the _Default sink in newly created projects and folders will created
   * in a disabled state. This can be used to automatically disable log storage if there is already
   * an aggregated sink configured in the hierarchy. The _Default sink can be re-enabled manually if
   * needed.
   * @param disableDefaultSink disableDefaultSink or {@code null} for none
   */
  public Settings setDisableDefaultSink(java.lang.Boolean disableDefaultSink) {
    this.disableDefaultSink = disableDefaultSink;
    return this;
  }

  /**
   * Optional. The resource name for the configured Cloud KMS key.KMS key name format:
   * "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]" For
   * example:"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"To enable
   * CMEK, set this field to a valid kms_key_name for which the associated service account has the
   * required roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key.The Cloud KMS key
   * used by the Log Router can be updated by changing the kms_key_name to a new valid key name.To
   * disable CMEK for the Log Router, set this field to an empty string.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsKeyName() {
    return kmsKeyName;
  }

  /**
   * Optional. The resource name for the configured Cloud KMS key.KMS key name format:
   * "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]" For
   * example:"projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key"To enable
   * CMEK, set this field to a valid kms_key_name for which the associated service account has the
   * required roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key.The Cloud KMS key
   * used by the Log Router can be updated by changing the kms_key_name to a new valid key name.To
   * disable CMEK for the Log Router, set this field to an empty string.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * @param kmsKeyName kmsKeyName or {@code null} for none
   */
  public Settings setKmsKeyName(java.lang.String kmsKeyName) {
    this.kmsKeyName = kmsKeyName;
    return this;
  }

  /**
   * Output only. The service account that will be used by the Log Router to access your Cloud KMS
   * key.Before enabling CMEK, you must first assign the role
   * roles/cloudkms.cryptoKeyEncrypterDecrypter to the service account that will be used to access
   * your Cloud KMS key. Use GetSettings to obtain the service account ID.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * @return value or {@code null} for none
   */
  public java.lang.String getKmsServiceAccountId() {
    return kmsServiceAccountId;
  }

  /**
   * Output only. The service account that will be used by the Log Router to access your Cloud KMS
   * key.Before enabling CMEK, you must first assign the role
   * roles/cloudkms.cryptoKeyEncrypterDecrypter to the service account that will be used to access
   * your Cloud KMS key. Use GetSettings to obtain the service account ID.See Enabling CMEK for Log
   * Router (https://cloud.google.com/logging/docs/routing/managed-encryption) for more information.
   * @param kmsServiceAccountId kmsServiceAccountId or {@code null} for none
   */
  public Settings setKmsServiceAccountId(java.lang.String kmsServiceAccountId) {
    this.kmsServiceAccountId = kmsServiceAccountId;
    return this;
  }

  /**
   * Output only. The service account for the given resource container, such as project or folder.
   * Log sinks use this service account as their writer_identity if no custom service account is
   * provided in the request when calling the create sink method.
   * @return value or {@code null} for none
   */
  public java.lang.String getLoggingServiceAccountId() {
    return loggingServiceAccountId;
  }

  /**
   * Output only. The service account for the given resource container, such as project or folder.
   * Log sinks use this service account as their writer_identity if no custom service account is
   * provided in the request when calling the create sink method.
   * @param loggingServiceAccountId loggingServiceAccountId or {@code null} for none
   */
  public Settings setLoggingServiceAccountId(java.lang.String loggingServiceAccountId) {
    this.loggingServiceAccountId = loggingServiceAccountId;
    return this;
  }

  /**
   * Output only. The resource name of the settings.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the settings.
   * @param name name or {@code null} for none
   */
  public Settings setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. The storage location that Cloud Logging will use to create new resources when a
   * location is needed but not explicitly provided. The use cases includes: The location of
   * _Default and _Required log bucket for newly created projects and folders.Example value: europe-
   * west1.Note: this setting does not affect the location of resources where a location is
   * explicitly provided when created, such as custom log buckets.
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageLocation() {
    return storageLocation;
  }

  /**
   * Optional. The storage location that Cloud Logging will use to create new resources when a
   * location is needed but not explicitly provided. The use cases includes: The location of
   * _Default and _Required log bucket for newly created projects and folders.Example value: europe-
   * west1.Note: this setting does not affect the location of resources where a location is
   * explicitly provided when created, such as custom log buckets.
   * @param storageLocation storageLocation or {@code null} for none
   */
  public Settings setStorageLocation(java.lang.String storageLocation) {
    this.storageLocation = storageLocation;
    return this;
  }

  @Override
  public Settings set(String fieldName, Object value) {
    return (Settings) super.set(fieldName, value);
  }

  @Override
  public Settings clone() {
    return (Settings) super.clone();
  }

}
