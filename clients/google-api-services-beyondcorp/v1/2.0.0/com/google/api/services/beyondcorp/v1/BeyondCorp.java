/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.beyondcorp.v1;

/**
 * Service definition for BeyondCorp (v1).
 *
 * <p>
 * Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BeyondCorpRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BeyondCorp extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the BeyondCorp API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://beyondcorp.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://beyondcorp.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BeyondCorp(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BeyondCorp(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
   *   {@code BeyondCorp.Organizations.List request = beyondcorp.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
     *   {@code BeyondCorp.Locations.List request = beyondcorp.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the Global collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.Global.List request = beyondcorp.global().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Global global() {
        return new Global();
      }

      /**
       * The "global" collection of methods.
       */
      public class Global {

        /**
         * An accessor for creating requests from the PartnerTenants collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
         *   {@code BeyondCorp.PartnerTenants.List request = beyondcorp.partnerTenants().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public PartnerTenants partnerTenants() {
          return new PartnerTenants();
        }

        /**
         * The "partnerTenants" collection of methods.
         */
        public class PartnerTenants {

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "partnerTenants.getIamPolicy".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "partnerTenants.getIamPolicy".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "partnerTenants.setIamPolicy".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "partnerTenants.setIamPolicy".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
              super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "partnerTenants.testIamPermissions".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "partnerTenants.testIamPermissions".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
              super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^organizations/[^/]+/locations/global/partnerTenants/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the BrowserDlpRules collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
           *   {@code BeyondCorp.BrowserDlpRules.List request = beyondcorp.browserDlpRules().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public BrowserDlpRules browserDlpRules() {
            return new BrowserDlpRules();
          }

          /**
           * The "browserDlpRules" collection of methods.
           */
          public class BrowserDlpRules {

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "browserDlpRules.getIamPolicy".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

              private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "browserDlpRules.getIamPolicy".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset. The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
             which resources support conditions in their IAM policies, see the [IAM
             documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "browserDlpRules.setIamPolicy".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

              private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "browserDlpRules.setIamPolicy".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "browserDlpRules.testIamPermissions".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "browserDlpRules.testIamPermissions".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/browserDlpRules/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the ProxyConfigs collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
           *   {@code BeyondCorp.ProxyConfigs.List request = beyondcorp.proxyConfigs().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public ProxyConfigs proxyConfigs() {
            return new ProxyConfigs();
          }

          /**
           * The "proxyConfigs" collection of methods.
           */
          public class ProxyConfigs {

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
             * does not have a policy set.
             *
             * Create a request for the method "proxyConfigs.getIamPolicy".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @return the request
             */
            public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
              GetIamPolicy result = new GetIamPolicy(resource);
              initialize(result);
              return result;
            }

            public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

              private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");

              /**
               * Gets the access control policy for a resource. Returns an empty policy if the resource exists
               * and does not have a policy set.
               *
               * Create a request for the method "proxyConfigs.getIamPolicy".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @since 1.13
               */
              protected GetIamPolicy(java.lang.String resource) {
                super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (GetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public GetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (GetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public GetIamPolicy setAlt(java.lang.String alt) {
                return (GetIamPolicy) super.setAlt(alt);
              }

              @Override
              public GetIamPolicy setCallback(java.lang.String callback) {
                return (GetIamPolicy) super.setCallback(callback);
              }

              @Override
              public GetIamPolicy setFields(java.lang.String fields) {
                return (GetIamPolicy) super.setFields(fields);
              }

              @Override
              public GetIamPolicy setKey(java.lang.String key) {
                return (GetIamPolicy) super.setKey(key);
              }

              @Override
              public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (GetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (GetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public GetIamPolicy setUploadType(java.lang.String uploadType) {
                return (GetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being requested. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public GetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              @com.google.api.client.util.Key("options.requestedPolicyVersion")
              private java.lang.Integer optionsRequestedPolicyVersion;

              /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
             and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
             conditional role bindings must specify version 3. Policies with no conditional role bindings may
             specify any valid value or leave the field unset. The policy in the response might use the policy
             version that you specified, or it might use a lower policy version. For example, if you specify
             version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
             which resources support conditions in their IAM policies, see the [IAM
             documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
               */
              public java.lang.Integer getOptionsRequestedPolicyVersion() {
                return optionsRequestedPolicyVersion;
              }

              /**
               * Optional. The maximum policy version that will be used to format the policy. Valid
               * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
               * Requests for policies with any conditional role bindings must specify version 3.
               * Policies with no conditional role bindings may specify any valid value or leave the
               * field unset. The policy in the response might use the policy version that you
               * specified, or it might use a lower policy version. For example, if you specify
               * version 3, but the policy has no conditional role bindings, the response uses
               * version 1. To learn which resources support conditions in their IAM policies, see
               * the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-
               * policies).
               */
              public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
                this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
                return this;
              }

              @Override
              public GetIamPolicy set(String parameterName, Object value) {
                return (GetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "proxyConfigs.setIamPolicy".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @return the request
             */
            public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
              SetIamPolicy result = new SetIamPolicy(resource, content);
              initialize(result);
              return result;
            }

            public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

              private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");

              /**
               * Sets the access control policy on the specified resource. Replaces any existing policy. Can
               * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
               *
               * Create a request for the method "proxyConfigs.setIamPolicy".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
               * operation. <p> {@link
               * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
               * @since 1.13
               */
              protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
              }

              @Override
              public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
                return (SetIamPolicy) super.set$Xgafv($Xgafv);
              }

              @Override
              public SetIamPolicy setAccessToken(java.lang.String accessToken) {
                return (SetIamPolicy) super.setAccessToken(accessToken);
              }

              @Override
              public SetIamPolicy setAlt(java.lang.String alt) {
                return (SetIamPolicy) super.setAlt(alt);
              }

              @Override
              public SetIamPolicy setCallback(java.lang.String callback) {
                return (SetIamPolicy) super.setCallback(callback);
              }

              @Override
              public SetIamPolicy setFields(java.lang.String fields) {
                return (SetIamPolicy) super.setFields(fields);
              }

              @Override
              public SetIamPolicy setKey(java.lang.String key) {
                return (SetIamPolicy) super.setKey(key);
              }

              @Override
              public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
                return (SetIamPolicy) super.setOauthToken(oauthToken);
              }

              @Override
              public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
                return (SetIamPolicy) super.setQuotaUser(quotaUser);
              }

              @Override
              public SetIamPolicy setUploadType(java.lang.String uploadType) {
                return (SetIamPolicy) super.setUploadType(uploadType);
              }

              @Override
              public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
                return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy is being specified. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy is being specified. See [Resource
               * names](https://cloud.google.com/apis/design/resource_names) for the appropriate
               * value for this field.
               */
              public SetIamPolicy setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public SetIamPolicy set(String parameterName, Object value) {
                return (SetIamPolicy) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "proxyConfigs.testIamPermissions".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "proxyConfigs.testIamPermissions".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^organizations/[^/]+/locations/global/partnerTenants/[^/]+/proxyConfigs/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.Operations.List request = beyondcorp.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
   *   {@code BeyondCorp.Projects.List request = beyondcorp.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
     *   {@code BeyondCorp.Locations.List request = beyondcorp.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the beyondcorp server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudLocationLocation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the beyondcorp server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudLocationLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the beyondcorp server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudLocationListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the beyondcorp server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudLocationListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the AppConnections collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.AppConnections.List request = beyondcorp.appConnections().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AppConnections appConnections() {
        return new AppConnections();
      }

      /**
       * The "appConnections" collection of methods.
       */
      public class AppConnections {

        /**
         * Creates a new AppConnection in a given project and location.
         *
         * Create a request for the method "appConnections.create".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource project name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/appConnections";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new AppConnection in a given project and location.
           *
           * Create a request for the method "appConnections.create".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource project name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource project name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource project name of the AppConnection location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource project name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          @com.google.api.client.util.Key
          private java.lang.String appConnectionId;

          /** Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must contain
         between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public java.lang.String getAppConnectionId() {
            return appConnectionId;
          }

          /**
           * Optional. User-settable AppConnection resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public Create setAppConnectionId(java.lang.String appConnectionId) {
            this.appConnectionId = appConnectionId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single AppConnection.
         *
         * Create a request for the method "appConnections.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp Connector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Deletes a single AppConnection.
           *
           * Create a request for the method "appConnections.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp Connector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp Connector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp Connector name using the form:
         `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp Connector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single AppConnection.
         *
         * Create a request for the method "appConnections.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp AppConnection name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Gets details of a single AppConnection.
           *
           * Create a request for the method "appConnections.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp AppConnection name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppConnection name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp AppConnection name using the form:
         `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp AppConnection name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "appConnections.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "appConnections.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists AppConnections in a given project and location.
         *
         * Create a request for the method "appConnections.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/appConnections";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists AppConnections in a given project and location.
           *
           * Create a request for the method "appConnections.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the AppConnection location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter specifying constraints of a list operation.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specifies the ordering of results. See [Sorting
         order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
         used by the service. Regardless of the page_size value, the response may include a partial list and
         a caller should only rely on response's next_page_token to determine if there are more instances
         left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppConnectionsRequest,
           * if any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous ListAppConnectionsRequest, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppConnectionsRequest,
           * if any.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single AppConnection.
         *
         * Create a request for the method "appConnections.patch".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Unique resource name of the AppConnection. The name is ignored when creating a
         *        AppConnection.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Updates the parameters of a single AppConnection.
           *
           * Create a request for the method "appConnections.patch".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Unique resource name of the AppConnection. The name is ignored when creating a
         *        AppConnection.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1AppConnection content) {
            super(BeyondCorp.this, "PATCH", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Unique resource name of the AppConnection. The name is ignored when creating
           * a AppConnection.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Unique resource name of the AppConnection. The name is ignored when creating a
         AppConnection.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Unique resource name of the AppConnection. The name is ignored when creating
           * a AppConnection.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. If set as true, will create the resource if it is not found. */
          @com.google.api.client.util.Key
          private java.lang.Boolean allowMissing;

          /** Optional. If set as true, will create the resource if it is not found.
           */
          public java.lang.Boolean getAllowMissing() {
            return allowMissing;
          }

          /** Optional. If set as true, will create the resource if it is not found. */
          public Patch setAllowMissing(java.lang.Boolean allowMissing) {
            this.allowMissing = allowMissing;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from
           * [BeyondCorp.AppConnection]: * `labels` * `display_name` * `application_endpoint` *
           * `connectors`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Mask of fields to update. At least one path must be supplied in this field. The elements
         of the repeated paths field may only include these fields from [BeyondCorp.AppConnection]: *
         `labels` * `display_name` * `application_endpoint` * `connectors`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from
           * [BeyondCorp.AppConnection]: * `labels` * `display_name` * `application_endpoint` *
           * `connectors`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Resolves AppConnections details for a given AppConnector. An internal method called by a
         * connector to find AppConnections to connect to.
         *
         * Create a request for the method "appConnections.resolve".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Resolve#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @return the request
         */
        public Resolve resolve(java.lang.String parent) throws java.io.IOException {
          Resolve result = new Resolve(parent);
          initialize(result);
          return result;
        }

        public class Resolve extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/appConnections:resolve";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Resolves AppConnections details for a given AppConnector. An internal method called by a
           * connector to find AppConnections to connect to.
           *
           * Create a request for the method "appConnections.resolve".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Resolve#execute()} method to invoke the remote operation.
           * <p> {@link
           * Resolve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the AppConnection location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @since 1.13
           */
          protected Resolve(java.lang.String parent) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Resolve set$Xgafv(java.lang.String $Xgafv) {
            return (Resolve) super.set$Xgafv($Xgafv);
          }

          @Override
          public Resolve setAccessToken(java.lang.String accessToken) {
            return (Resolve) super.setAccessToken(accessToken);
          }

          @Override
          public Resolve setAlt(java.lang.String alt) {
            return (Resolve) super.setAlt(alt);
          }

          @Override
          public Resolve setCallback(java.lang.String callback) {
            return (Resolve) super.setCallback(callback);
          }

          @Override
          public Resolve setFields(java.lang.String fields) {
            return (Resolve) super.setFields(fields);
          }

          @Override
          public Resolve setKey(java.lang.String key) {
            return (Resolve) super.setKey(key);
          }

          @Override
          public Resolve setOauthToken(java.lang.String oauthToken) {
            return (Resolve) super.setOauthToken(oauthToken);
          }

          @Override
          public Resolve setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Resolve) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Resolve setQuotaUser(java.lang.String quotaUser) {
            return (Resolve) super.setQuotaUser(quotaUser);
          }

          @Override
          public Resolve setUploadType(java.lang.String uploadType) {
            return (Resolve) super.setUploadType(uploadType);
          }

          @Override
          public Resolve setUploadProtocol(java.lang.String uploadProtocol) {
            return (Resolve) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the AppConnection location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the AppConnection location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public Resolve setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. BeyondCorp Connector name of the connector associated with those
           * AppConnections using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String appConnectorId;

          /** Required. BeyondCorp Connector name of the connector associated with those AppConnections using the
         form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public java.lang.String getAppConnectorId() {
            return appConnectorId;
          }

          /**
           * Required. BeyondCorp Connector name of the connector associated with those
           * AppConnections using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public Resolve setAppConnectorId(java.lang.String appConnectorId) {
            this.appConnectorId = appConnectorId;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
         used by the service. Regardless of the page_size value, the response may include a partial list and
         a caller should only rely on response's next_page_token to determine if there are more instances
         left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          public Resolve setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value returned from a previous
           * ResolveAppConnectionsResponse, if any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous ResolveAppConnectionsResponse, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value returned from a previous
           * ResolveAppConnectionsResponse, if any.
           */
          public Resolve setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public Resolve set(String parameterName, Object value) {
            return (Resolve) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "appConnections.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "appConnections.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "appConnections.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "appConnections.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnections/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AppConnectors collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.AppConnectors.List request = beyondcorp.appConnectors().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AppConnectors appConnectors() {
        return new AppConnectors();
      }

      /**
       * The "appConnectors" collection of methods.
       */
      public class AppConnectors {

        /**
         * Creates a new AppConnector in a given project and location.
         *
         * Create a request for the method "appConnectors.create".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource project name of the AppConnector location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/appConnectors";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new AppConnector in a given project and location.
           *
           * Create a request for the method "appConnectors.create".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource project name of the AppConnector location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource project name of the AppConnector location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource project name of the AppConnector location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource project name of the AppConnector location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          @com.google.api.client.util.Key
          private java.lang.String appConnectorId;

          /** Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must contain
         between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public java.lang.String getAppConnectorId() {
            return appConnectorId;
          }

          /**
           * Optional. User-settable AppConnector resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public Create setAppConnectorId(java.lang.String appConnectorId) {
            this.appConnectorId = appConnectorId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single AppConnector.
         *
         * Create a request for the method "appConnectors.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Deletes a single AppConnector.
           *
           * Create a request for the method "appConnectors.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp AppConnector name using the form:
         `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single AppConnector.
         *
         * Create a request for the method "appConnectors.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Gets details of a single AppConnector.
           *
           * Create a request for the method "appConnectors.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp AppConnector name using the form:
         `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "appConnectors.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "appConnectors.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists AppConnectors in a given project and location.
         *
         * Create a request for the method "appConnectors.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the AppConnector location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse> {

          private static final String REST_PATH = "v1/{+parent}/appConnectors";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists AppConnectors in a given project and location.
           *
           * Create a request for the method "appConnectors.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the AppConnector location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the AppConnector location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the AppConnector location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the AppConnector location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter specifying constraints of a list operation.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specifies the ordering of results. See [Sorting
         order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
         used by the service. Regardless of the page_size value, the response may include a partial list and
         a caller should only rely on response's next_page_token to determine if there are more instances
         left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppConnectorsRequest,
           * if any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous ListAppConnectorsRequest, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppConnectorsRequest,
           * if any.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single AppConnector.
         *
         * Create a request for the method "appConnectors.patch".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Unique resource name of the AppConnector. The name is ignored when creating a
         *        AppConnector.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Updates the parameters of a single AppConnector.
           *
           * Create a request for the method "appConnectors.patch".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Unique resource name of the AppConnector. The name is ignored when creating a
         *        AppConnector.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1AppConnector content) {
            super(BeyondCorp.this, "PATCH", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Unique resource name of the AppConnector. The name is ignored when creating a
           * AppConnector.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Unique resource name of the AppConnector. The name is ignored when creating a
         AppConnector.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Unique resource name of the AppConnector. The name is ignored when creating a
           * AppConnector.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from
           * [BeyondCorp.AppConnector]: * `labels` * `display_name`
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Mask of fields to update. At least one path must be supplied in this field. The elements
         of the repeated paths field may only include these fields from [BeyondCorp.AppConnector]: *
         `labels` * `display_name`
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. Mask of fields to update. At least one path must be supplied in this field.
           * The elements of the repeated paths field may only include these fields from
           * [BeyondCorp.AppConnector]: * `labels` * `display_name`
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Patch setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Report status for a given connector.
         *
         * Create a request for the method "appConnectors.reportStatus".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link ReportStatus#execute()} method to invoke the remote operation.
         *
         * @param appConnector Required. BeyondCorp Connector name using the form:
         *        `projects/{project_id}/locations/{location_id}/connectors/{connector}`
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest}
         * @return the request
         */
        public ReportStatus reportStatus(java.lang.String appConnector, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest content) throws java.io.IOException {
          ReportStatus result = new ReportStatus(appConnector, content);
          initialize(result);
          return result;
        }

        public class ReportStatus extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+appConnector}:reportStatus";

          private final java.util.regex.Pattern APP_CONNECTOR_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Report status for a given connector.
           *
           * Create a request for the method "appConnectors.reportStatus".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link ReportStatus#execute()} method to invoke the remote
           * operation. <p> {@link
           * ReportStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param appConnector Required. BeyondCorp Connector name using the form:
         *        `projects/{project_id}/locations/{location_id}/connectors/{connector}`
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest}
           * @since 1.13
           */
          protected ReportStatus(java.lang.String appConnector, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.appConnector = com.google.api.client.util.Preconditions.checkNotNull(appConnector, "Required parameter appConnector must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(APP_CONNECTOR_PATTERN.matcher(appConnector).matches(),
                  "Parameter appConnector must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public ReportStatus set$Xgafv(java.lang.String $Xgafv) {
            return (ReportStatus) super.set$Xgafv($Xgafv);
          }

          @Override
          public ReportStatus setAccessToken(java.lang.String accessToken) {
            return (ReportStatus) super.setAccessToken(accessToken);
          }

          @Override
          public ReportStatus setAlt(java.lang.String alt) {
            return (ReportStatus) super.setAlt(alt);
          }

          @Override
          public ReportStatus setCallback(java.lang.String callback) {
            return (ReportStatus) super.setCallback(callback);
          }

          @Override
          public ReportStatus setFields(java.lang.String fields) {
            return (ReportStatus) super.setFields(fields);
          }

          @Override
          public ReportStatus setKey(java.lang.String key) {
            return (ReportStatus) super.setKey(key);
          }

          @Override
          public ReportStatus setOauthToken(java.lang.String oauthToken) {
            return (ReportStatus) super.setOauthToken(oauthToken);
          }

          @Override
          public ReportStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ReportStatus) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ReportStatus setQuotaUser(java.lang.String quotaUser) {
            return (ReportStatus) super.setQuotaUser(quotaUser);
          }

          @Override
          public ReportStatus setUploadType(java.lang.String uploadType) {
            return (ReportStatus) super.setUploadType(uploadType);
          }

          @Override
          public ReportStatus setUploadProtocol(java.lang.String uploadProtocol) {
            return (ReportStatus) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp Connector name using the form:
           * `projects/{project_id}/locations/{location_id}/connectors/{connector}`
           */
          @com.google.api.client.util.Key
          private java.lang.String appConnector;

          /** Required. BeyondCorp Connector name using the form:
         `projects/{project_id}/locations/{location_id}/connectors/{connector}`
           */
          public java.lang.String getAppConnector() {
            return appConnector;
          }

          /**
           * Required. BeyondCorp Connector name using the form:
           * `projects/{project_id}/locations/{location_id}/connectors/{connector}`
           */
          public ReportStatus setAppConnector(java.lang.String appConnector) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(APP_CONNECTOR_PATTERN.matcher(appConnector).matches(),
                  "Parameter appConnector must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.appConnector = appConnector;
            return this;
          }

          @Override
          public ReportStatus set(String parameterName, Object value) {
            return (ReportStatus) super.set(parameterName, value);
          }
        }
        /**
         * Gets instance configuration for a given AppConnector. An internal method called by a AppConnector
         * to get its container config.
         *
         * Create a request for the method "appConnectors.resolveInstanceConfig".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link ResolveInstanceConfig#execute()} method to invoke the remote
         * operation.
         *
         * @param appConnector Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
         * @return the request
         */
        public ResolveInstanceConfig resolveInstanceConfig(java.lang.String appConnector) throws java.io.IOException {
          ResolveInstanceConfig result = new ResolveInstanceConfig(appConnector);
          initialize(result);
          return result;
        }

        public class ResolveInstanceConfig extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse> {

          private static final String REST_PATH = "v1/{+appConnector}:resolveInstanceConfig";

          private final java.util.regex.Pattern APP_CONNECTOR_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Gets instance configuration for a given AppConnector. An internal method called by a
           * AppConnector to get its container config.
           *
           * Create a request for the method "appConnectors.resolveInstanceConfig".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link ResolveInstanceConfig#execute()} method to invoke the
           * remote operation. <p> {@link ResolveInstanceConfig#initialize(com.google.api.client.googleapis.
           * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param appConnector Required. BeyondCorp AppConnector name using the form:
         *        `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
           * @since 1.13
           */
          protected ResolveInstanceConfig(java.lang.String appConnector) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse.class);
            this.appConnector = com.google.api.client.util.Preconditions.checkNotNull(appConnector, "Required parameter appConnector must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(APP_CONNECTOR_PATTERN.matcher(appConnector).matches(),
                  "Parameter appConnector must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ResolveInstanceConfig set$Xgafv(java.lang.String $Xgafv) {
            return (ResolveInstanceConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public ResolveInstanceConfig setAccessToken(java.lang.String accessToken) {
            return (ResolveInstanceConfig) super.setAccessToken(accessToken);
          }

          @Override
          public ResolveInstanceConfig setAlt(java.lang.String alt) {
            return (ResolveInstanceConfig) super.setAlt(alt);
          }

          @Override
          public ResolveInstanceConfig setCallback(java.lang.String callback) {
            return (ResolveInstanceConfig) super.setCallback(callback);
          }

          @Override
          public ResolveInstanceConfig setFields(java.lang.String fields) {
            return (ResolveInstanceConfig) super.setFields(fields);
          }

          @Override
          public ResolveInstanceConfig setKey(java.lang.String key) {
            return (ResolveInstanceConfig) super.setKey(key);
          }

          @Override
          public ResolveInstanceConfig setOauthToken(java.lang.String oauthToken) {
            return (ResolveInstanceConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public ResolveInstanceConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ResolveInstanceConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ResolveInstanceConfig setQuotaUser(java.lang.String quotaUser) {
            return (ResolveInstanceConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public ResolveInstanceConfig setUploadType(java.lang.String uploadType) {
            return (ResolveInstanceConfig) super.setUploadType(uploadType);
          }

          @Override
          public ResolveInstanceConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (ResolveInstanceConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
           */
          @com.google.api.client.util.Key
          private java.lang.String appConnector;

          /** Required. BeyondCorp AppConnector name using the form:
         `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
           */
          public java.lang.String getAppConnector() {
            return appConnector;
          }

          /**
           * Required. BeyondCorp AppConnector name using the form:
           * `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
           */
          public ResolveInstanceConfig setAppConnector(java.lang.String appConnector) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(APP_CONNECTOR_PATTERN.matcher(appConnector).matches(),
                  "Parameter appConnector must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.appConnector = appConnector;
            return this;
          }

          @Override
          public ResolveInstanceConfig set(String parameterName, Object value) {
            return (ResolveInstanceConfig) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "appConnectors.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "appConnectors.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "appConnectors.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "appConnectors.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appConnectors/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the AppGateways collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.AppGateways.List request = beyondcorp.appGateways().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AppGateways appGateways() {
        return new AppGateways();
      }

      /**
       * The "appGateways" collection of methods.
       */
      public class AppGateways {

        /**
         * Creates a new AppGateway in a given project and location.
         *
         * Create a request for the method "appGateways.create".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource project name of the AppGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.AppGateway}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.AppGateway content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/appGateways";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new AppGateway in a given project and location.
           *
           * Create a request for the method "appGateways.create".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource project name of the AppGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.AppGateway}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.AppGateway content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource project name of the AppGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource project name of the AppGateway location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource project name of the AppGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          @com.google.api.client.util.Key
          private java.lang.String appGatewayId;

          /** Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between
         4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public java.lang.String getAppGatewayId() {
            return appGatewayId;
          }

          /**
           * Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
           */
          public Create setAppGatewayId(java.lang.String appGatewayId) {
            this.appGatewayId = appGatewayId;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes since the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * since the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Create setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single AppGateway.
         *
         * Create a request for the method "appGateways.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp AppGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Deletes a single AppGateway.
           *
           * Create a request for the method "appGateways.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp AppGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp AppGateway name using the form:
         `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp AppGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single AppGateway.
         *
         * Create a request for the method "appGateways.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp AppGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.AppGateway> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Gets details of a single AppGateway.
           *
           * Create a request for the method "appGateways.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp AppGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.AppGateway.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp AppGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp AppGateway name using the form:
         `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp AppGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "appGateways.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "appGateways.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists AppGateways in a given project and location.
         *
         * Create a request for the method "appGateways.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the AppGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.ListAppGatewaysResponse> {

          private static final String REST_PATH = "v1/{+parent}/appGateways";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists AppGateways in a given project and location.
           *
           * Create a request for the method "appGateways.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the AppGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.ListAppGatewaysResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the AppGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the AppGateway location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the AppGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter specifying constraints of a list operation.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Optional. A filter specifying constraints of a list operation. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specifies the ordering of results. See [Sorting
         order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
         used by the service. Regardless of the page_size value, the response may include a partial list and
         a caller should only rely on response's next_page_token to determine if there are more instances
         left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if
           * any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value returned from a previous ListAppGatewaysRequest, if
           * any.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "appGateways.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "appGateways.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Calls the Bouncer method ShouldThrottle to check if a request should be throttled.
         *
         * Create a request for the method "appGateways.shouldThrottle".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link ShouldThrottle#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource
         * @return the request
         */
        public ShouldThrottle shouldThrottle(java.lang.String name) throws java.io.IOException {
          ShouldThrottle result = new ShouldThrottle(name);
          initialize(result);
          return result;
        }

        public class ShouldThrottle extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.ShouldThrottleResponse> {

          private static final String REST_PATH = "v1/{+name}:shouldThrottle";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Calls the Bouncer method ShouldThrottle to check if a request should be throttled.
           *
           * Create a request for the method "appGateways.shouldThrottle".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link ShouldThrottle#execute()} method to invoke the remote
           * operation. <p> {@link ShouldThrottle#initialize(com.google.api.client.googleapis.services.Abstr
           * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
           * the constructor. </p>
           *
           * @param name Required. Name of the resource
           * @since 1.13
           */
          protected ShouldThrottle(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.ShouldThrottleResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ShouldThrottle set$Xgafv(java.lang.String $Xgafv) {
            return (ShouldThrottle) super.set$Xgafv($Xgafv);
          }

          @Override
          public ShouldThrottle setAccessToken(java.lang.String accessToken) {
            return (ShouldThrottle) super.setAccessToken(accessToken);
          }

          @Override
          public ShouldThrottle setAlt(java.lang.String alt) {
            return (ShouldThrottle) super.setAlt(alt);
          }

          @Override
          public ShouldThrottle setCallback(java.lang.String callback) {
            return (ShouldThrottle) super.setCallback(callback);
          }

          @Override
          public ShouldThrottle setFields(java.lang.String fields) {
            return (ShouldThrottle) super.setFields(fields);
          }

          @Override
          public ShouldThrottle setKey(java.lang.String key) {
            return (ShouldThrottle) super.setKey(key);
          }

          @Override
          public ShouldThrottle setOauthToken(java.lang.String oauthToken) {
            return (ShouldThrottle) super.setOauthToken(oauthToken);
          }

          @Override
          public ShouldThrottle setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ShouldThrottle) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ShouldThrottle setQuotaUser(java.lang.String quotaUser) {
            return (ShouldThrottle) super.setQuotaUser(quotaUser);
          }

          @Override
          public ShouldThrottle setUploadType(java.lang.String uploadType) {
            return (ShouldThrottle) super.setUploadType(uploadType);
          }

          @Override
          public ShouldThrottle setUploadProtocol(java.lang.String uploadProtocol) {
            return (ShouldThrottle) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Name of the resource */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Name of the resource */
          public ShouldThrottle setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. The port that is being throttled */
          @com.google.api.client.util.Key
          private java.lang.Integer port;

          /** Optional. The port that is being throttled
           */
          public java.lang.Integer getPort() {
            return port;
          }

          /** Optional. The port that is being throttled */
          public ShouldThrottle setPort(java.lang.Integer port) {
            this.port = port;
            return this;
          }

          /** Optional. The current throughput through the port (mbps) */
          @com.google.api.client.util.Key
          private java.lang.Long requestedAmount;

          /** Optional. The current throughput through the port (mbps)
           */
          public java.lang.Long getRequestedAmount() {
            return requestedAmount;
          }

          /** Optional. The current throughput through the port (mbps) */
          public ShouldThrottle setRequestedAmount(java.lang.Long requestedAmount) {
            this.requestedAmount = requestedAmount;
            return this;
          }

          @Override
          public ShouldThrottle set(String parameterName, Object value) {
            return (ShouldThrottle) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "appGateways.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "appGateways.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/appGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ClientConnectorServices collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.ClientConnectorServices.List request = beyondcorp.clientConnectorServices().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ClientConnectorServices clientConnectorServices() {
        return new ClientConnectorServices();
      }

      /**
       * The "clientConnectorServices" collection of methods.
       */
      public class ClientConnectorServices {

        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "clientConnectorServices.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "clientConnectorServices.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "clientConnectorServices.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "clientConnectorServices.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "clientConnectorServices.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "clientConnectorServices.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientConnectorServices/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the ClientGateways collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.ClientGateways.List request = beyondcorp.clientGateways().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ClientGateways clientGateways() {
        return new ClientGateways();
      }

      /**
       * The "clientGateways" collection of methods.
       */
      public class ClientGateways {

        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "clientGateways.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "clientGateways.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "clientGateways.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "clientGateways.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "clientGateways.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "clientGateways.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/clientGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Global collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.Global.List request = beyondcorp.global().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Global global() {
        return new Global();
      }

      /**
       * The "global" collection of methods.
       */
      public class Global {

        /**
         * An accessor for creating requests from the SecurityGateways collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
         *   {@code BeyondCorp.SecurityGateways.List request = beyondcorp.securityGateways().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public SecurityGateways securityGateways() {
          return new SecurityGateways();
        }

        /**
         * The "securityGateways" collection of methods.
         */
        public class SecurityGateways {

          /**
           * An accessor for creating requests from the Applications collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
           *   {@code BeyondCorp.Applications.List request = beyondcorp.applications().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Applications applications() {
            return new Applications();
          }

          /**
           * The "applications" collection of methods.
           */
          public class Applications {

            /**
             * Creates a new Application in a given project and location.
             *
             * Create a request for the method "applications.create".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the parent SecurityGateway using the form:
             *        `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+parent}/applications";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/securityGateways/[^/]+$");

              /**
               * Creates a new Application in a given project and location.
               *
               * Create a request for the method "applications.create".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the parent SecurityGateway using the form:
             *        `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the parent SecurityGateway using the form:
               * `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the parent SecurityGateway using the form:
             `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the parent SecurityGateway using the form:
               * `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. User-settable Application resource ID. * Must start with a letter. * Must
               * contain between 4-63 characters from `/a-z-/`. * Must end with a number or letter.
               */
              @com.google.api.client.util.Key
              private java.lang.String applicationId;

              /** Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between
             4-63 characters from `/a-z-/`. * Must end with a number or letter.
               */
              public java.lang.String getApplicationId() {
                return applicationId;
              }

              /**
               * Optional. User-settable Application resource ID. * Must start with a letter. * Must
               * contain between 4-63 characters from `/a-z-/`. * Must end with a number or letter.
               */
              public Create setApplicationId(java.lang.String applicationId) {
                this.applicationId = applicationId;
                return this;
              }

              /**
               * Optional. An optional request ID to identify requests. Specify a unique request ID
               * so that if you must retry your request, the server will know to ignore request if
               * it has already been completed. The server will guarantee that for at least 60
               * minutes since the first request.
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
             must retry your request, the server will know to ignore request if it has already been completed.
             The server will guarantee that for at least 60 minutes since the first request.
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * Optional. An optional request ID to identify requests. Specify a unique request ID
               * so that if you must retry your request, the server will know to ignore request if
               * it has already been completed. The server will guarantee that for at least 60
               * minutes since the first request.
               */
              public Create setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Updates the parameters of a single Application.
             *
             * Create a request for the method "applications.patch".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Identifier. Name of the resource.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");

              /**
               * Updates the parameters of a single Application.
               *
               * Create a request for the method "applications.patch".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Identifier. Name of the resource.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application content) {
                super(BeyondCorp.this, "PATCH", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /** Identifier. Name of the resource. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Identifier. Name of the resource.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Identifier. Name of the resource. */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Optional. An optional request ID to identify requests. Specify a unique request ID
               * so that if you must retry your request, the server will know to ignore the request
               * if it has already been completed. The server will guarantee that for at least 60
               * minutes after the first request. For example, consider a situation where you make
               * an initial request and the request timed out. If you make the request again with
               * the same request ID, the server can check if original operation with the same
               * request ID was received, and if so, will ignore the second request. This prevents
               * clients from accidentally creating duplicate commitments. The request ID must be a
               * valid UUID with the exception that zero UUID is not supported
               * (00000000-0000-0000-0000-000000000000).
               */
              @com.google.api.client.util.Key
              private java.lang.String requestId;

              /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
             must retry your request, the server will know to ignore the request if it has already been
             completed. The server will guarantee that for at least 60 minutes after the first request. For
             example, consider a situation where you make an initial request and the request timed out. If you
             make the request again with the same request ID, the server can check if original operation with
             the same request ID was received, and if so, will ignore the second request. This prevents clients
             from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
             exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
               */
              public java.lang.String getRequestId() {
                return requestId;
              }

              /**
               * Optional. An optional request ID to identify requests. Specify a unique request ID
               * so that if you must retry your request, the server will know to ignore the request
               * if it has already been completed. The server will guarantee that for at least 60
               * minutes after the first request. For example, consider a situation where you make
               * an initial request and the request timed out. If you make the request again with
               * the same request ID, the server can check if original operation with the same
               * request ID was received, and if so, will ignore the second request. This prevents
               * clients from accidentally creating duplicate commitments. The request ID must be a
               * valid UUID with the exception that zero UUID is not supported
               * (00000000-0000-0000-0000-000000000000).
               */
              public Patch setRequestId(java.lang.String requestId) {
                this.requestId = requestId;
                return this;
              }

              /** Required. Mutable fields include: display_name. */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. Mutable fields include: display_name.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /** Required. Mutable fields include: display_name. */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not exist,
             * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
             * designed to be used for building permission-aware UIs and command-line tools, not for
             * authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "applications.testIamPermissions".
             *
             * This request holds the parameters needed by the beyondcorp server.  After setting any optional
             * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
             * @return the request
             */
            public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
              TestIamPermissions result = new TestIamPermissions(resource, content);
              initialize(result);
              return result;
            }

            public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

              private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

              private final java.util.regex.Pattern RESOURCE_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");

              /**
               * Returns permissions that a caller has on the specified resource. If the resource does not
               * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
               * operation is designed to be used for building permission-aware UIs and command-line tools, not
               * for authorization checking. This operation may "fail open" without warning.
               *
               * Create a request for the method "applications.testIamPermissions".
               *
               * This request holds the parameters needed by the the beyondcorp server.  After setting any
               * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
               * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
             *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
             *        this field.
               * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
               * @since 1.13
               */
              protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
                super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
                this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");
                }
              }

              @Override
              public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
                return (TestIamPermissions) super.set$Xgafv($Xgafv);
              }

              @Override
              public TestIamPermissions setAccessToken(java.lang.String accessToken) {
                return (TestIamPermissions) super.setAccessToken(accessToken);
              }

              @Override
              public TestIamPermissions setAlt(java.lang.String alt) {
                return (TestIamPermissions) super.setAlt(alt);
              }

              @Override
              public TestIamPermissions setCallback(java.lang.String callback) {
                return (TestIamPermissions) super.setCallback(callback);
              }

              @Override
              public TestIamPermissions setFields(java.lang.String fields) {
                return (TestIamPermissions) super.setFields(fields);
              }

              @Override
              public TestIamPermissions setKey(java.lang.String key) {
                return (TestIamPermissions) super.setKey(key);
              }

              @Override
              public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
                return (TestIamPermissions) super.setOauthToken(oauthToken);
              }

              @Override
              public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
                return (TestIamPermissions) super.setQuotaUser(quotaUser);
              }

              @Override
              public TestIamPermissions setUploadType(java.lang.String uploadType) {
                return (TestIamPermissions) super.setUploadType(uploadType);
              }

              @Override
              public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
                return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              @com.google.api.client.util.Key
              private java.lang.String resource;

              /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
             names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
             field.
               */
              public java.lang.String getResource() {
                return resource;
              }

              /**
               * REQUIRED: The resource for which the policy detail is being requested. See
               * [Resource names](https://cloud.google.com/apis/design/resource_names) for the
               * appropriate value for this field.
               */
              public TestIamPermissions setResource(java.lang.String resource) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                      "Parameter resource must conform to the pattern " +
                      "^projects/[^/]+/locations/global/securityGateways/[^/]+/applications/[^/]+$");
                }
                this.resource = resource;
                return this;
              }

              @Override
              public TestIamPermissions set(String parameterName, Object value) {
                return (TestIamPermissions) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Operations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.Operations.List request = beyondcorp.operations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Operations operations() {
        return new Operations();
      }

      /**
       * The "operations" collection of methods.
       */
      public class Operations {

        /**
         * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
         * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
         * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
         * methods to check whether the cancellation succeeded or whether the operation completed despite
         * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
         * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
         * `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest}
         * @return the request
         */
        public Cancel cancel(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
          Cancel result = new Cancel(name, content);
          initialize(result);
          return result;
        }

        public class Cancel extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}:cancel";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           * <p> {@link
           * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest}
           * @since 1.13
           */
          protected Cancel(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningCancelOperationRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Cancel set$Xgafv(java.lang.String $Xgafv) {
            return (Cancel) super.set$Xgafv($Xgafv);
          }

          @Override
          public Cancel setAccessToken(java.lang.String accessToken) {
            return (Cancel) super.setAccessToken(accessToken);
          }

          @Override
          public Cancel setAlt(java.lang.String alt) {
            return (Cancel) super.setAlt(alt);
          }

          @Override
          public Cancel setCallback(java.lang.String callback) {
            return (Cancel) super.setCallback(callback);
          }

          @Override
          public Cancel setFields(java.lang.String fields) {
            return (Cancel) super.setFields(fields);
          }

          @Override
          public Cancel setKey(java.lang.String key) {
            return (Cancel) super.setKey(key);
          }

          @Override
          public Cancel setOauthToken(java.lang.String oauthToken) {
            return (Cancel) super.setOauthToken(oauthToken);
          }

          @Override
          public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Cancel) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Cancel setQuotaUser(java.lang.String quotaUser) {
            return (Cancel) super.setQuotaUser(quotaUser);
          }

          @Override
          public Cancel setUploadType(java.lang.String uploadType) {
            return (Cancel) super.setUploadType(uploadType);
          }

          @Override
          public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
            return (Cancel) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be cancelled. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be cancelled.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be cancelled. */
          public Cancel setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Cancel set(String parameterName, Object value) {
            return (Cancel) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource to be deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Deletes a long-running operation. This method indicates that the client is no longer interested
           * in the operation result. It does not cancel the operation. If the server doesn't support this
           * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource to be deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource to be deleted. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource to be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource to be deleted. */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation resource.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/operations/[^/]+$");

          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation resource.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation resource. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/operations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param name The name of the operation's parent resource.
         * @return the request
         */
        public List list(java.lang.String name) throws java.io.IOException {
          List result = new List(name);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningListOperationsResponse> {

          private static final String REST_PATH = "v1/{+name}/operations";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The name of the operation's parent resource.
           * @since 1.13
           */
          protected List(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningListOperationsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** The name of the operation's parent resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The name of the operation's parent resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** The name of the operation's parent resource. */
          public List setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The standard list filter. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The standard list filter.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** The standard list filter. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** The standard list page size. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The standard list page size.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The standard list page size. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The standard list page token. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The standard list page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The standard list page token. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SecurityGateways collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
       *   {@code BeyondCorp.SecurityGateways.List request = beyondcorp.securityGateways().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SecurityGateways securityGateways() {
        return new SecurityGateways();
      }

      /**
       * The "securityGateways" collection of methods.
       */
      public class SecurityGateways {

        /**
         * Creates a new SecurityGateway in a given project and location.
         *
         * Create a request for the method "securityGateways.create".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource project name of the SecurityGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/securityGateways";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new SecurityGateway in a given project and location.
           *
           * Create a request for the method "securityGateways.create".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource project name of the SecurityGateway location using the form:
         *        `projects/{project_id}/locations/{location_id}`
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource project name of the SecurityGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource project name of the SecurityGateway location using the form:
         `projects/{project_id}/locations/{location_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource project name of the SecurityGateway location using the form:
           * `projects/{project_id}/locations/{location_id}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore request if it has
           * already been completed. The server will guarantee that for at least 60 minutes since
           * the first request.
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore request if it has already been completed.
         The server will guarantee that for at least 60 minutes since the first request.
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore request if it has
           * already been completed. The server will guarantee that for at least 60 minutes since
           * the first request.
           */
          public Create setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. User-settable SecurityGateway resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or letter.
           */
          @com.google.api.client.util.Key
          private java.lang.String securityGatewayId;

          /** Optional. User-settable SecurityGateway resource ID. * Must start with a letter. * Must contain
         between 4-63 characters from `/a-z-/`. * Must end with a number or letter.
           */
          public java.lang.String getSecurityGatewayId() {
            return securityGatewayId;
          }

          /**
           * Optional. User-settable SecurityGateway resource ID. * Must start with a letter. * Must
           * contain between 4-63 characters from `/a-z-/`. * Must end with a number or letter.
           */
          public Create setSecurityGatewayId(java.lang.String securityGatewayId) {
            this.securityGatewayId = securityGatewayId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a single SecurityGateway.
         *
         * Create a request for the method "securityGateways.delete".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. BeyondCorp SecurityGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/securityGateways/{security_gateway_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Deletes a single SecurityGateway.
           *
           * Create a request for the method "securityGateways.delete".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. BeyondCorp SecurityGateway name using the form:
         *        `projects/{project_id}/locations/{location_id}/securityGateways/{security_gateway_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. BeyondCorp SecurityGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/securityGateways/{security_gateway_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. BeyondCorp SecurityGateway name using the form:
         `projects/{project_id}/locations/{location_id}/securityGateways/{security_gateway_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. BeyondCorp SecurityGateway name using the form:
           * `projects/{project_id}/locations/{location_id}/securityGateways/{security_gateway_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request times out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request times out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Delete setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validateOnly;

          /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
         any way.
           */
          public java.lang.Boolean getValidateOnly() {
            return validateOnly;
          }

          /**
           * Optional. If set, validates request by executing a dry-run which would not alter the
           * resource in any way.
           */
          public Delete setValidateOnly(java.lang.Boolean validateOnly) {
            this.validateOnly = validateOnly;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets details of a single SecurityGateway.
         *
         * Create a request for the method "securityGateways.get".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of the PartnerTenant using the form:
         *        `projects/{project_id}/locations/{location_id}/securityGateway/{security_gateway_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Gets details of a single SecurityGateway.
           *
           * Create a request for the method "securityGateways.get".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of the PartnerTenant using the form:
         *        `projects/{project_id}/locations/{location_id}/securityGateway/{security_gateway_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the PartnerTenant using the form:
           * `projects/{project_id}/locations/{location_id}/securityGateway/{security_gateway_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of the PartnerTenant using the form:
         `projects/{project_id}/locations/{location_id}/securityGateway/{security_gateway_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of the PartnerTenant using the form:
           * `projects/{project_id}/locations/{location_id}/securityGateway/{security_gateway_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "securityGateways.getIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "securityGateways.getIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists SecurityGateways in a given project and location.
         *
         * Create a request for the method "securityGateways.list".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent location to which the resources belong.
         *        `projects/{project_id}/locations/{location_id}/`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1ListSecurityGatewaysResponse> {

          private static final String REST_PATH = "v1/{+parent}/securityGateways";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists SecurityGateways in a given project and location.
           *
           * Create a request for the method "securityGateways.list".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent location to which the resources belong.
         *        `projects/{project_id}/locations/{location_id}/`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1ListSecurityGatewaysResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent location to which the resources belong.
           * `projects/{project_id}/locations/{location_id}/`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent location to which the resources belong.
         `projects/{project_id}/locations/{location_id}/`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent location to which the resources belong.
           * `projects/{project_id}/locations/{location_id}/`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. A filter specifying constraints of a list operation. All fields in the
           * SecurityGateway message are supported. For example, the following query will return the
           * SecurityGateway with displayName "test-security-gateway" For more information, please
           * refer to https://google.aip.dev/160.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. A filter specifying constraints of a list operation. All fields in the SecurityGateway
         message are supported. For example, the following query will return the SecurityGateway with
         displayName "test-security-gateway" For more information, please refer to
         https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. A filter specifying constraints of a list operation. All fields in the
           * SecurityGateway message are supported. For example, the following query will return the
           * SecurityGateway with displayName "test-security-gateway" For more information, please
           * refer to https://google.aip.dev/160.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Optional. Specifies the ordering of results. See [Sorting
         order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Optional. Specifies the ordering of results. See [Sorting
           * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
           * information.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
         used by the service. Regardless of the page_size value, the response may include a partial list and
         a caller should only rely on response's next_page_token to determine if there are more instances
         left to be queried.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. If not specified, a default value of
           * 50 will be used by the service. Regardless of the page_size value, the response may
           * include a partial list and a caller should only rely on response's next_page_token to
           * determine if there are more instances left to be queried.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. The next_page_token value returned from a previous
           * ListSecurityGatewayRequest, if any.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. The next_page_token value returned from a previous ListSecurityGatewayRequest, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. The next_page_token value returned from a previous
           * ListSecurityGatewayRequest, if any.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the parameters of a single SecurityGateway.
         *
         * Create a request for the method "securityGateways.patch".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Name of the resource.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Updates the parameters of a single SecurityGateway.
           *
           * Create a request for the method "securityGateways.patch".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Name of the resource.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1SecurityGateway content) {
            super(BeyondCorp.this, "PATCH", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /** Identifier. Name of the resource. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Name of the resource.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Identifier. Name of the resource. */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request timed out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          @com.google.api.client.util.Key
          private java.lang.String requestId;

          /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
         must retry your request, the server will know to ignore the request if it has already been
         completed. The server will guarantee that for at least 60 minutes after the first request. For
         example, consider a situation where you make an initial request and the request timed out. If you
         make the request again with the same request ID, the server can check if original operation with
         the same request ID was received, and if so, will ignore the second request. This prevents clients
         from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
         exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public java.lang.String getRequestId() {
            return requestId;
          }

          /**
           * Optional. An optional request ID to identify requests. Specify a unique request ID so
           * that if you must retry your request, the server will know to ignore the request if it
           * has already been completed. The server will guarantee that for at least 60 minutes
           * after the first request. For example, consider a situation where you make an initial
           * request and the request timed out. If you make the request again with the same request
           * ID, the server can check if original operation with the same request ID was received,
           * and if so, will ignore the second request. This prevents clients from accidentally
           * creating duplicate commitments. The request ID must be a valid UUID with the exception
           * that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
           */
          public Patch setRequestId(java.lang.String requestId) {
            this.requestId = requestId;
            return this;
          }

          /** Required. Mutable fields include: display_name, hubs. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. Mutable fields include: display_name, hubs.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. Mutable fields include: display_name, hubs. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "securityGateways.setIamPolicy".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "securityGateways.setIamPolicy".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "securityGateways.testIamPermissions".
         *
         * This request holds the parameters needed by the beyondcorp server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "securityGateways.testIamPermissions".
           *
           * This request holds the parameters needed by the the beyondcorp server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Applications collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BeyondCorp beyondcorp = new BeyondCorp(...);}
         *   {@code BeyondCorp.Applications.List request = beyondcorp.applications().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Applications applications() {
          return new Applications();
        }

        /**
         * The "applications" collection of methods.
         */
        public class Applications {

          /**
           * Deletes a single Application.
           *
           * Create a request for the method "applications.delete".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the resource.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");

            /**
             * Deletes a single Application.
             *
             * Create a request for the method "applications.delete".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the resource.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(BeyondCorp.this, "DELETE", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleLongrunningOperation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Name of the resource. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server will know to ignore the request if it
             * has already been completed. The server will guarantee that for at least 60 minutes
             * after the first request. For example, consider a situation where you make an initial
             * request and the request times out. If you make the request again with the same
             * request ID, the server can check if original operation with the same request ID was
             * received, and if so, will ignore the second request. This prevents clients from
             * accidentally creating duplicate commitments. The request ID must be a valid UUID with
             * the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            @com.google.api.client.util.Key
            private java.lang.String requestId;

            /** Optional. An optional request ID to identify requests. Specify a unique request ID so that if you
           must retry your request, the server will know to ignore the request if it has already been
           completed. The server will guarantee that for at least 60 minutes after the first request. For
           example, consider a situation where you make an initial request and the request times out. If you
           make the request again with the same request ID, the server can check if original operation with
           the same request ID was received, and if so, will ignore the second request. This prevents clients
           from accidentally creating duplicate commitments. The request ID must be a valid UUID with the
           exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public java.lang.String getRequestId() {
              return requestId;
            }

            /**
             * Optional. An optional request ID to identify requests. Specify a unique request ID so
             * that if you must retry your request, the server will know to ignore the request if it
             * has already been completed. The server will guarantee that for at least 60 minutes
             * after the first request. For example, consider a situation where you make an initial
             * request and the request times out. If you make the request again with the same
             * request ID, the server can check if original operation with the same request ID was
             * received, and if so, will ignore the second request. This prevents clients from
             * accidentally creating duplicate commitments. The request ID must be a valid UUID with
             * the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
             */
            public Delete setRequestId(java.lang.String requestId) {
              this.requestId = requestId;
              return this;
            }

            /**
             * Optional. If set, validates request by executing a dry-run which would not alter the
             * resource in any way.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean validateOnly;

            /** Optional. If set, validates request by executing a dry-run which would not alter the resource in
           any way.
             */
            public java.lang.Boolean getValidateOnly() {
              return validateOnly;
            }

            /**
             * Optional. If set, validates request by executing a dry-run which would not alter the
             * resource in any way.
             */
            public Delete setValidateOnly(java.lang.Boolean validateOnly) {
              this.validateOnly = validateOnly;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details of a single Application.
           *
           * Create a request for the method "applications.get".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the Application using the form: `projects/{project_id}/locations/glob
           *        al/securityGateway/{security_gateway_id}/applications/{application_id}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");

            /**
             * Gets details of a single Application.
             *
             * Create a request for the method "applications.get".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the Application using the form: `projects/{project_id}/locations/glob
           *        al/securityGateway/{security_gateway_id}/applications/{application_id}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1Application.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the Application using the form: `projects/{project_id}
             * /locations/global/securityGateway/{security_gateway_id}/applications/{application_id}
             * `
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the Application using the form: `projects/{project_id}/locations/glo
           bal/securityGateway/{security_gateway_id}/applications/{application_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the Application using the form: `projects/{project_id}
             * /locations/global/securityGateway/{security_gateway_id}/applications/{application_id}
             * `
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "applications.getIamPolicy".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "applications.getIamPolicy".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists Applications in a given project and location.
           *
           * Create a request for the method "applications.list".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The parent location to which the resources belong.
           *        `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1ListApplicationsResponse> {

            private static final String REST_PATH = "v1/{+parent}/applications";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");

            /**
             * Lists Applications in a given project and location.
             *
             * Create a request for the method "applications.list".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The parent location to which the resources belong.
           *        `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(BeyondCorp.this, "GET", REST_PATH, null, com.google.api.services.beyondcorp.v1.model.GoogleCloudBeyondcorpSecuritygatewaysV1ListApplicationsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent location to which the resources belong.
             * `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The parent location to which the resources belong.
           `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The parent location to which the resources belong.
             * `projects/{project_id}/locations/global/securityGateways/{security_gateway_id}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. A filter specifying constraints of a list operation. All fields in the
             * Application message are supported. For example, the following query will return the
             * Application with displayName "test-application" For more information, please refer to
             * https://google.aip.dev/160.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. A filter specifying constraints of a list operation. All fields in the Application
           message are supported. For example, the following query will return the Application with
           displayName "test-application" For more information, please refer to https://google.aip.dev/160.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. A filter specifying constraints of a list operation. All fields in the
             * Application message are supported. For example, the following query will return the
             * Application with displayName "test-application" For more information, please refer to
             * https://google.aip.dev/160.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. Specifies the ordering of results. See [Sorting
             * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
             * information.
             */
            @com.google.api.client.util.Key
            private java.lang.String orderBy;

            /** Optional. Specifies the ordering of results. See [Sorting
           order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information.
             */
            public java.lang.String getOrderBy() {
              return orderBy;
            }

            /**
             * Optional. Specifies the ordering of results. See [Sorting
             * order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more
             * information.
             */
            public List setOrderBy(java.lang.String orderBy) {
              this.orderBy = orderBy;
              return this;
            }

            /**
             * Optional. The maximum number of items to return. If not specified, a default value of
             * 50 will be used by the service. Regardless of the page_size value, the response may
             * include a partial list and a caller should only rely on response's next_page_token to
             * determine if there are more instances left to be queried.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. The maximum number of items to return. If not specified, a default value of 50 will be
           used by the service. Regardless of the page_size value, the response may include a partial list and
           a caller should only rely on response's next_page_token to determine if there are more instances
           left to be queried.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. The maximum number of items to return. If not specified, a default value of
             * 50 will be used by the service. Regardless of the page_size value, the response may
             * include a partial list and a caller should only rely on response's next_page_token to
             * determine if there are more instances left to be queried.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. The next_page_token value returned from a previous ListApplicationsRequest,
             * if any.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. The next_page_token value returned from a previous ListApplicationsRequest, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. The next_page_token value returned from a previous ListApplicationsRequest,
             * if any.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "applications.setIamPolicy".
           *
           * This request holds the parameters needed by the beyondcorp server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends BeyondCorpRequest<com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "applications.setIamPolicy".
             *
             * This request holds the parameters needed by the the beyondcorp server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.beyondcorp.v1.model.GoogleIamV1SetIamPolicyRequest content) {
              super(BeyondCorp.this, "POST", REST_PATH, content, com.google.api.services.beyondcorp.v1.model.GoogleIamV1Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/securityGateways/[^/]+/applications/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link BeyondCorp}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link BeyondCorp}. */
    @Override
    public BeyondCorp build() {
      return new BeyondCorp(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BeyondCorpRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBeyondCorpRequestInitializer(
        BeyondCorpRequestInitializer beyondcorpRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(beyondcorpRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
