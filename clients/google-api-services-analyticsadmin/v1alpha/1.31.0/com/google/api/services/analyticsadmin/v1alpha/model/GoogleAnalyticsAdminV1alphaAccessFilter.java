/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha.model;

/**
 * An expression to filter dimension or metric values.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Analytics Admin API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAnalyticsAdminV1alphaAccessFilter extends com.google.api.client.json.GenericJson {

  /**
   * A filter for two values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessBetweenFilter betweenFilter;

  /**
   * The dimension name or metric name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fieldName;

  /**
   * A filter for in list values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessInListFilter inListFilter;

  /**
   * A filter for numeric or date values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessNumericFilter numericFilter;

  /**
   * Strings related filter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAnalyticsAdminV1alphaAccessStringFilter stringFilter;

  /**
   * A filter for two values.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessBetweenFilter getBetweenFilter() {
    return betweenFilter;
  }

  /**
   * A filter for two values.
   * @param betweenFilter betweenFilter or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter setBetweenFilter(GoogleAnalyticsAdminV1alphaAccessBetweenFilter betweenFilter) {
    this.betweenFilter = betweenFilter;
    return this;
  }

  /**
   * The dimension name or metric name.
   * @return value or {@code null} for none
   */
  public java.lang.String getFieldName() {
    return fieldName;
  }

  /**
   * The dimension name or metric name.
   * @param fieldName fieldName or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter setFieldName(java.lang.String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

  /**
   * A filter for in list values.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessInListFilter getInListFilter() {
    return inListFilter;
  }

  /**
   * A filter for in list values.
   * @param inListFilter inListFilter or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter setInListFilter(GoogleAnalyticsAdminV1alphaAccessInListFilter inListFilter) {
    this.inListFilter = inListFilter;
    return this;
  }

  /**
   * A filter for numeric or date values.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessNumericFilter getNumericFilter() {
    return numericFilter;
  }

  /**
   * A filter for numeric or date values.
   * @param numericFilter numericFilter or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter setNumericFilter(GoogleAnalyticsAdminV1alphaAccessNumericFilter numericFilter) {
    this.numericFilter = numericFilter;
    return this;
  }

  /**
   * Strings related filter.
   * @return value or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessStringFilter getStringFilter() {
    return stringFilter;
  }

  /**
   * Strings related filter.
   * @param stringFilter stringFilter or {@code null} for none
   */
  public GoogleAnalyticsAdminV1alphaAccessFilter setStringFilter(GoogleAnalyticsAdminV1alphaAccessStringFilter stringFilter) {
    this.stringFilter = stringFilter;
    return this;
  }

  @Override
  public GoogleAnalyticsAdminV1alphaAccessFilter set(String fieldName, Object value) {
    return (GoogleAnalyticsAdminV1alphaAccessFilter) super.set(fieldName, value);
  }

  @Override
  public GoogleAnalyticsAdminV1alphaAccessFilter clone() {
    return (GoogleAnalyticsAdminV1alphaAccessFilter) super.clone();
  }

}
