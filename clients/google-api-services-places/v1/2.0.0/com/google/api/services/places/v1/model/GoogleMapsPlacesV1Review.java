/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Information about a review of a place.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1Review extends com.google.api.client.json.GenericJson {

  /**
   * This review's author.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AuthorAttribution authorAttribution;

  /**
   * A link where users can flag a problem with the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String flagContentUri;

  /**
   * A link to show the review on Google Maps.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String googleMapsUri;

  /**
   * A reference representing this place review which may be used to look up this place review again
   * (also called the API "resource" name: `places/{place_id}/reviews/{review}`).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The review text in its original language.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeLocalizedText originalText;

  /**
   * Timestamp for the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String publishTime;

  /**
   * A number between 1.0 and 5.0, also called the number of stars.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double rating;

  /**
   * A string of formatted recent time, expressing the review time relative to the current time in a
   * form appropriate for the language and country.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String relativePublishTimeDescription;

  /**
   * The localized text of the review.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeLocalizedText text;

  /**
   * This review's author.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AuthorAttribution getAuthorAttribution() {
    return authorAttribution;
  }

  /**
   * This review's author.
   * @param authorAttribution authorAttribution or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setAuthorAttribution(GoogleMapsPlacesV1AuthorAttribution authorAttribution) {
    this.authorAttribution = authorAttribution;
    return this;
  }

  /**
   * A link where users can flag a problem with the review.
   * @return value or {@code null} for none
   */
  public java.lang.String getFlagContentUri() {
    return flagContentUri;
  }

  /**
   * A link where users can flag a problem with the review.
   * @param flagContentUri flagContentUri or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setFlagContentUri(java.lang.String flagContentUri) {
    this.flagContentUri = flagContentUri;
    return this;
  }

  /**
   * A link to show the review on Google Maps.
   * @return value or {@code null} for none
   */
  public java.lang.String getGoogleMapsUri() {
    return googleMapsUri;
  }

  /**
   * A link to show the review on Google Maps.
   * @param googleMapsUri googleMapsUri or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setGoogleMapsUri(java.lang.String googleMapsUri) {
    this.googleMapsUri = googleMapsUri;
    return this;
  }

  /**
   * A reference representing this place review which may be used to look up this place review again
   * (also called the API "resource" name: `places/{place_id}/reviews/{review}`).
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * A reference representing this place review which may be used to look up this place review again
   * (also called the API "resource" name: `places/{place_id}/reviews/{review}`).
   * @param name name or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The review text in its original language.
   * @return value or {@code null} for none
   */
  public GoogleTypeLocalizedText getOriginalText() {
    return originalText;
  }

  /**
   * The review text in its original language.
   * @param originalText originalText or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setOriginalText(GoogleTypeLocalizedText originalText) {
    this.originalText = originalText;
    return this;
  }

  /**
   * Timestamp for the review.
   * @return value or {@code null} for none
   */
  public String getPublishTime() {
    return publishTime;
  }

  /**
   * Timestamp for the review.
   * @param publishTime publishTime or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setPublishTime(String publishTime) {
    this.publishTime = publishTime;
    return this;
  }

  /**
   * A number between 1.0 and 5.0, also called the number of stars.
   * @return value or {@code null} for none
   */
  public java.lang.Double getRating() {
    return rating;
  }

  /**
   * A number between 1.0 and 5.0, also called the number of stars.
   * @param rating rating or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setRating(java.lang.Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * A string of formatted recent time, expressing the review time relative to the current time in a
   * form appropriate for the language and country.
   * @return value or {@code null} for none
   */
  public java.lang.String getRelativePublishTimeDescription() {
    return relativePublishTimeDescription;
  }

  /**
   * A string of formatted recent time, expressing the review time relative to the current time in a
   * form appropriate for the language and country.
   * @param relativePublishTimeDescription relativePublishTimeDescription or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setRelativePublishTimeDescription(java.lang.String relativePublishTimeDescription) {
    this.relativePublishTimeDescription = relativePublishTimeDescription;
    return this;
  }

  /**
   * The localized text of the review.
   * @return value or {@code null} for none
   */
  public GoogleTypeLocalizedText getText() {
    return text;
  }

  /**
   * The localized text of the review.
   * @param text text or {@code null} for none
   */
  public GoogleMapsPlacesV1Review setText(GoogleTypeLocalizedText text) {
    this.text = text;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1Review set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1Review) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1Review clone() {
    return (GoogleMapsPlacesV1Review) super.clone();
  }

}
