/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Annotation for media entities. Next ID: 17
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingModelsMediaMediaAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * Name of the artist (if applicable). Used for songs and albums.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String artistName;

  /**
   * Additional info specific to an audiobook (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaAudiobookInfo audiobookInfo;

  /**
   * Type of the media content. This field is not always populated, but only when this annotation is
   * used to represent an individual media item, e.g., when it is the value of an intent argument
   * storing a media object to play.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentType;

  /**
   * Images of the media.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AssistantApiCoreTypesImage> image;

  static {
    // hack to force ProGuard to consider AssistantApiCoreTypesImage used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AssistantApiCoreTypesImage.class);
  }

  /**
   * Name of the media. Required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Additional info specific to a news audio/video stream (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaNewsInfo newsInfo;

  /**
   * The personal ingestion engine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String personalDataIngestionEngine;

  /**
   * Visibility setting of the retrieved playlist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String playlistVisibility;

  /**
   * Additional info specific to podcast stream (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaPodcastInfo podcastInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryEntityMid;

  /**
   * List of providers and their deeplinks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<NlpSemanticParsingModelsMediaMediaProviderInfo> providerInfo;

  /**
   * Purchase info for purchased or preordered movies, episodes, seasons, tv shows.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaPurchaseInfo purchaseInfo;

  /**
   * Only one of these fields should be set depending on the type of the content. oneof
   * content_specific_info { Additional info specific to a radio station (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaRadioInfo radioInfo;

  /**
   * Rental info for rented movies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaRentalInfo rentalInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * Additional info specific to YouTube playlist (if applicable).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingModelsMediaYouTubePlaylistInfo youtubePlaylistInfo;

  /**
   * Name of the artist (if applicable). Used for songs and albums.
   * @return value or {@code null} for none
   */
  public java.lang.String getArtistName() {
    return artistName;
  }

  /**
   * Name of the artist (if applicable). Used for songs and albums.
   * @param artistName artistName or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setArtistName(java.lang.String artistName) {
    this.artistName = artistName;
    return this;
  }

  /**
   * Additional info specific to an audiobook (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaAudiobookInfo getAudiobookInfo() {
    return audiobookInfo;
  }

  /**
   * Additional info specific to an audiobook (if applicable).
   * @param audiobookInfo audiobookInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setAudiobookInfo(NlpSemanticParsingModelsMediaAudiobookInfo audiobookInfo) {
    this.audiobookInfo = audiobookInfo;
    return this;
  }

  /**
   * Type of the media content. This field is not always populated, but only when this annotation is
   * used to represent an individual media item, e.g., when it is the value of an intent argument
   * storing a media object to play.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentType() {
    return contentType;
  }

  /**
   * Type of the media content. This field is not always populated, but only when this annotation is
   * used to represent an individual media item, e.g., when it is the value of an intent argument
   * storing a media object to play.
   * @param contentType contentType or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setContentType(java.lang.String contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Images of the media.
   * @return value or {@code null} for none
   */
  public java.util.List<AssistantApiCoreTypesImage> getImage() {
    return image;
  }

  /**
   * Images of the media.
   * @param image image or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setImage(java.util.List<AssistantApiCoreTypesImage> image) {
    this.image = image;
    return this;
  }

  /**
   * Name of the media. Required.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Name of the media. Required.
   * @param name name or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Additional info specific to a news audio/video stream (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaNewsInfo getNewsInfo() {
    return newsInfo;
  }

  /**
   * Additional info specific to a news audio/video stream (if applicable).
   * @param newsInfo newsInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setNewsInfo(NlpSemanticParsingModelsMediaNewsInfo newsInfo) {
    this.newsInfo = newsInfo;
    return this;
  }

  /**
   * The personal ingestion engine.
   * @return value or {@code null} for none
   */
  public java.lang.String getPersonalDataIngestionEngine() {
    return personalDataIngestionEngine;
  }

  /**
   * The personal ingestion engine.
   * @param personalDataIngestionEngine personalDataIngestionEngine or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setPersonalDataIngestionEngine(java.lang.String personalDataIngestionEngine) {
    this.personalDataIngestionEngine = personalDataIngestionEngine;
    return this;
  }

  /**
   * Visibility setting of the retrieved playlist.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlaylistVisibility() {
    return playlistVisibility;
  }

  /**
   * Visibility setting of the retrieved playlist.
   * @param playlistVisibility playlistVisibility or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setPlaylistVisibility(java.lang.String playlistVisibility) {
    this.playlistVisibility = playlistVisibility;
    return this;
  }

  /**
   * Additional info specific to podcast stream (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaPodcastInfo getPodcastInfo() {
    return podcastInfo;
  }

  /**
   * Additional info specific to podcast stream (if applicable).
   * @param podcastInfo podcastInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setPodcastInfo(NlpSemanticParsingModelsMediaPodcastInfo podcastInfo) {
    this.podcastInfo = podcastInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryEntityMid() {
    return primaryEntityMid;
  }

  /**
   * @param primaryEntityMid primaryEntityMid or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setPrimaryEntityMid(java.lang.String primaryEntityMid) {
    this.primaryEntityMid = primaryEntityMid;
    return this;
  }

  /**
   * List of providers and their deeplinks.
   * @return value or {@code null} for none
   */
  public java.util.List<NlpSemanticParsingModelsMediaMediaProviderInfo> getProviderInfo() {
    return providerInfo;
  }

  /**
   * List of providers and their deeplinks.
   * @param providerInfo providerInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setProviderInfo(java.util.List<NlpSemanticParsingModelsMediaMediaProviderInfo> providerInfo) {
    this.providerInfo = providerInfo;
    return this;
  }

  /**
   * Purchase info for purchased or preordered movies, episodes, seasons, tv shows.
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaPurchaseInfo getPurchaseInfo() {
    return purchaseInfo;
  }

  /**
   * Purchase info for purchased or preordered movies, episodes, seasons, tv shows.
   * @param purchaseInfo purchaseInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setPurchaseInfo(NlpSemanticParsingModelsMediaPurchaseInfo purchaseInfo) {
    this.purchaseInfo = purchaseInfo;
    return this;
  }

  /**
   * Only one of these fields should be set depending on the type of the content. oneof
   * content_specific_info { Additional info specific to a radio station (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaRadioInfo getRadioInfo() {
    return radioInfo;
  }

  /**
   * Only one of these fields should be set depending on the type of the content. oneof
   * content_specific_info { Additional info specific to a radio station (if applicable).
   * @param radioInfo radioInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setRadioInfo(NlpSemanticParsingModelsMediaRadioInfo radioInfo) {
    this.radioInfo = radioInfo;
    return this;
  }

  /**
   * Rental info for rented movies.
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaRentalInfo getRentalInfo() {
    return rentalInfo;
  }

  /**
   * Rental info for rented movies.
   * @param rentalInfo rentalInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setRentalInfo(NlpSemanticParsingModelsMediaRentalInfo rentalInfo) {
    this.rentalInfo = rentalInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * @param source source or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * Additional info specific to YouTube playlist (if applicable).
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaYouTubePlaylistInfo getYoutubePlaylistInfo() {
    return youtubePlaylistInfo;
  }

  /**
   * Additional info specific to YouTube playlist (if applicable).
   * @param youtubePlaylistInfo youtubePlaylistInfo or {@code null} for none
   */
  public NlpSemanticParsingModelsMediaMediaAnnotation setYoutubePlaylistInfo(NlpSemanticParsingModelsMediaYouTubePlaylistInfo youtubePlaylistInfo) {
    this.youtubePlaylistInfo = youtubePlaylistInfo;
    return this;
  }

  @Override
  public NlpSemanticParsingModelsMediaMediaAnnotation set(String fieldName, Object value) {
    return (NlpSemanticParsingModelsMediaMediaAnnotation) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingModelsMediaMediaAnnotation clone() {
    return (NlpSemanticParsingModelsMediaMediaAnnotation) super.clone();
  }

}
