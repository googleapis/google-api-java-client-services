/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Goodoc stats for a range of elements, such as one page or a whole book. These stats can be
 * computed using the SummaryStatsCollector class. Some range stats are pre-computed and stored in
 * goodocs/volumes (eg., Page.stats below, and Ocean's CA_VolumeResult.goodoc_stats).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoodocSummaryStats extends com.google.api.client.json.GenericJson {

  /**
   * This flag is set if the histogram above has been derived by estimating font sizes from
   * CharLabel.CharacterHeight; that happens if the FontSize field is constant, as has happened with
   * Abbyy 9.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean estimatedFontSizes;

  /**
   * Symbol counts (and other attributes) for each distinct CharLabel.FontId and FontSize; histogram
   * is in decreasing order of symbol count
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoodocFontSizeStats> fontSizeHistogram;

  static {
    // hack to force ProGuard to consider GoodocFontSizeStats used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoodocFontSizeStats.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanSymbolsPerBlock;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanSymbolsPerLine;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanSymbolsPerParagraph;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanSymbolsPerWord;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanWordsPerBlock;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanWordsPerLine;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer meanWordsPerParagraph;

  /**
   * bottom to next top in flow on page
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianBlockSpace;

  /**
   * 0,2,4..
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianEvenPrintedBox;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianFullEvenPrintedBox;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianFullOddPrintedBox;

  /**
   * Each median_full*_printed_box includes page header/footer but still excludes all graphic blocks
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianFullPrintedBox;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianHeight;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianHorizontalDpi;

  /**
   * top to bottom
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianLineHeight;

  /**
   * bottom to next top in para
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianLineSpace;

  /**
   * top to next top in para
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianLineSpan;

  /**
   * 1,3,5..
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianOddPrintedBox;

  /**
   * leading space on first line
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianParagraphIndent;

  /**
   * bottom to next top in block
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianParagraphSpace;

  /**
   * Each median*_printed_box excludes page header/footer and all graphic blocks
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoodocBoundingBox medianPrintedBox;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianSymbolsPerBlock;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianSymbolsPerLine;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianSymbolsPerParagraph;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianSymbolsPerWord;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianVerticalDpi;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianWidth;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianWordsPerBlock;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianWordsPerLine;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer medianWordsPerParagraph;

  /**
   * blocks that have a successor block within their flow on their page
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numBlockSpaces;

  /**
   * ------ Block stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" block. There can still be substantial
   * differences between means and medians; however, block values will generally exceed paragraph
   * values (not the case when headers and footers are included).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numBlocks;

  /**
   * Lines (out of num_lines) that have a successor line within their para
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numLineSpaces;

  /**
   * ------ Line stats "top" corresponds to the highest ascender and "bottom" to the lowest
   * descender.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numLines;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numNonGraphicBlocks;

  /**
   * ------ Page stats.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numPages;

  /**
   * paras that have a successor para within their block
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numParagraphSpaces;

  /**
   * ------ Paragraph stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" paragraph. There can still be substantial
   * differences between means and medians, particularly if a table is present (every cell is a
   * paragraph).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numParagraphs;

  /**
   * ------ Symbol stats
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numSymbols;

  /**
   * ------ Word stats
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numWords;

  /**
   * This flag is set if the histogram above has been derived by estimating font sizes from
   * CharLabel.CharacterHeight; that happens if the FontSize field is constant, as has happened with
   * Abbyy 9.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEstimatedFontSizes() {
    return estimatedFontSizes;
  }

  /**
   * This flag is set if the histogram above has been derived by estimating font sizes from
   * CharLabel.CharacterHeight; that happens if the FontSize field is constant, as has happened with
   * Abbyy 9.
   * @param estimatedFontSizes estimatedFontSizes or {@code null} for none
   */
  public GoodocSummaryStats setEstimatedFontSizes(java.lang.Boolean estimatedFontSizes) {
    this.estimatedFontSizes = estimatedFontSizes;
    return this;
  }

  /**
   * Symbol counts (and other attributes) for each distinct CharLabel.FontId and FontSize; histogram
   * is in decreasing order of symbol count
   * @return value or {@code null} for none
   */
  public java.util.List<GoodocFontSizeStats> getFontSizeHistogram() {
    return fontSizeHistogram;
  }

  /**
   * Symbol counts (and other attributes) for each distinct CharLabel.FontId and FontSize; histogram
   * is in decreasing order of symbol count
   * @param fontSizeHistogram fontSizeHistogram or {@code null} for none
   */
  public GoodocSummaryStats setFontSizeHistogram(java.util.List<GoodocFontSizeStats> fontSizeHistogram) {
    this.fontSizeHistogram = fontSizeHistogram;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanSymbolsPerBlock() {
    return meanSymbolsPerBlock;
  }

  /**
   * @param meanSymbolsPerBlock meanSymbolsPerBlock or {@code null} for none
   */
  public GoodocSummaryStats setMeanSymbolsPerBlock(java.lang.Integer meanSymbolsPerBlock) {
    this.meanSymbolsPerBlock = meanSymbolsPerBlock;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanSymbolsPerLine() {
    return meanSymbolsPerLine;
  }

  /**
   * @param meanSymbolsPerLine meanSymbolsPerLine or {@code null} for none
   */
  public GoodocSummaryStats setMeanSymbolsPerLine(java.lang.Integer meanSymbolsPerLine) {
    this.meanSymbolsPerLine = meanSymbolsPerLine;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanSymbolsPerParagraph() {
    return meanSymbolsPerParagraph;
  }

  /**
   * @param meanSymbolsPerParagraph meanSymbolsPerParagraph or {@code null} for none
   */
  public GoodocSummaryStats setMeanSymbolsPerParagraph(java.lang.Integer meanSymbolsPerParagraph) {
    this.meanSymbolsPerParagraph = meanSymbolsPerParagraph;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanSymbolsPerWord() {
    return meanSymbolsPerWord;
  }

  /**
   * @param meanSymbolsPerWord meanSymbolsPerWord or {@code null} for none
   */
  public GoodocSummaryStats setMeanSymbolsPerWord(java.lang.Integer meanSymbolsPerWord) {
    this.meanSymbolsPerWord = meanSymbolsPerWord;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanWordsPerBlock() {
    return meanWordsPerBlock;
  }

  /**
   * @param meanWordsPerBlock meanWordsPerBlock or {@code null} for none
   */
  public GoodocSummaryStats setMeanWordsPerBlock(java.lang.Integer meanWordsPerBlock) {
    this.meanWordsPerBlock = meanWordsPerBlock;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanWordsPerLine() {
    return meanWordsPerLine;
  }

  /**
   * @param meanWordsPerLine meanWordsPerLine or {@code null} for none
   */
  public GoodocSummaryStats setMeanWordsPerLine(java.lang.Integer meanWordsPerLine) {
    this.meanWordsPerLine = meanWordsPerLine;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMeanWordsPerParagraph() {
    return meanWordsPerParagraph;
  }

  /**
   * @param meanWordsPerParagraph meanWordsPerParagraph or {@code null} for none
   */
  public GoodocSummaryStats setMeanWordsPerParagraph(java.lang.Integer meanWordsPerParagraph) {
    this.meanWordsPerParagraph = meanWordsPerParagraph;
    return this;
  }

  /**
   * bottom to next top in flow on page
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianBlockSpace() {
    return medianBlockSpace;
  }

  /**
   * bottom to next top in flow on page
   * @param medianBlockSpace medianBlockSpace or {@code null} for none
   */
  public GoodocSummaryStats setMedianBlockSpace(java.lang.Integer medianBlockSpace) {
    this.medianBlockSpace = medianBlockSpace;
    return this;
  }

  /**
   * 0,2,4..
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianEvenPrintedBox() {
    return medianEvenPrintedBox;
  }

  /**
   * 0,2,4..
   * @param medianEvenPrintedBox medianEvenPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianEvenPrintedBox(GoodocBoundingBox medianEvenPrintedBox) {
    this.medianEvenPrintedBox = medianEvenPrintedBox;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianFullEvenPrintedBox() {
    return medianFullEvenPrintedBox;
  }

  /**
   * @param medianFullEvenPrintedBox medianFullEvenPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianFullEvenPrintedBox(GoodocBoundingBox medianFullEvenPrintedBox) {
    this.medianFullEvenPrintedBox = medianFullEvenPrintedBox;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianFullOddPrintedBox() {
    return medianFullOddPrintedBox;
  }

  /**
   * @param medianFullOddPrintedBox medianFullOddPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianFullOddPrintedBox(GoodocBoundingBox medianFullOddPrintedBox) {
    this.medianFullOddPrintedBox = medianFullOddPrintedBox;
    return this;
  }

  /**
   * Each median_full*_printed_box includes page header/footer but still excludes all graphic blocks
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianFullPrintedBox() {
    return medianFullPrintedBox;
  }

  /**
   * Each median_full*_printed_box includes page header/footer but still excludes all graphic blocks
   * @param medianFullPrintedBox medianFullPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianFullPrintedBox(GoodocBoundingBox medianFullPrintedBox) {
    this.medianFullPrintedBox = medianFullPrintedBox;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianHeight() {
    return medianHeight;
  }

  /**
   * @param medianHeight medianHeight or {@code null} for none
   */
  public GoodocSummaryStats setMedianHeight(java.lang.Integer medianHeight) {
    this.medianHeight = medianHeight;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianHorizontalDpi() {
    return medianHorizontalDpi;
  }

  /**
   * @param medianHorizontalDpi medianHorizontalDpi or {@code null} for none
   */
  public GoodocSummaryStats setMedianHorizontalDpi(java.lang.Integer medianHorizontalDpi) {
    this.medianHorizontalDpi = medianHorizontalDpi;
    return this;
  }

  /**
   * top to bottom
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianLineHeight() {
    return medianLineHeight;
  }

  /**
   * top to bottom
   * @param medianLineHeight medianLineHeight or {@code null} for none
   */
  public GoodocSummaryStats setMedianLineHeight(java.lang.Integer medianLineHeight) {
    this.medianLineHeight = medianLineHeight;
    return this;
  }

  /**
   * bottom to next top in para
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianLineSpace() {
    return medianLineSpace;
  }

  /**
   * bottom to next top in para
   * @param medianLineSpace medianLineSpace or {@code null} for none
   */
  public GoodocSummaryStats setMedianLineSpace(java.lang.Integer medianLineSpace) {
    this.medianLineSpace = medianLineSpace;
    return this;
  }

  /**
   * top to next top in para
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianLineSpan() {
    return medianLineSpan;
  }

  /**
   * top to next top in para
   * @param medianLineSpan medianLineSpan or {@code null} for none
   */
  public GoodocSummaryStats setMedianLineSpan(java.lang.Integer medianLineSpan) {
    this.medianLineSpan = medianLineSpan;
    return this;
  }

  /**
   * 1,3,5..
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianOddPrintedBox() {
    return medianOddPrintedBox;
  }

  /**
   * 1,3,5..
   * @param medianOddPrintedBox medianOddPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianOddPrintedBox(GoodocBoundingBox medianOddPrintedBox) {
    this.medianOddPrintedBox = medianOddPrintedBox;
    return this;
  }

  /**
   * leading space on first line
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianParagraphIndent() {
    return medianParagraphIndent;
  }

  /**
   * leading space on first line
   * @param medianParagraphIndent medianParagraphIndent or {@code null} for none
   */
  public GoodocSummaryStats setMedianParagraphIndent(java.lang.Integer medianParagraphIndent) {
    this.medianParagraphIndent = medianParagraphIndent;
    return this;
  }

  /**
   * bottom to next top in block
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianParagraphSpace() {
    return medianParagraphSpace;
  }

  /**
   * bottom to next top in block
   * @param medianParagraphSpace medianParagraphSpace or {@code null} for none
   */
  public GoodocSummaryStats setMedianParagraphSpace(java.lang.Integer medianParagraphSpace) {
    this.medianParagraphSpace = medianParagraphSpace;
    return this;
  }

  /**
   * Each median*_printed_box excludes page header/footer and all graphic blocks
   * @return value or {@code null} for none
   */
  public GoodocBoundingBox getMedianPrintedBox() {
    return medianPrintedBox;
  }

  /**
   * Each median*_printed_box excludes page header/footer and all graphic blocks
   * @param medianPrintedBox medianPrintedBox or {@code null} for none
   */
  public GoodocSummaryStats setMedianPrintedBox(GoodocBoundingBox medianPrintedBox) {
    this.medianPrintedBox = medianPrintedBox;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianSymbolsPerBlock() {
    return medianSymbolsPerBlock;
  }

  /**
   * @param medianSymbolsPerBlock medianSymbolsPerBlock or {@code null} for none
   */
  public GoodocSummaryStats setMedianSymbolsPerBlock(java.lang.Integer medianSymbolsPerBlock) {
    this.medianSymbolsPerBlock = medianSymbolsPerBlock;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianSymbolsPerLine() {
    return medianSymbolsPerLine;
  }

  /**
   * @param medianSymbolsPerLine medianSymbolsPerLine or {@code null} for none
   */
  public GoodocSummaryStats setMedianSymbolsPerLine(java.lang.Integer medianSymbolsPerLine) {
    this.medianSymbolsPerLine = medianSymbolsPerLine;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianSymbolsPerParagraph() {
    return medianSymbolsPerParagraph;
  }

  /**
   * @param medianSymbolsPerParagraph medianSymbolsPerParagraph or {@code null} for none
   */
  public GoodocSummaryStats setMedianSymbolsPerParagraph(java.lang.Integer medianSymbolsPerParagraph) {
    this.medianSymbolsPerParagraph = medianSymbolsPerParagraph;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianSymbolsPerWord() {
    return medianSymbolsPerWord;
  }

  /**
   * @param medianSymbolsPerWord medianSymbolsPerWord or {@code null} for none
   */
  public GoodocSummaryStats setMedianSymbolsPerWord(java.lang.Integer medianSymbolsPerWord) {
    this.medianSymbolsPerWord = medianSymbolsPerWord;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianVerticalDpi() {
    return medianVerticalDpi;
  }

  /**
   * @param medianVerticalDpi medianVerticalDpi or {@code null} for none
   */
  public GoodocSummaryStats setMedianVerticalDpi(java.lang.Integer medianVerticalDpi) {
    this.medianVerticalDpi = medianVerticalDpi;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianWidth() {
    return medianWidth;
  }

  /**
   * @param medianWidth medianWidth or {@code null} for none
   */
  public GoodocSummaryStats setMedianWidth(java.lang.Integer medianWidth) {
    this.medianWidth = medianWidth;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianWordsPerBlock() {
    return medianWordsPerBlock;
  }

  /**
   * @param medianWordsPerBlock medianWordsPerBlock or {@code null} for none
   */
  public GoodocSummaryStats setMedianWordsPerBlock(java.lang.Integer medianWordsPerBlock) {
    this.medianWordsPerBlock = medianWordsPerBlock;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianWordsPerLine() {
    return medianWordsPerLine;
  }

  /**
   * @param medianWordsPerLine medianWordsPerLine or {@code null} for none
   */
  public GoodocSummaryStats setMedianWordsPerLine(java.lang.Integer medianWordsPerLine) {
    this.medianWordsPerLine = medianWordsPerLine;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMedianWordsPerParagraph() {
    return medianWordsPerParagraph;
  }

  /**
   * @param medianWordsPerParagraph medianWordsPerParagraph or {@code null} for none
   */
  public GoodocSummaryStats setMedianWordsPerParagraph(java.lang.Integer medianWordsPerParagraph) {
    this.medianWordsPerParagraph = medianWordsPerParagraph;
    return this;
  }

  /**
   * blocks that have a successor block within their flow on their page
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumBlockSpaces() {
    return numBlockSpaces;
  }

  /**
   * blocks that have a successor block within their flow on their page
   * @param numBlockSpaces numBlockSpaces or {@code null} for none
   */
  public GoodocSummaryStats setNumBlockSpaces(java.lang.Integer numBlockSpaces) {
    this.numBlockSpaces = numBlockSpaces;
    return this;
  }

  /**
   * ------ Block stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" block. There can still be substantial
   * differences between means and medians; however, block values will generally exceed paragraph
   * values (not the case when headers and footers are included).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumBlocks() {
    return numBlocks;
  }

  /**
   * ------ Block stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" block. There can still be substantial
   * differences between means and medians; however, block values will generally exceed paragraph
   * values (not the case when headers and footers are included).
   * @param numBlocks numBlocks or {@code null} for none
   */
  public GoodocSummaryStats setNumBlocks(java.lang.Integer numBlocks) {
    this.numBlocks = numBlocks;
    return this;
  }

  /**
   * Lines (out of num_lines) that have a successor line within their para
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumLineSpaces() {
    return numLineSpaces;
  }

  /**
   * Lines (out of num_lines) that have a successor line within their para
   * @param numLineSpaces numLineSpaces or {@code null} for none
   */
  public GoodocSummaryStats setNumLineSpaces(java.lang.Integer numLineSpaces) {
    this.numLineSpaces = numLineSpaces;
    return this;
  }

  /**
   * ------ Line stats "top" corresponds to the highest ascender and "bottom" to the lowest
   * descender.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumLines() {
    return numLines;
  }

  /**
   * ------ Line stats "top" corresponds to the highest ascender and "bottom" to the lowest
   * descender.
   * @param numLines numLines or {@code null} for none
   */
  public GoodocSummaryStats setNumLines(java.lang.Integer numLines) {
    this.numLines = numLines;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumNonGraphicBlocks() {
    return numNonGraphicBlocks;
  }

  /**
   * @param numNonGraphicBlocks numNonGraphicBlocks or {@code null} for none
   */
  public GoodocSummaryStats setNumNonGraphicBlocks(java.lang.Integer numNonGraphicBlocks) {
    this.numNonGraphicBlocks = numNonGraphicBlocks;
    return this;
  }

  /**
   * ------ Page stats.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumPages() {
    return numPages;
  }

  /**
   * ------ Page stats.
   * @param numPages numPages or {@code null} for none
   */
  public GoodocSummaryStats setNumPages(java.lang.Integer numPages) {
    this.numPages = numPages;
    return this;
  }

  /**
   * paras that have a successor para within their block
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumParagraphSpaces() {
    return numParagraphSpaces;
  }

  /**
   * paras that have a successor para within their block
   * @param numParagraphSpaces numParagraphSpaces or {@code null} for none
   */
  public GoodocSummaryStats setNumParagraphSpaces(java.lang.Integer numParagraphSpaces) {
    this.numParagraphSpaces = numParagraphSpaces;
    return this;
  }

  /**
   * ------ Paragraph stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" paragraph. There can still be substantial
   * differences between means and medians, particularly if a table is present (every cell is a
   * paragraph).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumParagraphs() {
    return numParagraphs;
  }

  /**
   * ------ Paragraph stats Median symbols and words omit junk, header and footer blocks; they are
   * intended to be a measure of the typical "content" paragraph. There can still be substantial
   * differences between means and medians, particularly if a table is present (every cell is a
   * paragraph).
   * @param numParagraphs numParagraphs or {@code null} for none
   */
  public GoodocSummaryStats setNumParagraphs(java.lang.Integer numParagraphs) {
    this.numParagraphs = numParagraphs;
    return this;
  }

  /**
   * ------ Symbol stats
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumSymbols() {
    return numSymbols;
  }

  /**
   * ------ Symbol stats
   * @param numSymbols numSymbols or {@code null} for none
   */
  public GoodocSummaryStats setNumSymbols(java.lang.Integer numSymbols) {
    this.numSymbols = numSymbols;
    return this;
  }

  /**
   * ------ Word stats
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumWords() {
    return numWords;
  }

  /**
   * ------ Word stats
   * @param numWords numWords or {@code null} for none
   */
  public GoodocSummaryStats setNumWords(java.lang.Integer numWords) {
    this.numWords = numWords;
    return this;
  }

  @Override
  public GoodocSummaryStats set(String fieldName, Object value) {
    return (GoodocSummaryStats) super.set(fieldName, value);
  }

  @Override
  public GoodocSummaryStats clone() {
    return (GoodocSummaryStats) super.clone();
  }

}
