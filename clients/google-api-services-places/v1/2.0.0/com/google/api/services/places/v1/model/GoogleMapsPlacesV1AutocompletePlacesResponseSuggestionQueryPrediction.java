/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.places.v1.model;

/**
 * Prediction results for a Query Autocomplete prediction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Places API (New). For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction extends com.google.api.client.json.GenericJson {

  /**
   * A breakdown of the query prediction into main text containing the query and secondary text
   * containing additional disambiguating features (such as a city or region). `structured_format`
   * is recommended for developers who wish to show two separate, but related, UI elements.
   * Developers who wish to show a single UI element may want to use `text` instead. They are two
   * different ways to represent a query prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat structuredFormat;

  /**
   * The predicted text. This text does not represent a Place, but rather a text query that could be
   * used in a search endpoint (for example, Text Search). `text` is recommended for developers who
   * wish to show a single UI element. Developers who wish to show two separate, but related, UI
   * elements may want to use `structured_format` instead. They are two different ways to represent
   * a query prediction. Users should not try to parse `structured_format` into `text` or vice
   * versa. May be in mixed languages if the request `input` and `language_code` are in different
   * languages or if part of the query does not have a translation from the local language to
   * `language_code`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText text;

  /**
   * A breakdown of the query prediction into main text containing the query and secondary text
   * containing additional disambiguating features (such as a city or region). `structured_format`
   * is recommended for developers who wish to show two separate, but related, UI elements.
   * Developers who wish to show a single UI element may want to use `text` instead. They are two
   * different ways to represent a query prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat getStructuredFormat() {
    return structuredFormat;
  }

  /**
   * A breakdown of the query prediction into main text containing the query and secondary text
   * containing additional disambiguating features (such as a city or region). `structured_format`
   * is recommended for developers who wish to show two separate, but related, UI elements.
   * Developers who wish to show a single UI element may want to use `text` instead. They are two
   * different ways to represent a query prediction. Users should not try to parse
   * `structured_format` into `text` or vice versa.
   * @param structuredFormat structuredFormat or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction setStructuredFormat(GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionStructuredFormat structuredFormat) {
    this.structuredFormat = structuredFormat;
    return this;
  }

  /**
   * The predicted text. This text does not represent a Place, but rather a text query that could be
   * used in a search endpoint (for example, Text Search). `text` is recommended for developers who
   * wish to show a single UI element. Developers who wish to show two separate, but related, UI
   * elements may want to use `structured_format` instead. They are two different ways to represent
   * a query prediction. Users should not try to parse `structured_format` into `text` or vice
   * versa. May be in mixed languages if the request `input` and `language_code` are in different
   * languages or if part of the query does not have a translation from the local language to
   * `language_code`.
   * @return value or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText getText() {
    return text;
  }

  /**
   * The predicted text. This text does not represent a Place, but rather a text query that could be
   * used in a search endpoint (for example, Text Search). `text` is recommended for developers who
   * wish to show a single UI element. Developers who wish to show two separate, but related, UI
   * elements may want to use `structured_format` instead. They are two different ways to represent
   * a query prediction. Users should not try to parse `structured_format` into `text` or vice
   * versa. May be in mixed languages if the request `input` and `language_code` are in different
   * languages or if part of the query does not have a translation from the local language to
   * `language_code`.
   * @param text text or {@code null} for none
   */
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction setText(GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionFormattableText text) {
    this.text = text;
    return this;
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction set(String fieldName, Object value) {
    return (GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction) super.set(fieldName, value);
  }

  @Override
  public GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction clone() {
    return (GoogleMapsPlacesV1AutocompletePlacesResponseSuggestionQueryPrediction) super.clone();
  }

}
