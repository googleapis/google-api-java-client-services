/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1.model;

/**
 * Details of network adapters and settings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MachineNetworkDetails extends com.google.api.client.json.GenericJson {

  /**
   * List of network adapters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NetworkAdapterList adapters;

  /**
   * The primary IP address of the machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryIpAddress;

  /**
   * MAC address of the machine. This property is used to uniqly identify the machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryMacAddress;

  /**
   * The public IP address of the machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publicIpAddress;

  /**
   * List of network adapters.
   * @return value or {@code null} for none
   */
  public NetworkAdapterList getAdapters() {
    return adapters;
  }

  /**
   * List of network adapters.
   * @param adapters adapters or {@code null} for none
   */
  public MachineNetworkDetails setAdapters(NetworkAdapterList adapters) {
    this.adapters = adapters;
    return this;
  }

  /**
   * The primary IP address of the machine.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryIpAddress() {
    return primaryIpAddress;
  }

  /**
   * The primary IP address of the machine.
   * @param primaryIpAddress primaryIpAddress or {@code null} for none
   */
  public MachineNetworkDetails setPrimaryIpAddress(java.lang.String primaryIpAddress) {
    this.primaryIpAddress = primaryIpAddress;
    return this;
  }

  /**
   * MAC address of the machine. This property is used to uniqly identify the machine.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryMacAddress() {
    return primaryMacAddress;
  }

  /**
   * MAC address of the machine. This property is used to uniqly identify the machine.
   * @param primaryMacAddress primaryMacAddress or {@code null} for none
   */
  public MachineNetworkDetails setPrimaryMacAddress(java.lang.String primaryMacAddress) {
    this.primaryMacAddress = primaryMacAddress;
    return this;
  }

  /**
   * The public IP address of the machine.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublicIpAddress() {
    return publicIpAddress;
  }

  /**
   * The public IP address of the machine.
   * @param publicIpAddress publicIpAddress or {@code null} for none
   */
  public MachineNetworkDetails setPublicIpAddress(java.lang.String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
    return this;
  }

  @Override
  public MachineNetworkDetails set(String fieldName, Object value) {
    return (MachineNetworkDetails) super.set(fieldName, value);
  }

  @Override
  public MachineNetworkDetails clone() {
    return (MachineNetworkDetails) super.clone();
  }

}
