/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * See go/people-api-howto:names for an overview of name usage in PeopleAPI. The `unstructured_name`
 * field contains a free form name value. The `given_name`, `middle_name`, `family_name`, etc,
 * fields contain the structured name. For CONTACT mutates, (i.e. when Name.metadata.container is
 * CONTACT), it is recommended for clients to set either the `unstructured_name` or the set of
 * structured name fields, not both. * When only the `unstructured_name` is set, it is parsed to
 * produce a best-guess set of structured name values for the `given_name`, `family_name`, etc. *
 * When only the structured name fields are set, the various values are combined to produce an
 * `unstructured_name`. * When both are set, the `unstructured_name` is saved as-is and the
 * structured name fields are saved as-is. This may be confusing as they might not "match". For
 * PROFILE mutates, (i.e. when Name.metadata.container is PROFILE), it is _required_ for clients to
 * use the structured name fields as the unstructured field value is ignored on write. The
 * unstructured name fields are generated for convenience on read. For DEVICE_CONTACTS, see
 * b/156020778.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiName extends com.google.api.client.json.GenericJson {

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields.
   * Example: "John Smith" If a language code is passed in the side channel using
   * http://cs/symbol:framework.rpc.DeprecatedPropagatedLanguageCode.value or
   * http://cs/symbol:google.rpc.context.OriginContext.accept_language and the name does not have
   * `honorific_prefix`, `middle_name`, or `honorific_suffix` set, the language code will be used to
   * format `display_name`. If `include_account_locale` is set on the `MergePersonSourceOptions` and
   * a language code is not passed in the side channel. The language code from go/uls will be used
   * as the language code for formatting `display_name`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields with
   * the last name first. Example: "Smith, John"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayNameLastFirst;

  /**
   * Read-only. The source of the display name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphApiProtoDisplayNameSource displayNameSource;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String familyName;

  /**
   * DEPRECATED(b/70571931). Use `unstructured_name` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formattedName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String givenName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String honorificPrefix;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String honorificSuffix;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String middleName;

  /**
   * This field is stored in contact annotations and merged at read-time. It is available with
   * CONTACT_ANNOTATION container type at read time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphApiProtoPronunciations pronunciations;

  /**
   * Read-only. A possibly shorter version of the user's name. - The purpose of this field is to
   * address the needs of UIs where a full display name might be too large to fit. Instead of
   * relying on `first_name`, which might not be present, `short_display_name` is preferred. - This
   * is only available for PROFILE and DOMAIN_PROFILE container types. - About the actual content in
   * this field: will be the first name when it's visible to the requester, or the same as
   * `display_name`, otherwise. A sample scenario where the first name may not be visible is when
   * the limited profile is returned. For more info, see: http://shortn/_9iV7TJ33la
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shortDisplayName;

  /**
   * The free form name value. For contact mutates it is recommended for clients to set either the
   * `unstructured_name` or the set of structured name fields, not both.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unstructuredName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiFamilyName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiFullName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiGivenName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiHonorificPrefix;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiHonorificSuffix;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String yomiMiddleName;

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields.
   * Example: "John Smith" If a language code is passed in the side channel using
   * http://cs/symbol:framework.rpc.DeprecatedPropagatedLanguageCode.value or
   * http://cs/symbol:google.rpc.context.OriginContext.accept_language and the name does not have
   * `honorific_prefix`, `middle_name`, or `honorific_suffix` set, the language code will be used to
   * format `display_name`. If `include_account_locale` is set on the `MergePersonSourceOptions` and
   * a language code is not passed in the side channel. The language code from go/uls will be used
   * as the language code for formatting `display_name`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields.
   * Example: "John Smith" If a language code is passed in the side channel using
   * http://cs/symbol:framework.rpc.DeprecatedPropagatedLanguageCode.value or
   * http://cs/symbol:google.rpc.context.OriginContext.accept_language and the name does not have
   * `honorific_prefix`, `middle_name`, or `honorific_suffix` set, the language code will be used to
   * format `display_name`. If `include_account_locale` is set on the `MergePersonSourceOptions` and
   * a language code is not passed in the side channel. The language code from go/uls will be used
   * as the language code for formatting `display_name`.
   * @param displayName displayName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields with
   * the last name first. Example: "Smith, John"
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayNameLastFirst() {
    return displayNameLastFirst;
  }

  /**
   * Read-only. A name synthesized based on `unstructured_name` and the structured name fields with
   * the last name first. Example: "Smith, John"
   * @param displayNameLastFirst displayNameLastFirst or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setDisplayNameLastFirst(java.lang.String displayNameLastFirst) {
    this.displayNameLastFirst = displayNameLastFirst;
    return this;
  }

  /**
   * Read-only. The source of the display name.
   * @return value or {@code null} for none
   */
  public SocialGraphApiProtoDisplayNameSource getDisplayNameSource() {
    return displayNameSource;
  }

  /**
   * Read-only. The source of the display name.
   * @param displayNameSource displayNameSource or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setDisplayNameSource(SocialGraphApiProtoDisplayNameSource displayNameSource) {
    this.displayNameSource = displayNameSource;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFamilyName() {
    return familyName;
  }

  /**
   * @param familyName familyName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setFamilyName(java.lang.String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * DEPRECATED(b/70571931). Use `unstructured_name` instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormattedName() {
    return formattedName;
  }

  /**
   * DEPRECATED(b/70571931). Use `unstructured_name` instead.
   * @param formattedName formattedName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setFormattedName(java.lang.String formattedName) {
    this.formattedName = formattedName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getGivenName() {
    return givenName;
  }

  /**
   * @param givenName givenName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setGivenName(java.lang.String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getHonorificPrefix() {
    return honorificPrefix;
  }

  /**
   * @param honorificPrefix honorificPrefix or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setHonorificPrefix(java.lang.String honorificPrefix) {
    this.honorificPrefix = honorificPrefix;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getHonorificSuffix() {
    return honorificSuffix;
  }

  /**
   * @param honorificSuffix honorificSuffix or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setHonorificSuffix(java.lang.String honorificSuffix) {
    this.honorificSuffix = honorificSuffix;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setMetadata(AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMiddleName() {
    return middleName;
  }

  /**
   * @param middleName middleName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setMiddleName(java.lang.String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * This field is stored in contact annotations and merged at read-time. It is available with
   * CONTACT_ANNOTATION container type at read time.
   * @return value or {@code null} for none
   */
  public SocialGraphApiProtoPronunciations getPronunciations() {
    return pronunciations;
  }

  /**
   * This field is stored in contact annotations and merged at read-time. It is available with
   * CONTACT_ANNOTATION container type at read time.
   * @param pronunciations pronunciations or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setPronunciations(SocialGraphApiProtoPronunciations pronunciations) {
    this.pronunciations = pronunciations;
    return this;
  }

  /**
   * Read-only. A possibly shorter version of the user's name. - The purpose of this field is to
   * address the needs of UIs where a full display name might be too large to fit. Instead of
   * relying on `first_name`, which might not be present, `short_display_name` is preferred. - This
   * is only available for PROFILE and DOMAIN_PROFILE container types. - About the actual content in
   * this field: will be the first name when it's visible to the requester, or the same as
   * `display_name`, otherwise. A sample scenario where the first name may not be visible is when
   * the limited profile is returned. For more info, see: http://shortn/_9iV7TJ33la
   * @return value or {@code null} for none
   */
  public java.lang.String getShortDisplayName() {
    return shortDisplayName;
  }

  /**
   * Read-only. A possibly shorter version of the user's name. - The purpose of this field is to
   * address the needs of UIs where a full display name might be too large to fit. Instead of
   * relying on `first_name`, which might not be present, `short_display_name` is preferred. - This
   * is only available for PROFILE and DOMAIN_PROFILE container types. - About the actual content in
   * this field: will be the first name when it's visible to the requester, or the same as
   * `display_name`, otherwise. A sample scenario where the first name may not be visible is when
   * the limited profile is returned. For more info, see: http://shortn/_9iV7TJ33la
   * @param shortDisplayName shortDisplayName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setShortDisplayName(java.lang.String shortDisplayName) {
    this.shortDisplayName = shortDisplayName;
    return this;
  }

  /**
   * The free form name value. For contact mutates it is recommended for clients to set either the
   * `unstructured_name` or the set of structured name fields, not both.
   * @return value or {@code null} for none
   */
  public java.lang.String getUnstructuredName() {
    return unstructuredName;
  }

  /**
   * The free form name value. For contact mutates it is recommended for clients to set either the
   * `unstructured_name` or the set of structured name fields, not both.
   * @param unstructuredName unstructuredName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setUnstructuredName(java.lang.String unstructuredName) {
    this.unstructuredName = unstructuredName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiFamilyName() {
    return yomiFamilyName;
  }

  /**
   * @param yomiFamilyName yomiFamilyName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiFamilyName(java.lang.String yomiFamilyName) {
    this.yomiFamilyName = yomiFamilyName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiFullName() {
    return yomiFullName;
  }

  /**
   * @param yomiFullName yomiFullName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiFullName(java.lang.String yomiFullName) {
    this.yomiFullName = yomiFullName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiGivenName() {
    return yomiGivenName;
  }

  /**
   * @param yomiGivenName yomiGivenName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiGivenName(java.lang.String yomiGivenName) {
    this.yomiGivenName = yomiGivenName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiHonorificPrefix() {
    return yomiHonorificPrefix;
  }

  /**
   * @param yomiHonorificPrefix yomiHonorificPrefix or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiHonorificPrefix(java.lang.String yomiHonorificPrefix) {
    this.yomiHonorificPrefix = yomiHonorificPrefix;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiHonorificSuffix() {
    return yomiHonorificSuffix;
  }

  /**
   * @param yomiHonorificSuffix yomiHonorificSuffix or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiHonorificSuffix(java.lang.String yomiHonorificSuffix) {
    this.yomiHonorificSuffix = yomiHonorificSuffix;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getYomiMiddleName() {
    return yomiMiddleName;
  }

  /**
   * @param yomiMiddleName yomiMiddleName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiName setYomiMiddleName(java.lang.String yomiMiddleName) {
    this.yomiMiddleName = yomiMiddleName;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiName set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiName) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiName clone() {
    return (AppsPeopleOzExternalMergedpeopleapiName) super.clone();
  }

}
