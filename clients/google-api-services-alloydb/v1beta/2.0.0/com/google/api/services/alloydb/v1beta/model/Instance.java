/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1beta.model;

/**
 * An Instance is a computing unit that an end customer can connect to. It's the main unit of
 * computing resources in AlloyDB.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Instance extends com.google.api.client.json.GenericJson {

  /**
   * Annotations to allow client tools to store small amount of arbitrary data. This is distinct
   * from labels. https://google.aip.dev/128
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For
   * read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly
   * distributed across available zones within the region (i.e. read pools with more than one node
   * will have a node in at least two zones).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String availabilityType;

  /**
   * Optional. Client connection specific configurations
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ClientConnectionConfig clientConnectionConfig;

  /**
   * Output only. Create time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Database flags. Set at the instance level. They are copied from the primary instance on
   * secondary instance creation. Flags that have restrictions default to the value at primary
   * instance on read instances during creation. Read instances can set new flags or override
   * existing flags that are relevant for reads, for example, for enabling columnar cache on a read
   * instance. Flags set on read instance might or might not be present on the primary instance.
   * This is a list of "key": "value" pairs. "key": The name of the flag. These flags are passed at
   * instance setup time, so include both server options and system variables for Postgres. Flags
   * are specified with underscores, not hyphens. "value": The value of the flag. Booleans are set
   * to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a
   * value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> databaseFlags;

  /**
   * Output only. Delete time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * User-settable and human-readable display name for the Instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * For Resource freshness validation (https://google.aip.dev/154)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * The Compute Engine zone that the instance should serve from, per
   * https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL
   * instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a
   * ZONAL instance, instance is created in a random zone with available capacity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String gceZone;

  /**
   * Optional. Configuration parameters related to the Gemini in Databases add-on.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeminiInstanceConfig geminiConfig;

  /**
   * Required. The type of the instance. Specified at creation time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instanceType;

  /**
   * Output only. The IP address for the Instance. This is the connection endpoint for an end-user
   * application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ipAddress;

  /**
   * Labels as key value pairs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Configurations for the machines that host the underlying database engine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachineConfig machineConfig;

  /**
   * Output only. The name of the instance resource with the format: *
   * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the
   * cluster and instance ID segments should satisfy the regex expression
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and
   * dashes, starting with a letter, and ending with a letter or number. For more details see
   * https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent
   * resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Instance-level network configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InstanceNetworkConfig networkConfig;

  /**
   * Output only. List of available read-only VMs in this instance, including the standby for a
   * PRIMARY instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Node> nodes;

  /**
   * Configuration for observability.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ObservabilityInstanceConfig observabilityConfig;

  /**
   * Output only. All outbound public IP addresses configured for the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> outboundPublicIpAddresses;

  /**
   * Optional. The configuration for Private Service Connect (PSC) for the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PscInstanceConfig pscInstanceConfig;

  /**
   * Output only. The public IP addresses for the Instance. This is available ONLY when
   * enable_public_ip is set. This is the connection endpoint for an end-user application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String publicIpAddress;

  /**
   * Configuration for query insights.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QueryInsightsInstanceConfig queryInsightsConfig;

  /**
   * Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ReadPoolConfig readPoolConfig;

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of Instance does not match the user's intended state, and the service is actively
   * updating the resource to reconcile them. This can happen due to user-triggered updates or
   * system actions like failover or maintenance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean reconciling;

  /**
   * Output only. Reserved for future use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean satisfiesPzs;

  /**
   * Output only. The current serving state of the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The system-generated UID of the resource. The UID is assigned when the resource is
   * created, and it is retained until it is deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Update policy that will be applied during instance update. This field is not persisted when you
   * update the instance. To use a non-default update policy, you must specify explicitly specify
   * the value in each update request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UpdatePolicy updatePolicy;

  /**
   * Output only. Update time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. This is set for the read-write VM of the PRIMARY instance only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Node writableNode;

  /**
   * Annotations to allow client tools to store small amount of arbitrary data. This is distinct
   * from labels. https://google.aip.dev/128
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Annotations to allow client tools to store small amount of arbitrary data. This is distinct
   * from labels. https://google.aip.dev/128
   * @param annotations annotations or {@code null} for none
   */
  public Instance setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For
   * read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly
   * distributed across available zones within the region (i.e. read pools with more than one node
   * will have a node in at least two zones).
   * @return value or {@code null} for none
   */
  public java.lang.String getAvailabilityType() {
    return availabilityType;
  }

  /**
   * Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For
   * read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly
   * distributed across available zones within the region (i.e. read pools with more than one node
   * will have a node in at least two zones).
   * @param availabilityType availabilityType or {@code null} for none
   */
  public Instance setAvailabilityType(java.lang.String availabilityType) {
    this.availabilityType = availabilityType;
    return this;
  }

  /**
   * Optional. Client connection specific configurations
   * @return value or {@code null} for none
   */
  public ClientConnectionConfig getClientConnectionConfig() {
    return clientConnectionConfig;
  }

  /**
   * Optional. Client connection specific configurations
   * @param clientConnectionConfig clientConnectionConfig or {@code null} for none
   */
  public Instance setClientConnectionConfig(ClientConnectionConfig clientConnectionConfig) {
    this.clientConnectionConfig = clientConnectionConfig;
    return this;
  }

  /**
   * Output only. Create time stamp
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create time stamp
   * @param createTime createTime or {@code null} for none
   */
  public Instance setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Database flags. Set at the instance level. They are copied from the primary instance on
   * secondary instance creation. Flags that have restrictions default to the value at primary
   * instance on read instances during creation. Read instances can set new flags or override
   * existing flags that are relevant for reads, for example, for enabling columnar cache on a read
   * instance. Flags set on read instance might or might not be present on the primary instance.
   * This is a list of "key": "value" pairs. "key": The name of the flag. These flags are passed at
   * instance setup time, so include both server options and system variables for Postgres. Flags
   * are specified with underscores, not hyphens. "value": The value of the flag. Booleans are set
   * to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a
   * value.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getDatabaseFlags() {
    return databaseFlags;
  }

  /**
   * Database flags. Set at the instance level. They are copied from the primary instance on
   * secondary instance creation. Flags that have restrictions default to the value at primary
   * instance on read instances during creation. Read instances can set new flags or override
   * existing flags that are relevant for reads, for example, for enabling columnar cache on a read
   * instance. Flags set on read instance might or might not be present on the primary instance.
   * This is a list of "key": "value" pairs. "key": The name of the flag. These flags are passed at
   * instance setup time, so include both server options and system variables for Postgres. Flags
   * are specified with underscores, not hyphens. "value": The value of the flag. Booleans are set
   * to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a
   * value.
   * @param databaseFlags databaseFlags or {@code null} for none
   */
  public Instance setDatabaseFlags(java.util.Map<String, java.lang.String> databaseFlags) {
    this.databaseFlags = databaseFlags;
    return this;
  }

  /**
   * Output only. Delete time stamp
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. Delete time stamp
   * @param deleteTime deleteTime or {@code null} for none
   */
  public Instance setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * User-settable and human-readable display name for the Instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * User-settable and human-readable display name for the Instance.
   * @param displayName displayName or {@code null} for none
   */
  public Instance setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * For Resource freshness validation (https://google.aip.dev/154)
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * For Resource freshness validation (https://google.aip.dev/154)
   * @param etag etag or {@code null} for none
   */
  public Instance setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * The Compute Engine zone that the instance should serve from, per
   * https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL
   * instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a
   * ZONAL instance, instance is created in a random zone with available capacity.
   * @return value or {@code null} for none
   */
  public java.lang.String getGceZone() {
    return gceZone;
  }

  /**
   * The Compute Engine zone that the instance should serve from, per
   * https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL
   * instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a
   * ZONAL instance, instance is created in a random zone with available capacity.
   * @param gceZone gceZone or {@code null} for none
   */
  public Instance setGceZone(java.lang.String gceZone) {
    this.gceZone = gceZone;
    return this;
  }

  /**
   * Optional. Configuration parameters related to the Gemini in Databases add-on.
   * @return value or {@code null} for none
   */
  public GeminiInstanceConfig getGeminiConfig() {
    return geminiConfig;
  }

  /**
   * Optional. Configuration parameters related to the Gemini in Databases add-on.
   * @param geminiConfig geminiConfig or {@code null} for none
   */
  public Instance setGeminiConfig(GeminiInstanceConfig geminiConfig) {
    this.geminiConfig = geminiConfig;
    return this;
  }

  /**
   * Required. The type of the instance. Specified at creation time.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstanceType() {
    return instanceType;
  }

  /**
   * Required. The type of the instance. Specified at creation time.
   * @param instanceType instanceType or {@code null} for none
   */
  public Instance setInstanceType(java.lang.String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Output only. The IP address for the Instance. This is the connection endpoint for an end-user
   * application.
   * @return value or {@code null} for none
   */
  public java.lang.String getIpAddress() {
    return ipAddress;
  }

  /**
   * Output only. The IP address for the Instance. This is the connection endpoint for an end-user
   * application.
   * @param ipAddress ipAddress or {@code null} for none
   */
  public Instance setIpAddress(java.lang.String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Labels as key value pairs
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs
   * @param labels labels or {@code null} for none
   */
  public Instance setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Configurations for the machines that host the underlying database engine.
   * @return value or {@code null} for none
   */
  public MachineConfig getMachineConfig() {
    return machineConfig;
  }

  /**
   * Configurations for the machines that host the underlying database engine.
   * @param machineConfig machineConfig or {@code null} for none
   */
  public Instance setMachineConfig(MachineConfig machineConfig) {
    this.machineConfig = machineConfig;
    return this;
  }

  /**
   * Output only. The name of the instance resource with the format: *
   * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the
   * cluster and instance ID segments should satisfy the regex expression
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and
   * dashes, starting with a letter, and ending with a letter or number. For more details see
   * https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent
   * resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The name of the instance resource with the format: *
   * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the
   * cluster and instance ID segments should satisfy the regex expression
   * `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and
   * dashes, starting with a letter, and ending with a letter or number. For more details see
   * https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent
   * resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
   * @param name name or {@code null} for none
   */
  public Instance setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Instance-level network configuration.
   * @return value or {@code null} for none
   */
  public InstanceNetworkConfig getNetworkConfig() {
    return networkConfig;
  }

  /**
   * Optional. Instance-level network configuration.
   * @param networkConfig networkConfig or {@code null} for none
   */
  public Instance setNetworkConfig(InstanceNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

  /**
   * Output only. List of available read-only VMs in this instance, including the standby for a
   * PRIMARY instance.
   * @return value or {@code null} for none
   */
  public java.util.List<Node> getNodes() {
    return nodes;
  }

  /**
   * Output only. List of available read-only VMs in this instance, including the standby for a
   * PRIMARY instance.
   * @param nodes nodes or {@code null} for none
   */
  public Instance setNodes(java.util.List<Node> nodes) {
    this.nodes = nodes;
    return this;
  }

  /**
   * Configuration for observability.
   * @return value or {@code null} for none
   */
  public ObservabilityInstanceConfig getObservabilityConfig() {
    return observabilityConfig;
  }

  /**
   * Configuration for observability.
   * @param observabilityConfig observabilityConfig or {@code null} for none
   */
  public Instance setObservabilityConfig(ObservabilityInstanceConfig observabilityConfig) {
    this.observabilityConfig = observabilityConfig;
    return this;
  }

  /**
   * Output only. All outbound public IP addresses configured for the instance.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOutboundPublicIpAddresses() {
    return outboundPublicIpAddresses;
  }

  /**
   * Output only. All outbound public IP addresses configured for the instance.
   * @param outboundPublicIpAddresses outboundPublicIpAddresses or {@code null} for none
   */
  public Instance setOutboundPublicIpAddresses(java.util.List<java.lang.String> outboundPublicIpAddresses) {
    this.outboundPublicIpAddresses = outboundPublicIpAddresses;
    return this;
  }

  /**
   * Optional. The configuration for Private Service Connect (PSC) for the instance.
   * @return value or {@code null} for none
   */
  public PscInstanceConfig getPscInstanceConfig() {
    return pscInstanceConfig;
  }

  /**
   * Optional. The configuration for Private Service Connect (PSC) for the instance.
   * @param pscInstanceConfig pscInstanceConfig or {@code null} for none
   */
  public Instance setPscInstanceConfig(PscInstanceConfig pscInstanceConfig) {
    this.pscInstanceConfig = pscInstanceConfig;
    return this;
  }

  /**
   * Output only. The public IP addresses for the Instance. This is available ONLY when
   * enable_public_ip is set. This is the connection endpoint for an end-user application.
   * @return value or {@code null} for none
   */
  public java.lang.String getPublicIpAddress() {
    return publicIpAddress;
  }

  /**
   * Output only. The public IP addresses for the Instance. This is available ONLY when
   * enable_public_ip is set. This is the connection endpoint for an end-user application.
   * @param publicIpAddress publicIpAddress or {@code null} for none
   */
  public Instance setPublicIpAddress(java.lang.String publicIpAddress) {
    this.publicIpAddress = publicIpAddress;
    return this;
  }

  /**
   * Configuration for query insights.
   * @return value or {@code null} for none
   */
  public QueryInsightsInstanceConfig getQueryInsightsConfig() {
    return queryInsightsConfig;
  }

  /**
   * Configuration for query insights.
   * @param queryInsightsConfig queryInsightsConfig or {@code null} for none
   */
  public Instance setQueryInsightsConfig(QueryInsightsInstanceConfig queryInsightsConfig) {
    this.queryInsightsConfig = queryInsightsConfig;
    return this;
  }

  /**
   * Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
   * @return value or {@code null} for none
   */
  public ReadPoolConfig getReadPoolConfig() {
    return readPoolConfig;
  }

  /**
   * Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
   * @param readPoolConfig readPoolConfig or {@code null} for none
   */
  public Instance setReadPoolConfig(ReadPoolConfig readPoolConfig) {
    this.readPoolConfig = readPoolConfig;
    return this;
  }

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of Instance does not match the user's intended state, and the service is actively
   * updating the resource to reconcile them. This can happen due to user-triggered updates or
   * system actions like failover or maintenance.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getReconciling() {
    return reconciling;
  }

  /**
   * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the
   * current state of Instance does not match the user's intended state, and the service is actively
   * updating the resource to reconcile them. This can happen due to user-triggered updates or
   * system actions like failover or maintenance.
   * @param reconciling reconciling or {@code null} for none
   */
  public Instance setReconciling(java.lang.Boolean reconciling) {
    this.reconciling = reconciling;
    return this;
  }

  /**
   * Output only. Reserved for future use.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }

  /**
   * Output only. Reserved for future use.
   * @param satisfiesPzs satisfiesPzs or {@code null} for none
   */
  public Instance setSatisfiesPzs(java.lang.Boolean satisfiesPzs) {
    this.satisfiesPzs = satisfiesPzs;
    return this;
  }

  /**
   * Output only. The current serving state of the instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The current serving state of the instance.
   * @param state state or {@code null} for none
   */
  public Instance setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The system-generated UID of the resource. The UID is assigned when the resource is
   * created, and it is retained until it is deleted.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. The system-generated UID of the resource. The UID is assigned when the resource is
   * created, and it is retained until it is deleted.
   * @param uid uid or {@code null} for none
   */
  public Instance setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Update policy that will be applied during instance update. This field is not persisted when you
   * update the instance. To use a non-default update policy, you must specify explicitly specify
   * the value in each update request.
   * @return value or {@code null} for none
   */
  public UpdatePolicy getUpdatePolicy() {
    return updatePolicy;
  }

  /**
   * Update policy that will be applied during instance update. This field is not persisted when you
   * update the instance. To use a non-default update policy, you must specify explicitly specify
   * the value in each update request.
   * @param updatePolicy updatePolicy or {@code null} for none
   */
  public Instance setUpdatePolicy(UpdatePolicy updatePolicy) {
    this.updatePolicy = updatePolicy;
    return this;
  }

  /**
   * Output only. Update time stamp
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update time stamp
   * @param updateTime updateTime or {@code null} for none
   */
  public Instance setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. This is set for the read-write VM of the PRIMARY instance only.
   * @return value or {@code null} for none
   */
  public Node getWritableNode() {
    return writableNode;
  }

  /**
   * Output only. This is set for the read-write VM of the PRIMARY instance only.
   * @param writableNode writableNode or {@code null} for none
   */
  public Instance setWritableNode(Node writableNode) {
    this.writableNode = writableNode;
    return this;
  }

  @Override
  public Instance set(String fieldName, Object value) {
    return (Instance) super.set(fieldName, value);
  }

  @Override
  public Instance clone() {
    return (Instance) super.clone();
  }

}
