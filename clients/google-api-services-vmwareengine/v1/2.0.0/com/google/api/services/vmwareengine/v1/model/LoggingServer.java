/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmwareengine.v1.model;

/**
 * Logging server to receive vCenter or ESXi logs.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the VMware Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LoggingServer extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Creation time of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. Fully-qualified domain name (FQDN) or IP Address of the logging server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hostname;

  /**
   * Output only. The resource name of this logging server. Resource names are schemeless URIs that
   * follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-
   * server`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Port number at which the logging server receives logs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer port;

  /**
   * Required. Protocol used by vCenter to send logs to a logging server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String protocol;

  /**
   * Required. The type of component that produces logs that will be forwarded to this logging
   * server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceType;

  /**
   * Output only. System-generated unique identifier for the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Last update time of this resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. Creation time of this resource.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Creation time of this resource.
   * @param createTime createTime or {@code null} for none
   */
  public LoggingServer setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. Fully-qualified domain name (FQDN) or IP Address of the logging server.
   * @return value or {@code null} for none
   */
  public java.lang.String getHostname() {
    return hostname;
  }

  /**
   * Required. Fully-qualified domain name (FQDN) or IP Address of the logging server.
   * @param hostname hostname or {@code null} for none
   */
  public LoggingServer setHostname(java.lang.String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Output only. The resource name of this logging server. Resource names are schemeless URIs that
   * follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-
   * server`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of this logging server. Resource names are schemeless URIs that
   * follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-
   * server`
   * @param name name or {@code null} for none
   */
  public LoggingServer setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Port number at which the logging server receives logs.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPort() {
    return port;
  }

  /**
   * Required. Port number at which the logging server receives logs.
   * @param port port or {@code null} for none
   */
  public LoggingServer setPort(java.lang.Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Required. Protocol used by vCenter to send logs to a logging server.
   * @return value or {@code null} for none
   */
  public java.lang.String getProtocol() {
    return protocol;
  }

  /**
   * Required. Protocol used by vCenter to send logs to a logging server.
   * @param protocol protocol or {@code null} for none
   */
  public LoggingServer setProtocol(java.lang.String protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Required. The type of component that produces logs that will be forwarded to this logging
   * server.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceType() {
    return sourceType;
  }

  /**
   * Required. The type of component that produces logs that will be forwarded to this logging
   * server.
   * @param sourceType sourceType or {@code null} for none
   */
  public LoggingServer setSourceType(java.lang.String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Output only. System-generated unique identifier for the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. System-generated unique identifier for the resource.
   * @param uid uid or {@code null} for none
   */
  public LoggingServer setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Last update time of this resource.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Last update time of this resource.
   * @param updateTime updateTime or {@code null} for none
   */
  public LoggingServer setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public LoggingServer set(String fieldName, Object value) {
    return (LoggingServer) super.set(fieldName, value);
  }

  @Override
  public LoggingServer clone() {
    return (LoggingServer) super.clone();
  }

}
