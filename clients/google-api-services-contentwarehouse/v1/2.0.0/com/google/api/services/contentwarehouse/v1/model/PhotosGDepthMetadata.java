/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Metadata in the GDepth XMP block. Note that GDepth::Data is not copied into this message.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhotosGDepthMetadata extends com.google.api.client.json.GenericJson {

  /**
   * Depth map far plane distance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float far;

  /**
   * Depth map format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String format;

  /**
   * Depth map source image height.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer imageHeight;

  /**
   * Depth map source image width.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer imageWidth;

  /**
   * Depth map mime type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mime;

  /**
   * Depth map near plane distance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float near;

  /**
   * Depth map units of distance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String units;

  /**
   * Depth map far plane distance.
   * @return value or {@code null} for none
   */
  public java.lang.Float getFar() {
    return far;
  }

  /**
   * Depth map far plane distance.
   * @param far far or {@code null} for none
   */
  public PhotosGDepthMetadata setFar(java.lang.Float far) {
    this.far = far;
    return this;
  }

  /**
   * Depth map format.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormat() {
    return format;
  }

  /**
   * Depth map format.
   * @param format format or {@code null} for none
   */
  public PhotosGDepthMetadata setFormat(java.lang.String format) {
    this.format = format;
    return this;
  }

  /**
   * Depth map source image height.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getImageHeight() {
    return imageHeight;
  }

  /**
   * Depth map source image height.
   * @param imageHeight imageHeight or {@code null} for none
   */
  public PhotosGDepthMetadata setImageHeight(java.lang.Integer imageHeight) {
    this.imageHeight = imageHeight;
    return this;
  }

  /**
   * Depth map source image width.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getImageWidth() {
    return imageWidth;
  }

  /**
   * Depth map source image width.
   * @param imageWidth imageWidth or {@code null} for none
   */
  public PhotosGDepthMetadata setImageWidth(java.lang.Integer imageWidth) {
    this.imageWidth = imageWidth;
    return this;
  }

  /**
   * Depth map mime type.
   * @return value or {@code null} for none
   */
  public java.lang.String getMime() {
    return mime;
  }

  /**
   * Depth map mime type.
   * @param mime mime or {@code null} for none
   */
  public PhotosGDepthMetadata setMime(java.lang.String mime) {
    this.mime = mime;
    return this;
  }

  /**
   * Depth map near plane distance.
   * @return value or {@code null} for none
   */
  public java.lang.Float getNear() {
    return near;
  }

  /**
   * Depth map near plane distance.
   * @param near near or {@code null} for none
   */
  public PhotosGDepthMetadata setNear(java.lang.Float near) {
    this.near = near;
    return this;
  }

  /**
   * Depth map units of distance.
   * @return value or {@code null} for none
   */
  public java.lang.String getUnits() {
    return units;
  }

  /**
   * Depth map units of distance.
   * @param units units or {@code null} for none
   */
  public PhotosGDepthMetadata setUnits(java.lang.String units) {
    this.units = units;
    return this;
  }

  @Override
  public PhotosGDepthMetadata set(String fieldName, Object value) {
    return (PhotosGDepthMetadata) super.set(fieldName, value);
  }

  @Override
  public PhotosGDepthMetadata clone() {
    return (PhotosGDepthMetadata) super.clone();
  }

}
