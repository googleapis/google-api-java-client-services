/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbilling.v1beta.model;

/**
 * Specifies usage on a single Google Cloud product over a time frame. Each Google Cloud product has
 * its own message, containing specific product configuration parameters of the product usage
 * amounts along each dimension in which the product is billed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Billing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Workload extends com.google.api.client.json.GenericJson {

  /**
   * Usage on Google Cloud CDN Egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudCdnEgressWorkload cloudCdnEgressWorkload;

  /**
   * Usage on Google Cloud CDN.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudCdnWorkload cloudCdnWorkload;

  /**
   * Usage on Google Cloud Interconnect Egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudInterconnectEgressWorkload cloudInterconnectEgressWorkload;

  /**
   * Usage on Google Cloud Interconnect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudInterconnectWorkload cloudInterconnectWorkload;

  /**
   * Usage on a cloud storage egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudStorageEgressWorkload cloudStorageEgressWorkload;

  /**
   * Usage on Google Cloud Storage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudStorageWorkload cloudStorageWorkload;

  /**
   * Usage of a Google Compute Engine Virtual Machine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ComputeVmWorkload computeVmWorkload;

  /**
   * Required. A name for this workload. All workloads in a `CostScenario` must have a unique
   * `name`. Each `name` may be at most 128 characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Usage on Premium Tier Internet Egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PremiumTierEgressWorkload premiumTierEgressWorkload;

  /**
   * Usage on Standard Tier Internet Egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StandardTierEgressWorkload standardTierEgressWorkload;

  /**
   * Usage on Vm to Vm Egress.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VmToVmEgressWorkload vmToVmEgressWorkload;

  /**
   * Usage on Google Cloud CDN Egress.
   * @return value or {@code null} for none
   */
  public CloudCdnEgressWorkload getCloudCdnEgressWorkload() {
    return cloudCdnEgressWorkload;
  }

  /**
   * Usage on Google Cloud CDN Egress.
   * @param cloudCdnEgressWorkload cloudCdnEgressWorkload or {@code null} for none
   */
  public Workload setCloudCdnEgressWorkload(CloudCdnEgressWorkload cloudCdnEgressWorkload) {
    this.cloudCdnEgressWorkload = cloudCdnEgressWorkload;
    return this;
  }

  /**
   * Usage on Google Cloud CDN.
   * @return value or {@code null} for none
   */
  public CloudCdnWorkload getCloudCdnWorkload() {
    return cloudCdnWorkload;
  }

  /**
   * Usage on Google Cloud CDN.
   * @param cloudCdnWorkload cloudCdnWorkload or {@code null} for none
   */
  public Workload setCloudCdnWorkload(CloudCdnWorkload cloudCdnWorkload) {
    this.cloudCdnWorkload = cloudCdnWorkload;
    return this;
  }

  /**
   * Usage on Google Cloud Interconnect Egress.
   * @return value or {@code null} for none
   */
  public CloudInterconnectEgressWorkload getCloudInterconnectEgressWorkload() {
    return cloudInterconnectEgressWorkload;
  }

  /**
   * Usage on Google Cloud Interconnect Egress.
   * @param cloudInterconnectEgressWorkload cloudInterconnectEgressWorkload or {@code null} for none
   */
  public Workload setCloudInterconnectEgressWorkload(CloudInterconnectEgressWorkload cloudInterconnectEgressWorkload) {
    this.cloudInterconnectEgressWorkload = cloudInterconnectEgressWorkload;
    return this;
  }

  /**
   * Usage on Google Cloud Interconnect.
   * @return value or {@code null} for none
   */
  public CloudInterconnectWorkload getCloudInterconnectWorkload() {
    return cloudInterconnectWorkload;
  }

  /**
   * Usage on Google Cloud Interconnect.
   * @param cloudInterconnectWorkload cloudInterconnectWorkload or {@code null} for none
   */
  public Workload setCloudInterconnectWorkload(CloudInterconnectWorkload cloudInterconnectWorkload) {
    this.cloudInterconnectWorkload = cloudInterconnectWorkload;
    return this;
  }

  /**
   * Usage on a cloud storage egress.
   * @return value or {@code null} for none
   */
  public CloudStorageEgressWorkload getCloudStorageEgressWorkload() {
    return cloudStorageEgressWorkload;
  }

  /**
   * Usage on a cloud storage egress.
   * @param cloudStorageEgressWorkload cloudStorageEgressWorkload or {@code null} for none
   */
  public Workload setCloudStorageEgressWorkload(CloudStorageEgressWorkload cloudStorageEgressWorkload) {
    this.cloudStorageEgressWorkload = cloudStorageEgressWorkload;
    return this;
  }

  /**
   * Usage on Google Cloud Storage.
   * @return value or {@code null} for none
   */
  public CloudStorageWorkload getCloudStorageWorkload() {
    return cloudStorageWorkload;
  }

  /**
   * Usage on Google Cloud Storage.
   * @param cloudStorageWorkload cloudStorageWorkload or {@code null} for none
   */
  public Workload setCloudStorageWorkload(CloudStorageWorkload cloudStorageWorkload) {
    this.cloudStorageWorkload = cloudStorageWorkload;
    return this;
  }

  /**
   * Usage of a Google Compute Engine Virtual Machine.
   * @return value or {@code null} for none
   */
  public ComputeVmWorkload getComputeVmWorkload() {
    return computeVmWorkload;
  }

  /**
   * Usage of a Google Compute Engine Virtual Machine.
   * @param computeVmWorkload computeVmWorkload or {@code null} for none
   */
  public Workload setComputeVmWorkload(ComputeVmWorkload computeVmWorkload) {
    this.computeVmWorkload = computeVmWorkload;
    return this;
  }

  /**
   * Required. A name for this workload. All workloads in a `CostScenario` must have a unique
   * `name`. Each `name` may be at most 128 characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Required. A name for this workload. All workloads in a `CostScenario` must have a unique
   * `name`. Each `name` may be at most 128 characters long.
   * @param name name or {@code null} for none
   */
  public Workload setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Usage on Premium Tier Internet Egress.
   * @return value or {@code null} for none
   */
  public PremiumTierEgressWorkload getPremiumTierEgressWorkload() {
    return premiumTierEgressWorkload;
  }

  /**
   * Usage on Premium Tier Internet Egress.
   * @param premiumTierEgressWorkload premiumTierEgressWorkload or {@code null} for none
   */
  public Workload setPremiumTierEgressWorkload(PremiumTierEgressWorkload premiumTierEgressWorkload) {
    this.premiumTierEgressWorkload = premiumTierEgressWorkload;
    return this;
  }

  /**
   * Usage on Standard Tier Internet Egress.
   * @return value or {@code null} for none
   */
  public StandardTierEgressWorkload getStandardTierEgressWorkload() {
    return standardTierEgressWorkload;
  }

  /**
   * Usage on Standard Tier Internet Egress.
   * @param standardTierEgressWorkload standardTierEgressWorkload or {@code null} for none
   */
  public Workload setStandardTierEgressWorkload(StandardTierEgressWorkload standardTierEgressWorkload) {
    this.standardTierEgressWorkload = standardTierEgressWorkload;
    return this;
  }

  /**
   * Usage on Vm to Vm Egress.
   * @return value or {@code null} for none
   */
  public VmToVmEgressWorkload getVmToVmEgressWorkload() {
    return vmToVmEgressWorkload;
  }

  /**
   * Usage on Vm to Vm Egress.
   * @param vmToVmEgressWorkload vmToVmEgressWorkload or {@code null} for none
   */
  public Workload setVmToVmEgressWorkload(VmToVmEgressWorkload vmToVmEgressWorkload) {
    this.vmToVmEgressWorkload = vmToVmEgressWorkload;
    return this;
  }

  @Override
  public Workload set(String fieldName, Object value) {
    return (Workload) super.set(fieldName, value);
  }

  @Override
  public Workload clone() {
    return (Workload) super.clone();
  }

}
