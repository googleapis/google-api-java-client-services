/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1alpha.model;

/**
 * User License information assigned by the admin.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1alphaUserLicense extends com.google.api.client.json.GenericJson {

  /**
   * Output only. User created timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. User last logged in time. If the user has not logged in yet, this field will be
   * empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastLoginTime;

  /**
   * Output only. License assignment state of the user. If the user is assigned with a license
   * config, the user loggin will be assigned with the license; If the user's license assignment
   * state is unassigned or unspecified, no license config will be associated to the user;
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String licenseAssignmentState;

  /**
   * Optional. The full resource name of the Subscription(LicenseConfig) assigned to the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String licenseConfig;

  /**
   * Output only. User update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. Immutable. The user principal of the User, could be email address or other prinical
   * identifier. This field is immutable. Admin assign licenses based on the user principal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userPrincipal;

  /**
   * Optional. The user profile. We user user full name(First name + Last name) as user profile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userProfile;

  /**
   * Output only. User created timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. User created timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. User last logged in time. If the user has not logged in yet, this field will be
   * empty.
   * @return value or {@code null} for none
   */
  public String getLastLoginTime() {
    return lastLoginTime;
  }

  /**
   * Output only. User last logged in time. If the user has not logged in yet, this field will be
   * empty.
   * @param lastLoginTime lastLoginTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setLastLoginTime(String lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    return this;
  }

  /**
   * Output only. License assignment state of the user. If the user is assigned with a license
   * config, the user loggin will be assigned with the license; If the user's license assignment
   * state is unassigned or unspecified, no license config will be associated to the user;
   * @return value or {@code null} for none
   */
  public java.lang.String getLicenseAssignmentState() {
    return licenseAssignmentState;
  }

  /**
   * Output only. License assignment state of the user. If the user is assigned with a license
   * config, the user loggin will be assigned with the license; If the user's license assignment
   * state is unassigned or unspecified, no license config will be associated to the user;
   * @param licenseAssignmentState licenseAssignmentState or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setLicenseAssignmentState(java.lang.String licenseAssignmentState) {
    this.licenseAssignmentState = licenseAssignmentState;
    return this;
  }

  /**
   * Optional. The full resource name of the Subscription(LicenseConfig) assigned to the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getLicenseConfig() {
    return licenseConfig;
  }

  /**
   * Optional. The full resource name of the Subscription(LicenseConfig) assigned to the user.
   * @param licenseConfig licenseConfig or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setLicenseConfig(java.lang.String licenseConfig) {
    this.licenseConfig = licenseConfig;
    return this;
  }

  /**
   * Output only. User update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. User update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Required. Immutable. The user principal of the User, could be email address or other prinical
   * identifier. This field is immutable. Admin assign licenses based on the user principal.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserPrincipal() {
    return userPrincipal;
  }

  /**
   * Required. Immutable. The user principal of the User, could be email address or other prinical
   * identifier. This field is immutable. Admin assign licenses based on the user principal.
   * @param userPrincipal userPrincipal or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setUserPrincipal(java.lang.String userPrincipal) {
    this.userPrincipal = userPrincipal;
    return this;
  }

  /**
   * Optional. The user profile. We user user full name(First name + Last name) as user profile.
   * @return value or {@code null} for none
   */
  public java.lang.String getUserProfile() {
    return userProfile;
  }

  /**
   * Optional. The user profile. We user user full name(First name + Last name) as user profile.
   * @param userProfile userProfile or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1alphaUserLicense setUserProfile(java.lang.String userProfile) {
    this.userProfile = userProfile;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaUserLicense set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1alphaUserLicense) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1alphaUserLicense clone() {
    return (GoogleCloudDiscoveryengineV1alphaUserLicense) super.clone();
  }

}
