/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for VideoContentSearchCaptionSpanAnchorFeatures.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VideoContentSearchCaptionSpanAnchorFeatures extends com.google.api.client.json.GenericJson {

  /**
   * The features used to construct the inference example.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchSpanDolphinFeatures dolphinFeatures;

  /**
   * The inference result from the Dolphin span model.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchSpanDolphinScores dolphinScores;

  /**
   * Embedding distances (e.g. cosine distance) to the other anchors of the same video.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> embeddingDistance;

  /**
   * Time gap in ms to the next anchor. Always positive number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer postGapInMs;

  /**
   * Time gap in ms to the previous anchor. Always a positive number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer preGapInMs;

  /**
   * The range of tokens in video_info.saft_doc for the anchor label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer saftBeginTokenIndex;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer saftEndTokenIndex;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer saftTranscriptEndCharOffset;

  /**
   * The range of characters in video_info.saft_transcript for the anchor label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer saftTranscriptStartCharOffset;

  /**
   * A summary of the ASR confidence for the selected candidate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats spanAsrConfidenceStats;

  /**
   * A summary of the Dolphin span token scores for the selected candidate.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VideoContentSearchMetricStats spanDolphinScore;

  /**
   * Word count of the span text, tokenized with SAFT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer wordCount;

  /**
   * The features used to construct the inference example.
   * @return value or {@code null} for none
   */
  public VideoContentSearchSpanDolphinFeatures getDolphinFeatures() {
    return dolphinFeatures;
  }

  /**
   * The features used to construct the inference example.
   * @param dolphinFeatures dolphinFeatures or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setDolphinFeatures(VideoContentSearchSpanDolphinFeatures dolphinFeatures) {
    this.dolphinFeatures = dolphinFeatures;
    return this;
  }

  /**
   * The inference result from the Dolphin span model.
   * @return value or {@code null} for none
   */
  public VideoContentSearchSpanDolphinScores getDolphinScores() {
    return dolphinScores;
  }

  /**
   * The inference result from the Dolphin span model.
   * @param dolphinScores dolphinScores or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setDolphinScores(VideoContentSearchSpanDolphinScores dolphinScores) {
    this.dolphinScores = dolphinScores;
    return this;
  }

  /**
   * Embedding distances (e.g. cosine distance) to the other anchors of the same video.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getEmbeddingDistance() {
    return embeddingDistance;
  }

  /**
   * Embedding distances (e.g. cosine distance) to the other anchors of the same video.
   * @param embeddingDistance embeddingDistance or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setEmbeddingDistance(java.util.List<java.lang.Float> embeddingDistance) {
    this.embeddingDistance = embeddingDistance;
    return this;
  }

  /**
   * Time gap in ms to the next anchor. Always positive number.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPostGapInMs() {
    return postGapInMs;
  }

  /**
   * Time gap in ms to the next anchor. Always positive number.
   * @param postGapInMs postGapInMs or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setPostGapInMs(java.lang.Integer postGapInMs) {
    this.postGapInMs = postGapInMs;
    return this;
  }

  /**
   * Time gap in ms to the previous anchor. Always a positive number.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPreGapInMs() {
    return preGapInMs;
  }

  /**
   * Time gap in ms to the previous anchor. Always a positive number.
   * @param preGapInMs preGapInMs or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setPreGapInMs(java.lang.Integer preGapInMs) {
    this.preGapInMs = preGapInMs;
    return this;
  }

  /**
   * The range of tokens in video_info.saft_doc for the anchor label.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSaftBeginTokenIndex() {
    return saftBeginTokenIndex;
  }

  /**
   * The range of tokens in video_info.saft_doc for the anchor label.
   * @param saftBeginTokenIndex saftBeginTokenIndex or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSaftBeginTokenIndex(java.lang.Integer saftBeginTokenIndex) {
    this.saftBeginTokenIndex = saftBeginTokenIndex;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSaftEndTokenIndex() {
    return saftEndTokenIndex;
  }

  /**
   * @param saftEndTokenIndex saftEndTokenIndex or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSaftEndTokenIndex(java.lang.Integer saftEndTokenIndex) {
    this.saftEndTokenIndex = saftEndTokenIndex;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSaftTranscriptEndCharOffset() {
    return saftTranscriptEndCharOffset;
  }

  /**
   * @param saftTranscriptEndCharOffset saftTranscriptEndCharOffset or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSaftTranscriptEndCharOffset(java.lang.Integer saftTranscriptEndCharOffset) {
    this.saftTranscriptEndCharOffset = saftTranscriptEndCharOffset;
    return this;
  }

  /**
   * The range of characters in video_info.saft_transcript for the anchor label.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSaftTranscriptStartCharOffset() {
    return saftTranscriptStartCharOffset;
  }

  /**
   * The range of characters in video_info.saft_transcript for the anchor label.
   * @param saftTranscriptStartCharOffset saftTranscriptStartCharOffset or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSaftTranscriptStartCharOffset(java.lang.Integer saftTranscriptStartCharOffset) {
    this.saftTranscriptStartCharOffset = saftTranscriptStartCharOffset;
    return this;
  }

  /**
   * A summary of the ASR confidence for the selected candidate.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getSpanAsrConfidenceStats() {
    return spanAsrConfidenceStats;
  }

  /**
   * A summary of the ASR confidence for the selected candidate.
   * @param spanAsrConfidenceStats spanAsrConfidenceStats or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSpanAsrConfidenceStats(VideoContentSearchMetricStats spanAsrConfidenceStats) {
    this.spanAsrConfidenceStats = spanAsrConfidenceStats;
    return this;
  }

  /**
   * A summary of the Dolphin span token scores for the selected candidate.
   * @return value or {@code null} for none
   */
  public VideoContentSearchMetricStats getSpanDolphinScore() {
    return spanDolphinScore;
  }

  /**
   * A summary of the Dolphin span token scores for the selected candidate.
   * @param spanDolphinScore spanDolphinScore or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setSpanDolphinScore(VideoContentSearchMetricStats spanDolphinScore) {
    this.spanDolphinScore = spanDolphinScore;
    return this;
  }

  /**
   * Word count of the span text, tokenized with SAFT.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getWordCount() {
    return wordCount;
  }

  /**
   * Word count of the span text, tokenized with SAFT.
   * @param wordCount wordCount or {@code null} for none
   */
  public VideoContentSearchCaptionSpanAnchorFeatures setWordCount(java.lang.Integer wordCount) {
    this.wordCount = wordCount;
    return this;
  }

  @Override
  public VideoContentSearchCaptionSpanAnchorFeatures set(String fieldName, Object value) {
    return (VideoContentSearchCaptionSpanAnchorFeatures) super.set(fieldName, value);
  }

  @Override
  public VideoContentSearchCaptionSpanAnchorFeatures clone() {
    return (VideoContentSearchCaptionSpanAnchorFeatures) super.clone();
  }

}
