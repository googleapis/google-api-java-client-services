/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.safebrowsing.model;

/**
 * A match when checking a threat entry in the Safe Browsing threat lists.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Safe Browsing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ThreatMatch extends com.google.api.client.json.GenericJson {

  /**
   * The cache lifetime for the returned match. Clients must not cache this response for more than
   * this duration to avoid false positives.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String cacheDuration;

  /**
   * The platform type matching this threat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String platformType;

  /**
   * The threat matching this threat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ThreatEntry threat;

  /**
   * Optional metadata associated with this threat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ThreatEntryMetadata threatEntryMetadata;

  /**
   * The threat entry type matching this threat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String threatEntryType;

  /**
   * The threat type matching this threat.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String threatType;

  /**
   * The cache lifetime for the returned match. Clients must not cache this response for more than
   * this duration to avoid false positives.
   * @return value or {@code null} for none
   */
  public String getCacheDuration() {
    return cacheDuration;
  }

  /**
   * The cache lifetime for the returned match. Clients must not cache this response for more than
   * this duration to avoid false positives.
   * @param cacheDuration cacheDuration or {@code null} for none
   */
  public ThreatMatch setCacheDuration(String cacheDuration) {
    this.cacheDuration = cacheDuration;
    return this;
  }

  /**
   * The platform type matching this threat.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlatformType() {
    return platformType;
  }

  /**
   * The platform type matching this threat.
   * @param platformType platformType or {@code null} for none
   */
  public ThreatMatch setPlatformType(java.lang.String platformType) {
    this.platformType = platformType;
    return this;
  }

  /**
   * The threat matching this threat.
   * @return value or {@code null} for none
   */
  public ThreatEntry getThreat() {
    return threat;
  }

  /**
   * The threat matching this threat.
   * @param threat threat or {@code null} for none
   */
  public ThreatMatch setThreat(ThreatEntry threat) {
    this.threat = threat;
    return this;
  }

  /**
   * Optional metadata associated with this threat.
   * @return value or {@code null} for none
   */
  public ThreatEntryMetadata getThreatEntryMetadata() {
    return threatEntryMetadata;
  }

  /**
   * Optional metadata associated with this threat.
   * @param threatEntryMetadata threatEntryMetadata or {@code null} for none
   */
  public ThreatMatch setThreatEntryMetadata(ThreatEntryMetadata threatEntryMetadata) {
    this.threatEntryMetadata = threatEntryMetadata;
    return this;
  }

  /**
   * The threat entry type matching this threat.
   * @return value or {@code null} for none
   */
  public java.lang.String getThreatEntryType() {
    return threatEntryType;
  }

  /**
   * The threat entry type matching this threat.
   * @param threatEntryType threatEntryType or {@code null} for none
   */
  public ThreatMatch setThreatEntryType(java.lang.String threatEntryType) {
    this.threatEntryType = threatEntryType;
    return this;
  }

  /**
   * The threat type matching this threat.
   * @return value or {@code null} for none
   */
  public java.lang.String getThreatType() {
    return threatType;
  }

  /**
   * The threat type matching this threat.
   * @param threatType threatType or {@code null} for none
   */
  public ThreatMatch setThreatType(java.lang.String threatType) {
    this.threatType = threatType;
    return this;
  }

  @Override
  public ThreatMatch set(String fieldName, Object value) {
    return (ThreatMatch) super.set(fieldName, value);
  }

  @Override
  public ThreatMatch clone() {
    return (ThreatMatch) super.clone();
  }

}
