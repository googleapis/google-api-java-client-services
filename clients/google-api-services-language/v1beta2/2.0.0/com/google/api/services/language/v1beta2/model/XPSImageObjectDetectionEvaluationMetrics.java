/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1beta2.model;

/**
 * Model evaluation metrics for image object detection problems. Evaluates prediction quality of
 * labeled bounding boxes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSImageObjectDetectionEvaluationMetrics extends com.google.api.client.json.GenericJson {

  /**
   * The single metric for bounding boxes evaluation: the mean_average_precision averaged over all
   * bounding_box_metrics_entries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float boundingBoxMeanAveragePrecision;

  /**
   * The bounding boxes match metrics for each Intersection-over-union threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XPSBoundingBoxMetricsEntry> boundingBoxMetricsEntries;

  static {
    // hack to force ProGuard to consider XPSBoundingBoxMetricsEntry used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(XPSBoundingBoxMetricsEntry.class);
  }

  /**
   * The total number of bounding boxes (i.e. summed over all images) the ground truth used to
   * create this evaluation had.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer evaluatedBoundingBoxCount;

  /**
   * The single metric for bounding boxes evaluation: the mean_average_precision averaged over all
   * bounding_box_metrics_entries.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBoundingBoxMeanAveragePrecision() {
    return boundingBoxMeanAveragePrecision;
  }

  /**
   * The single metric for bounding boxes evaluation: the mean_average_precision averaged over all
   * bounding_box_metrics_entries.
   * @param boundingBoxMeanAveragePrecision boundingBoxMeanAveragePrecision or {@code null} for none
   */
  public XPSImageObjectDetectionEvaluationMetrics setBoundingBoxMeanAveragePrecision(java.lang.Float boundingBoxMeanAveragePrecision) {
    this.boundingBoxMeanAveragePrecision = boundingBoxMeanAveragePrecision;
    return this;
  }

  /**
   * The bounding boxes match metrics for each Intersection-over-union threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
   * @return value or {@code null} for none
   */
  public java.util.List<XPSBoundingBoxMetricsEntry> getBoundingBoxMetricsEntries() {
    return boundingBoxMetricsEntries;
  }

  /**
   * The bounding boxes match metrics for each Intersection-over-union threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
   * @param boundingBoxMetricsEntries boundingBoxMetricsEntries or {@code null} for none
   */
  public XPSImageObjectDetectionEvaluationMetrics setBoundingBoxMetricsEntries(java.util.List<XPSBoundingBoxMetricsEntry> boundingBoxMetricsEntries) {
    this.boundingBoxMetricsEntries = boundingBoxMetricsEntries;
    return this;
  }

  /**
   * The total number of bounding boxes (i.e. summed over all images) the ground truth used to
   * create this evaluation had.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getEvaluatedBoundingBoxCount() {
    return evaluatedBoundingBoxCount;
  }

  /**
   * The total number of bounding boxes (i.e. summed over all images) the ground truth used to
   * create this evaluation had.
   * @param evaluatedBoundingBoxCount evaluatedBoundingBoxCount or {@code null} for none
   */
  public XPSImageObjectDetectionEvaluationMetrics setEvaluatedBoundingBoxCount(java.lang.Integer evaluatedBoundingBoxCount) {
    this.evaluatedBoundingBoxCount = evaluatedBoundingBoxCount;
    return this;
  }

  @Override
  public XPSImageObjectDetectionEvaluationMetrics set(String fieldName, Object value) {
    return (XPSImageObjectDetectionEvaluationMetrics) super.set(fieldName, value);
  }

  @Override
  public XPSImageObjectDetectionEvaluationMetrics clone() {
    return (XPSImageObjectDetectionEvaluationMetrics) super.clone();
  }

}
