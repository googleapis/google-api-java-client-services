/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The states of the device. They are dynamic and may change based on the current context. Next ID:
 * 13
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantGroundingRankerDeviceTargetingFeaturesStates extends com.google.api.client.json.GenericJson {

  /**
   * The distance of the device relative to others that hear the user's OKG.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String distance;

  /**
   * Indicates that the device is running a media session that is currently buffering.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasBufferingMediaSession;

  /**
   * Indicates that the device is running a media session that is currently paused.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasPausedMediaSession;

  /**
   * Indicates that the device is running a media session that is currently playing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean hasPlayingMediaSession;

  /**
   * Indicates whether or not the device is in the same room as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inSameRoomAsHearingDevice;

  /**
   * Indicates whether or not the device is in the same room as the local device. If the device is
   * the local device, this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inSameRoomAsLocalDevice;

  /**
   * Indicates whether or not the device is in the same structure as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inSameStructureAsHearingDevice;

  /**
   * Indicates whether or not the device is in the same structure as the local device. If the device
   * is the local device, this field is not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean inSameStructureAsLocalDevice;

  /**
   * Indicate whether the device is docked on a base.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isDocked;

  /**
   * Whether the device is a local device, i.e. the device that heard OKG from a user and is
   * processed by an assistant pipeline. If multiple devices heard OKG (MDA case), each hearing
   * device would be considered a local device in its own assistant pipeline. Example: A user says
   * "OKG, play music on TV" to Google Home, and music is played on the TV. Google home is
   * considered a local device, while TV is considered a remote device. Timestamp of when the device
   * was last used. Should correspond to when the AssistantRequestParams (in ASSISTANT_SNAPSHOT
   * corpus) were last written for this device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isLocal;

  /**
   * Indicate whether the device is locked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isLocked;

  /**
   * Indicate whether the device is tethered to another device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isTethered;

  /**
   * The distance of the device relative to others that hear the user's OKG.
   * @return value or {@code null} for none
   */
  public java.lang.String getDistance() {
    return distance;
  }

  /**
   * The distance of the device relative to others that hear the user's OKG.
   * @param distance distance or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setDistance(java.lang.String distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Indicates that the device is running a media session that is currently buffering.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasBufferingMediaSession() {
    return hasBufferingMediaSession;
  }

  /**
   * Indicates that the device is running a media session that is currently buffering.
   * @param hasBufferingMediaSession hasBufferingMediaSession or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setHasBufferingMediaSession(java.lang.Boolean hasBufferingMediaSession) {
    this.hasBufferingMediaSession = hasBufferingMediaSession;
    return this;
  }

  /**
   * Indicates that the device is running a media session that is currently paused.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasPausedMediaSession() {
    return hasPausedMediaSession;
  }

  /**
   * Indicates that the device is running a media session that is currently paused.
   * @param hasPausedMediaSession hasPausedMediaSession or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setHasPausedMediaSession(java.lang.Boolean hasPausedMediaSession) {
    this.hasPausedMediaSession = hasPausedMediaSession;
    return this;
  }

  /**
   * Indicates that the device is running a media session that is currently playing.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHasPlayingMediaSession() {
    return hasPlayingMediaSession;
  }

  /**
   * Indicates that the device is running a media session that is currently playing.
   * @param hasPlayingMediaSession hasPlayingMediaSession or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setHasPlayingMediaSession(java.lang.Boolean hasPlayingMediaSession) {
    this.hasPlayingMediaSession = hasPlayingMediaSession;
    return this;
  }

  /**
   * Indicates whether or not the device is in the same room as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInSameRoomAsHearingDevice() {
    return inSameRoomAsHearingDevice;
  }

  /**
   * Indicates whether or not the device is in the same room as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * @param inSameRoomAsHearingDevice inSameRoomAsHearingDevice or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setInSameRoomAsHearingDevice(java.lang.Boolean inSameRoomAsHearingDevice) {
    this.inSameRoomAsHearingDevice = inSameRoomAsHearingDevice;
    return this;
  }

  /**
   * Indicates whether or not the device is in the same room as the local device. If the device is
   * the local device, this field is not set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInSameRoomAsLocalDevice() {
    return inSameRoomAsLocalDevice;
  }

  /**
   * Indicates whether or not the device is in the same room as the local device. If the device is
   * the local device, this field is not set.
   * @param inSameRoomAsLocalDevice inSameRoomAsLocalDevice or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setInSameRoomAsLocalDevice(java.lang.Boolean inSameRoomAsLocalDevice) {
    this.inSameRoomAsLocalDevice = inSameRoomAsLocalDevice;
    return this;
  }

  /**
   * Indicates whether or not the device is in the same structure as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInSameStructureAsHearingDevice() {
    return inSameStructureAsHearingDevice;
  }

  /**
   * Indicates whether or not the device is in the same structure as any hearing devices. Does not
   * consider the device itself or the local device as a hearing device. If no valid hearing
   * devices, this field is not set.
   * @param inSameStructureAsHearingDevice inSameStructureAsHearingDevice or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setInSameStructureAsHearingDevice(java.lang.Boolean inSameStructureAsHearingDevice) {
    this.inSameStructureAsHearingDevice = inSameStructureAsHearingDevice;
    return this;
  }

  /**
   * Indicates whether or not the device is in the same structure as the local device. If the device
   * is the local device, this field is not set.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getInSameStructureAsLocalDevice() {
    return inSameStructureAsLocalDevice;
  }

  /**
   * Indicates whether or not the device is in the same structure as the local device. If the device
   * is the local device, this field is not set.
   * @param inSameStructureAsLocalDevice inSameStructureAsLocalDevice or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setInSameStructureAsLocalDevice(java.lang.Boolean inSameStructureAsLocalDevice) {
    this.inSameStructureAsLocalDevice = inSameStructureAsLocalDevice;
    return this;
  }

  /**
   * Indicate whether the device is docked on a base.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsDocked() {
    return isDocked;
  }

  /**
   * Indicate whether the device is docked on a base.
   * @param isDocked isDocked or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsDocked(java.lang.Boolean isDocked) {
    this.isDocked = isDocked;
    return this;
  }

  /**
   * Whether the device is a local device, i.e. the device that heard OKG from a user and is
   * processed by an assistant pipeline. If multiple devices heard OKG (MDA case), each hearing
   * device would be considered a local device in its own assistant pipeline. Example: A user says
   * "OKG, play music on TV" to Google Home, and music is played on the TV. Google home is
   * considered a local device, while TV is considered a remote device. Timestamp of when the device
   * was last used. Should correspond to when the AssistantRequestParams (in ASSISTANT_SNAPSHOT
   * corpus) were last written for this device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsLocal() {
    return isLocal;
  }

  /**
   * Whether the device is a local device, i.e. the device that heard OKG from a user and is
   * processed by an assistant pipeline. If multiple devices heard OKG (MDA case), each hearing
   * device would be considered a local device in its own assistant pipeline. Example: A user says
   * "OKG, play music on TV" to Google Home, and music is played on the TV. Google home is
   * considered a local device, while TV is considered a remote device. Timestamp of when the device
   * was last used. Should correspond to when the AssistantRequestParams (in ASSISTANT_SNAPSHOT
   * corpus) were last written for this device.
   * @param isLocal isLocal or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsLocal(java.lang.Boolean isLocal) {
    this.isLocal = isLocal;
    return this;
  }

  /**
   * Indicate whether the device is locked.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsLocked() {
    return isLocked;
  }

  /**
   * Indicate whether the device is locked.
   * @param isLocked isLocked or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsLocked(java.lang.Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Indicate whether the device is tethered to another device.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsTethered() {
    return isTethered;
  }

  /**
   * Indicate whether the device is tethered to another device.
   * @param isTethered isTethered or {@code null} for none
   */
  public AssistantGroundingRankerDeviceTargetingFeaturesStates setIsTethered(java.lang.Boolean isTethered) {
    this.isTethered = isTethered;
    return this;
  }

  @Override
  public AssistantGroundingRankerDeviceTargetingFeaturesStates set(String fieldName, Object value) {
    return (AssistantGroundingRankerDeviceTargetingFeaturesStates) super.set(fieldName, value);
  }

  @Override
  public AssistantGroundingRankerDeviceTargetingFeaturesStates clone() {
    return (AssistantGroundingRankerDeviceTargetingFeaturesStates) super.clone();
  }

}
