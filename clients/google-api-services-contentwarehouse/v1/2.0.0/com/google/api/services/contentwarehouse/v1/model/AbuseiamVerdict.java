/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Verdict against a target. AbuseIAm generates a verdict based on evaluations. AbuseIAm can send
 * such verdicts to clients for enforcement.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AbuseiamVerdict extends com.google.api.client.json.GenericJson {

  /**
   * Target client of the verdict. It can be used to differentiate verdicts from multiple clients
   * when such verdicts are processed in one common place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AbuseiamClient client;

  /**
   * Additional info regarding the verdict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comment;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String decision;

  /**
   * Time duration (in minutes) of the verdict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer durationMins;

  /**
   * Evaluations relevant to this verdict. Every Verdict should contain at least one Evaluation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamEvaluation> evaluation;

  static {
    // hack to force ProGuard to consider AbuseiamEvaluation used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamEvaluation.class);
  }

  /**
   * Details of all the hashes that can be computed on a message, such as simhash and attachment
   * hash
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamHash> hashes;

  static {
    // hack to force ProGuard to consider AbuseiamHash used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamHash.class);
  }

  /**
   * Is this verdict issued by legal?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isLegalIssued;

  /**
   * This field is used to pass relevant / necessary scores to our clients. For eg: ASBE propogates
   * these scores to moonshine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamNameValuePair> miscScores;

  static {
    // hack to force ProGuard to consider AbuseiamNameValuePair used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamNameValuePair.class);
  }

  /**
   * A short description of the reason why the verdict decision is made.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String reasonCode;

  /**
   * The regions in which this verdict should be enforced. Absence of this field indicates that the
   * verdict is applicable everywhere.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamRegion> region;

  static {
    // hack to force ProGuard to consider AbuseiamRegion used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamRegion.class);
  }

  /**
   * Restrictions on where this verdict applies. If any restriction is met, the verdict is applied
   * there. If no restrictions are present, the verdict is considered global.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamVerdictRestriction> restriction;

  /**
   * Category of the strike if this is a strike verdict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String strikeCategory;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AbuseiamTarget target;

  /**
   * The timestamp of the target. E.g., the time when the target was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long targetTimestampMicros;

  /**
   * When the verdict is generated
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timestampMicros;

  /**
   * Extra notification(s) to be delivered to target user or message owner about the verdict.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AbuseiamUserNotification> userNotification;

  static {
    // hack to force ProGuard to consider AbuseiamUserNotification used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AbuseiamUserNotification.class);
  }

  /**
   * version of decision script
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Target client of the verdict. It can be used to differentiate verdicts from multiple clients
   * when such verdicts are processed in one common place.
   * @return value or {@code null} for none
   */
  public AbuseiamClient getClient() {
    return client;
  }

  /**
   * Target client of the verdict. It can be used to differentiate verdicts from multiple clients
   * when such verdicts are processed in one common place.
   * @param client client or {@code null} for none
   */
  public AbuseiamVerdict setClient(AbuseiamClient client) {
    this.client = client;
    return this;
  }

  /**
   * Additional info regarding the verdict.
   * @return value or {@code null} for none
   */
  public java.lang.String getComment() {
    return comment;
  }

  /**
   * Additional info regarding the verdict.
   * @param comment comment or {@code null} for none
   */
  public AbuseiamVerdict setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDecision() {
    return decision;
  }

  /**
   * @param decision decision or {@code null} for none
   */
  public AbuseiamVerdict setDecision(java.lang.String decision) {
    this.decision = decision;
    return this;
  }

  /**
   * Time duration (in minutes) of the verdict.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getDurationMins() {
    return durationMins;
  }

  /**
   * Time duration (in minutes) of the verdict.
   * @param durationMins durationMins or {@code null} for none
   */
  public AbuseiamVerdict setDurationMins(java.lang.Integer durationMins) {
    this.durationMins = durationMins;
    return this;
  }

  /**
   * Evaluations relevant to this verdict. Every Verdict should contain at least one Evaluation.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamEvaluation> getEvaluation() {
    return evaluation;
  }

  /**
   * Evaluations relevant to this verdict. Every Verdict should contain at least one Evaluation.
   * @param evaluation evaluation or {@code null} for none
   */
  public AbuseiamVerdict setEvaluation(java.util.List<AbuseiamEvaluation> evaluation) {
    this.evaluation = evaluation;
    return this;
  }

  /**
   * Details of all the hashes that can be computed on a message, such as simhash and attachment
   * hash
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamHash> getHashes() {
    return hashes;
  }

  /**
   * Details of all the hashes that can be computed on a message, such as simhash and attachment
   * hash
   * @param hashes hashes or {@code null} for none
   */
  public AbuseiamVerdict setHashes(java.util.List<AbuseiamHash> hashes) {
    this.hashes = hashes;
    return this;
  }

  /**
   * Is this verdict issued by legal?
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsLegalIssued() {
    return isLegalIssued;
  }

  /**
   * Is this verdict issued by legal?
   * @param isLegalIssued isLegalIssued or {@code null} for none
   */
  public AbuseiamVerdict setIsLegalIssued(java.lang.Boolean isLegalIssued) {
    this.isLegalIssued = isLegalIssued;
    return this;
  }

  /**
   * This field is used to pass relevant / necessary scores to our clients. For eg: ASBE propogates
   * these scores to moonshine.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamNameValuePair> getMiscScores() {
    return miscScores;
  }

  /**
   * This field is used to pass relevant / necessary scores to our clients. For eg: ASBE propogates
   * these scores to moonshine.
   * @param miscScores miscScores or {@code null} for none
   */
  public AbuseiamVerdict setMiscScores(java.util.List<AbuseiamNameValuePair> miscScores) {
    this.miscScores = miscScores;
    return this;
  }

  /**
   * A short description of the reason why the verdict decision is made.
   * @return value or {@code null} for none
   */
  public java.lang.String getReasonCode() {
    return reasonCode;
  }

  /**
   * A short description of the reason why the verdict decision is made.
   * @param reasonCode reasonCode or {@code null} for none
   */
  public AbuseiamVerdict setReasonCode(java.lang.String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * The regions in which this verdict should be enforced. Absence of this field indicates that the
   * verdict is applicable everywhere.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamRegion> getRegion() {
    return region;
  }

  /**
   * The regions in which this verdict should be enforced. Absence of this field indicates that the
   * verdict is applicable everywhere.
   * @param region region or {@code null} for none
   */
  public AbuseiamVerdict setRegion(java.util.List<AbuseiamRegion> region) {
    this.region = region;
    return this;
  }

  /**
   * Restrictions on where this verdict applies. If any restriction is met, the verdict is applied
   * there. If no restrictions are present, the verdict is considered global.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamVerdictRestriction> getRestriction() {
    return restriction;
  }

  /**
   * Restrictions on where this verdict applies. If any restriction is met, the verdict is applied
   * there. If no restrictions are present, the verdict is considered global.
   * @param restriction restriction or {@code null} for none
   */
  public AbuseiamVerdict setRestriction(java.util.List<AbuseiamVerdictRestriction> restriction) {
    this.restriction = restriction;
    return this;
  }

  /**
   * Category of the strike if this is a strike verdict.
   * @return value or {@code null} for none
   */
  public java.lang.String getStrikeCategory() {
    return strikeCategory;
  }

  /**
   * Category of the strike if this is a strike verdict.
   * @param strikeCategory strikeCategory or {@code null} for none
   */
  public AbuseiamVerdict setStrikeCategory(java.lang.String strikeCategory) {
    this.strikeCategory = strikeCategory;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AbuseiamTarget getTarget() {
    return target;
  }

  /**
   * @param target target or {@code null} for none
   */
  public AbuseiamVerdict setTarget(AbuseiamTarget target) {
    this.target = target;
    return this;
  }

  /**
   * The timestamp of the target. E.g., the time when the target was updated.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTargetTimestampMicros() {
    return targetTimestampMicros;
  }

  /**
   * The timestamp of the target. E.g., the time when the target was updated.
   * @param targetTimestampMicros targetTimestampMicros or {@code null} for none
   */
  public AbuseiamVerdict setTargetTimestampMicros(java.lang.Long targetTimestampMicros) {
    this.targetTimestampMicros = targetTimestampMicros;
    return this;
  }

  /**
   * When the verdict is generated
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimestampMicros() {
    return timestampMicros;
  }

  /**
   * When the verdict is generated
   * @param timestampMicros timestampMicros or {@code null} for none
   */
  public AbuseiamVerdict setTimestampMicros(java.lang.Long timestampMicros) {
    this.timestampMicros = timestampMicros;
    return this;
  }

  /**
   * Extra notification(s) to be delivered to target user or message owner about the verdict.
   * @return value or {@code null} for none
   */
  public java.util.List<AbuseiamUserNotification> getUserNotification() {
    return userNotification;
  }

  /**
   * Extra notification(s) to be delivered to target user or message owner about the verdict.
   * @param userNotification userNotification or {@code null} for none
   */
  public AbuseiamVerdict setUserNotification(java.util.List<AbuseiamUserNotification> userNotification) {
    this.userNotification = userNotification;
    return this;
  }

  /**
   * version of decision script
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * version of decision script
   * @param version version or {@code null} for none
   */
  public AbuseiamVerdict setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public AbuseiamVerdict set(String fieldName, Object value) {
    return (AbuseiamVerdict) super.set(fieldName, value);
  }

  @Override
  public AbuseiamVerdict clone() {
    return (AbuseiamVerdict) super.clone();
  }

}
