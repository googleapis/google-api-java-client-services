/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.accounts_v1beta.model;

/**
 * Represents a geographic region that you can use as a target with both the `RegionalInventory` and
 * `ShippingSettings` services. You can define regions as collections of either postal codes or, in
 * some countries, using predefined geotargets. For more information, see [Set up regions
 * ](https://support.google.com/merchants/answer/7410946#zippy=%2Ccreate-a-new-region) for more
 * information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Region extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The display name of the region.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Optional. A list of geotargets that defines the region area.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GeoTargetArea geotargetArea;

  /**
   * Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. A list of postal codes that defines the region area.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PostalCodeArea postalCodeArea;

  /**
   * Output only. Indicates if the region is eligible for use in the Regional Inventory
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean regionalInventoryEligible;

  /**
   * Output only. Indicates if the region is eligible for use in the Shipping Services
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean shippingEligible;

  /**
   * Optional. The display name of the region.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Optional. The display name of the region.
   * @param displayName displayName or {@code null} for none
   */
  public Region setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. A list of geotargets that defines the region area.
   * @return value or {@code null} for none
   */
  public GeoTargetArea getGeotargetArea() {
    return geotargetArea;
  }

  /**
   * Optional. A list of geotargets that defines the region area.
   * @param geotargetArea geotargetArea or {@code null} for none
   */
  public Region setGeotargetArea(GeoTargetArea geotargetArea) {
    this.geotargetArea = geotargetArea;
    return this;
  }

  /**
   * Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The resource name of the region. Format: `accounts/{account}/regions/{region}`
   * @param name name or {@code null} for none
   */
  public Region setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. A list of postal codes that defines the region area.
   * @return value or {@code null} for none
   */
  public PostalCodeArea getPostalCodeArea() {
    return postalCodeArea;
  }

  /**
   * Optional. A list of postal codes that defines the region area.
   * @param postalCodeArea postalCodeArea or {@code null} for none
   */
  public Region setPostalCodeArea(PostalCodeArea postalCodeArea) {
    this.postalCodeArea = postalCodeArea;
    return this;
  }

  /**
   * Output only. Indicates if the region is eligible for use in the Regional Inventory
   * configuration.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRegionalInventoryEligible() {
    return regionalInventoryEligible;
  }

  /**
   * Output only. Indicates if the region is eligible for use in the Regional Inventory
   * configuration.
   * @param regionalInventoryEligible regionalInventoryEligible or {@code null} for none
   */
  public Region setRegionalInventoryEligible(java.lang.Boolean regionalInventoryEligible) {
    this.regionalInventoryEligible = regionalInventoryEligible;
    return this;
  }

  /**
   * Output only. Indicates if the region is eligible for use in the Shipping Services
   * configuration.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getShippingEligible() {
    return shippingEligible;
  }

  /**
   * Output only. Indicates if the region is eligible for use in the Shipping Services
   * configuration.
   * @param shippingEligible shippingEligible or {@code null} for none
   */
  public Region setShippingEligible(java.lang.Boolean shippingEligible) {
    this.shippingEligible = shippingEligible;
    return this;
  }

  @Override
  public Region set(String fieldName, Object value) {
    return (Region) super.set(fieldName, value);
  }

  @Override
  public Region clone() {
    return (Region) super.clone();
  }

}
