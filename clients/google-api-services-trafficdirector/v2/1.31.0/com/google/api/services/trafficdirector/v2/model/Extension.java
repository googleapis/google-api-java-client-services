/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.trafficdirector.v2.model;

/**
 * Version and identification for an Envoy extension. [#next-free-field: 6]
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Traffic Director API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Extension extends com.google.api.client.json.GenericJson {

  /**
   * Category of the extension. Extension category names use reverse DNS notation. For instance
   * "envoy.filters.listener" for Envoy's built-in listener filters or "com.acme.filters.http" for
   * HTTP filters from acme.com vendor. [#comment:
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String category;

  /**
   * Indicates that the extension is present but was disabled via dynamic configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean disabled;

  /**
   * This is the name of the Envoy filter as specified in the Envoy configuration, e.g.
   * envoy.filters.http.router, com.acme.widget.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * [#not-implemented-hide:] Type descriptor of extension configuration proto. [#comment:
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String typeDescriptor;

  /**
   * The version is a property of the extension and maintained independently of other extensions and
   * the Envoy API. This field is not set when extension did not provide version information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BuildVersion version;

  /**
   * Category of the extension. Extension category names use reverse DNS notation. For instance
   * "envoy.filters.listener" for Envoy's built-in listener filters or "com.acme.filters.http" for
   * HTTP filters from acme.com vendor. [#comment:
   * @return value or {@code null} for none
   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * Category of the extension. Extension category names use reverse DNS notation. For instance
   * "envoy.filters.listener" for Envoy's built-in listener filters or "com.acme.filters.http" for
   * HTTP filters from acme.com vendor. [#comment:
   * @param category category or {@code null} for none
   */
  public Extension setCategory(java.lang.String category) {
    this.category = category;
    return this;
  }

  /**
   * Indicates that the extension is present but was disabled via dynamic configuration.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDisabled() {
    return disabled;
  }

  /**
   * Indicates that the extension is present but was disabled via dynamic configuration.
   * @param disabled disabled or {@code null} for none
   */
  public Extension setDisabled(java.lang.Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * This is the name of the Envoy filter as specified in the Envoy configuration, e.g.
   * envoy.filters.http.router, com.acme.widget.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * This is the name of the Envoy filter as specified in the Envoy configuration, e.g.
   * envoy.filters.http.router, com.acme.widget.
   * @param name name or {@code null} for none
   */
  public Extension setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * [#not-implemented-hide:] Type descriptor of extension configuration proto. [#comment:
   * @return value or {@code null} for none
   */
  public java.lang.String getTypeDescriptor() {
    return typeDescriptor;
  }

  /**
   * [#not-implemented-hide:] Type descriptor of extension configuration proto. [#comment:
   * @param typeDescriptor typeDescriptor or {@code null} for none
   */
  public Extension setTypeDescriptor(java.lang.String typeDescriptor) {
    this.typeDescriptor = typeDescriptor;
    return this;
  }

  /**
   * The version is a property of the extension and maintained independently of other extensions and
   * the Envoy API. This field is not set when extension did not provide version information.
   * @return value or {@code null} for none
   */
  public BuildVersion getVersion() {
    return version;
  }

  /**
   * The version is a property of the extension and maintained independently of other extensions and
   * the Envoy API. This field is not set when extension did not provide version information.
   * @param version version or {@code null} for none
   */
  public Extension setVersion(BuildVersion version) {
    this.version = version;
    return this;
  }

  @Override
  public Extension set(String fieldName, Object value) {
    return (Extension) super.set(fieldName, value);
  }

  @Override
  public Extension clone() {
    return (Extension) super.clone();
  }

}
