/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.storage;

/**
 * Service definition for Storage (v1beta1).
 *
 * <p>
 * Lets you store and retrieve potentially-large, immutable data objects.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/storage/docs/json_api/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link StorageRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Storage extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Cloud Storage JSON API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "storage/v1beta1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch/storage/v1beta1";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Storage(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Storage(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the BucketAccessControls collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Storage storage = new Storage(...);}
   *   {@code Storage.BucketAccessControls.List request = storage.bucketAccessControls().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public BucketAccessControls bucketAccessControls() {
    return new BucketAccessControls();
  }

  /**
   * The "bucketAccessControls" collection of methods.
   */
  public class BucketAccessControls {

    /**
     * Deletes the ACL entry for the specified entity on the specified bucket.
     *
     * Create a request for the method "bucketAccessControls.delete".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @return the request
     */
    public Delete delete(java.lang.String bucket, java.lang.String entity) throws java.io.IOException {
      Delete result = new Delete(bucket, entity);
      initialize(result);
      return result;
    }

    public class Delete extends StorageRequest<Void> {

      private static final String REST_PATH = "b/{bucket}/acl/{entity}";

      /**
       * Deletes the ACL entry for the specified entity on the specified bucket.
       *
       * Create a request for the method "bucketAccessControls.delete".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @since 1.13
       */
      protected Delete(java.lang.String bucket, java.lang.String entity) {
        super(Storage.this, "DELETE", REST_PATH, null, Void.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Delete setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Delete setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the ACL entry for the specified entity on the specified bucket.
     *
     * Create a request for the method "bucketAccessControls.get".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @return the request
     */
    public Get get(java.lang.String bucket, java.lang.String entity) throws java.io.IOException {
      Get result = new Get(bucket, entity);
      initialize(result);
      return result;
    }

    public class Get extends StorageRequest<com.google.api.services.storage.model.BucketAccessControl> {

      private static final String REST_PATH = "b/{bucket}/acl/{entity}";

      /**
       * Returns the ACL entry for the specified entity on the specified bucket.
       *
       * Create a request for the method "bucketAccessControls.get".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @since 1.13
       */
      protected Get(java.lang.String bucket, java.lang.String entity) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.BucketAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Get setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Get setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a new ACL entry on the specified bucket.
     *
     * Create a request for the method "bucketAccessControls.insert".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
     * @return the request
     */
    public Insert insert(java.lang.String bucket, com.google.api.services.storage.model.BucketAccessControl content) throws java.io.IOException {
      Insert result = new Insert(bucket, content);
      initialize(result);
      return result;
    }

    public class Insert extends StorageRequest<com.google.api.services.storage.model.BucketAccessControl> {

      private static final String REST_PATH = "b/{bucket}/acl";

      /**
       * Creates a new ACL entry on the specified bucket.
       *
       * Create a request for the method "bucketAccessControls.insert".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
       * @since 1.13
       */
      protected Insert(java.lang.String bucket, com.google.api.services.storage.model.BucketAccessControl content) {
        super(Storage.this, "POST", REST_PATH, content, com.google.api.services.storage.model.BucketAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getEntity(), "BucketAccessControl.getEntity()");
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getRole(), "BucketAccessControl.getRole()");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Insert setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves ACL entries on the specified bucket.
     *
     * Create a request for the method "bucketAccessControls.list".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @return the request
     */
    public List list(java.lang.String bucket) throws java.io.IOException {
      List result = new List(bucket);
      initialize(result);
      return result;
    }

    public class List extends StorageRequest<com.google.api.services.storage.model.BucketAccessControls> {

      private static final String REST_PATH = "b/{bucket}/acl";

      /**
       * Retrieves ACL entries on the specified bucket.
       *
       * Create a request for the method "bucketAccessControls.list".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @since 1.13
       */
      protected List(java.lang.String bucket) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.BucketAccessControls.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public List setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an ACL entry on the specified bucket. This method supports patch semantics.
     *
     * Create a request for the method "bucketAccessControls.patch".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
     * @return the request
     */
    public Patch patch(java.lang.String bucket, java.lang.String entity, com.google.api.services.storage.model.BucketAccessControl content) throws java.io.IOException {
      Patch result = new Patch(bucket, entity, content);
      initialize(result);
      return result;
    }

    public class Patch extends StorageRequest<com.google.api.services.storage.model.BucketAccessControl> {

      private static final String REST_PATH = "b/{bucket}/acl/{entity}";

      /**
       * Updates an ACL entry on the specified bucket. This method supports patch semantics.
       *
       * Create a request for the method "bucketAccessControls.patch".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
       * @since 1.13
       */
      protected Patch(java.lang.String bucket, java.lang.String entity, com.google.api.services.storage.model.BucketAccessControl content) {
        super(Storage.this, "PATCH", REST_PATH, content, com.google.api.services.storage.model.BucketAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Patch setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Patch setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates an ACL entry on the specified bucket.
     *
     * Create a request for the method "bucketAccessControls.update".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
     * @return the request
     */
    public Update update(java.lang.String bucket, java.lang.String entity, com.google.api.services.storage.model.BucketAccessControl content) throws java.io.IOException {
      Update result = new Update(bucket, entity, content);
      initialize(result);
      return result;
    }

    public class Update extends StorageRequest<com.google.api.services.storage.model.BucketAccessControl> {

      private static final String REST_PATH = "b/{bucket}/acl/{entity}";

      /**
       * Updates an ACL entry on the specified bucket.
       *
       * Create a request for the method "bucketAccessControls.update".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @param content the {@link com.google.api.services.storage.model.BucketAccessControl}
       * @since 1.13
       */
      protected Update(java.lang.String bucket, java.lang.String entity, com.google.api.services.storage.model.BucketAccessControl content) {
        super(Storage.this, "PUT", REST_PATH, content, com.google.api.services.storage.model.BucketAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Update setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Update setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Buckets collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Storage storage = new Storage(...);}
   *   {@code Storage.Buckets.List request = storage.buckets().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Buckets buckets() {
    return new Buckets();
  }

  /**
   * The "buckets" collection of methods.
   */
  public class Buckets {

    /**
     * Deletes an empty bucket.
     *
     * Create a request for the method "buckets.delete".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @return the request
     */
    public Delete delete(java.lang.String bucket) throws java.io.IOException {
      Delete result = new Delete(bucket);
      initialize(result);
      return result;
    }

    public class Delete extends StorageRequest<Void> {

      private static final String REST_PATH = "b/{bucket}";

      /**
       * Deletes an empty bucket.
       *
       * Create a request for the method "buckets.delete".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @since 1.13
       */
      protected Delete(java.lang.String bucket) {
        super(Storage.this, "DELETE", REST_PATH, null, Void.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Delete setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns metadata for the specified bucket.
     *
     * Create a request for the method "buckets.get".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @return the request
     */
    public Get get(java.lang.String bucket) throws java.io.IOException {
      Get result = new Get(bucket);
      initialize(result);
      return result;
    }

    public class Get extends StorageRequest<com.google.api.services.storage.model.Bucket> {

      private static final String REST_PATH = "b/{bucket}";

      /**
       * Returns metadata for the specified bucket.
       *
       * Create a request for the method "buckets.get".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @since 1.13
       */
      protected Get(java.lang.String bucket) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.Bucket.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Get setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Set of properties to return. Defaults to no_acl. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to no_acl. */
      public Get setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a new bucket.
     *
     * Create a request for the method "buckets.insert".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.storage.model.Bucket}
     * @return the request
     */
    public Insert insert(com.google.api.services.storage.model.Bucket content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends StorageRequest<com.google.api.services.storage.model.Bucket> {

      private static final String REST_PATH = "b";

      /**
       * Creates a new bucket.
       *
       * Create a request for the method "buckets.insert".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.storage.model.Bucket}
       * @since 1.13
       */
      protected Insert(com.google.api.services.storage.model.Bucket content) {
        super(Storage.this, "POST", REST_PATH, content, com.google.api.services.storage.model.Bucket.class);
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getId(), "Bucket.getId()");
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getProjectId(), "Bucket.getProjectId()");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /**
       * Set of properties to return. Defaults to no_acl, unless the bucket resource specifies acl
       * or defaultObjectAcl properties, when it defaults to full.
       */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl, unless the bucket resource specifies acl or
     defaultObjectAcl properties, when it defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /**
       * Set of properties to return. Defaults to no_acl, unless the bucket resource specifies acl
       * or defaultObjectAcl properties, when it defaults to full.
       */
      public Insert setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of buckets for a given project.
     *
     * Create a request for the method "buckets.list".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param projectId A valid API project identifier.
     * @return the request
     */
    public List list(java.math.BigInteger projectId) throws java.io.IOException {
      List result = new List(projectId);
      initialize(result);
      return result;
    }

    public class List extends StorageRequest<com.google.api.services.storage.model.Buckets> {

      private static final String REST_PATH = "b";

      /**
       * Retrieves a list of buckets for a given project.
       *
       * Create a request for the method "buckets.list".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param projectId A valid API project identifier.
       * @since 1.13
       */
      protected List(java.math.BigInteger projectId) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.Buckets.class);
        this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** A valid API project identifier. */
      @com.google.api.client.util.Key
      private java.math.BigInteger projectId;

      /** A valid API project identifier.
       */
      public java.math.BigInteger getProjectId() {
        return projectId;
      }

      /** A valid API project identifier. */
      public List setProjectId(java.math.BigInteger projectId) {
        this.projectId = projectId;
        return this;
      }

      /** Maximum number of buckets to return. */
      @com.google.api.client.util.Key("max-results")
      private java.lang.Long maxResults;

      /** Maximum number of buckets to return.

     [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** Maximum number of buckets to return. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * A previously-returned page token representing part of the larger set of results to view.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A previously-returned page token representing part of the larger set of results to view.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A previously-returned page token representing part of the larger set of results to view.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /** Set of properties to return. Defaults to no_acl. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to no_acl. */
      public List setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a bucket. This method supports patch semantics.
     *
     * Create a request for the method "buckets.patch".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param content the {@link com.google.api.services.storage.model.Bucket}
     * @return the request
     */
    public Patch patch(java.lang.String bucket, com.google.api.services.storage.model.Bucket content) throws java.io.IOException {
      Patch result = new Patch(bucket, content);
      initialize(result);
      return result;
    }

    public class Patch extends StorageRequest<com.google.api.services.storage.model.Bucket> {

      private static final String REST_PATH = "b/{bucket}";

      /**
       * Updates a bucket. This method supports patch semantics.
       *
       * Create a request for the method "buckets.patch".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param content the {@link com.google.api.services.storage.model.Bucket}
       * @since 1.13
       */
      protected Patch(java.lang.String bucket, com.google.api.services.storage.model.Bucket content) {
        super(Storage.this, "PATCH", REST_PATH, content, com.google.api.services.storage.model.Bucket.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Patch setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Set of properties to return. Defaults to full. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to full. */
      public Patch setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a bucket.
     *
     * Create a request for the method "buckets.update".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param content the {@link com.google.api.services.storage.model.Bucket}
     * @return the request
     */
    public Update update(java.lang.String bucket, com.google.api.services.storage.model.Bucket content) throws java.io.IOException {
      Update result = new Update(bucket, content);
      initialize(result);
      return result;
    }

    public class Update extends StorageRequest<com.google.api.services.storage.model.Bucket> {

      private static final String REST_PATH = "b/{bucket}";

      /**
       * Updates a bucket.
       *
       * Create a request for the method "buckets.update".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param content the {@link com.google.api.services.storage.model.Bucket}
       * @since 1.13
       */
      protected Update(java.lang.String bucket, com.google.api.services.storage.model.Bucket content) {
        super(Storage.this, "PUT", REST_PATH, content, com.google.api.services.storage.model.Bucket.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Update setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Set of properties to return. Defaults to full. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to full. */
      public Update setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ObjectAccessControls collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Storage storage = new Storage(...);}
   *   {@code Storage.ObjectAccessControls.List request = storage.objectAccessControls().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ObjectAccessControls objectAccessControls() {
    return new ObjectAccessControls();
  }

  /**
   * The "objectAccessControls" collection of methods.
   */
  public class ObjectAccessControls {

    /**
     * Deletes the ACL entry for the specified entity on the specified object.
     *
     * Create a request for the method "objectAccessControls.delete".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @return the request
     */
    public Delete delete(java.lang.String bucket, java.lang.String object__, java.lang.String entity) throws java.io.IOException {
      Delete result = new Delete(bucket, object__, entity);
      initialize(result);
      return result;
    }

    public class Delete extends StorageRequest<Void> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl/{entity}";

      /**
       * Deletes the ACL entry for the specified entity on the specified object.
       *
       * Create a request for the method "objectAccessControls.delete".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @since 1.13
       */
      protected Delete(java.lang.String bucket, java.lang.String object__, java.lang.String entity) {
        super(Storage.this, "DELETE", REST_PATH, null, Void.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Delete setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Delete setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Delete setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Returns the ACL entry for the specified entity on the specified object.
     *
     * Create a request for the method "objectAccessControls.get".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @return the request
     */
    public Get get(java.lang.String bucket, java.lang.String object__, java.lang.String entity) throws java.io.IOException {
      Get result = new Get(bucket, object__, entity);
      initialize(result);
      return result;
    }

    public class Get extends StorageRequest<com.google.api.services.storage.model.ObjectAccessControl> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl/{entity}";

      /**
       * Returns the ACL entry for the specified entity on the specified object.
       *
       * Create a request for the method "objectAccessControls.get".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @since 1.13
       */
      protected Get(java.lang.String bucket, java.lang.String object__, java.lang.String entity) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.ObjectAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Get setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Get setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Get setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a new ACL entry on the specified object.
     *
     * Create a request for the method "objectAccessControls.insert".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
     * @return the request
     */
    public Insert insert(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.ObjectAccessControl content) throws java.io.IOException {
      Insert result = new Insert(bucket, object__, content);
      initialize(result);
      return result;
    }

    public class Insert extends StorageRequest<com.google.api.services.storage.model.ObjectAccessControl> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl";

      /**
       * Creates a new ACL entry on the specified object.
       *
       * Create a request for the method "objectAccessControls.insert".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
       * @since 1.13
       */
      protected Insert(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.ObjectAccessControl content) {
        super(Storage.this, "POST", REST_PATH, content, com.google.api.services.storage.model.ObjectAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getEntity(), "ObjectAccessControl.getEntity()");
        checkRequiredParameter(content, "content");
        checkRequiredParameter(content.getRole(), "ObjectAccessControl.getRole()");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Insert setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Insert setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves ACL entries on the specified object.
     *
     * Create a request for the method "objectAccessControls.list".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @return the request
     */
    public List list(java.lang.String bucket, java.lang.String object__) throws java.io.IOException {
      List result = new List(bucket, object__);
      initialize(result);
      return result;
    }

    public class List extends StorageRequest<com.google.api.services.storage.model.ObjectAccessControls> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl";

      /**
       * Retrieves ACL entries on the specified object.
       *
       * Create a request for the method "objectAccessControls.list".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @since 1.13
       */
      protected List(java.lang.String bucket, java.lang.String object__) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.ObjectAccessControls.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public List setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public List setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an ACL entry on the specified object. This method supports patch semantics.
     *
     * Create a request for the method "objectAccessControls.patch".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
     * @return the request
     */
    public Patch patch(java.lang.String bucket, java.lang.String object__, java.lang.String entity, com.google.api.services.storage.model.ObjectAccessControl content) throws java.io.IOException {
      Patch result = new Patch(bucket, object__, entity, content);
      initialize(result);
      return result;
    }

    public class Patch extends StorageRequest<com.google.api.services.storage.model.ObjectAccessControl> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl/{entity}";

      /**
       * Updates an ACL entry on the specified object. This method supports patch semantics.
       *
       * Create a request for the method "objectAccessControls.patch".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
       * @since 1.13
       */
      protected Patch(java.lang.String bucket, java.lang.String object__, java.lang.String entity, com.google.api.services.storage.model.ObjectAccessControl content) {
        super(Storage.this, "PATCH", REST_PATH, content, com.google.api.services.storage.model.ObjectAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Patch setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Patch setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Patch setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates an ACL entry on the specified object.
     *
     * Create a request for the method "objectAccessControls.update".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of a bucket.
     * @param object__ Name of the object.
     * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
     * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
     * @return the request
     */
    public Update update(java.lang.String bucket, java.lang.String object__, java.lang.String entity, com.google.api.services.storage.model.ObjectAccessControl content) throws java.io.IOException {
      Update result = new Update(bucket, object__, entity, content);
      initialize(result);
      return result;
    }

    public class Update extends StorageRequest<com.google.api.services.storage.model.ObjectAccessControl> {

      private static final String REST_PATH = "b/{bucket}/o/{object}/acl/{entity}";

      /**
       * Updates an ACL entry on the specified object.
       *
       * Create a request for the method "objectAccessControls.update".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of a bucket.
       * @param object__ Name of the object.
       * @param entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     *        emailAddress, allUsers, or allAuthenticatedUsers.
       * @param content the {@link com.google.api.services.storage.model.ObjectAccessControl}
       * @since 1.13
       */
      protected Update(java.lang.String bucket, java.lang.String object__, java.lang.String entity, com.google.api.services.storage.model.ObjectAccessControl content) {
        super(Storage.this, "PUT", REST_PATH, content, com.google.api.services.storage.model.ObjectAccessControl.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Name of a bucket. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of a bucket.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of a bucket. */
      public Update setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Update setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-
     emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId,
       * group-emailAddress, allUsers, or allAuthenticatedUsers.
       */
      public Update setEntity(java.lang.String entity) {
        this.entity = entity;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Objects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Storage storage = new Storage(...);}
   *   {@code Storage.Objects.List request = storage.objects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Objects objects() {
    return new Objects();
  }

  /**
   * The "objects" collection of methods.
   */
  public class Objects {

    /**
     * Deletes data blobs and associated metadata.
     *
     * Create a request for the method "objects.delete".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which the object resides.
     * @param object__ Name of the object.
     * @return the request
     */
    public Delete delete(java.lang.String bucket, java.lang.String object__) throws java.io.IOException {
      Delete result = new Delete(bucket, object__);
      initialize(result);
      return result;
    }

    public class Delete extends StorageRequest<Void> {

      private static final String REST_PATH = "b/{bucket}/o/{object}";

      /**
       * Deletes data blobs and associated metadata.
       *
       * Create a request for the method "objects.delete".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which the object resides.
       * @param object__ Name of the object.
       * @since 1.13
       */
      protected Delete(java.lang.String bucket, java.lang.String object__) {
        super(Storage.this, "DELETE", REST_PATH, null, Void.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** Name of the bucket in which the object resides. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which the object resides.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of the bucket in which the object resides. */
      public Delete setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Delete setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves objects or their associated metadata.
     *
     * Create a request for the method "objects.get".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which the object resides.
     * @param object__ Name of the object.
     * @return the request
     */
    public Get get(java.lang.String bucket, java.lang.String object__) throws java.io.IOException {
      Get result = new Get(bucket, object__);
      initialize(result);
      return result;
    }

    public class Get extends StorageRequest<com.google.api.services.storage.model.StorageObject> {

      private static final String REST_PATH = "b/{bucket}/o/{object}";

      /**
       * Retrieves objects or their associated metadata.
       *
       * Create a request for the method "objects.get".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which the object resides.
       * @param object__ Name of the object.
       * @since 1.13
       */
      protected Get(java.lang.String bucket, java.lang.String object__) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.StorageObject.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        initializeMediaDownload();
      }

      @Override
      public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
        super.executeMediaAndDownloadTo(outputStream);
      }

      @Override
      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
        return super.executeMediaAsInputStream();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
        return super.executeMedia();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** Name of the bucket in which the object resides. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which the object resides.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of the bucket in which the object resides. */
      public Get setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Get setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /** Set of properties to return. Defaults to no_acl. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to no_acl. */
      public Get setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Stores new data blobs and associated metadata.
     *
     * Create a request for the method "objects.insert".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket
     *        value, if any.
     * @param content the {@link com.google.api.services.storage.model.StorageObject}
     * @return the request
     */
    public Insert insert(java.lang.String bucket, com.google.api.services.storage.model.StorageObject content) throws java.io.IOException {
      Insert result = new Insert(bucket, content);
      initialize(result);
      return result;
    }

    /**
     * Stores new data blobs and associated metadata.
     *
     * Create a request for the method "objects.insert".
     *
     * This request holds the parameters needed by the the storage server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * <p>
     * This method should be used for uploading media content.
     * </p>
     *
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket
     *        value, if any.
     * @param content the {@link com.google.api.services.storage.model.StorageObject} media metadata or {@code null} if none
     * @param mediaContent The media HTTP content or {@code null} if none.
     * @return the request
     * @throws java.io.IOException if the initialization of the request fails
     */
    public Insert insert(java.lang.String bucket, com.google.api.services.storage.model.StorageObject content, com.google.api.client.http.AbstractInputStreamContent mediaContent) throws java.io.IOException {
      Insert result = new Insert(bucket, content, mediaContent);
      initialize(result);
      return result;
    }

    public class Insert extends StorageRequest<com.google.api.services.storage.model.StorageObject> {

      private static final String REST_PATH = "b/{bucket}/o";

      /**
       * Stores new data blobs and associated metadata.
       *
       * Create a request for the method "objects.insert".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket
     *        value, if any.
       * @param content the {@link com.google.api.services.storage.model.StorageObject}
       * @since 1.13
       */
      protected Insert(java.lang.String bucket, com.google.api.services.storage.model.StorageObject content) {
        super(Storage.this, "POST", REST_PATH, content, com.google.api.services.storage.model.StorageObject.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        initializeMediaDownload();
      }

      /**
       * Stores new data blobs and associated metadata.
       *
       * Create a request for the method "objects.insert".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * <p>
       * This constructor should be used for uploading media content.
       * </p>
       *
       * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket
     *        value, if any.
       * @param content the {@link com.google.api.services.storage.model.StorageObject} media metadata or {@code null} if none
       * @param mediaContent The media HTTP content or {@code null} if none.
       * @since 1.13
       */
      protected Insert(java.lang.String bucket, com.google.api.services.storage.model.StorageObject content, com.google.api.client.http.AbstractInputStreamContent mediaContent) {
        super(Storage.this, "POST", "/upload/" + getServicePath() + REST_PATH, content, com.google.api.services.storage.model.StorageObject.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        initializeMediaUpload(mediaContent);
      }

      @Override
      public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
        super.executeMediaAndDownloadTo(outputStream);
      }

      @Override
      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
        return super.executeMediaAsInputStream();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
        return super.executeMedia();
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      /**
       * Name of the bucket in which to store the new object. Overrides the provided object
       * metadata's bucket value, if any.
       */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which to store the new object. Overrides the provided object metadata's
     bucket value, if any.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /**
       * Name of the bucket in which to store the new object. Overrides the provided object
       * metadata's bucket value, if any.
       */
      public Insert setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * Name of the object. Required when the object metadata is not otherwise provided. Overrides
       * the object metadata's name value, if any.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Name of the object. Required when the object metadata is not otherwise provided. Overrides the
     object metadata's name value, if any.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Name of the object. Required when the object metadata is not otherwise provided. Overrides
       * the object metadata's name value, if any.
       */
      public Insert setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      /**
       * Set of properties to return. Defaults to no_acl, unless the object resource specifies the
       * acl property, when it defaults to full.
       */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl, unless the object resource specifies the acl
     property, when it defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /**
       * Set of properties to return. Defaults to no_acl, unless the object resource specifies the
       * acl property, when it defaults to full.
       */
      public Insert setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a list of objects matching the criteria.
     *
     * Create a request for the method "objects.list".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which to look for objects.
     * @return the request
     */
    public List list(java.lang.String bucket) throws java.io.IOException {
      List result = new List(bucket);
      initialize(result);
      return result;
    }

    public class List extends StorageRequest<com.google.api.services.storage.model.Objects> {

      private static final String REST_PATH = "b/{bucket}/o";

      /**
       * Retrieves a list of objects matching the criteria.
       *
       * Create a request for the method "objects.list".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which to look for objects.
       * @since 1.13
       */
      protected List(java.lang.String bucket) {
        super(Storage.this, "GET", REST_PATH, null, com.google.api.services.storage.model.Objects.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /** Name of the bucket in which to look for objects. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which to look for objects.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of the bucket in which to look for objects. */
      public List setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /**
       * Returns results in a directory-like mode. items will contain only objects whose names,
       * aside from the prefix, do not contain delimiter. Objects whose names, aside from the
       * prefix, contain delimiter will have their name, truncated after the delimiter, returned in
       * prefixes. Duplicate prefixes are omitted.
       */
      @com.google.api.client.util.Key
      private java.lang.String delimiter;

      /** Returns results in a directory-like mode. items will contain only objects whose names, aside from
     the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter
     will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are
     omitted.
       */
      public java.lang.String getDelimiter() {
        return delimiter;
      }

      /**
       * Returns results in a directory-like mode. items will contain only objects whose names,
       * aside from the prefix, do not contain delimiter. Objects whose names, aside from the
       * prefix, contain delimiter will have their name, truncated after the delimiter, returned in
       * prefixes. Duplicate prefixes are omitted.
       */
      public List setDelimiter(java.lang.String delimiter) {
        this.delimiter = delimiter;
        return this;
      }

      /**
       * Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer
       * total results may be returned than requested.
       */
      @com.google.api.client.util.Key("max-results")
      private java.lang.Long maxResults;

      /** Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total
     results may be returned than requested.

     [minimum: 0]
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer
       * total results may be returned than requested.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /**
       * A previously-returned page token representing part of the larger set of results to view.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A previously-returned page token representing part of the larger set of results to view.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A previously-returned page token representing part of the larger set of results to view.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /** Filter results to objects whose names begin with this prefix. */
      @com.google.api.client.util.Key
      private java.lang.String prefix;

      /** Filter results to objects whose names begin with this prefix.
       */
      public java.lang.String getPrefix() {
        return prefix;
      }

      /** Filter results to objects whose names begin with this prefix. */
      public List setPrefix(java.lang.String prefix) {
        this.prefix = prefix;
        return this;
      }

      /** Set of properties to return. Defaults to no_acl. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to no_acl.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to no_acl. */
      public List setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a data blob's associated metadata. This method supports patch semantics.
     *
     * Create a request for the method "objects.patch".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which the object resides.
     * @param object__ Name of the object.
     * @param content the {@link com.google.api.services.storage.model.StorageObject}
     * @return the request
     */
    public Patch patch(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.StorageObject content) throws java.io.IOException {
      Patch result = new Patch(bucket, object__, content);
      initialize(result);
      return result;
    }

    public class Patch extends StorageRequest<com.google.api.services.storage.model.StorageObject> {

      private static final String REST_PATH = "b/{bucket}/o/{object}";

      /**
       * Updates a data blob's associated metadata. This method supports patch semantics.
       *
       * Create a request for the method "objects.patch".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which the object resides.
       * @param object__ Name of the object.
       * @param content the {@link com.google.api.services.storage.model.StorageObject}
       * @since 1.13
       */
      protected Patch(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.StorageObject content) {
        super(Storage.this, "PATCH", REST_PATH, content, com.google.api.services.storage.model.StorageObject.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** Name of the bucket in which the object resides. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which the object resides.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of the bucket in which the object resides. */
      public Patch setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Patch setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /** Set of properties to return. Defaults to full. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to full. */
      public Patch setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a data blob's associated metadata.
     *
     * Create a request for the method "objects.update".
     *
     * This request holds the parameters needed by the storage server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param bucket Name of the bucket in which the object resides.
     * @param object__ Name of the object.
     * @param content the {@link com.google.api.services.storage.model.StorageObject}
     * @return the request
     */
    public Update update(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.StorageObject content) throws java.io.IOException {
      Update result = new Update(bucket, object__, content);
      initialize(result);
      return result;
    }

    public class Update extends StorageRequest<com.google.api.services.storage.model.StorageObject> {

      private static final String REST_PATH = "b/{bucket}/o/{object}";

      /**
       * Updates a data blob's associated metadata.
       *
       * Create a request for the method "objects.update".
       *
       * This request holds the parameters needed by the the storage server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucket Name of the bucket in which the object resides.
       * @param object__ Name of the object.
       * @param content the {@link com.google.api.services.storage.model.StorageObject}
       * @since 1.13
       */
      protected Update(java.lang.String bucket, java.lang.String object__, com.google.api.services.storage.model.StorageObject content) {
        super(Storage.this, "PUT", REST_PATH, content, com.google.api.services.storage.model.StorageObject.class);
        this.bucket = com.google.api.client.util.Preconditions.checkNotNull(bucket, "Required parameter bucket must be specified.");
        this.object__ = com.google.api.client.util.Preconditions.checkNotNull(object__, "Required parameter object__ must be specified.");
        initializeMediaDownload();
      }

      @Override
      public void executeMediaAndDownloadTo(java.io.OutputStream outputStream) throws java.io.IOException {
        super.executeMediaAndDownloadTo(outputStream);
      }

      @Override
      public java.io.InputStream executeMediaAsInputStream() throws java.io.IOException {
        return super.executeMediaAsInputStream();
      }

      @Override
      public com.google.api.client.http.HttpResponse executeMedia() throws java.io.IOException {
        return super.executeMedia();
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** Name of the bucket in which the object resides. */
      @com.google.api.client.util.Key
      private java.lang.String bucket;

      /** Name of the bucket in which the object resides.
       */
      public java.lang.String getBucket() {
        return bucket;
      }

      /** Name of the bucket in which the object resides. */
      public Update setBucket(java.lang.String bucket) {
        this.bucket = bucket;
        return this;
      }

      /** Name of the object. */
      @com.google.api.client.util.Key("object")
      private java.lang.String object__;

      /** Name of the object.
       */
      public java.lang.String getObject() {
        return object__;
      }

      /** Name of the object. */
      public Update setObject(java.lang.String object__) {
        this.object__ = object__;
        return this;
      }

      /** Set of properties to return. Defaults to full. */
      @com.google.api.client.util.Key
      private java.lang.String projection;

      /** Set of properties to return. Defaults to full.
       */
      public java.lang.String getProjection() {
        return projection;
      }

      /** Set of properties to return. Defaults to full. */
      public Update setProjection(java.lang.String projection) {
        this.projection = projection;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Storage}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Storage}. */
    @Override
    public Storage build() {
      return new Storage(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link StorageRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setStorageRequestInitializer(
        StorageRequestInitializer storageRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(storageRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
