/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v1;

/**
 * Service definition for IdentityToolkit (v1).
 *
 * <p>
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://firebase.google.com/docs/auth/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link IdentityToolkitRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class IdentityToolkit extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Identity Toolkit API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://identitytoolkit.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://identitytoolkit.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public IdentityToolkit(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  IdentityToolkit(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.Accounts.List request = identitytoolkit.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * If an email identifier is specified, checks and returns if any user account is registered with
     * the email. If there is a registered account, fetches all providers associated with the account's
     * email. If the provider ID of an Identity Provider (IdP) is specified, creates an authorization
     * URI for the IdP. The user can be directed to this URI to sign in with the IdP. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.createAuthUri".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link CreateAuthUri#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriRequest}
     * @return the request
     */
    public CreateAuthUri createAuthUri(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriRequest content) throws java.io.IOException {
      CreateAuthUri result = new CreateAuthUri(content);
      initialize(result);
      return result;
    }

    public class CreateAuthUri extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriResponse> {

      private static final String REST_PATH = "v1/accounts:createAuthUri";

      /**
       * If an email identifier is specified, checks and returns if any user account is registered with
       * the email. If there is a registered account, fetches all providers associated with the
       * account's email. If the provider ID of an Identity Provider (IdP) is specified, creates an
       * authorization URI for the IdP. The user can be directed to this URI to sign in with the IdP. An
       * [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in
       * order to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.createAuthUri".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link CreateAuthUri#execute()} method to invoke the remote
       * operation. <p> {@link CreateAuthUri#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriRequest}
       * @since 1.13
       */
      protected CreateAuthUri(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateAuthUriResponse.class);
      }

      @Override
      public CreateAuthUri set$Xgafv(java.lang.String $Xgafv) {
        return (CreateAuthUri) super.set$Xgafv($Xgafv);
      }

      @Override
      public CreateAuthUri setAccessToken(java.lang.String accessToken) {
        return (CreateAuthUri) super.setAccessToken(accessToken);
      }

      @Override
      public CreateAuthUri setAlt(java.lang.String alt) {
        return (CreateAuthUri) super.setAlt(alt);
      }

      @Override
      public CreateAuthUri setCallback(java.lang.String callback) {
        return (CreateAuthUri) super.setCallback(callback);
      }

      @Override
      public CreateAuthUri setFields(java.lang.String fields) {
        return (CreateAuthUri) super.setFields(fields);
      }

      @Override
      public CreateAuthUri setKey(java.lang.String key) {
        return (CreateAuthUri) super.setKey(key);
      }

      @Override
      public CreateAuthUri setOauthToken(java.lang.String oauthToken) {
        return (CreateAuthUri) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateAuthUri setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateAuthUri) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateAuthUri setQuotaUser(java.lang.String quotaUser) {
        return (CreateAuthUri) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateAuthUri setUploadType(java.lang.String uploadType) {
        return (CreateAuthUri) super.setUploadType(uploadType);
      }

      @Override
      public CreateAuthUri setUploadProtocol(java.lang.String uploadProtocol) {
        return (CreateAuthUri) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public CreateAuthUri set(String parameterName, Object value) {
        return (CreateAuthUri) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a user's account.
     *
     * Create a request for the method "accounts.delete".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
     * @return the request
     */
    public Delete delete(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) throws java.io.IOException {
      Delete result = new Delete(content);
      initialize(result);
      return result;
    }

    public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse> {

      private static final String REST_PATH = "v1/accounts:delete";

      /**
       * Deletes a user's account.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
       * @since 1.13
       */
      protected Delete(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse.class);
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Experimental
     *
     * Create a request for the method "accounts.issueSamlResponse".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link IssueSamlResponse#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest}
     * @return the request
     */
    public IssueSamlResponse issueSamlResponse(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest content) throws java.io.IOException {
      IssueSamlResponse result = new IssueSamlResponse(content);
      initialize(result);
      return result;
    }

    public class IssueSamlResponse extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse> {

      private static final String REST_PATH = "v1/accounts:issueSamlResponse";

      /**
       * Experimental
       *
       * Create a request for the method "accounts.issueSamlResponse".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link IssueSamlResponse#execute()} method to invoke the remote
       * operation. <p> {@link IssueSamlResponse#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest}
       * @since 1.13
       */
      protected IssueSamlResponse(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1IssueSamlResponseResponse.class);
      }

      @Override
      public IssueSamlResponse set$Xgafv(java.lang.String $Xgafv) {
        return (IssueSamlResponse) super.set$Xgafv($Xgafv);
      }

      @Override
      public IssueSamlResponse setAccessToken(java.lang.String accessToken) {
        return (IssueSamlResponse) super.setAccessToken(accessToken);
      }

      @Override
      public IssueSamlResponse setAlt(java.lang.String alt) {
        return (IssueSamlResponse) super.setAlt(alt);
      }

      @Override
      public IssueSamlResponse setCallback(java.lang.String callback) {
        return (IssueSamlResponse) super.setCallback(callback);
      }

      @Override
      public IssueSamlResponse setFields(java.lang.String fields) {
        return (IssueSamlResponse) super.setFields(fields);
      }

      @Override
      public IssueSamlResponse setKey(java.lang.String key) {
        return (IssueSamlResponse) super.setKey(key);
      }

      @Override
      public IssueSamlResponse setOauthToken(java.lang.String oauthToken) {
        return (IssueSamlResponse) super.setOauthToken(oauthToken);
      }

      @Override
      public IssueSamlResponse setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (IssueSamlResponse) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public IssueSamlResponse setQuotaUser(java.lang.String quotaUser) {
        return (IssueSamlResponse) super.setQuotaUser(quotaUser);
      }

      @Override
      public IssueSamlResponse setUploadType(java.lang.String uploadType) {
        return (IssueSamlResponse) super.setUploadType(uploadType);
      }

      @Override
      public IssueSamlResponse setUploadProtocol(java.lang.String uploadProtocol) {
        return (IssueSamlResponse) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public IssueSamlResponse set(String parameterName, Object value) {
        return (IssueSamlResponse) super.set(parameterName, value);
      }
    }
    /**
     * Gets account information for all matched accounts. For an end user request, retrieves the account
     * of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple
     * account(s) with matching criteria.
     *
     * Create a request for the method "accounts.lookup".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
     * @return the request
     */
    public Lookup lookup(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) throws java.io.IOException {
      Lookup result = new Lookup(content);
      initialize(result);
      return result;
    }

    public class Lookup extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse> {

      private static final String REST_PATH = "v1/accounts:lookup";

      /**
       * Gets account information for all matched accounts. For an end user request, retrieves the
       * account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one
       * or multiple account(s) with matching criteria.
       *
       * Create a request for the method "accounts.lookup".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
       * <p> {@link
       * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
       * @since 1.13
       */
      protected Lookup(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse.class);
      }

      @Override
      public Lookup set$Xgafv(java.lang.String $Xgafv) {
        return (Lookup) super.set$Xgafv($Xgafv);
      }

      @Override
      public Lookup setAccessToken(java.lang.String accessToken) {
        return (Lookup) super.setAccessToken(accessToken);
      }

      @Override
      public Lookup setAlt(java.lang.String alt) {
        return (Lookup) super.setAlt(alt);
      }

      @Override
      public Lookup setCallback(java.lang.String callback) {
        return (Lookup) super.setCallback(callback);
      }

      @Override
      public Lookup setFields(java.lang.String fields) {
        return (Lookup) super.setFields(fields);
      }

      @Override
      public Lookup setKey(java.lang.String key) {
        return (Lookup) super.setKey(key);
      }

      @Override
      public Lookup setOauthToken(java.lang.String oauthToken) {
        return (Lookup) super.setOauthToken(oauthToken);
      }

      @Override
      public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Lookup) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Lookup setQuotaUser(java.lang.String quotaUser) {
        return (Lookup) super.setQuotaUser(quotaUser);
      }

      @Override
      public Lookup setUploadType(java.lang.String uploadType) {
        return (Lookup) super.setUploadType(uploadType);
      }

      @Override
      public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
        return (Lookup) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Lookup set(String parameterName, Object value) {
        return (Lookup) super.set(parameterName, value);
      }
    }
    /**
     * Resets the password of an account either using an out-of-band code generated by sendOobCode or by
     * specifying the email and password of the account to be modified. Can also check the purpose of an
     * out-of-band code without consuming it.
     *
     * Create a request for the method "accounts.resetPassword".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link ResetPassword#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordRequest}
     * @return the request
     */
    public ResetPassword resetPassword(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordRequest content) throws java.io.IOException {
      ResetPassword result = new ResetPassword(content);
      initialize(result);
      return result;
    }

    public class ResetPassword extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordResponse> {

      private static final String REST_PATH = "v1/accounts:resetPassword";

      /**
       * Resets the password of an account either using an out-of-band code generated by sendOobCode or
       * by specifying the email and password of the account to be modified. Can also check the purpose
       * of an out-of-band code without consuming it.
       *
       * Create a request for the method "accounts.resetPassword".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link ResetPassword#execute()} method to invoke the remote
       * operation. <p> {@link ResetPassword#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordRequest}
       * @since 1.13
       */
      protected ResetPassword(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1ResetPasswordResponse.class);
      }

      @Override
      public ResetPassword set$Xgafv(java.lang.String $Xgafv) {
        return (ResetPassword) super.set$Xgafv($Xgafv);
      }

      @Override
      public ResetPassword setAccessToken(java.lang.String accessToken) {
        return (ResetPassword) super.setAccessToken(accessToken);
      }

      @Override
      public ResetPassword setAlt(java.lang.String alt) {
        return (ResetPassword) super.setAlt(alt);
      }

      @Override
      public ResetPassword setCallback(java.lang.String callback) {
        return (ResetPassword) super.setCallback(callback);
      }

      @Override
      public ResetPassword setFields(java.lang.String fields) {
        return (ResetPassword) super.setFields(fields);
      }

      @Override
      public ResetPassword setKey(java.lang.String key) {
        return (ResetPassword) super.setKey(key);
      }

      @Override
      public ResetPassword setOauthToken(java.lang.String oauthToken) {
        return (ResetPassword) super.setOauthToken(oauthToken);
      }

      @Override
      public ResetPassword setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ResetPassword) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ResetPassword setQuotaUser(java.lang.String quotaUser) {
        return (ResetPassword) super.setQuotaUser(quotaUser);
      }

      @Override
      public ResetPassword setUploadType(java.lang.String uploadType) {
        return (ResetPassword) super.setUploadType(uploadType);
      }

      @Override
      public ResetPassword setUploadProtocol(java.lang.String uploadProtocol) {
        return (ResetPassword) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ResetPassword set(String parameterName, Object value) {
        return (ResetPassword) super.set(parameterName, value);
      }
    }
    /**
     * Sends an out-of-band confirmation code for an account. Requests from a authenticated request can
     * optionally return a link including the OOB code instead of sending it.
     *
     * Create a request for the method "accounts.sendOobCode".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
     * @return the request
     */
    public SendOobCode sendOobCode(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) throws java.io.IOException {
      SendOobCode result = new SendOobCode(content);
      initialize(result);
      return result;
    }

    public class SendOobCode extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse> {

      private static final String REST_PATH = "v1/accounts:sendOobCode";

      /**
       * Sends an out-of-band confirmation code for an account. Requests from a authenticated request
       * can optionally return a link including the OOB code instead of sending it.
       *
       * Create a request for the method "accounts.sendOobCode".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
       * operation. <p> {@link
       * SendOobCode#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
       * @since 1.13
       */
      protected SendOobCode(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse.class);
      }

      @Override
      public SendOobCode set$Xgafv(java.lang.String $Xgafv) {
        return (SendOobCode) super.set$Xgafv($Xgafv);
      }

      @Override
      public SendOobCode setAccessToken(java.lang.String accessToken) {
        return (SendOobCode) super.setAccessToken(accessToken);
      }

      @Override
      public SendOobCode setAlt(java.lang.String alt) {
        return (SendOobCode) super.setAlt(alt);
      }

      @Override
      public SendOobCode setCallback(java.lang.String callback) {
        return (SendOobCode) super.setCallback(callback);
      }

      @Override
      public SendOobCode setFields(java.lang.String fields) {
        return (SendOobCode) super.setFields(fields);
      }

      @Override
      public SendOobCode setKey(java.lang.String key) {
        return (SendOobCode) super.setKey(key);
      }

      @Override
      public SendOobCode setOauthToken(java.lang.String oauthToken) {
        return (SendOobCode) super.setOauthToken(oauthToken);
      }

      @Override
      public SendOobCode setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendOobCode) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendOobCode setQuotaUser(java.lang.String quotaUser) {
        return (SendOobCode) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendOobCode setUploadType(java.lang.String uploadType) {
        return (SendOobCode) super.setUploadType(uploadType);
      }

      @Override
      public SendOobCode setUploadProtocol(java.lang.String uploadProtocol) {
        return (SendOobCode) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SendOobCode set(String parameterName, Object value) {
        return (SendOobCode) super.set(parameterName, value);
      }
    }
    /**
     * Sends a SMS verification code for phone number sign-in. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.sendVerificationCode".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SendVerificationCode#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest}
     * @return the request
     */
    public SendVerificationCode sendVerificationCode(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest content) throws java.io.IOException {
      SendVerificationCode result = new SendVerificationCode(content);
      initialize(result);
      return result;
    }

    public class SendVerificationCode extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse> {

      private static final String REST_PATH = "v1/accounts:sendVerificationCode";

      /**
       * Sends a SMS verification code for phone number sign-in. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.sendVerificationCode".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SendVerificationCode#execute()} method to invoke the
       * remote operation. <p> {@link SendVerificationCode#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest}
       * @since 1.13
       */
      protected SendVerificationCode(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SendVerificationCodeResponse.class);
      }

      @Override
      public SendVerificationCode set$Xgafv(java.lang.String $Xgafv) {
        return (SendVerificationCode) super.set$Xgafv($Xgafv);
      }

      @Override
      public SendVerificationCode setAccessToken(java.lang.String accessToken) {
        return (SendVerificationCode) super.setAccessToken(accessToken);
      }

      @Override
      public SendVerificationCode setAlt(java.lang.String alt) {
        return (SendVerificationCode) super.setAlt(alt);
      }

      @Override
      public SendVerificationCode setCallback(java.lang.String callback) {
        return (SendVerificationCode) super.setCallback(callback);
      }

      @Override
      public SendVerificationCode setFields(java.lang.String fields) {
        return (SendVerificationCode) super.setFields(fields);
      }

      @Override
      public SendVerificationCode setKey(java.lang.String key) {
        return (SendVerificationCode) super.setKey(key);
      }

      @Override
      public SendVerificationCode setOauthToken(java.lang.String oauthToken) {
        return (SendVerificationCode) super.setOauthToken(oauthToken);
      }

      @Override
      public SendVerificationCode setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendVerificationCode) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendVerificationCode setQuotaUser(java.lang.String quotaUser) {
        return (SendVerificationCode) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendVerificationCode setUploadType(java.lang.String uploadType) {
        return (SendVerificationCode) super.setUploadType(uploadType);
      }

      @Override
      public SendVerificationCode setUploadProtocol(java.lang.String uploadProtocol) {
        return (SendVerificationCode) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SendVerificationCode set(String parameterName, Object value) {
        return (SendVerificationCode) super.set(parameterName, value);
      }
    }
    /**
     * Signs in or signs up a user by exchanging a custom Auth token. Upon a successful sign-in or sign-
     * up, a new Identity Platform ID token and refresh token are issued for the user. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithCustomToken".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithCustomToken#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest}
     * @return the request
     */
    public SignInWithCustomToken signInWithCustomToken(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest content) throws java.io.IOException {
      SignInWithCustomToken result = new SignInWithCustomToken(content);
      initialize(result);
      return result;
    }

    public class SignInWithCustomToken extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithCustomToken";

      /**
       * Signs in or signs up a user by exchanging a custom Auth token. Upon a successful sign-in or
       * sign-up, a new Identity Platform ID token and refresh token are issued for the user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithCustomToken".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithCustomToken#execute()} method to invoke the
       * remote operation. <p> {@link SignInWithCustomToken#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest}
       * @since 1.13
       */
      protected SignInWithCustomToken(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithCustomTokenResponse.class);
      }

      @Override
      public SignInWithCustomToken set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithCustomToken) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithCustomToken setAccessToken(java.lang.String accessToken) {
        return (SignInWithCustomToken) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithCustomToken setAlt(java.lang.String alt) {
        return (SignInWithCustomToken) super.setAlt(alt);
      }

      @Override
      public SignInWithCustomToken setCallback(java.lang.String callback) {
        return (SignInWithCustomToken) super.setCallback(callback);
      }

      @Override
      public SignInWithCustomToken setFields(java.lang.String fields) {
        return (SignInWithCustomToken) super.setFields(fields);
      }

      @Override
      public SignInWithCustomToken setKey(java.lang.String key) {
        return (SignInWithCustomToken) super.setKey(key);
      }

      @Override
      public SignInWithCustomToken setOauthToken(java.lang.String oauthToken) {
        return (SignInWithCustomToken) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithCustomToken setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithCustomToken) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithCustomToken setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithCustomToken) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithCustomToken setUploadType(java.lang.String uploadType) {
        return (SignInWithCustomToken) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithCustomToken setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithCustomToken) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithCustomToken set(String parameterName, Object value) {
        return (SignInWithCustomToken) super.set(parameterName, value);
      }
    }
    /**
     * Signs in or signs up a user with a out-of-band code from an email link. If a user does not exist
     * with the given email address, a user record will be created. If the sign-in succeeds, an Identity
     * Platform ID and refresh token are issued for the authenticated user. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithEmailLink".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithEmailLink#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest}
     * @return the request
     */
    public SignInWithEmailLink signInWithEmailLink(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest content) throws java.io.IOException {
      SignInWithEmailLink result = new SignInWithEmailLink(content);
      initialize(result);
      return result;
    }

    public class SignInWithEmailLink extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithEmailLink";

      /**
       * Signs in or signs up a user with a out-of-band code from an email link. If a user does not
       * exist with the given email address, a user record will be created. If the sign-in succeeds, an
       * Identity Platform ID and refresh token are issued for the authenticated user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithEmailLink".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithEmailLink#execute()} method to invoke the remote
       * operation. <p> {@link SignInWithEmailLink#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest}
       * @since 1.13
       */
      protected SignInWithEmailLink(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithEmailLinkResponse.class);
      }

      @Override
      public SignInWithEmailLink set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithEmailLink) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithEmailLink setAccessToken(java.lang.String accessToken) {
        return (SignInWithEmailLink) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithEmailLink setAlt(java.lang.String alt) {
        return (SignInWithEmailLink) super.setAlt(alt);
      }

      @Override
      public SignInWithEmailLink setCallback(java.lang.String callback) {
        return (SignInWithEmailLink) super.setCallback(callback);
      }

      @Override
      public SignInWithEmailLink setFields(java.lang.String fields) {
        return (SignInWithEmailLink) super.setFields(fields);
      }

      @Override
      public SignInWithEmailLink setKey(java.lang.String key) {
        return (SignInWithEmailLink) super.setKey(key);
      }

      @Override
      public SignInWithEmailLink setOauthToken(java.lang.String oauthToken) {
        return (SignInWithEmailLink) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithEmailLink setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithEmailLink) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithEmailLink setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithEmailLink) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithEmailLink setUploadType(java.lang.String uploadType) {
        return (SignInWithEmailLink) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithEmailLink setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithEmailLink) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithEmailLink set(String parameterName, Object value) {
        return (SignInWithEmailLink) super.set(parameterName, value);
      }
    }
    /**
     * Signs in or signs up a user with iOS Game Center credentials. If the sign-in succeeds, a new
     * Identity Platform ID token and refresh token are issued for the authenticated user. The bundle ID
     * is required in the request header as `x-ios-bundle-identifier`. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithGameCenter".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithGameCenter#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest}
     * @return the request
     */
    public SignInWithGameCenter signInWithGameCenter(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest content) throws java.io.IOException {
      SignInWithGameCenter result = new SignInWithGameCenter(content);
      initialize(result);
      return result;
    }

    public class SignInWithGameCenter extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithGameCenter";

      /**
       * Signs in or signs up a user with iOS Game Center credentials. If the sign-in succeeds, a new
       * Identity Platform ID token and refresh token are issued for the authenticated user. The bundle
       * ID is required in the request header as `x-ios-bundle-identifier`. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithGameCenter".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithGameCenter#execute()} method to invoke the
       * remote operation. <p> {@link SignInWithGameCenter#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest}
       * @since 1.13
       */
      protected SignInWithGameCenter(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithGameCenterResponse.class);
      }

      @Override
      public SignInWithGameCenter set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithGameCenter) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithGameCenter setAccessToken(java.lang.String accessToken) {
        return (SignInWithGameCenter) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithGameCenter setAlt(java.lang.String alt) {
        return (SignInWithGameCenter) super.setAlt(alt);
      }

      @Override
      public SignInWithGameCenter setCallback(java.lang.String callback) {
        return (SignInWithGameCenter) super.setCallback(callback);
      }

      @Override
      public SignInWithGameCenter setFields(java.lang.String fields) {
        return (SignInWithGameCenter) super.setFields(fields);
      }

      @Override
      public SignInWithGameCenter setKey(java.lang.String key) {
        return (SignInWithGameCenter) super.setKey(key);
      }

      @Override
      public SignInWithGameCenter setOauthToken(java.lang.String oauthToken) {
        return (SignInWithGameCenter) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithGameCenter setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithGameCenter) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithGameCenter setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithGameCenter) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithGameCenter setUploadType(java.lang.String uploadType) {
        return (SignInWithGameCenter) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithGameCenter setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithGameCenter) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithGameCenter set(String parameterName, Object value) {
        return (SignInWithGameCenter) super.set(parameterName, value);
      }
    }
    /**
     * Signs in or signs up a user using credentials from an Identity Provider (IdP). This is done by
     * manually providing an IdP credential, or by providing the authorization response obtained via the
     * authorization request from CreateAuthUri. If the sign-in succeeds, a new Identity Platform ID
     * token and refresh token are issued for the authenticated user. A new Identity Platform user
     * account will be created if the user has not previously signed in to the IdP with the same
     * account. In addition, when the "One account per email address" setting is enabled, there should
     * not be an existing Identity Platform user account with the same email address for a new user
     * account to be created. An [API key](https://cloud.google.com/docs/authentication/api-keys) is
     * required in the request in order to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithIdp".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithIdp#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpRequest}
     * @return the request
     */
    public SignInWithIdp signInWithIdp(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpRequest content) throws java.io.IOException {
      SignInWithIdp result = new SignInWithIdp(content);
      initialize(result);
      return result;
    }

    public class SignInWithIdp extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithIdp";

      /**
       * Signs in or signs up a user using credentials from an Identity Provider (IdP). This is done by
       * manually providing an IdP credential, or by providing the authorization response obtained via
       * the authorization request from CreateAuthUri. If the sign-in succeeds, a new Identity Platform
       * ID token and refresh token are issued for the authenticated user. A new Identity Platform user
       * account will be created if the user has not previously signed in to the IdP with the same
       * account. In addition, when the "One account per email address" setting is enabled, there should
       * not be an existing Identity Platform user account with the same email address for a new user
       * account to be created. An [API key](https://cloud.google.com/docs/authentication/api-keys) is
       * required in the request in order to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithIdp".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithIdp#execute()} method to invoke the remote
       * operation. <p> {@link SignInWithIdp#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpRequest}
       * @since 1.13
       */
      protected SignInWithIdp(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithIdpResponse.class);
      }

      @Override
      public SignInWithIdp set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithIdp) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithIdp setAccessToken(java.lang.String accessToken) {
        return (SignInWithIdp) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithIdp setAlt(java.lang.String alt) {
        return (SignInWithIdp) super.setAlt(alt);
      }

      @Override
      public SignInWithIdp setCallback(java.lang.String callback) {
        return (SignInWithIdp) super.setCallback(callback);
      }

      @Override
      public SignInWithIdp setFields(java.lang.String fields) {
        return (SignInWithIdp) super.setFields(fields);
      }

      @Override
      public SignInWithIdp setKey(java.lang.String key) {
        return (SignInWithIdp) super.setKey(key);
      }

      @Override
      public SignInWithIdp setOauthToken(java.lang.String oauthToken) {
        return (SignInWithIdp) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithIdp setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithIdp) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithIdp setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithIdp) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithIdp setUploadType(java.lang.String uploadType) {
        return (SignInWithIdp) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithIdp setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithIdp) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithIdp set(String parameterName, Object value) {
        return (SignInWithIdp) super.set(parameterName, value);
      }
    }
    /**
     * Signs in a user with email and password. If the sign-in succeeds, a new Identity Platform ID
     * token and refresh token are issued for the authenticated user. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithPassword".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithPassword#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest}
     * @return the request
     */
    public SignInWithPassword signInWithPassword(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest content) throws java.io.IOException {
      SignInWithPassword result = new SignInWithPassword(content);
      initialize(result);
      return result;
    }

    public class SignInWithPassword extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithPassword";

      /**
       * Signs in a user with email and password. If the sign-in succeeds, a new Identity Platform ID
       * token and refresh token are issued for the authenticated user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithPassword".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithPassword#execute()} method to invoke the remote
       * operation. <p> {@link SignInWithPassword#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest}
       * @since 1.13
       */
      protected SignInWithPassword(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPasswordResponse.class);
      }

      @Override
      public SignInWithPassword set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithPassword) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithPassword setAccessToken(java.lang.String accessToken) {
        return (SignInWithPassword) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithPassword setAlt(java.lang.String alt) {
        return (SignInWithPassword) super.setAlt(alt);
      }

      @Override
      public SignInWithPassword setCallback(java.lang.String callback) {
        return (SignInWithPassword) super.setCallback(callback);
      }

      @Override
      public SignInWithPassword setFields(java.lang.String fields) {
        return (SignInWithPassword) super.setFields(fields);
      }

      @Override
      public SignInWithPassword setKey(java.lang.String key) {
        return (SignInWithPassword) super.setKey(key);
      }

      @Override
      public SignInWithPassword setOauthToken(java.lang.String oauthToken) {
        return (SignInWithPassword) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithPassword setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithPassword) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithPassword setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithPassword) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithPassword setUploadType(java.lang.String uploadType) {
        return (SignInWithPassword) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithPassword setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithPassword) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithPassword set(String parameterName, Object value) {
        return (SignInWithPassword) super.set(parameterName, value);
      }
    }
    /**
     * Completes a phone number authentication attempt. If a user already exists with the given phone
     * number, an ID token is minted for that user. Otherwise, a new user is created and associated with
     * the phone number. This method may also be used to link a phone number to an existing user. An
     * [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in
     * order to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signInWithPhoneNumber".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignInWithPhoneNumber#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest}
     * @return the request
     */
    public SignInWithPhoneNumber signInWithPhoneNumber(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest content) throws java.io.IOException {
      SignInWithPhoneNumber result = new SignInWithPhoneNumber(content);
      initialize(result);
      return result;
    }

    public class SignInWithPhoneNumber extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse> {

      private static final String REST_PATH = "v1/accounts:signInWithPhoneNumber";

      /**
       * Completes a phone number authentication attempt. If a user already exists with the given phone
       * number, an ID token is minted for that user. Otherwise, a new user is created and associated
       * with the phone number. This method may also be used to link a phone number to an existing user.
       * An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request
       * in order to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signInWithPhoneNumber".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignInWithPhoneNumber#execute()} method to invoke the
       * remote operation. <p> {@link SignInWithPhoneNumber#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest}
       * @since 1.13
       */
      protected SignInWithPhoneNumber(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse.class);
      }

      @Override
      public SignInWithPhoneNumber set$Xgafv(java.lang.String $Xgafv) {
        return (SignInWithPhoneNumber) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignInWithPhoneNumber setAccessToken(java.lang.String accessToken) {
        return (SignInWithPhoneNumber) super.setAccessToken(accessToken);
      }

      @Override
      public SignInWithPhoneNumber setAlt(java.lang.String alt) {
        return (SignInWithPhoneNumber) super.setAlt(alt);
      }

      @Override
      public SignInWithPhoneNumber setCallback(java.lang.String callback) {
        return (SignInWithPhoneNumber) super.setCallback(callback);
      }

      @Override
      public SignInWithPhoneNumber setFields(java.lang.String fields) {
        return (SignInWithPhoneNumber) super.setFields(fields);
      }

      @Override
      public SignInWithPhoneNumber setKey(java.lang.String key) {
        return (SignInWithPhoneNumber) super.setKey(key);
      }

      @Override
      public SignInWithPhoneNumber setOauthToken(java.lang.String oauthToken) {
        return (SignInWithPhoneNumber) super.setOauthToken(oauthToken);
      }

      @Override
      public SignInWithPhoneNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignInWithPhoneNumber) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignInWithPhoneNumber setQuotaUser(java.lang.String quotaUser) {
        return (SignInWithPhoneNumber) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignInWithPhoneNumber setUploadType(java.lang.String uploadType) {
        return (SignInWithPhoneNumber) super.setUploadType(uploadType);
      }

      @Override
      public SignInWithPhoneNumber setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignInWithPhoneNumber) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignInWithPhoneNumber set(String parameterName, Object value) {
        return (SignInWithPhoneNumber) super.set(parameterName, value);
      }
    }
    /**
     * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email
     * and password. For an admin request with a Google OAuth 2.0 credential with the proper
     * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
     * anonymous, email and password, or phone number user. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.signUp".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link SignUp#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
     * @return the request
     */
    public SignUp signUp(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) throws java.io.IOException {
      SignUp result = new SignUp(content);
      initialize(result);
      return result;
    }

    public class SignUp extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse> {

      private static final String REST_PATH = "v1/accounts:signUp";

      /**
       * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to
       * email and password. For an admin request with a Google OAuth 2.0 credential with the proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
       * anonymous, email and password, or phone number user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.signUp".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SignUp#execute()} method to invoke the remote operation.
       * <p> {@link
       * SignUp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
       * @since 1.13
       */
      protected SignUp(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse.class);
      }

      @Override
      public SignUp set$Xgafv(java.lang.String $Xgafv) {
        return (SignUp) super.set$Xgafv($Xgafv);
      }

      @Override
      public SignUp setAccessToken(java.lang.String accessToken) {
        return (SignUp) super.setAccessToken(accessToken);
      }

      @Override
      public SignUp setAlt(java.lang.String alt) {
        return (SignUp) super.setAlt(alt);
      }

      @Override
      public SignUp setCallback(java.lang.String callback) {
        return (SignUp) super.setCallback(callback);
      }

      @Override
      public SignUp setFields(java.lang.String fields) {
        return (SignUp) super.setFields(fields);
      }

      @Override
      public SignUp setKey(java.lang.String key) {
        return (SignUp) super.setKey(key);
      }

      @Override
      public SignUp setOauthToken(java.lang.String oauthToken) {
        return (SignUp) super.setOauthToken(oauthToken);
      }

      @Override
      public SignUp setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SignUp) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SignUp setQuotaUser(java.lang.String quotaUser) {
        return (SignUp) super.setQuotaUser(quotaUser);
      }

      @Override
      public SignUp setUploadType(java.lang.String uploadType) {
        return (SignUp) super.setUploadType(uploadType);
      }

      @Override
      public SignUp setUploadProtocol(java.lang.String uploadProtocol) {
        return (SignUp) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SignUp set(String parameterName, Object value) {
        return (SignUp) super.set(parameterName, value);
      }
    }
    /**
     * Updates account-related information for the specified user by setting specific fields or applying
     * action codes. Requests from administrators and end users are supported.
     *
     * Create a request for the method "accounts.update".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
     * @return the request
     */
    public Update update(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse> {

      private static final String REST_PATH = "v1/accounts:update";

      /**
       * Updates account-related information for the specified user by setting specific fields or
       * applying action codes. Requests from administrators and end users are supported.
       *
       * Create a request for the method "accounts.update".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
       * @since 1.13
       */
      protected Update(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse.class);
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Verifies an iOS client is a real iOS device. If the request is valid, a reciept will be sent in
     * the response and a secret will be sent via Apple Push Notification Service. The client should
     * send both of them back to certain Identity Platform APIs in a later call (for example,
     * /accounts:sendVerificationCode), in order to verify the client. The bundle ID is required in the
     * request header as `x-ios-bundle-identifier`. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "accounts.verifyIosClient".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link VerifyIosClient#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientRequest}
     * @return the request
     */
    public VerifyIosClient verifyIosClient(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientRequest content) throws java.io.IOException {
      VerifyIosClient result = new VerifyIosClient(content);
      initialize(result);
      return result;
    }

    public class VerifyIosClient extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientResponse> {

      private static final String REST_PATH = "v1/accounts:verifyIosClient";

      /**
       * Verifies an iOS client is a real iOS device. If the request is valid, a reciept will be sent in
       * the response and a secret will be sent via Apple Push Notification Service. The client should
       * send both of them back to certain Identity Platform APIs in a later call (for example,
       * /accounts:sendVerificationCode), in order to verify the client. The bundle ID is required in
       * the request header as `x-ios-bundle-identifier`. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "accounts.verifyIosClient".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link VerifyIosClient#execute()} method to invoke the remote
       * operation. <p> {@link VerifyIosClient#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientRequest}
       * @since 1.13
       */
      protected VerifyIosClient(com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1VerifyIosClientResponse.class);
      }

      @Override
      public VerifyIosClient set$Xgafv(java.lang.String $Xgafv) {
        return (VerifyIosClient) super.set$Xgafv($Xgafv);
      }

      @Override
      public VerifyIosClient setAccessToken(java.lang.String accessToken) {
        return (VerifyIosClient) super.setAccessToken(accessToken);
      }

      @Override
      public VerifyIosClient setAlt(java.lang.String alt) {
        return (VerifyIosClient) super.setAlt(alt);
      }

      @Override
      public VerifyIosClient setCallback(java.lang.String callback) {
        return (VerifyIosClient) super.setCallback(callback);
      }

      @Override
      public VerifyIosClient setFields(java.lang.String fields) {
        return (VerifyIosClient) super.setFields(fields);
      }

      @Override
      public VerifyIosClient setKey(java.lang.String key) {
        return (VerifyIosClient) super.setKey(key);
      }

      @Override
      public VerifyIosClient setOauthToken(java.lang.String oauthToken) {
        return (VerifyIosClient) super.setOauthToken(oauthToken);
      }

      @Override
      public VerifyIosClient setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (VerifyIosClient) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public VerifyIosClient setQuotaUser(java.lang.String quotaUser) {
        return (VerifyIosClient) super.setQuotaUser(quotaUser);
      }

      @Override
      public VerifyIosClient setUploadType(java.lang.String uploadType) {
        return (VerifyIosClient) super.setUploadType(uploadType);
      }

      @Override
      public VerifyIosClient setUploadProtocol(java.lang.String uploadProtocol) {
        return (VerifyIosClient) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public VerifyIosClient set(String parameterName, Object value) {
        return (VerifyIosClient) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.Projects.List request = identitytoolkit.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email
     * and password. For an admin request with a Google OAuth 2.0 credential with the proper
     * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
     * anonymous, email and password, or phone number user. An [API
     * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
     * to identify the Google Cloud project.
     *
     * Create a request for the method "projects.accounts".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link Accounts#execute()} method to invoke the remote operation.
     *
     * @param targetProjectId The project ID of the project which the user should belong to. Specifying this field requires a
     *        Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com
     *        /identity-platform/docs/access-control). If this is not set, the target project is
     *        inferred from the scope associated to the Bearer access token.
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
     * @return the request
     */
    public Accounts accounts(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) throws java.io.IOException {
      Accounts result = new Accounts(targetProjectId, content);
      initialize(result);
      return result;
    }

    public class Accounts extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse> {

      private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts";

      private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+$");

      /**
       * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to
       * email and password. For an admin request with a Google OAuth 2.0 credential with the proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
       * anonymous, email and password, or phone number user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "projects.accounts".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Accounts#execute()} method to invoke the remote operation.
       * <p> {@link
       * Accounts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param targetProjectId The project ID of the project which the user should belong to. Specifying this field requires a
     *        Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com
     *        /identity-platform/docs/access-control). If this is not set, the target project is
     *        inferred from the scope associated to the Bearer access token.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
       * @since 1.13
       */
      protected Accounts(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse.class);
        this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
      }

      @Override
      public Accounts set$Xgafv(java.lang.String $Xgafv) {
        return (Accounts) super.set$Xgafv($Xgafv);
      }

      @Override
      public Accounts setAccessToken(java.lang.String accessToken) {
        return (Accounts) super.setAccessToken(accessToken);
      }

      @Override
      public Accounts setAlt(java.lang.String alt) {
        return (Accounts) super.setAlt(alt);
      }

      @Override
      public Accounts setCallback(java.lang.String callback) {
        return (Accounts) super.setCallback(callback);
      }

      @Override
      public Accounts setFields(java.lang.String fields) {
        return (Accounts) super.setFields(fields);
      }

      @Override
      public Accounts setKey(java.lang.String key) {
        return (Accounts) super.setKey(key);
      }

      @Override
      public Accounts setOauthToken(java.lang.String oauthToken) {
        return (Accounts) super.setOauthToken(oauthToken);
      }

      @Override
      public Accounts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Accounts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Accounts setQuotaUser(java.lang.String quotaUser) {
        return (Accounts) super.setQuotaUser(quotaUser);
      }

      @Override
      public Accounts setUploadType(java.lang.String uploadType) {
        return (Accounts) super.setUploadType(uploadType);
      }

      @Override
      public Accounts setUploadProtocol(java.lang.String uploadProtocol) {
        return (Accounts) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The project ID of the project which the user should belong to. Specifying this field
       * requires a Google OAuth 2.0 credential with the proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is
       * not set, the target project is inferred from the scope associated to the Bearer access
       * token.
       */
      @com.google.api.client.util.Key
      private java.lang.String targetProjectId;

      /** The project ID of the project which the user should belong to. Specifying this field requires a
     Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-
     platform/docs/access-control). If this is not set, the target project is inferred from the scope
     associated to the Bearer access token.
       */
      public java.lang.String getTargetProjectId() {
        return targetProjectId;
      }

      /**
       * The project ID of the project which the user should belong to. Specifying this field
       * requires a Google OAuth 2.0 credential with the proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is
       * not set, the target project is inferred from the scope associated to the Bearer access
       * token.
       */
      public Accounts setTargetProjectId(java.lang.String targetProjectId) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
        this.targetProjectId = targetProjectId;
        return this;
      }

      @Override
      public Accounts set(String parameterName, Object value) {
        return (Accounts) super.set(parameterName, value);
      }
    }
    /**
     * Creates a session cookie for the given Identity Platform ID token. The session cookie is used by
     * the client to preserve the user's login state.
     *
     * Create a request for the method "projects.createSessionCookie".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link CreateSessionCookie#execute()} method to invoke the remote
     * operation.
     *
     * @param targetProjectId The ID of the project that the account belongs to.
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest}
     * @return the request
     */
    public CreateSessionCookie createSessionCookie(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest content) throws java.io.IOException {
      CreateSessionCookie result = new CreateSessionCookie(targetProjectId, content);
      initialize(result);
      return result;
    }

    public class CreateSessionCookie extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse> {

      private static final String REST_PATH = "v1/projects/{+targetProjectId}:createSessionCookie";

      private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+$");

      /**
       * Creates a session cookie for the given Identity Platform ID token. The session cookie is used
       * by the client to preserve the user's login state.
       *
       * Create a request for the method "projects.createSessionCookie".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link CreateSessionCookie#execute()} method to invoke the remote
       * operation. <p> {@link CreateSessionCookie#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param targetProjectId The ID of the project that the account belongs to.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest}
       * @since 1.13
       */
      protected CreateSessionCookie(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse.class);
        this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
      }

      @Override
      public CreateSessionCookie set$Xgafv(java.lang.String $Xgafv) {
        return (CreateSessionCookie) super.set$Xgafv($Xgafv);
      }

      @Override
      public CreateSessionCookie setAccessToken(java.lang.String accessToken) {
        return (CreateSessionCookie) super.setAccessToken(accessToken);
      }

      @Override
      public CreateSessionCookie setAlt(java.lang.String alt) {
        return (CreateSessionCookie) super.setAlt(alt);
      }

      @Override
      public CreateSessionCookie setCallback(java.lang.String callback) {
        return (CreateSessionCookie) super.setCallback(callback);
      }

      @Override
      public CreateSessionCookie setFields(java.lang.String fields) {
        return (CreateSessionCookie) super.setFields(fields);
      }

      @Override
      public CreateSessionCookie setKey(java.lang.String key) {
        return (CreateSessionCookie) super.setKey(key);
      }

      @Override
      public CreateSessionCookie setOauthToken(java.lang.String oauthToken) {
        return (CreateSessionCookie) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateSessionCookie setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateSessionCookie) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateSessionCookie setQuotaUser(java.lang.String quotaUser) {
        return (CreateSessionCookie) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateSessionCookie setUploadType(java.lang.String uploadType) {
        return (CreateSessionCookie) super.setUploadType(uploadType);
      }

      @Override
      public CreateSessionCookie setUploadProtocol(java.lang.String uploadProtocol) {
        return (CreateSessionCookie) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the project that the account belongs to. */
      @com.google.api.client.util.Key
      private java.lang.String targetProjectId;

      /** The ID of the project that the account belongs to.
       */
      public java.lang.String getTargetProjectId() {
        return targetProjectId;
      }

      /** The ID of the project that the account belongs to. */
      public CreateSessionCookie setTargetProjectId(java.lang.String targetProjectId) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
        this.targetProjectId = targetProjectId;
        return this;
      }

      @Override
      public CreateSessionCookie set(String parameterName, Object value) {
        return (CreateSessionCookie) super.set(parameterName, value);
      }
    }
    /**
     * Looks up user accounts within a project or a tenant based on conditions in the request.
     *
     * Create a request for the method "projects.queryAccounts".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link QueryAccounts#execute()} method to invoke the remote
     * operation.
     *
     * @param targetProjectId The ID of the project to which the result is scoped.
     * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
     * @return the request
     */
    public QueryAccounts queryAccounts(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) throws java.io.IOException {
      QueryAccounts result = new QueryAccounts(targetProjectId, content);
      initialize(result);
      return result;
    }

    public class QueryAccounts extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse> {

      private static final String REST_PATH = "v1/projects/{+targetProjectId}:queryAccounts";

      private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
          java.util.regex.Pattern.compile("^[^/]+$");

      /**
       * Looks up user accounts within a project or a tenant based on conditions in the request.
       *
       * Create a request for the method "projects.queryAccounts".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link QueryAccounts#execute()} method to invoke the remote
       * operation. <p> {@link QueryAccounts#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param targetProjectId The ID of the project to which the result is scoped.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
       * @since 1.13
       */
      protected QueryAccounts(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) {
        super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse.class);
        this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
      }

      @Override
      public QueryAccounts set$Xgafv(java.lang.String $Xgafv) {
        return (QueryAccounts) super.set$Xgafv($Xgafv);
      }

      @Override
      public QueryAccounts setAccessToken(java.lang.String accessToken) {
        return (QueryAccounts) super.setAccessToken(accessToken);
      }

      @Override
      public QueryAccounts setAlt(java.lang.String alt) {
        return (QueryAccounts) super.setAlt(alt);
      }

      @Override
      public QueryAccounts setCallback(java.lang.String callback) {
        return (QueryAccounts) super.setCallback(callback);
      }

      @Override
      public QueryAccounts setFields(java.lang.String fields) {
        return (QueryAccounts) super.setFields(fields);
      }

      @Override
      public QueryAccounts setKey(java.lang.String key) {
        return (QueryAccounts) super.setKey(key);
      }

      @Override
      public QueryAccounts setOauthToken(java.lang.String oauthToken) {
        return (QueryAccounts) super.setOauthToken(oauthToken);
      }

      @Override
      public QueryAccounts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (QueryAccounts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public QueryAccounts setQuotaUser(java.lang.String quotaUser) {
        return (QueryAccounts) super.setQuotaUser(quotaUser);
      }

      @Override
      public QueryAccounts setUploadType(java.lang.String uploadType) {
        return (QueryAccounts) super.setUploadType(uploadType);
      }

      @Override
      public QueryAccounts setUploadProtocol(java.lang.String uploadProtocol) {
        return (QueryAccounts) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the project to which the result is scoped. */
      @com.google.api.client.util.Key
      private java.lang.String targetProjectId;

      /** The ID of the project to which the result is scoped.
       */
      public java.lang.String getTargetProjectId() {
        return targetProjectId;
      }

      /** The ID of the project to which the result is scoped. */
      public QueryAccounts setTargetProjectId(java.lang.String targetProjectId) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
              "Parameter targetProjectId must conform to the pattern " +
              "^[^/]+$");
        }
        this.targetProjectId = targetProjectId;
        return this;
      }

      @Override
      public QueryAccounts set(String parameterName, Object value) {
        return (QueryAccounts) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Accounts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.Accounts.List request = identitytoolkit.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts() {
      return new Accounts();
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts {

      /**
       * Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or
       * more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To
       * use this method requires a Google OAuth 2.0 credential with proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
       *
       * Create a request for the method "accounts.batchCreate".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
       * operation.
       *
       * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:batchCreate";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or
         * more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To
         * use this method requires a Google OAuth 2.0 credential with proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         *
         * Create a request for the method "accounts.batchCreate".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /** The Project ID of the Identity Platform project which the account belongs to. */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The Project ID of the Identity Platform project which the account belongs to.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /** The Project ID of the Identity Platform project which the account belongs to. */
        public BatchCreate setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in
       * the response. The method ignores accounts that do not exist or are duplicated in the request.
       * This method requires a Google OAuth 2.0 credential with proper permissions.
       * (https://cloud.google.com/identity-platform/docs/access-control)
       *
       * Create a request for the method "accounts.batchDelete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
       * operation.
       *
       * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       *        belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:batchDelete";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained
         * in the response. The method ignores accounts that do not exist or are duplicated in the
         * request. This method requires a Google OAuth 2.0 credential with proper permissions.
         * (https://cloud.google.com/identity-platform/docs/access-control)
         *
         * Create a request for the method "accounts.batchDelete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       *        belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
         * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts
         * belong to.
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
         * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts
         * belong to.
         */
        public BatchDelete setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }
      /**
       * Download account information for all accounts on the project in a paginated manner. To use this
       * method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
       * /identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get
       * password hash, password salt, and password version from accounts; otherwise these fields are
       * redacted.
       *
       * Create a request for the method "accounts.batchGet".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       *        belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
       * @return the request
       */
      public BatchGet batchGet(java.lang.String targetProjectId) throws java.io.IOException {
        BatchGet result = new BatchGet(targetProjectId);
        initialize(result);
        return result;
      }

      public class BatchGet extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DownloadAccountResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:batchGet";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Download account information for all accounts on the project in a paginated manner. To use this
         * method requires a Google OAuth 2.0 credential with proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore,
         * additional permissions are needed to get password hash, password salt, and password version
         * from accounts; otherwise these fields are redacted.
         *
         * Create a request for the method "accounts.batchGet".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         * <p> {@link
         * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       *        belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
         * @since 1.13
         */
        protected BatchGet(java.lang.String targetProjectId) {
          super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DownloadAccountResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public BatchGet set$Xgafv(java.lang.String $Xgafv) {
          return (BatchGet) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchGet setAccessToken(java.lang.String accessToken) {
          return (BatchGet) super.setAccessToken(accessToken);
        }

        @Override
        public BatchGet setAlt(java.lang.String alt) {
          return (BatchGet) super.setAlt(alt);
        }

        @Override
        public BatchGet setCallback(java.lang.String callback) {
          return (BatchGet) super.setCallback(callback);
        }

        @Override
        public BatchGet setFields(java.lang.String fields) {
          return (BatchGet) super.setFields(fields);
        }

        @Override
        public BatchGet setKey(java.lang.String key) {
          return (BatchGet) super.setKey(key);
        }

        @Override
        public BatchGet setOauthToken(java.lang.String oauthToken) {
          return (BatchGet) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchGet) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchGet setQuotaUser(java.lang.String quotaUser) {
          return (BatchGet) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchGet setUploadType(java.lang.String uploadType) {
          return (BatchGet) super.setUploadType(uploadType);
        }

        @Override
        public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchGet) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
         * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the
         * accounts belong to.
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
       belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
         * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the
         * accounts belong to.
         */
        public BatchGet setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.Long delegatedProjectNumber;

        /**

         */
        public java.lang.Long getDelegatedProjectNumber() {
          return delegatedProjectNumber;
        }

        public BatchGet setDelegatedProjectNumber(java.lang.Long delegatedProjectNumber) {
          this.delegatedProjectNumber = delegatedProjectNumber;
          return this;
        }

        /**
         * The maximum number of results to return. Must be at least 1 and no greater than 1000. By
         * default, it is 20.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer maxResults;

        /** The maximum number of results to return. Must be at least 1 and no greater than 1000. By default,
       it is 20.
         */
        public java.lang.Integer getMaxResults() {
          return maxResults;
        }

        /**
         * The maximum number of results to return. Must be at least 1 and no greater than 1000. By
         * default, it is 20.
         */
        public BatchGet setMaxResults(java.lang.Integer maxResults) {
          this.maxResults = maxResults;
          return this;
        }

        /** The pagination token from the response of a previous request. */
        @com.google.api.client.util.Key
        private java.lang.String nextPageToken;

        /** The pagination token from the response of a previous request.
         */
        public java.lang.String getNextPageToken() {
          return nextPageToken;
        }

        /** The pagination token from the response of a previous request. */
        public BatchGet setNextPageToken(java.lang.String nextPageToken) {
          this.nextPageToken = nextPageToken;
          return this;
        }

        /**
         * The ID of the Identity Platform tenant the accounts belongs to. If not specified,
         * accounts on the Identity Platform project are returned.
         */
        @com.google.api.client.util.Key
        private java.lang.String tenantId;

        /** The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the
       Identity Platform project are returned.
         */
        public java.lang.String getTenantId() {
          return tenantId;
        }

        /**
         * The ID of the Identity Platform tenant the accounts belongs to. If not specified,
         * accounts on the Identity Platform project are returned.
         */
        public BatchGet setTenantId(java.lang.String tenantId) {
          this.tenantId = tenantId;
          return this;
        }

        @Override
        public BatchGet set(String parameterName, Object value) {
          return (BatchGet) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a user's account.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId The ID of the project which the account belongs to. Should only be specified in authenticated
       *        requests that specify local_id of an account.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
       * @return the request
       */
      public Delete delete(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) throws java.io.IOException {
        Delete result = new Delete(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:delete";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Deletes a user's account.
         *
         * Create a request for the method "accounts.delete".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The ID of the project which the account belongs to. Should only be specified in authenticated
       *        requests that specify local_id of an account.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
         * @since 1.13
         */
        protected Delete(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The ID of the project which the account belongs to. Should only be specified in
         * authenticated requests that specify local_id of an account.
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The ID of the project which the account belongs to. Should only be specified in authenticated
       requests that specify local_id of an account.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * The ID of the project which the account belongs to. Should only be specified in
         * authenticated requests that specify local_id of an account.
         */
        public Delete setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets account information for all matched accounts. For an end user request, retrieves the account
       * of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple
       * account(s) with matching criteria.
       *
       * Create a request for the method "accounts.lookup".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
       *        `tenant_id` belongs to. Should only be specified by authenticated requests bearing a
       *        Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-
       *        platform/docs/access-control).
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
       * @return the request
       */
      public Lookup lookup(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) throws java.io.IOException {
        Lookup result = new Lookup(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class Lookup extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:lookup";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Gets account information for all matched accounts. For an end user request, retrieves the
         * account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one
         * or multiple account(s) with matching criteria.
         *
         * Create a request for the method "accounts.lookup".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
         * <p> {@link
         * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
       *        `tenant_id` belongs to. Should only be specified by authenticated requests bearing a
       *        Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-
       *        platform/docs/access-control).
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
         * @since 1.13
         */
        protected Lookup(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public Lookup set$Xgafv(java.lang.String $Xgafv) {
          return (Lookup) super.set$Xgafv($Xgafv);
        }

        @Override
        public Lookup setAccessToken(java.lang.String accessToken) {
          return (Lookup) super.setAccessToken(accessToken);
        }

        @Override
        public Lookup setAlt(java.lang.String alt) {
          return (Lookup) super.setAlt(alt);
        }

        @Override
        public Lookup setCallback(java.lang.String callback) {
          return (Lookup) super.setCallback(callback);
        }

        @Override
        public Lookup setFields(java.lang.String fields) {
          return (Lookup) super.setFields(fields);
        }

        @Override
        public Lookup setKey(java.lang.String key) {
          return (Lookup) super.setKey(key);
        }

        @Override
        public Lookup setOauthToken(java.lang.String oauthToken) {
          return (Lookup) super.setOauthToken(oauthToken);
        }

        @Override
        public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Lookup) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Lookup setQuotaUser(java.lang.String quotaUser) {
          return (Lookup) super.setQuotaUser(quotaUser);
        }

        @Override
        public Lookup setUploadType(java.lang.String uploadType) {
          return (Lookup) super.setUploadType(uploadType);
        }

        @Override
        public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
          return (Lookup) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The ID of the Google Cloud project that the account or the Identity Platform tenant
         * specified by `tenant_id` belongs to. Should only be specified by authenticated requests
         * bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
         * /identity-platform/docs/access-control).
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
       `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth
       2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-
       control).
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * The ID of the Google Cloud project that the account or the Identity Platform tenant
         * specified by `tenant_id` belongs to. Should only be specified by authenticated requests
         * bearing a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
         * /identity-platform/docs/access-control).
         */
        public Lookup setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public Lookup set(String parameterName, Object value) {
          return (Lookup) super.set(parameterName, value);
        }
      }
      /**
       * Looks up user accounts within a project or a tenant based on conditions in the request.
       *
       * Create a request for the method "accounts.query".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId The ID of the project to which the result is scoped.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
       * @return the request
       */
      public Query query(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) throws java.io.IOException {
        Query result = new Query(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class Query extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:query";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Looks up user accounts within a project or a tenant based on conditions in the request.
         *
         * Create a request for the method "accounts.query".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
         * <p> {@link
         * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The ID of the project to which the result is scoped.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
         * @since 1.13
         */
        protected Query(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public Query set$Xgafv(java.lang.String $Xgafv) {
          return (Query) super.set$Xgafv($Xgafv);
        }

        @Override
        public Query setAccessToken(java.lang.String accessToken) {
          return (Query) super.setAccessToken(accessToken);
        }

        @Override
        public Query setAlt(java.lang.String alt) {
          return (Query) super.setAlt(alt);
        }

        @Override
        public Query setCallback(java.lang.String callback) {
          return (Query) super.setCallback(callback);
        }

        @Override
        public Query setFields(java.lang.String fields) {
          return (Query) super.setFields(fields);
        }

        @Override
        public Query setKey(java.lang.String key) {
          return (Query) super.setKey(key);
        }

        @Override
        public Query setOauthToken(java.lang.String oauthToken) {
          return (Query) super.setOauthToken(oauthToken);
        }

        @Override
        public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Query) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Query setQuotaUser(java.lang.String quotaUser) {
          return (Query) super.setQuotaUser(quotaUser);
        }

        @Override
        public Query setUploadType(java.lang.String uploadType) {
          return (Query) super.setUploadType(uploadType);
        }

        @Override
        public Query setUploadProtocol(java.lang.String uploadProtocol) {
          return (Query) super.setUploadProtocol(uploadProtocol);
        }

        /** The ID of the project to which the result is scoped. */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The ID of the project to which the result is scoped.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /** The ID of the project to which the result is scoped. */
        public Query setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public Query set(String parameterName, Object value) {
          return (Query) super.set(parameterName, value);
        }
      }
      /**
       * Sends an out-of-band confirmation code for an account. Requests from a authenticated request can
       * optionally return a link including the OOB code instead of sending it.
       *
       * Create a request for the method "accounts.sendOobCode".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
       * operation.
       *
       * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to. To specify this field,
       *        it requires a Google OAuth 2.0 credential with proper
       *        [permissions](https://cloud.google.com/identity-platform/docs/access-control).
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
       * @return the request
       */
      public SendOobCode sendOobCode(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) throws java.io.IOException {
        SendOobCode result = new SendOobCode(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class SendOobCode extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:sendOobCode";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Sends an out-of-band confirmation code for an account. Requests from a authenticated request
         * can optionally return a link including the OOB code instead of sending it.
         *
         * Create a request for the method "accounts.sendOobCode".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
         * operation. <p> {@link
         * SendOobCode#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to. To specify this field,
       *        it requires a Google OAuth 2.0 credential with proper
       *        [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
         * @since 1.13
         */
        protected SendOobCode(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public SendOobCode set$Xgafv(java.lang.String $Xgafv) {
          return (SendOobCode) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendOobCode setAccessToken(java.lang.String accessToken) {
          return (SendOobCode) super.setAccessToken(accessToken);
        }

        @Override
        public SendOobCode setAlt(java.lang.String alt) {
          return (SendOobCode) super.setAlt(alt);
        }

        @Override
        public SendOobCode setCallback(java.lang.String callback) {
          return (SendOobCode) super.setCallback(callback);
        }

        @Override
        public SendOobCode setFields(java.lang.String fields) {
          return (SendOobCode) super.setFields(fields);
        }

        @Override
        public SendOobCode setKey(java.lang.String key) {
          return (SendOobCode) super.setKey(key);
        }

        @Override
        public SendOobCode setOauthToken(java.lang.String oauthToken) {
          return (SendOobCode) super.setOauthToken(oauthToken);
        }

        @Override
        public SendOobCode setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendOobCode) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendOobCode setQuotaUser(java.lang.String quotaUser) {
          return (SendOobCode) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendOobCode setUploadType(java.lang.String uploadType) {
          return (SendOobCode) super.setUploadType(uploadType);
        }

        @Override
        public SendOobCode setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendOobCode) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The Project ID of the Identity Platform project which the account belongs to. To specify
         * this field, it requires a Google OAuth 2.0 credential with proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The Project ID of the Identity Platform project which the account belongs to. To specify this
       field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
       /identity-platform/docs/access-control).
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * The Project ID of the Identity Platform project which the account belongs to. To specify
         * this field, it requires a Google OAuth 2.0 credential with proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         */
        public SendOobCode setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public SendOobCode set(String parameterName, Object value) {
          return (SendOobCode) super.set(parameterName, value);
        }
      }
      /**
       * Updates account-related information for the specified user by setting specific fields or applying
       * action codes. Requests from administrators and end users are supported.
       *
       * Create a request for the method "accounts.update".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId The project ID for the project that the account belongs to. Specifying this field requires Google
       *        OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-
       *        platform/docs/access-control). Requests from end users should pass an Identity Platform ID
       *        token instead.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
       * @return the request
       */
      public Update update(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) throws java.io.IOException {
        Update result = new Update(targetProjectId, content);
        initialize(result);
        return result;
      }

      public class Update extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/accounts:update";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Updates account-related information for the specified user by setting specific fields or
         * applying action codes. Requests from administrators and end users are supported.
         *
         * Create a request for the method "accounts.update".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         * <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The project ID for the project that the account belongs to. Specifying this field requires Google
       *        OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-
       *        platform/docs/access-control). Requests from end users should pass an Identity Platform ID
       *        token instead.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
         * @since 1.13
         */
        protected Update(java.lang.String targetProjectId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The project ID for the project that the account belongs to. Specifying this field
         * requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com
         * /identity-platform/docs/access-control). Requests from end users should pass an Identity
         * Platform ID token instead.
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The project ID for the project that the account belongs to. Specifying this field requires Google
       OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs
       /access-control). Requests from end users should pass an Identity Platform ID token instead.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * The project ID for the project that the account belongs to. Specifying this field
         * requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com
         * /identity-platform/docs/access-control). Requests from end users should pass an Identity
         * Platform ID token instead.
         */
        public Update setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Tenants collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
     *   {@code IdentityToolkit.Tenants.List request = identitytoolkit.tenants().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Tenants tenants() {
      return new Tenants();
    }

    /**
     * The "tenants" collection of methods.
     */
    public class Tenants {

      /**
       * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to email
       * and password. For an admin request with a Google OAuth 2.0 credential with the proper
       * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
       * anonymous, email and password, or phone number user. An [API
       * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
       * to identify the Google Cloud project.
       *
       * Create a request for the method "tenants.accounts".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link Accounts#execute()} method to invoke the remote operation.
       *
       * @param targetProjectId The project ID of the project which the user should belong to. Specifying this field requires a
       *        Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com
       *        /identity-platform/docs/access-control). If this is not set, the target project is
       *        inferred from the scope associated to the Bearer access token.
       * @param tenantId The ID of the Identity Platform tenant to create a user under. If not set, the user will be created
       *        under the default Identity Platform project.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
       * @return the request
       */
      public Accounts accounts(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) throws java.io.IOException {
        Accounts result = new Accounts(targetProjectId, tenantId, content);
        initialize(result);
        return result;
      }

      public class Accounts extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        private final java.util.regex.Pattern TENANT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Signs up a new email and password user or anonymous user, or upgrades an anonymous user to
         * email and password. For an admin request with a Google OAuth 2.0 credential with the proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control), creates a new
         * anonymous, email and password, or phone number user. An [API
         * key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order
         * to identify the Google Cloud project.
         *
         * Create a request for the method "tenants.accounts".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Accounts#execute()} method to invoke the remote operation.
         * <p> {@link
         * Accounts#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param targetProjectId The project ID of the project which the user should belong to. Specifying this field requires a
       *        Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com
       *        /identity-platform/docs/access-control). If this is not set, the target project is
       *        inferred from the scope associated to the Bearer access token.
         * @param tenantId The ID of the Identity Platform tenant to create a user under. If not set, the user will be created
       *        under the default Identity Platform project.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest}
         * @since 1.13
         */
        protected Accounts(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SignUpResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                "Parameter tenantId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public Accounts set$Xgafv(java.lang.String $Xgafv) {
          return (Accounts) super.set$Xgafv($Xgafv);
        }

        @Override
        public Accounts setAccessToken(java.lang.String accessToken) {
          return (Accounts) super.setAccessToken(accessToken);
        }

        @Override
        public Accounts setAlt(java.lang.String alt) {
          return (Accounts) super.setAlt(alt);
        }

        @Override
        public Accounts setCallback(java.lang.String callback) {
          return (Accounts) super.setCallback(callback);
        }

        @Override
        public Accounts setFields(java.lang.String fields) {
          return (Accounts) super.setFields(fields);
        }

        @Override
        public Accounts setKey(java.lang.String key) {
          return (Accounts) super.setKey(key);
        }

        @Override
        public Accounts setOauthToken(java.lang.String oauthToken) {
          return (Accounts) super.setOauthToken(oauthToken);
        }

        @Override
        public Accounts setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Accounts) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Accounts setQuotaUser(java.lang.String quotaUser) {
          return (Accounts) super.setQuotaUser(quotaUser);
        }

        @Override
        public Accounts setUploadType(java.lang.String uploadType) {
          return (Accounts) super.setUploadType(uploadType);
        }

        @Override
        public Accounts setUploadProtocol(java.lang.String uploadProtocol) {
          return (Accounts) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The project ID of the project which the user should belong to. Specifying this field
         * requires a Google OAuth 2.0 credential with the proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is
         * not set, the target project is inferred from the scope associated to the Bearer access
         * token.
         */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The project ID of the project which the user should belong to. Specifying this field requires a
       Google OAuth 2.0 credential with the proper [permissions](https://cloud.google.com/identity-
       platform/docs/access-control). If this is not set, the target project is inferred from the scope
       associated to the Bearer access token.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /**
         * The project ID of the project which the user should belong to. Specifying this field
         * requires a Google OAuth 2.0 credential with the proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control). If this is
         * not set, the target project is inferred from the scope associated to the Bearer access
         * token.
         */
        public Accounts setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        /**
         * The ID of the Identity Platform tenant to create a user under. If not set, the user will
         * be created under the default Identity Platform project.
         */
        @com.google.api.client.util.Key
        private java.lang.String tenantId;

        /** The ID of the Identity Platform tenant to create a user under. If not set, the user will be created
       under the default Identity Platform project.
         */
        public java.lang.String getTenantId() {
          return tenantId;
        }

        /**
         * The ID of the Identity Platform tenant to create a user under. If not set, the user will
         * be created under the default Identity Platform project.
         */
        public Accounts setTenantId(java.lang.String tenantId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                "Parameter tenantId must conform to the pattern " +
                "^[^/]+$");
          }
          this.tenantId = tenantId;
          return this;
        }

        @Override
        public Accounts set(String parameterName, Object value) {
          return (Accounts) super.set(parameterName, value);
        }
      }
      /**
       * Creates a session cookie for the given Identity Platform ID token. The session cookie is used by
       * the client to preserve the user's login state.
       *
       * Create a request for the method "tenants.createSessionCookie".
       *
       * This request holds the parameters needed by the identitytoolkit server.  After setting any
       * optional parameters, call the {@link CreateSessionCookie#execute()} method to invoke the remote
       * operation.
       *
       * @param targetProjectId The ID of the project that the account belongs to.
       * @param tenantId The tenant ID of the Identity Platform tenant the account belongs to.
       * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest}
       * @return the request
       */
      public CreateSessionCookie createSessionCookie(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest content) throws java.io.IOException {
        CreateSessionCookie result = new CreateSessionCookie(targetProjectId, tenantId, content);
        initialize(result);
        return result;
      }

      public class CreateSessionCookie extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse> {

        private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}:createSessionCookie";

        private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        private final java.util.regex.Pattern TENANT_ID_PATTERN =
            java.util.regex.Pattern.compile("^[^/]+$");

        /**
         * Creates a session cookie for the given Identity Platform ID token. The session cookie is used
         * by the client to preserve the user's login state.
         *
         * Create a request for the method "tenants.createSessionCookie".
         *
         * This request holds the parameters needed by the the identitytoolkit server.  After setting any
         * optional parameters, call the {@link CreateSessionCookie#execute()} method to invoke the remote
         * operation. <p> {@link CreateSessionCookie#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param targetProjectId The ID of the project that the account belongs to.
         * @param tenantId The tenant ID of the Identity Platform tenant the account belongs to.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest}
         * @since 1.13
         */
        protected CreateSessionCookie(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieRequest content) {
          super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1CreateSessionCookieResponse.class);
          this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                "Parameter tenantId must conform to the pattern " +
                "^[^/]+$");
          }
        }

        @Override
        public CreateSessionCookie set$Xgafv(java.lang.String $Xgafv) {
          return (CreateSessionCookie) super.set$Xgafv($Xgafv);
        }

        @Override
        public CreateSessionCookie setAccessToken(java.lang.String accessToken) {
          return (CreateSessionCookie) super.setAccessToken(accessToken);
        }

        @Override
        public CreateSessionCookie setAlt(java.lang.String alt) {
          return (CreateSessionCookie) super.setAlt(alt);
        }

        @Override
        public CreateSessionCookie setCallback(java.lang.String callback) {
          return (CreateSessionCookie) super.setCallback(callback);
        }

        @Override
        public CreateSessionCookie setFields(java.lang.String fields) {
          return (CreateSessionCookie) super.setFields(fields);
        }

        @Override
        public CreateSessionCookie setKey(java.lang.String key) {
          return (CreateSessionCookie) super.setKey(key);
        }

        @Override
        public CreateSessionCookie setOauthToken(java.lang.String oauthToken) {
          return (CreateSessionCookie) super.setOauthToken(oauthToken);
        }

        @Override
        public CreateSessionCookie setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CreateSessionCookie) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CreateSessionCookie setQuotaUser(java.lang.String quotaUser) {
          return (CreateSessionCookie) super.setQuotaUser(quotaUser);
        }

        @Override
        public CreateSessionCookie setUploadType(java.lang.String uploadType) {
          return (CreateSessionCookie) super.setUploadType(uploadType);
        }

        @Override
        public CreateSessionCookie setUploadProtocol(java.lang.String uploadProtocol) {
          return (CreateSessionCookie) super.setUploadProtocol(uploadProtocol);
        }

        /** The ID of the project that the account belongs to. */
        @com.google.api.client.util.Key
        private java.lang.String targetProjectId;

        /** The ID of the project that the account belongs to.
         */
        public java.lang.String getTargetProjectId() {
          return targetProjectId;
        }

        /** The ID of the project that the account belongs to. */
        public CreateSessionCookie setTargetProjectId(java.lang.String targetProjectId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                "Parameter targetProjectId must conform to the pattern " +
                "^[^/]+$");
          }
          this.targetProjectId = targetProjectId;
          return this;
        }

        /** The tenant ID of the Identity Platform tenant the account belongs to. */
        @com.google.api.client.util.Key
        private java.lang.String tenantId;

        /** The tenant ID of the Identity Platform tenant the account belongs to.
         */
        public java.lang.String getTenantId() {
          return tenantId;
        }

        /** The tenant ID of the Identity Platform tenant the account belongs to. */
        public CreateSessionCookie setTenantId(java.lang.String tenantId) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                "Parameter tenantId must conform to the pattern " +
                "^[^/]+$");
          }
          this.tenantId = tenantId;
          return this;
        }

        @Override
        public CreateSessionCookie set(String parameterName, Object value) {
          return (CreateSessionCookie) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Accounts collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
       *   {@code IdentityToolkit.Accounts.List request = identitytoolkit.accounts().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Accounts accounts() {
        return new Accounts();
      }

      /**
       * The "accounts" collection of methods.
       */
      public class Accounts {

        /**
         * Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or
         * more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To
         * use this method requires a Google OAuth 2.0 credential with proper
         * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         *
         * Create a request for the method "accounts.batchCreate".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation.
         *
         * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to.
         * @param tenantId The ID of the Identity Platform tenant the account belongs to.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest}
         * @return the request
         */
        public BatchCreate batchCreate(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest content) throws java.io.IOException {
          BatchCreate result = new BatchCreate(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class BatchCreate extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchCreate";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Uploads multiple accounts into the Google Cloud project. If there is a problem uploading one or
           * more of the accounts, the rest will be uploaded, and a list of the errors will be returned. To
           * use this method requires a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           *
           * Create a request for the method "accounts.batchCreate".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to.
           * @param tenantId The ID of the Identity Platform tenant the account belongs to.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest}
           * @since 1.13
           */
          protected BatchCreate(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1UploadAccountResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchCreate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchCreate setAccessToken(java.lang.String accessToken) {
            return (BatchCreate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchCreate setAlt(java.lang.String alt) {
            return (BatchCreate) super.setAlt(alt);
          }

          @Override
          public BatchCreate setCallback(java.lang.String callback) {
            return (BatchCreate) super.setCallback(callback);
          }

          @Override
          public BatchCreate setFields(java.lang.String fields) {
            return (BatchCreate) super.setFields(fields);
          }

          @Override
          public BatchCreate setKey(java.lang.String key) {
            return (BatchCreate) super.setKey(key);
          }

          @Override
          public BatchCreate setOauthToken(java.lang.String oauthToken) {
            return (BatchCreate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchCreate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchCreate setQuotaUser(java.lang.String quotaUser) {
            return (BatchCreate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchCreate setUploadType(java.lang.String uploadType) {
            return (BatchCreate) super.setUploadType(uploadType);
          }

          @Override
          public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchCreate) super.setUploadProtocol(uploadProtocol);
          }

          /** The Project ID of the Identity Platform project which the account belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The Project ID of the Identity Platform project which the account belongs to.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /** The Project ID of the Identity Platform project which the account belongs to. */
          public BatchCreate setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /** The ID of the Identity Platform tenant the account belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The ID of the Identity Platform tenant the account belongs to.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /** The ID of the Identity Platform tenant the account belongs to. */
          public BatchCreate setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public BatchCreate set(String parameterName, Object value) {
            return (BatchCreate) super.set(parameterName, value);
          }
        }
        /**
         * Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained in
         * the response. The method ignores accounts that do not exist or are duplicated in the request.
         * This method requires a Google OAuth 2.0 credential with proper permissions.
         * (https://cloud.google.com/identity-platform/docs/access-control)
         *
         * Create a request for the method "accounts.batchDelete".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation.
         *
         * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         *        belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
         * @param tenantId If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong
         *        to an default Identity Platform project, the field is not needed.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest}
         * @return the request
         */
        public BatchDelete batchDelete(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest content) throws java.io.IOException {
          BatchDelete result = new BatchDelete(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class BatchDelete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchDelete";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Batch deletes multiple accounts. For accounts that fail to be deleted, error info is contained
           * in the response. The method ignores accounts that do not exist or are duplicated in the
           * request. This method requires a Google OAuth 2.0 credential with proper permissions.
           * (https://cloud.google.com/identity-platform/docs/access-control)
           *
           * Create a request for the method "accounts.batchDelete".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
           * operation. <p> {@link
           * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         *        belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
           * @param tenantId If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong
         *        to an default Identity Platform project, the field is not needed.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest}
           * @since 1.13
           */
          protected BatchDelete(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1BatchDeleteAccountsResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
            return (BatchDelete) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchDelete setAccessToken(java.lang.String accessToken) {
            return (BatchDelete) super.setAccessToken(accessToken);
          }

          @Override
          public BatchDelete setAlt(java.lang.String alt) {
            return (BatchDelete) super.setAlt(alt);
          }

          @Override
          public BatchDelete setCallback(java.lang.String callback) {
            return (BatchDelete) super.setCallback(callback);
          }

          @Override
          public BatchDelete setFields(java.lang.String fields) {
            return (BatchDelete) super.setFields(fields);
          }

          @Override
          public BatchDelete setKey(java.lang.String key) {
            return (BatchDelete) super.setKey(key);
          }

          @Override
          public BatchDelete setOauthToken(java.lang.String oauthToken) {
            return (BatchDelete) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchDelete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchDelete setQuotaUser(java.lang.String quotaUser) {
            return (BatchDelete) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchDelete setUploadType(java.lang.String uploadType) {
            return (BatchDelete) super.setUploadType(uploadType);
          }

          @Override
          public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchDelete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
           * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts
           * belong to.
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         belongs to. Otherwise, the ID of the Google Cloud project that accounts belong to.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
           * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that accounts
           * belong to.
           */
          public BatchDelete setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /**
           * If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the
           * accounts belong to an default Identity Platform project, the field is not needed.
           */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the accounts belong
         to an default Identity Platform project, the field is not needed.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /**
           * If the accounts belong to an Identity Platform tenant, the ID of the tenant. If the
           * accounts belong to an default Identity Platform project, the field is not needed.
           */
          public BatchDelete setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public BatchDelete set(String parameterName, Object value) {
            return (BatchDelete) super.set(parameterName, value);
          }
        }
        /**
         * Download account information for all accounts on the project in a paginated manner. To use this
         * method requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
         * /identity-platform/docs/access-control).. Furthermore, additional permissions are needed to get
         * password hash, password salt, and password version from accounts; otherwise these fields are
         * redacted.
         *
         * Create a request for the method "accounts.batchGet".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         *
         * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         *        belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
         * @param tenantId The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the
         *        Identity Platform project are returned.
         * @return the request
         */
        public BatchGet batchGet(java.lang.String targetProjectId, java.lang.String tenantId) throws java.io.IOException {
          BatchGet result = new BatchGet(targetProjectId, tenantId);
          initialize(result);
          return result;
        }

        public class BatchGet extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DownloadAccountResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:batchGet";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Download account information for all accounts on the project in a paginated manner. To use this
           * method requires a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).. Furthermore,
           * additional permissions are needed to get password hash, password salt, and password version
           * from accounts; otherwise these fields are redacted.
           *
           * Create a request for the method "accounts.batchGet".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
           * <p> {@link
           * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         *        belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
           * @param tenantId The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the
         *        Identity Platform project are returned.
           * @since 1.13
           */
          protected BatchGet(java.lang.String targetProjectId, java.lang.String tenantId) {
            super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DownloadAccountResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public BatchGet set$Xgafv(java.lang.String $Xgafv) {
            return (BatchGet) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchGet setAccessToken(java.lang.String accessToken) {
            return (BatchGet) super.setAccessToken(accessToken);
          }

          @Override
          public BatchGet setAlt(java.lang.String alt) {
            return (BatchGet) super.setAlt(alt);
          }

          @Override
          public BatchGet setCallback(java.lang.String callback) {
            return (BatchGet) super.setCallback(callback);
          }

          @Override
          public BatchGet setFields(java.lang.String fields) {
            return (BatchGet) super.setFields(fields);
          }

          @Override
          public BatchGet setKey(java.lang.String key) {
            return (BatchGet) super.setKey(key);
          }

          @Override
          public BatchGet setOauthToken(java.lang.String oauthToken) {
            return (BatchGet) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchGet) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchGet setQuotaUser(java.lang.String quotaUser) {
            return (BatchGet) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchGet setUploadType(java.lang.String uploadType) {
            return (BatchGet) super.setUploadType(uploadType);
          }

          @Override
          public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchGet) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
           * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the
           * accounts belong to.
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** If `tenant_id` is specified, the ID of the Google Cloud project that the Identity Platform tenant
         belongs to. Otherwise, the ID of the Google Cloud project that the accounts belong to.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * If `tenant_id` is specified, the ID of the Google Cloud project that the Identity
           * Platform tenant belongs to. Otherwise, the ID of the Google Cloud project that the
           * accounts belong to.
           */
          public BatchGet setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /**
           * The ID of the Identity Platform tenant the accounts belongs to. If not specified,
           * accounts on the Identity Platform project are returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The ID of the Identity Platform tenant the accounts belongs to. If not specified, accounts on the
         Identity Platform project are returned.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /**
           * The ID of the Identity Platform tenant the accounts belongs to. If not specified,
           * accounts on the Identity Platform project are returned.
           */
          public BatchGet setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @com.google.api.client.util.Key
          private java.lang.Long delegatedProjectNumber;

          /**

           */
          public java.lang.Long getDelegatedProjectNumber() {
            return delegatedProjectNumber;
          }

          public BatchGet setDelegatedProjectNumber(java.lang.Long delegatedProjectNumber) {
            this.delegatedProjectNumber = delegatedProjectNumber;
            return this;
          }

          /**
           * The maximum number of results to return. Must be at least 1 and no greater than 1000.
           * By default, it is 20.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer maxResults;

          /** The maximum number of results to return. Must be at least 1 and no greater than 1000. By default,
         it is 20.
           */
          public java.lang.Integer getMaxResults() {
            return maxResults;
          }

          /**
           * The maximum number of results to return. Must be at least 1 and no greater than 1000.
           * By default, it is 20.
           */
          public BatchGet setMaxResults(java.lang.Integer maxResults) {
            this.maxResults = maxResults;
            return this;
          }

          /** The pagination token from the response of a previous request. */
          @com.google.api.client.util.Key
          private java.lang.String nextPageToken;

          /** The pagination token from the response of a previous request.
           */
          public java.lang.String getNextPageToken() {
            return nextPageToken;
          }

          /** The pagination token from the response of a previous request. */
          public BatchGet setNextPageToken(java.lang.String nextPageToken) {
            this.nextPageToken = nextPageToken;
            return this;
          }

          @Override
          public BatchGet set(String parameterName, Object value) {
            return (BatchGet) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a user's account.
         *
         * Create a request for the method "accounts.delete".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param targetProjectId The ID of the project which the account belongs to. Should only be specified in authenticated
         *        requests that specify local_id of an account.
         * @param tenantId The ID of the tenant that the account belongs to, if applicable. Only require to be specified for
         *        authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an
         *        account that belongs to an Identity Platform tenant.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
         * @return the request
         */
        public Delete delete(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) throws java.io.IOException {
          Delete result = new Delete(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class Delete extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:delete";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Deletes a user's account.
           *
           * Create a request for the method "accounts.delete".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The ID of the project which the account belongs to. Should only be specified in authenticated
         *        requests that specify local_id of an account.
           * @param tenantId The ID of the tenant that the account belongs to, if applicable. Only require to be specified for
         *        authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an
         *        account that belongs to an Identity Platform tenant.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest}
           * @since 1.13
           */
          protected Delete(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1DeleteAccountResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The ID of the project which the account belongs to. Should only be specified in
           * authenticated requests that specify local_id of an account.
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The ID of the project which the account belongs to. Should only be specified in authenticated
         requests that specify local_id of an account.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * The ID of the project which the account belongs to. Should only be specified in
           * authenticated requests that specify local_id of an account.
           */
          public Delete setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /**
           * The ID of the tenant that the account belongs to, if applicable. Only require to be
           * specified for authenticated requests bearing a Google OAuth 2.0 credential that specify
           * local_id of an account that belongs to an Identity Platform tenant.
           */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The ID of the tenant that the account belongs to, if applicable. Only require to be specified for
         authenticated requests bearing a Google OAuth 2.0 credential that specify local_id of an account
         that belongs to an Identity Platform tenant.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /**
           * The ID of the tenant that the account belongs to, if applicable. Only require to be
           * specified for authenticated requests bearing a Google OAuth 2.0 credential that specify
           * local_id of an account that belongs to an Identity Platform tenant.
           */
          public Delete setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets account information for all matched accounts. For an end user request, retrieves the account
         * of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one or multiple
         * account(s) with matching criteria.
         *
         * Create a request for the method "accounts.lookup".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
         *
         * @param targetProjectId The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
         *        `tenant_id` belongs to. Should only be specified by authenticated requests bearing a
         *        Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-
         *        platform/docs/access-control).
         * @param tenantId The ID of the tenant that the account belongs to. Should only be specified by authenticated requests
         *        from a developer.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
         * @return the request
         */
        public Lookup lookup(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) throws java.io.IOException {
          Lookup result = new Lookup(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class Lookup extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:lookup";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Gets account information for all matched accounts. For an end user request, retrieves the
           * account of the end user. For an admin request with Google OAuth 2.0 credential, retrieves one
           * or multiple account(s) with matching criteria.
           *
           * Create a request for the method "accounts.lookup".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
           * <p> {@link
           * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
         *        `tenant_id` belongs to. Should only be specified by authenticated requests bearing a
         *        Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com/identity-
         *        platform/docs/access-control).
           * @param tenantId The ID of the tenant that the account belongs to. Should only be specified by authenticated requests
         *        from a developer.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest}
           * @since 1.13
           */
          protected Lookup(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetAccountInfoResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public Lookup set$Xgafv(java.lang.String $Xgafv) {
            return (Lookup) super.set$Xgafv($Xgafv);
          }

          @Override
          public Lookup setAccessToken(java.lang.String accessToken) {
            return (Lookup) super.setAccessToken(accessToken);
          }

          @Override
          public Lookup setAlt(java.lang.String alt) {
            return (Lookup) super.setAlt(alt);
          }

          @Override
          public Lookup setCallback(java.lang.String callback) {
            return (Lookup) super.setCallback(callback);
          }

          @Override
          public Lookup setFields(java.lang.String fields) {
            return (Lookup) super.setFields(fields);
          }

          @Override
          public Lookup setKey(java.lang.String key) {
            return (Lookup) super.setKey(key);
          }

          @Override
          public Lookup setOauthToken(java.lang.String oauthToken) {
            return (Lookup) super.setOauthToken(oauthToken);
          }

          @Override
          public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Lookup) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Lookup setQuotaUser(java.lang.String quotaUser) {
            return (Lookup) super.setQuotaUser(quotaUser);
          }

          @Override
          public Lookup setUploadType(java.lang.String uploadType) {
            return (Lookup) super.setUploadType(uploadType);
          }

          @Override
          public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
            return (Lookup) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The ID of the Google Cloud project that the account or the Identity Platform tenant
           * specified by `tenant_id` belongs to. Should only be specified by authenticated requests
           * bearing a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The ID of the Google Cloud project that the account or the Identity Platform tenant specified by
         `tenant_id` belongs to. Should only be specified by authenticated requests bearing a Google OAuth
         2.0 credential with proper [permissions](https://cloud.google.com/identity-platform/docs/access-
         control).
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * The ID of the Google Cloud project that the account or the Identity Platform tenant
           * specified by `tenant_id` belongs to. Should only be specified by authenticated requests
           * bearing a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           */
          public Lookup setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /**
           * The ID of the tenant that the account belongs to. Should only be specified by
           * authenticated requests from a developer.
           */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The ID of the tenant that the account belongs to. Should only be specified by authenticated
         requests from a developer.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /**
           * The ID of the tenant that the account belongs to. Should only be specified by
           * authenticated requests from a developer.
           */
          public Lookup setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public Lookup set(String parameterName, Object value) {
            return (Lookup) super.set(parameterName, value);
          }
        }
        /**
         * Looks up user accounts within a project or a tenant based on conditions in the request.
         *
         * Create a request for the method "accounts.query".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
         *
         * @param targetProjectId The ID of the project to which the result is scoped.
         * @param tenantId The ID of the tenant to which the result is scoped.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
         * @return the request
         */
        public Query query(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) throws java.io.IOException {
          Query result = new Query(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class Query extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:query";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Looks up user accounts within a project or a tenant based on conditions in the request.
           *
           * Create a request for the method "accounts.query".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
           * <p> {@link
           * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The ID of the project to which the result is scoped.
           * @param tenantId The ID of the tenant to which the result is scoped.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest}
           * @since 1.13
           */
          protected Query(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1QueryUserInfoResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public Query set$Xgafv(java.lang.String $Xgafv) {
            return (Query) super.set$Xgafv($Xgafv);
          }

          @Override
          public Query setAccessToken(java.lang.String accessToken) {
            return (Query) super.setAccessToken(accessToken);
          }

          @Override
          public Query setAlt(java.lang.String alt) {
            return (Query) super.setAlt(alt);
          }

          @Override
          public Query setCallback(java.lang.String callback) {
            return (Query) super.setCallback(callback);
          }

          @Override
          public Query setFields(java.lang.String fields) {
            return (Query) super.setFields(fields);
          }

          @Override
          public Query setKey(java.lang.String key) {
            return (Query) super.setKey(key);
          }

          @Override
          public Query setOauthToken(java.lang.String oauthToken) {
            return (Query) super.setOauthToken(oauthToken);
          }

          @Override
          public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Query) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Query setQuotaUser(java.lang.String quotaUser) {
            return (Query) super.setQuotaUser(quotaUser);
          }

          @Override
          public Query setUploadType(java.lang.String uploadType) {
            return (Query) super.setUploadType(uploadType);
          }

          @Override
          public Query setUploadProtocol(java.lang.String uploadProtocol) {
            return (Query) super.setUploadProtocol(uploadProtocol);
          }

          /** The ID of the project to which the result is scoped. */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The ID of the project to which the result is scoped.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /** The ID of the project to which the result is scoped. */
          public Query setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /** The ID of the tenant to which the result is scoped. */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The ID of the tenant to which the result is scoped.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /** The ID of the tenant to which the result is scoped. */
          public Query setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public Query set(String parameterName, Object value) {
            return (Query) super.set(parameterName, value);
          }
        }
        /**
         * Sends an out-of-band confirmation code for an account. Requests from a authenticated request can
         * optionally return a link including the OOB code instead of sending it.
         *
         * Create a request for the method "accounts.sendOobCode".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
         * operation.
         *
         * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to. To specify this field,
         *        it requires a Google OAuth 2.0 credential with proper
         *        [permissions](https://cloud.google.com/identity-platform/docs/access-control).
         * @param tenantId The tenant ID of the Identity Platform tenant the account belongs to.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
         * @return the request
         */
        public SendOobCode sendOobCode(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) throws java.io.IOException {
          SendOobCode result = new SendOobCode(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class SendOobCode extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:sendOobCode";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Sends an out-of-band confirmation code for an account. Requests from a authenticated request
           * can optionally return a link including the OOB code instead of sending it.
           *
           * Create a request for the method "accounts.sendOobCode".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link SendOobCode#execute()} method to invoke the remote
           * operation. <p> {@link
           * SendOobCode#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The Project ID of the Identity Platform project which the account belongs to. To specify this field,
         *        it requires a Google OAuth 2.0 credential with proper
         *        [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           * @param tenantId The tenant ID of the Identity Platform tenant the account belongs to.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest}
           * @since 1.13
           */
          protected SendOobCode(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetOobCodeResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public SendOobCode set$Xgafv(java.lang.String $Xgafv) {
            return (SendOobCode) super.set$Xgafv($Xgafv);
          }

          @Override
          public SendOobCode setAccessToken(java.lang.String accessToken) {
            return (SendOobCode) super.setAccessToken(accessToken);
          }

          @Override
          public SendOobCode setAlt(java.lang.String alt) {
            return (SendOobCode) super.setAlt(alt);
          }

          @Override
          public SendOobCode setCallback(java.lang.String callback) {
            return (SendOobCode) super.setCallback(callback);
          }

          @Override
          public SendOobCode setFields(java.lang.String fields) {
            return (SendOobCode) super.setFields(fields);
          }

          @Override
          public SendOobCode setKey(java.lang.String key) {
            return (SendOobCode) super.setKey(key);
          }

          @Override
          public SendOobCode setOauthToken(java.lang.String oauthToken) {
            return (SendOobCode) super.setOauthToken(oauthToken);
          }

          @Override
          public SendOobCode setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SendOobCode) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SendOobCode setQuotaUser(java.lang.String quotaUser) {
            return (SendOobCode) super.setQuotaUser(quotaUser);
          }

          @Override
          public SendOobCode setUploadType(java.lang.String uploadType) {
            return (SendOobCode) super.setUploadType(uploadType);
          }

          @Override
          public SendOobCode setUploadProtocol(java.lang.String uploadProtocol) {
            return (SendOobCode) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The Project ID of the Identity Platform project which the account belongs to. To
           * specify this field, it requires a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The Project ID of the Identity Platform project which the account belongs to. To specify this
         field, it requires a Google OAuth 2.0 credential with proper [permissions](https://cloud.google.com
         /identity-platform/docs/access-control).
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * The Project ID of the Identity Platform project which the account belongs to. To
           * specify this field, it requires a Google OAuth 2.0 credential with proper
           * [permissions](https://cloud.google.com/identity-platform/docs/access-control).
           */
          public SendOobCode setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /** The tenant ID of the Identity Platform tenant the account belongs to. */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The tenant ID of the Identity Platform tenant the account belongs to.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /** The tenant ID of the Identity Platform tenant the account belongs to. */
          public SendOobCode setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public SendOobCode set(String parameterName, Object value) {
            return (SendOobCode) super.set(parameterName, value);
          }
        }
        /**
         * Updates account-related information for the specified user by setting specific fields or applying
         * action codes. Requests from administrators and end users are supported.
         *
         * Create a request for the method "accounts.update".
         *
         * This request holds the parameters needed by the identitytoolkit server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param targetProjectId The project ID for the project that the account belongs to. Specifying this field requires Google
         *        OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-
         *        platform/docs/access-control). Requests from end users should pass an Identity Platform ID
         *        token instead.
         * @param tenantId The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users
         *        should pass an Identity Platform ID token rather than setting this field.
         * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
         * @return the request
         */
        public Update update(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) throws java.io.IOException {
          Update result = new Update(targetProjectId, tenantId, content);
          initialize(result);
          return result;
        }

        public class Update extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse> {

          private static final String REST_PATH = "v1/projects/{+targetProjectId}/tenants/{+tenantId}/accounts:update";

          private final java.util.regex.Pattern TARGET_PROJECT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          private final java.util.regex.Pattern TENANT_ID_PATTERN =
              java.util.regex.Pattern.compile("^[^/]+$");

          /**
           * Updates account-related information for the specified user by setting specific fields or
           * applying action codes. Requests from administrators and end users are supported.
           *
           * Create a request for the method "accounts.update".
           *
           * This request holds the parameters needed by the the identitytoolkit server.  After setting any
           * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
           * <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param targetProjectId The project ID for the project that the account belongs to. Specifying this field requires Google
         *        OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-
         *        platform/docs/access-control). Requests from end users should pass an Identity Platform ID
         *        token instead.
           * @param tenantId The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users
         *        should pass an Identity Platform ID token rather than setting this field.
           * @param content the {@link com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest}
           * @since 1.13
           */
          protected Update(java.lang.String targetProjectId, java.lang.String tenantId, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoRequest content) {
            super(IdentityToolkit.this, "POST", REST_PATH, content, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1SetAccountInfoResponse.class);
            this.targetProjectId = com.google.api.client.util.Preconditions.checkNotNull(targetProjectId, "Required parameter targetProjectId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = com.google.api.client.util.Preconditions.checkNotNull(tenantId, "Required parameter tenantId must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The project ID for the project that the account belongs to. Specifying this field
           * requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com
           * /identity-platform/docs/access-control). Requests from end users should pass an
           * Identity Platform ID token instead.
           */
          @com.google.api.client.util.Key
          private java.lang.String targetProjectId;

          /** The project ID for the project that the account belongs to. Specifying this field requires Google
         OAuth 2.0 credential with proper permissions (https://cloud.google.com/identity-platform/docs
         /access-control). Requests from end users should pass an Identity Platform ID token instead.
           */
          public java.lang.String getTargetProjectId() {
            return targetProjectId;
          }

          /**
           * The project ID for the project that the account belongs to. Specifying this field
           * requires Google OAuth 2.0 credential with proper permissions (https://cloud.google.com
           * /identity-platform/docs/access-control). Requests from end users should pass an
           * Identity Platform ID token instead.
           */
          public Update setTargetProjectId(java.lang.String targetProjectId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TARGET_PROJECT_ID_PATTERN.matcher(targetProjectId).matches(),
                  "Parameter targetProjectId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.targetProjectId = targetProjectId;
            return this;
          }

          /**
           * The tenant ID of the Identity Platform tenant that the account belongs to. Requests
           * from end users should pass an Identity Platform ID token rather than setting this
           * field.
           */
          @com.google.api.client.util.Key
          private java.lang.String tenantId;

          /** The tenant ID of the Identity Platform tenant that the account belongs to. Requests from end users
         should pass an Identity Platform ID token rather than setting this field.
           */
          public java.lang.String getTenantId() {
            return tenantId;
          }

          /**
           * The tenant ID of the Identity Platform tenant that the account belongs to. Requests
           * from end users should pass an Identity Platform ID token rather than setting this
           * field.
           */
          public Update setTenantId(java.lang.String tenantId) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(TENANT_ID_PATTERN.matcher(tenantId).matches(),
                  "Parameter tenantId must conform to the pattern " +
                  "^[^/]+$");
            }
            this.tenantId = tenantId;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the V1 collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code IdentityToolkit identitytoolkit = new IdentityToolkit(...);}
   *   {@code IdentityToolkit.V1.List request = identitytoolkit.v1().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public V1 v1() {
    return new V1();
  }

  /**
   * The "v1" collection of methods.
   */
  public class V1 {

    /**
     * Gets a project's public Identity Toolkit configuration. (Legacy) This method also supports
     * authenticated calls from a developer to retrieve non-public configuration.
     *
     * Create a request for the method "v1.getProjects".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link GetProjects#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetProjects getProjects() throws java.io.IOException {
      GetProjects result = new GetProjects();
      initialize(result);
      return result;
    }

    public class GetProjects extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetProjectConfigResponse> {

      private static final String REST_PATH = "v1/projects";

      /**
       * Gets a project's public Identity Toolkit configuration. (Legacy) This method also supports
       * authenticated calls from a developer to retrieve non-public configuration.
       *
       * Create a request for the method "v1.getProjects".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetProjects#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetProjects#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetProjects() {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetProjectConfigResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetProjects set$Xgafv(java.lang.String $Xgafv) {
        return (GetProjects) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetProjects setAccessToken(java.lang.String accessToken) {
        return (GetProjects) super.setAccessToken(accessToken);
      }

      @Override
      public GetProjects setAlt(java.lang.String alt) {
        return (GetProjects) super.setAlt(alt);
      }

      @Override
      public GetProjects setCallback(java.lang.String callback) {
        return (GetProjects) super.setCallback(callback);
      }

      @Override
      public GetProjects setFields(java.lang.String fields) {
        return (GetProjects) super.setFields(fields);
      }

      @Override
      public GetProjects setKey(java.lang.String key) {
        return (GetProjects) super.setKey(key);
      }

      @Override
      public GetProjects setOauthToken(java.lang.String oauthToken) {
        return (GetProjects) super.setOauthToken(oauthToken);
      }

      @Override
      public GetProjects setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetProjects) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetProjects setQuotaUser(java.lang.String quotaUser) {
        return (GetProjects) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetProjects setUploadType(java.lang.String uploadType) {
        return (GetProjects) super.setUploadType(uploadType);
      }

      @Override
      public GetProjects setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetProjects) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Android package name to check against the real android package name. If this field is
       * provided, and sha1_cert_hash is not provided, the action will throw an error if this does
       * not match the real android package name.
       */
      @com.google.api.client.util.Key
      private java.lang.String androidPackageName;

      /** Android package name to check against the real android package name. If this field is provided, and
     sha1_cert_hash is not provided, the action will throw an error if this does not match the real
     android package name.
       */
      public java.lang.String getAndroidPackageName() {
        return androidPackageName;
      }

      /**
       * Android package name to check against the real android package name. If this field is
       * provided, and sha1_cert_hash is not provided, the action will throw an error if this does
       * not match the real android package name.
       */
      public GetProjects setAndroidPackageName(java.lang.String androidPackageName) {
        this.androidPackageName = androidPackageName;
        return this;
      }

      /**
       * The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client
       * is valid for the retrieved project and the request rejected with a client error if not
       * valid.
       */
      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /** The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client is valid
     for the retrieved project and the request rejected with a client error if not valid.
       */
      public java.lang.String getClientId() {
        return clientId;
      }

      /**
       * The RP OAuth client ID. If set, a check will be performed to ensure that the OAuth client
       * is valid for the retrieved project and the request rejected with a client error if not
       * valid.
       */
      public GetProjects setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      /**
       * Project Number of the delegated project request. This field should only be used as part of
       * the Firebase V1 migration.
       */
      @com.google.api.client.util.Key
      private java.lang.Long delegatedProjectNumber;

      /** Project Number of the delegated project request. This field should only be used as part of the
     Firebase V1 migration.
       */
      public java.lang.Long getDelegatedProjectNumber() {
        return delegatedProjectNumber;
      }

      /**
       * Project Number of the delegated project request. This field should only be used as part of
       * the Firebase V1 migration.
       */
      public GetProjects setDelegatedProjectNumber(java.lang.Long delegatedProjectNumber) {
        this.delegatedProjectNumber = delegatedProjectNumber;
        return this;
      }

      /**
       * The Firebase app ID, for applications that use Firebase. This can be found in the Firebase
       * console for your project. If set, a check will be performed to ensure that the app ID is
       * valid for the retrieved project. If not valid, the request will be rejected with a client
       * error.
       */
      @com.google.api.client.util.Key
      private java.lang.String firebaseAppId;

      /** The Firebase app ID, for applications that use Firebase. This can be found in the Firebase console
     for your project. If set, a check will be performed to ensure that the app ID is valid for the
     retrieved project. If not valid, the request will be rejected with a client error.
       */
      public java.lang.String getFirebaseAppId() {
        return firebaseAppId;
      }

      /**
       * The Firebase app ID, for applications that use Firebase. This can be found in the Firebase
       * console for your project. If set, a check will be performed to ensure that the app ID is
       * valid for the retrieved project. If not valid, the request will be rejected with a client
       * error.
       */
      public GetProjects setFirebaseAppId(java.lang.String firebaseAppId) {
        this.firebaseAppId = firebaseAppId;
        return this;
      }

      /**
       * iOS bundle id to check against the real ios bundle id. If this field is provided, the
       * action will throw an error if this does not match the real iOS bundle id.
       */
      @com.google.api.client.util.Key
      private java.lang.String iosBundleId;

      /** iOS bundle id to check against the real ios bundle id. If this field is provided, the action will
     throw an error if this does not match the real iOS bundle id.
       */
      public java.lang.String getIosBundleId() {
        return iosBundleId;
      }

      /**
       * iOS bundle id to check against the real ios bundle id. If this field is provided, the
       * action will throw an error if this does not match the real iOS bundle id.
       */
      public GetProjects setIosBundleId(java.lang.String iosBundleId) {
        this.iosBundleId = iosBundleId;
        return this;
      }

      /**
       * Project number of the configuration to retrieve. This field is deprecated and should not be
       * used by new integrations.
       */
      @com.google.api.client.util.Key
      private java.lang.Long projectNumber;

      /** Project number of the configuration to retrieve. This field is deprecated and should not be used by
     new integrations.
       */
      public java.lang.Long getProjectNumber() {
        return projectNumber;
      }

      /**
       * Project number of the configuration to retrieve. This field is deprecated and should not be
       * used by new integrations.
       */
      public GetProjects setProjectNumber(java.lang.Long projectNumber) {
        this.projectNumber = projectNumber;
        return this;
      }

      /** Whether dynamic link should be returned. */
      @com.google.api.client.util.Key
      private java.lang.Boolean returnDynamicLink;

      /** Whether dynamic link should be returned.
       */
      public java.lang.Boolean getReturnDynamicLink() {
        return returnDynamicLink;
      }

      /** Whether dynamic link should be returned. */
      public GetProjects setReturnDynamicLink(java.lang.Boolean returnDynamicLink) {
        this.returnDynamicLink = returnDynamicLink;
        return this;
      }

      /**
       * SHA-1 Android application cert hash. If set, a check will be performed to ensure that the
       * cert hash is valid for the retrieved project and android_package_name.
       */
      @com.google.api.client.util.Key
      private java.lang.String sha1Cert;

      /** SHA-1 Android application cert hash. If set, a check will be performed to ensure that the cert hash
     is valid for the retrieved project and android_package_name.
       */
      public java.lang.String getSha1Cert() {
        return sha1Cert;
      }

      /**
       * SHA-1 Android application cert hash. If set, a check will be performed to ensure that the
       * cert hash is valid for the retrieved project and android_package_name.
       */
      public GetProjects setSha1Cert(java.lang.String sha1Cert) {
        this.sha1Cert = sha1Cert;
        return this;
      }

      @Override
      public GetProjects set(String parameterName, Object value) {
        return (GetProjects) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves public keys of the legacy Identity Toolkit token signer to enable third parties to
     * verify the legacy ID token. For now the X509 pem cert is the only format supported.
     *
     * Create a request for the method "v1.getPublicKeys".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link GetPublicKeys#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetPublicKeys getPublicKeys() throws java.io.IOException {
      GetPublicKeys result = new GetPublicKeys();
      initialize(result);
      return result;
    }

    public class GetPublicKeys extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.IdentityToolkit.V1.GetPublicKeys.GetPublicKeysResponse> {

      private static final String REST_PATH = "v1/publicKeys";

      /**
       * Retrieves public keys of the legacy Identity Toolkit token signer to enable third parties to
       * verify the legacy ID token. For now the X509 pem cert is the only format supported.
       *
       * Create a request for the method "v1.getPublicKeys".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetPublicKeys#execute()} method to invoke the remote
       * operation. <p> {@link GetPublicKeys#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected GetPublicKeys() {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.IdentityToolkit.V1.GetPublicKeys.GetPublicKeysResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPublicKeys set$Xgafv(java.lang.String $Xgafv) {
        return (GetPublicKeys) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetPublicKeys setAccessToken(java.lang.String accessToken) {
        return (GetPublicKeys) super.setAccessToken(accessToken);
      }

      @Override
      public GetPublicKeys setAlt(java.lang.String alt) {
        return (GetPublicKeys) super.setAlt(alt);
      }

      @Override
      public GetPublicKeys setCallback(java.lang.String callback) {
        return (GetPublicKeys) super.setCallback(callback);
      }

      @Override
      public GetPublicKeys setFields(java.lang.String fields) {
        return (GetPublicKeys) super.setFields(fields);
      }

      @Override
      public GetPublicKeys setKey(java.lang.String key) {
        return (GetPublicKeys) super.setKey(key);
      }

      @Override
      public GetPublicKeys setOauthToken(java.lang.String oauthToken) {
        return (GetPublicKeys) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPublicKeys setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPublicKeys) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPublicKeys setQuotaUser(java.lang.String quotaUser) {
        return (GetPublicKeys) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPublicKeys setUploadType(java.lang.String uploadType) {
        return (GetPublicKeys) super.setUploadType(uploadType);
      }

      @Override
      public GetPublicKeys setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetPublicKeys) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public GetPublicKeys set(String parameterName, Object value) {
        return (GetPublicKeys) super.set(parameterName, value);
      }
    }
    /**
     * Gets parameters needed for generating a reCAPTCHA challenge.
     *
     * Create a request for the method "v1.getRecaptchaParams".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link GetRecaptchaParams#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetRecaptchaParams getRecaptchaParams() throws java.io.IOException {
      GetRecaptchaParams result = new GetRecaptchaParams();
      initialize(result);
      return result;
    }

    public class GetRecaptchaParams extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse> {

      private static final String REST_PATH = "v1/recaptchaParams";

      /**
       * Gets parameters needed for generating a reCAPTCHA challenge.
       *
       * Create a request for the method "v1.getRecaptchaParams".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetRecaptchaParams#execute()} method to invoke the remote
       * operation. <p> {@link GetRecaptchaParams#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetRecaptchaParams() {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetRecaptchaParamResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRecaptchaParams set$Xgafv(java.lang.String $Xgafv) {
        return (GetRecaptchaParams) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetRecaptchaParams setAccessToken(java.lang.String accessToken) {
        return (GetRecaptchaParams) super.setAccessToken(accessToken);
      }

      @Override
      public GetRecaptchaParams setAlt(java.lang.String alt) {
        return (GetRecaptchaParams) super.setAlt(alt);
      }

      @Override
      public GetRecaptchaParams setCallback(java.lang.String callback) {
        return (GetRecaptchaParams) super.setCallback(callback);
      }

      @Override
      public GetRecaptchaParams setFields(java.lang.String fields) {
        return (GetRecaptchaParams) super.setFields(fields);
      }

      @Override
      public GetRecaptchaParams setKey(java.lang.String key) {
        return (GetRecaptchaParams) super.setKey(key);
      }

      @Override
      public GetRecaptchaParams setOauthToken(java.lang.String oauthToken) {
        return (GetRecaptchaParams) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRecaptchaParams setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRecaptchaParams) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRecaptchaParams setQuotaUser(java.lang.String quotaUser) {
        return (GetRecaptchaParams) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRecaptchaParams setUploadType(java.lang.String uploadType) {
        return (GetRecaptchaParams) super.setUploadType(uploadType);
      }

      @Override
      public GetRecaptchaParams setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetRecaptchaParams) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public GetRecaptchaParams set(String parameterName, Object value) {
        return (GetRecaptchaParams) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the set of public keys of the session cookie JSON Web Token (JWT) signer that can be
     * used to validate the session cookie created through createSessionCookie.
     *
     * Create a request for the method "v1.getSessionCookiePublicKeys".
     *
     * This request holds the parameters needed by the identitytoolkit server.  After setting any
     * optional parameters, call the {@link GetSessionCookiePublicKeys#execute()} method to invoke the
     * remote operation.
     *
     * @return the request
     */
    public GetSessionCookiePublicKeys getSessionCookiePublicKeys() throws java.io.IOException {
      GetSessionCookiePublicKeys result = new GetSessionCookiePublicKeys();
      initialize(result);
      return result;
    }

    public class GetSessionCookiePublicKeys extends IdentityToolkitRequest<com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse> {

      private static final String REST_PATH = "v1/sessionCookiePublicKeys";

      /**
       * Retrieves the set of public keys of the session cookie JSON Web Token (JWT) signer that can be
       * used to validate the session cookie created through createSessionCookie.
       *
       * Create a request for the method "v1.getSessionCookiePublicKeys".
       *
       * This request holds the parameters needed by the the identitytoolkit server.  After setting any
       * optional parameters, call the {@link GetSessionCookiePublicKeys#execute()} method to invoke the
       * remote operation. <p> {@link GetSessionCookiePublicKeys#initialize(com.google.api.client.google
       * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetSessionCookiePublicKeys() {
        super(IdentityToolkit.this, "GET", REST_PATH, null, com.google.api.services.identitytoolkit.v1.model.GoogleCloudIdentitytoolkitV1GetSessionCookiePublicKeysResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSessionCookiePublicKeys set$Xgafv(java.lang.String $Xgafv) {
        return (GetSessionCookiePublicKeys) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSessionCookiePublicKeys setAccessToken(java.lang.String accessToken) {
        return (GetSessionCookiePublicKeys) super.setAccessToken(accessToken);
      }

      @Override
      public GetSessionCookiePublicKeys setAlt(java.lang.String alt) {
        return (GetSessionCookiePublicKeys) super.setAlt(alt);
      }

      @Override
      public GetSessionCookiePublicKeys setCallback(java.lang.String callback) {
        return (GetSessionCookiePublicKeys) super.setCallback(callback);
      }

      @Override
      public GetSessionCookiePublicKeys setFields(java.lang.String fields) {
        return (GetSessionCookiePublicKeys) super.setFields(fields);
      }

      @Override
      public GetSessionCookiePublicKeys setKey(java.lang.String key) {
        return (GetSessionCookiePublicKeys) super.setKey(key);
      }

      @Override
      public GetSessionCookiePublicKeys setOauthToken(java.lang.String oauthToken) {
        return (GetSessionCookiePublicKeys) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSessionCookiePublicKeys setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSessionCookiePublicKeys) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSessionCookiePublicKeys setQuotaUser(java.lang.String quotaUser) {
        return (GetSessionCookiePublicKeys) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSessionCookiePublicKeys setUploadType(java.lang.String uploadType) {
        return (GetSessionCookiePublicKeys) super.setUploadType(uploadType);
      }

      @Override
      public GetSessionCookiePublicKeys setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSessionCookiePublicKeys) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public GetSessionCookiePublicKeys set(String parameterName, Object value) {
        return (GetSessionCookiePublicKeys) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link IdentityToolkit}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link IdentityToolkit}. */
    @Override
    public IdentityToolkit build() {
      return new IdentityToolkit(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link IdentityToolkitRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setIdentityToolkitRequestInitializer(
        IdentityToolkitRequestInitializer identitytoolkitRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(identitytoolkitRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
