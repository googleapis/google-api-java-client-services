/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2LikelihoodAdjustment extends com.google.api.client.json.GenericJson {

  /**
   * Set the likelihood of a finding to a fixed value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fixedLikelihood;

  /**
   * Increase or decrease the likelihood by the specified number of levels. For example, if a
   * finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it
   * is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may
   * never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1
   * followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final
   * likelihood of `LIKELY`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer relativeLikelihood;

  /**
   * Set the likelihood of a finding to a fixed value.
   * @return value or {@code null} for none
   */
  public java.lang.String getFixedLikelihood() {
    return fixedLikelihood;
  }

  /**
   * Set the likelihood of a finding to a fixed value.
   * @param fixedLikelihood fixedLikelihood or {@code null} for none
   */
  public GooglePrivacyDlpV2LikelihoodAdjustment setFixedLikelihood(java.lang.String fixedLikelihood) {
    this.fixedLikelihood = fixedLikelihood;
    return this;
  }

  /**
   * Increase or decrease the likelihood by the specified number of levels. For example, if a
   * finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it
   * is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may
   * never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1
   * followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final
   * likelihood of `LIKELY`.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRelativeLikelihood() {
    return relativeLikelihood;
  }

  /**
   * Increase or decrease the likelihood by the specified number of levels. For example, if a
   * finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it
   * is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may
   * never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1
   * followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final
   * likelihood of `LIKELY`.
   * @param relativeLikelihood relativeLikelihood or {@code null} for none
   */
  public GooglePrivacyDlpV2LikelihoodAdjustment setRelativeLikelihood(java.lang.Integer relativeLikelihood) {
    this.relativeLikelihood = relativeLikelihood;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2LikelihoodAdjustment set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2LikelihoodAdjustment) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2LikelihoodAdjustment clone() {
    return (GooglePrivacyDlpV2LikelihoodAdjustment) super.clone();
  }

}
