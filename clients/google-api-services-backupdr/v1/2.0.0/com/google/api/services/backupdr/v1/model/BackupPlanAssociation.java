/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.backupdr.v1.model;

/**
 * A BackupPlanAssociation represents a single BackupPlanAssociation which contains details like
 * workload, backup plan etc
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup and DR Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupPlanAssociation extends com.google.api.client.json.GenericJson {

  /**
   * Required. Resource name of backup plan which needs to be applied on workload. Format:
   * projects/{project}/locations/{location}/backupPlans/{backupPlanId}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupPlan;

  /**
   * Output only. The time when the instance was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Output Only. Resource name of data source which will be used as storage location
   * for backups taken. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSource;

  /**
   * Output only. Identifier. The resource name of BackupPlanAssociation in below format Format :
   * projects/{project}/locations/{location}/backupPlanAssociations/{backupPlanAssociationId}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Immutable. Resource name of workload on which backupplan is applied
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resource;

  /**
   * Optional. Required. Resource type of workload on which backupplan is applied
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceType;

  /**
   * Output only. The config info related to backup rules.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RuleConfigInfo> rulesConfigInfo;

  /**
   * Output only. The BackupPlanAssociation resource state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The time when the instance was updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. Resource name of backup plan which needs to be applied on workload. Format:
   * projects/{project}/locations/{location}/backupPlans/{backupPlanId}
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupPlan() {
    return backupPlan;
  }

  /**
   * Required. Resource name of backup plan which needs to be applied on workload. Format:
   * projects/{project}/locations/{location}/backupPlans/{backupPlanId}
   * @param backupPlan backupPlan or {@code null} for none
   */
  public BackupPlanAssociation setBackupPlan(java.lang.String backupPlan) {
    this.backupPlan = backupPlan;
    return this;
  }

  /**
   * Output only. The time when the instance was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time when the instance was created.
   * @param createTime createTime or {@code null} for none
   */
  public BackupPlanAssociation setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Output Only. Resource name of data source which will be used as storage location
   * for backups taken. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSource() {
    return dataSource;
  }

  /**
   * Output only. Output Only. Resource name of data source which will be used as storage location
   * for backups taken. Format :
   * projects/{project}/locations/{location}/backupVaults/{backupvault}/dataSources/{datasource}
   * @param dataSource dataSource or {@code null} for none
   */
  public BackupPlanAssociation setDataSource(java.lang.String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Output only. Identifier. The resource name of BackupPlanAssociation in below format Format :
   * projects/{project}/locations/{location}/backupPlanAssociations/{backupPlanAssociationId}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. The resource name of BackupPlanAssociation in below format Format :
   * projects/{project}/locations/{location}/backupPlanAssociations/{backupPlanAssociationId}
   * @param name name or {@code null} for none
   */
  public BackupPlanAssociation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Immutable. Resource name of workload on which backupplan is applied
   * @return value or {@code null} for none
   */
  public java.lang.String getResource() {
    return resource;
  }

  /**
   * Required. Immutable. Resource name of workload on which backupplan is applied
   * @param resource resource or {@code null} for none
   */
  public BackupPlanAssociation setResource(java.lang.String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Optional. Required. Resource type of workload on which backupplan is applied
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceType() {
    return resourceType;
  }

  /**
   * Optional. Required. Resource type of workload on which backupplan is applied
   * @param resourceType resourceType or {@code null} for none
   */
  public BackupPlanAssociation setResourceType(java.lang.String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Output only. The config info related to backup rules.
   * @return value or {@code null} for none
   */
  public java.util.List<RuleConfigInfo> getRulesConfigInfo() {
    return rulesConfigInfo;
  }

  /**
   * Output only. The config info related to backup rules.
   * @param rulesConfigInfo rulesConfigInfo or {@code null} for none
   */
  public BackupPlanAssociation setRulesConfigInfo(java.util.List<RuleConfigInfo> rulesConfigInfo) {
    this.rulesConfigInfo = rulesConfigInfo;
    return this;
  }

  /**
   * Output only. The BackupPlanAssociation resource state.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The BackupPlanAssociation resource state.
   * @param state state or {@code null} for none
   */
  public BackupPlanAssociation setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The time when the instance was updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The time when the instance was updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public BackupPlanAssociation setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public BackupPlanAssociation set(String fieldName, Object value) {
    return (BackupPlanAssociation) super.set(fieldName, value);
  }

  @Override
  public BackupPlanAssociation clone() {
    return (BackupPlanAssociation) super.clone();
  }

}
