/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Specifies operators to return facet results for. There will be one FacetResult for every
 * source_name/object_type/operator_name combination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FacetOptions extends com.google.api.client.json.GenericJson {

  /**
   * Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum
   * value is 100.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numFacetBuckets;

  /**
   * If object_type is set, only those objects of that type will be used to compute facets. If
   * empty, then all objects will be used to compute facets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String objectType;

  /**
   * Name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String operatorName;

  /**
   * Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be
   * used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceName;

  /**
   * Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum
   * value is 100.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumFacetBuckets() {
    return numFacetBuckets;
  }

  /**
   * Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum
   * value is 100.
   * @param numFacetBuckets numFacetBuckets or {@code null} for none
   */
  public FacetOptions setNumFacetBuckets(java.lang.Integer numFacetBuckets) {
    this.numFacetBuckets = numFacetBuckets;
    return this;
  }

  /**
   * If object_type is set, only those objects of that type will be used to compute facets. If
   * empty, then all objects will be used to compute facets.
   * @return value or {@code null} for none
   */
  public java.lang.String getObjectType() {
    return objectType;
  }

  /**
   * If object_type is set, only those objects of that type will be used to compute facets. If
   * empty, then all objects will be used to compute facets.
   * @param objectType objectType or {@code null} for none
   */
  public FacetOptions setObjectType(java.lang.String objectType) {
    this.objectType = objectType;
    return this;
  }

  /**
   * Name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
   * @return value or {@code null} for none
   */
  public java.lang.String getOperatorName() {
    return operatorName;
  }

  /**
   * Name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
   * @param operatorName operatorName or {@code null} for none
   */
  public FacetOptions setOperatorName(java.lang.String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

  /**
   * Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be
   * used.
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceName() {
    return sourceName;
  }

  /**
   * Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be
   * used.
   * @param sourceName sourceName or {@code null} for none
   */
  public FacetOptions setSourceName(java.lang.String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

  @Override
  public FacetOptions set(String fieldName, Object value) {
    return (FacetOptions) super.set(fieldName, value);
  }

  @Override
  public FacetOptions clone() {
    return (FacetOptions) super.clone();
  }

}
