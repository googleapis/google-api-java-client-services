{
  "schemas": {
    "GoogleIdentityStsV1ExchangeTokenRequest": {
      "id": "GoogleIdentityStsV1ExchangeTokenRequest",
      "description": "Request message for ExchangeToken.",
      "properties": {
        "options": {
          "description": "A set of features that Security Token Service supports, in addition to the standard OAuth 2.0 token exchange, formatted as a serialized JSON object of Options.",
          "type": "string"
        },
        "grantType": {
          "description": "Required. The grant type. Must be `urn:ietf:params:oauth:grant-type:token-exchange`, which indicates a token exchange is requested.",
          "type": "string"
        },
        "subjectToken": {
          "type": "string",
          "description": "Required. Input subject token. You can use a Google-issued OAuth 2.0 access token with this field to obtain an access token with new security attributes applied, such as an AccessBoundary. Applying additional security attributes on access tokens that already contain security attributes is not allowed."
        },
        "requestedTokenType": {
          "type": "string",
          "description": "Required. An identifier for the type of requested security token. Must be `urn:ietf:params:oauth:token-type:access_token`."
        },
        "subjectTokenType": {
          "type": "string",
          "description": "Required. An identifier that indicates the type of the security token in the `subject_token` parameter. Must be `urn:ietf:params:oauth:token-type:access_token`."
        }
      },
      "type": "object"
    },
    "GoogleIdentityStsV1ExchangeTokenResponse": {
      "properties": {
        "expires_in": {
          "format": "int32",
          "description": "The expiration time of `access_token` in seconds, measured from the time of issuance. This field is absent when the `subject_token` in the request is a Google-issued, short-lived access token. In this case, the expiration time of the `access_token` is the same as the `subject_token`.",
          "type": "integer"
        },
        "token_type": {
          "type": "string",
          "description": "The type of `access_token`. Always has the value `Bearer`."
        },
        "access_token": {
          "description": "An OAuth 2.0 security token, issued by Google, in response to the token exchange request.",
          "type": "string"
        },
        "issued_token_type": {
          "description": "The token type. Always matches the value of `requested_token_type` from the request.",
          "type": "string"
        }
      },
      "id": "GoogleIdentityStsV1ExchangeTokenResponse",
      "description": "Response message for ExchangeToken.",
      "type": "object"
    }
  },
  "id": "sts:v1",
  "canonicalName": "Cloud Security Token",
  "resources": {
    "v1": {
      "methods": {
        "token": {
          "httpMethod": "POST",
          "id": "sts.token",
          "request": {
            "$ref": "GoogleIdentityStsV1ExchangeTokenRequest"
          },
          "parameters": {},
          "flatPath": "v1/token",
          "description": "Exchanges a credential for a Google OAuth 2.0 access token.",
          "parameterOrder": [],
          "path": "v1/token",
          "response": {
            "$ref": "GoogleIdentityStsV1ExchangeTokenResponse"
          }
        }
      }
    }
  },
  "title": "Security Token Service API",
  "baseUrl": "https://sts.googleapis.com/",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://sts.mtls.googleapis.com/",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "name": "sts",
  "rootUrl": "https://sts.googleapis.com/",
  "version": "v1",
  "batchPath": "batch",
  "revision": "20200908",
  "ownerDomain": "google.com",
  "basePath": "",
  "description": "The Security Token Service exchanges Google or third-party credentials for a short-lived access token to Google Cloud resources.",
  "protocol": "rest",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "documentationLink": "http://cloud.google.com/iam/docs/workload-identity-federation"
}
