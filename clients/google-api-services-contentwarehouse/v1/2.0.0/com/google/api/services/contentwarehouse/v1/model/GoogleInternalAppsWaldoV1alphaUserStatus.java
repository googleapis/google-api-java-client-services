/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The actual status of the user. The message contains everything needed for visualisation of this
 * status.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleInternalAppsWaldoV1alphaUserStatus extends com.google.api.client.json.GenericJson {

  /**
   * Set if the user is temporarily busy and there is not a more specific status derived from
   * calendar that applies (e.g., InMeeting or DoNotDisturb).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaCalendarBusy calendarBusy;

  /**
   * Set if the user is in a Focus Time block. Note that this is different than Chat's Do not
   * disturb status, but they may coincide, see: go/focus-time-dnd.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaDoNotDisturb doNotDisturb;

  /**
   * Set if the user is in a meeting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaInMeeting inMeeting;

  /**
   * Set if no other statuses apply.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaInactive inactive;

  /**
   * Set if the user is out of office.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaOutOfOffice outOfOffice;

  /**
   * Set if the user doesn't work at this time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleInternalAppsWaldoV1alphaOutsideWorkingHours outsideWorkingHours;

  /**
   * Set if the user is temporarily busy and there is not a more specific status derived from
   * calendar that applies (e.g., InMeeting or DoNotDisturb).
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaCalendarBusy getCalendarBusy() {
    return calendarBusy;
  }

  /**
   * Set if the user is temporarily busy and there is not a more specific status derived from
   * calendar that applies (e.g., InMeeting or DoNotDisturb).
   * @param calendarBusy calendarBusy or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setCalendarBusy(GoogleInternalAppsWaldoV1alphaCalendarBusy calendarBusy) {
    this.calendarBusy = calendarBusy;
    return this;
  }

  /**
   * Set if the user is in a Focus Time block. Note that this is different than Chat's Do not
   * disturb status, but they may coincide, see: go/focus-time-dnd.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaDoNotDisturb getDoNotDisturb() {
    return doNotDisturb;
  }

  /**
   * Set if the user is in a Focus Time block. Note that this is different than Chat's Do not
   * disturb status, but they may coincide, see: go/focus-time-dnd.
   * @param doNotDisturb doNotDisturb or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setDoNotDisturb(GoogleInternalAppsWaldoV1alphaDoNotDisturb doNotDisturb) {
    this.doNotDisturb = doNotDisturb;
    return this;
  }

  /**
   * Set if the user is in a meeting.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInMeeting getInMeeting() {
    return inMeeting;
  }

  /**
   * Set if the user is in a meeting.
   * @param inMeeting inMeeting or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setInMeeting(GoogleInternalAppsWaldoV1alphaInMeeting inMeeting) {
    this.inMeeting = inMeeting;
    return this;
  }

  /**
   * Set if no other statuses apply.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaInactive getInactive() {
    return inactive;
  }

  /**
   * Set if no other statuses apply.
   * @param inactive inactive or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setInactive(GoogleInternalAppsWaldoV1alphaInactive inactive) {
    this.inactive = inactive;
    return this;
  }

  /**
   * Set if the user is out of office.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaOutOfOffice getOutOfOffice() {
    return outOfOffice;
  }

  /**
   * Set if the user is out of office.
   * @param outOfOffice outOfOffice or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setOutOfOffice(GoogleInternalAppsWaldoV1alphaOutOfOffice outOfOffice) {
    this.outOfOffice = outOfOffice;
    return this;
  }

  /**
   * Set if the user doesn't work at this time.
   * @return value or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaOutsideWorkingHours getOutsideWorkingHours() {
    return outsideWorkingHours;
  }

  /**
   * Set if the user doesn't work at this time.
   * @param outsideWorkingHours outsideWorkingHours or {@code null} for none
   */
  public GoogleInternalAppsWaldoV1alphaUserStatus setOutsideWorkingHours(GoogleInternalAppsWaldoV1alphaOutsideWorkingHours outsideWorkingHours) {
    this.outsideWorkingHours = outsideWorkingHours;
    return this;
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaUserStatus set(String fieldName, Object value) {
    return (GoogleInternalAppsWaldoV1alphaUserStatus) super.set(fieldName, value);
  }

  @Override
  public GoogleInternalAppsWaldoV1alphaUserStatus clone() {
    return (GoogleInternalAppsWaldoV1alphaUserStatus) super.clone();
  }

}
