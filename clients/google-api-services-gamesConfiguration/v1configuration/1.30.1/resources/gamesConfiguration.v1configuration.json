{
  "name": "gamesConfiguration",
  "revision": "20200720",
  "rootUrl": "https://gamesconfiguration.googleapis.com/",
  "resources": {
    "leaderboardConfigurations": {
      "methods": {
        "list": {
          "parameters": {
            "applicationId": {
              "description": "The application ID from the Google Play developer console.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "int32",
              "description": "The maximum number of resource configurations to return in the response,\nused for paging. For any response, the actual number of resources returned\nmay be less than the specified `maxResults`."
            }
          },
          "path": "games/v1configuration/applications/{applicationId}/leaderboards",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "games/v1configuration/applications/{applicationId}/leaderboards",
          "httpMethod": "GET",
          "response": {
            "$ref": "LeaderboardConfigurationListResponse"
          },
          "description": "Returns a list of the leaderboard configurations in this application.",
          "id": "gamesConfiguration.leaderboardConfigurations.list",
          "parameterOrder": [
            "applicationId"
          ]
        },
        "delete": {
          "description": "Delete the leaderboard configuration with the given ID.",
          "parameterOrder": [
            "leaderboardId"
          ],
          "httpMethod": "DELETE",
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "id": "gamesConfiguration.leaderboardConfigurations.delete",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "leaderboardId": {
              "description": "The ID of the leaderboard.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}",
          "description": "Retrieves the metadata of the leaderboard configuration with the given ID.",
          "httpMethod": "GET",
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "parameters": {
            "leaderboardId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the leaderboard."
            }
          },
          "parameterOrder": [
            "leaderboardId"
          ],
          "response": {
            "$ref": "LeaderboardConfiguration"
          },
          "id": "gamesConfiguration.leaderboardConfigurations.get"
        },
        "insert": {
          "httpMethod": "POST",
          "path": "games/v1configuration/applications/{applicationId}/leaderboards",
          "parameterOrder": [
            "applicationId"
          ],
          "flatPath": "games/v1configuration/applications/{applicationId}/leaderboards",
          "response": {
            "$ref": "LeaderboardConfiguration"
          },
          "request": {
            "$ref": "LeaderboardConfiguration"
          },
          "parameters": {
            "applicationId": {
              "description": "The application ID from the Google Play developer console.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "gamesConfiguration.leaderboardConfigurations.insert",
          "description": "Insert a new leaderboard configuration in this application."
        },
        "update": {
          "path": "games/v1configuration/leaderboards/{leaderboardId}",
          "parameters": {
            "leaderboardId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the leaderboard."
            }
          },
          "description": "Update the metadata of the leaderboard configuration with the given ID.",
          "response": {
            "$ref": "LeaderboardConfiguration"
          },
          "id": "gamesConfiguration.leaderboardConfigurations.update",
          "request": {
            "$ref": "LeaderboardConfiguration"
          },
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "leaderboardId"
          ],
          "flatPath": "games/v1configuration/leaderboards/{leaderboardId}"
        }
      }
    },
    "achievementConfigurations": {
      "methods": {
        "get": {
          "id": "gamesConfiguration.achievementConfigurations.get",
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "description": "Retrieves the metadata of the achievement configuration with the given ID.",
          "parameters": {
            "achievementId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the achievement used by this method."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "path": "games/v1configuration/achievements/{achievementId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "achievementId"
          ]
        },
        "delete": {
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "parameterOrder": [
            "achievementId"
          ],
          "path": "games/v1configuration/achievements/{achievementId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "gamesConfiguration.achievementConfigurations.delete",
          "description": "Delete the achievement configuration with the given ID.",
          "httpMethod": "DELETE",
          "parameters": {
            "achievementId": {
              "description": "The ID of the achievement used by this method.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          }
        },
        "update": {
          "flatPath": "games/v1configuration/achievements/{achievementId}",
          "path": "games/v1configuration/achievements/{achievementId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "parameters": {
            "achievementId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the achievement used by this method."
            }
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "achievementId"
          ],
          "description": "Update the metadata of the achievement configuration with the given ID.",
          "request": {
            "$ref": "AchievementConfiguration"
          },
          "id": "gamesConfiguration.achievementConfigurations.update"
        },
        "list": {
          "flatPath": "games/v1configuration/applications/{applicationId}/achievements",
          "httpMethod": "GET",
          "response": {
            "$ref": "AchievementConfigurationListResponse"
          },
          "path": "games/v1configuration/applications/{applicationId}/achievements",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "location": "query",
              "description": "The maximum number of resource configurations to return in the response,\nused for paging. For any response, the actual number of resources returned\nmay be less than the specified `maxResults`.",
              "type": "integer"
            },
            "applicationId": {
              "type": "string",
              "description": "The application ID from the Google Play developer console.",
              "location": "path",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "gamesConfiguration.achievementConfigurations.list",
          "description": "Returns a list of the achievement configurations in this application.",
          "parameterOrder": [
            "applicationId"
          ]
        },
        "insert": {
          "response": {
            "$ref": "AchievementConfiguration"
          },
          "request": {
            "$ref": "AchievementConfiguration"
          },
          "path": "games/v1configuration/applications/{applicationId}/achievements",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "games/v1configuration/applications/{applicationId}/achievements",
          "description": "Insert a new achievement configuration in this application.",
          "parameterOrder": [
            "applicationId"
          ],
          "id": "gamesConfiguration.achievementConfigurations.insert",
          "httpMethod": "POST",
          "parameters": {
            "applicationId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The application ID from the Google Play developer console."
            }
          }
        }
      }
    },
    "imageConfigurations": {
      "methods": {
        "upload": {
          "flatPath": "games/v1configuration/images/{resourceId}/imageType/{imageType}",
          "httpMethod": "POST",
          "description": "Uploads an image for a resource with the given ID and image type.",
          "id": "gamesConfiguration.imageConfigurations.upload",
          "path": "games/v1configuration/images/{resourceId}/imageType/{imageType}",
          "response": {
            "$ref": "ImageConfiguration"
          },
          "parameters": {
            "imageType": {
              "required": true,
              "enum": [
                "IMAGE_TYPE_UNSPECIFIED",
                "ACHIEVEMENT_ICON",
                "LEADERBOARD_ICON"
              ],
              "location": "path",
              "type": "string",
              "description": "Selects which image in a resource for this method."
            },
            "resourceId": {
              "type": "string",
              "required": true,
              "description": "The ID of the resource used by this method.",
              "location": "path"
            }
          },
          "supportsMediaUpload": true,
          "parameterOrder": [
            "resourceId",
            "imageType"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "mediaUpload": {
            "maxSize": "15728640",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/games/v1configuration/images/{resourceId}/imageType/{imageType}"
              }
            },
            "accept": [
              "image/*"
            ]
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "baseUrl": "https://gamesconfiguration.googleapis.com/",
  "title": "Google Play Game Services Publishing API",
  "ownerDomain": "google.com",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/androidpublisher": {
          "description": "View and manage your Google Play Developer account"
        }
      }
    }
  },
  "canonicalName": "Games Configuration",
  "schemas": {
    "GamesNumberFormatConfiguration": {
      "id": "GamesNumberFormatConfiguration",
      "type": "object",
      "description": "A number format resource.",
      "properties": {
        "numDecimalPlaces": {
          "description": "The number of decimal places for number. Only used for NUMERIC format type.",
          "format": "int32",
          "type": "integer"
        },
        "currencyCode": {
          "type": "string",
          "description": "The curreny code string. Only used for CURRENCY format type."
        },
        "suffix": {
          "description": "An optional suffix for the NUMERIC format type.  These strings follow the\nsame \u003ca\nhref=\"http://developer.android.com/guide/topics/resources/string-resource.html#Plurals\"\u003e\nplural rules\u003c/a\u003e as all Android string resources.",
          "$ref": "GamesNumberAffixConfiguration"
        },
        "numberFormatType": {
          "type": "string",
          "description": "The formatting for the number.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Numbers are formatted to have no digits or fixed number of digits after\nthe decimal point according to locale. An optional custom unit can be\nadded.",
            "Numbers are formatted to hours, minutes and seconds.",
            "Numbers are formatted to currency according to locale."
          ],
          "enum": [
            "NUMBER_FORMAT_TYPE_UNSPECIFIED",
            "NUMERIC",
            "TIME_DURATION",
            "CURRENCY"
          ]
        }
      }
    },
    "AchievementConfiguration": {
      "description": "An achievement configuration resource.",
      "properties": {
        "initialState": {
          "enum": [
            "INITIAL_STATE_UNSPECIFIED",
            "HIDDEN",
            "REVEALED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Achievement is hidden.",
            "Achievement is revealed."
          ],
          "description": "The initial state of the achievement."
        },
        "draft": {
          "$ref": "AchievementConfigurationDetail",
          "description": "The draft data of the achievement."
        },
        "published": {
          "description": "The read-only published data of the achievement.",
          "$ref": "AchievementConfigurationDetail"
        },
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#achievementConfiguration`."
        },
        "stepsToUnlock": {
          "format": "int32",
          "type": "integer",
          "description": "Steps to unlock.  Only applicable to incremental achievements."
        },
        "id": {
          "type": "string",
          "description": "The ID of the achievement."
        },
        "token": {
          "type": "string",
          "description": "The token for this resource."
        },
        "achievementType": {
          "description": "The type of the achievement.",
          "enum": [
            "ACHIEVEMENT_TYPE_UNSPECIFIED",
            "STANDARD",
            "INCREMENTAL"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Achievement is either locked or unlocked.",
            "Achievement is incremental."
          ],
          "type": "string"
        }
      },
      "id": "AchievementConfiguration",
      "type": "object"
    },
    "GamesNumberAffixConfiguration": {
      "id": "GamesNumberAffixConfiguration",
      "type": "object",
      "properties": {
        "zero": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of the number 0 (as in\nArabic)."
        },
        "many": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of \"large\" numbers (as with\nnumbers ending 11-99 in Maltese)."
        },
        "two": {
          "description": "When the language requires special treatment of numbers like two (as with 2\nin Welsh, or 102 in Slovenian).",
          "$ref": "LocalizedStringBundle"
        },
        "one": {
          "description": "When the language requires special treatment of numbers like one (as with\nthe number 1 in English and most other languages; in Russian, any number\nending in 1 but not ending in 11 is in this class).",
          "$ref": "LocalizedStringBundle"
        },
        "few": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language requires special treatment of \"small\" numbers (as with 2,\n3, and 4 in Czech; or numbers ending 2, 3, or 4 but not 12, 13, or 14 in\nPolish)."
        },
        "other": {
          "$ref": "LocalizedStringBundle",
          "description": "When the language does not require special treatment of the given quantity\n(as with all numbers in Chinese, or 42 in English)."
        }
      },
      "description": "A number affix resource."
    },
    "AchievementConfigurationListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The pagination token for the next page of results.",
          "type": "string"
        },
        "items": {
          "description": "The achievement configurations.",
          "items": {
            "$ref": "AchievementConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#achievementConfigurationListResponse`."
        }
      },
      "description": "A ListConfigurations response.",
      "id": "AchievementConfigurationListResponse",
      "type": "object"
    },
    "ImageConfiguration": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#imageConfiguration`."
        },
        "url": {
          "description": "The url for this image.",
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "description": "The resource ID of resource which the image belongs to."
        },
        "imageType": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The icon image for an achievement resource.",
            "The icon image for a leaderboard resource."
          ],
          "description": "The image type for the image.",
          "enum": [
            "IMAGE_TYPE_UNSPECIFIED",
            "ACHIEVEMENT_ICON",
            "LEADERBOARD_ICON"
          ]
        }
      },
      "type": "object",
      "id": "ImageConfiguration",
      "description": "An image configuration resource."
    },
    "LeaderboardConfiguration": {
      "description": "An leaderboard configuration resource.",
      "id": "LeaderboardConfiguration",
      "type": "object",
      "properties": {
        "published": {
          "$ref": "LeaderboardConfigurationDetail",
          "description": "The read-only published data of the leaderboard."
        },
        "scoreMin": {
          "format": "int64",
          "type": "string",
          "description": "Minimum score that can be posted to this leaderboard."
        },
        "draft": {
          "description": "The draft data of the leaderboard.",
          "$ref": "LeaderboardConfigurationDetail"
        },
        "scoreOrder": {
          "enum": [
            "SCORE_ORDER_UNSPECIFIED",
            "LARGER_IS_BETTER",
            "SMALLER_IS_BETTER"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Larger scores posted are ranked higher.",
            "Smaller scores posted are ranked higher."
          ],
          "type": "string"
        },
        "id": {
          "description": "The ID of the leaderboard.",
          "type": "string"
        },
        "token": {
          "description": "The token for this resource.",
          "type": "string"
        },
        "scoreMax": {
          "format": "int64",
          "description": "Maximum score that can be posted to this leaderboard.",
          "type": "string"
        },
        "kind": {
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#leaderboardConfiguration`.",
          "type": "string"
        }
      }
    },
    "LeaderboardConfigurationDetail": {
      "properties": {
        "sortRank": {
          "description": "The sort rank of this leaderboard. Writes to this field are ignored.",
          "type": "integer",
          "format": "int32"
        },
        "scoreFormat": {
          "description": "The score formatting for the leaderboard.",
          "$ref": "GamesNumberFormatConfiguration"
        },
        "iconUrl": {
          "type": "string",
          "description": "The icon url of this leaderboard. Writes to this field are ignored."
        },
        "name": {
          "$ref": "LocalizedStringBundle",
          "description": "Localized strings for the leaderboard name."
        },
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#leaderboardConfigurationDetail`."
        }
      },
      "type": "object",
      "id": "LeaderboardConfigurationDetail",
      "description": "A leaderboard configuration detail."
    },
    "AchievementConfigurationDetail": {
      "description": "An achievement configuration detail.",
      "type": "object",
      "properties": {
        "sortRank": {
          "description": "The sort rank of this achievement. Writes to this field are ignored.",
          "format": "int32",
          "type": "integer"
        },
        "pointValue": {
          "type": "integer",
          "description": "Point value for the achievement.",
          "format": "int32"
        },
        "description": {
          "$ref": "LocalizedStringBundle",
          "description": "Localized strings for the achievement description."
        },
        "name": {
          "description": "Localized strings for the achievement name.",
          "$ref": "LocalizedStringBundle"
        },
        "kind": {
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#achievementConfigurationDetail`.",
          "type": "string"
        },
        "iconUrl": {
          "type": "string",
          "description": "The icon url of this achievement. Writes to this field are ignored."
        }
      },
      "id": "AchievementConfigurationDetail"
    },
    "LocalizedStringBundle": {
      "id": "LocalizedStringBundle",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#localizedStringBundle`."
        },
        "translations": {
          "items": {
            "$ref": "LocalizedString"
          },
          "type": "array",
          "description": "The locale strings."
        }
      },
      "description": "A localized string bundle resource.",
      "type": "object"
    },
    "LocalizedString": {
      "description": "A localized string resource.",
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale string."
        },
        "value": {
          "description": "The string value.",
          "type": "string"
        },
        "kind": {
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring `gamesConfiguration#localizedString`.",
          "type": "string"
        }
      },
      "id": "LocalizedString"
    },
    "LeaderboardConfigurationListResponse": {
      "description": "A ListConfigurations response.",
      "id": "LeaderboardConfigurationListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Uniquely identifies the type of this resource. Value is always the fixed\nstring\n`gamesConfiguration#leaderboardConfigurationListResponse`.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "LeaderboardConfiguration"
          },
          "description": "The leaderboard configurations.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token for the next page of results.",
          "type": "string"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/games/",
  "basePath": "",
  "mtlsRootUrl": "https://gamesconfiguration.mtls.googleapis.com/",
  "id": "gamesConfiguration:v1configuration",
  "kind": "discovery#restDescription",
  "description": "The Google Play Game Services Publishing API allows developers to configure their games in Game Services.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1configuration",
  "servicePath": "",
  "batchPath": "batch"
}
