/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for HtmlrenderWebkitHeadlessProtoRenderEvent.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HtmlrenderWebkitHeadlessProtoRenderEvent extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoFrameResizeEvent frameResize;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoInitialLoadEvent initialLoad;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoModalDialogEvent modalDialog;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoRedirectEvent redirect;

  /**
   * The URL of the script which caused this event, if any. Analogous to origin_url in DOMTreeNode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scriptOriginUrl;

  /**
   * Virtual time of the event, as an offset from the beginning of the render in seconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double virtualTimeOffset;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlrenderWebkitHeadlessProtoWindowOpenEvent windowOpen;

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoFrameResizeEvent getFrameResize() {
    return frameResize;
  }

  /**
   * @param frameResize frameResize or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setFrameResize(HtmlrenderWebkitHeadlessProtoFrameResizeEvent frameResize) {
    this.frameResize = frameResize;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoInitialLoadEvent getInitialLoad() {
    return initialLoad;
  }

  /**
   * @param initialLoad initialLoad or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setInitialLoad(HtmlrenderWebkitHeadlessProtoInitialLoadEvent initialLoad) {
    this.initialLoad = initialLoad;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoModalDialogEvent getModalDialog() {
    return modalDialog;
  }

  /**
   * @param modalDialog modalDialog or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setModalDialog(HtmlrenderWebkitHeadlessProtoModalDialogEvent modalDialog) {
    this.modalDialog = modalDialog;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRedirectEvent getRedirect() {
    return redirect;
  }

  /**
   * @param redirect redirect or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setRedirect(HtmlrenderWebkitHeadlessProtoRedirectEvent redirect) {
    this.redirect = redirect;
    return this;
  }

  /**
   * The URL of the script which caused this event, if any. Analogous to origin_url in DOMTreeNode.
   * @return value or {@code null} for none
   */
  public java.lang.String getScriptOriginUrl() {
    return scriptOriginUrl;
  }

  /**
   * The URL of the script which caused this event, if any. Analogous to origin_url in DOMTreeNode.
   * @param scriptOriginUrl scriptOriginUrl or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setScriptOriginUrl(java.lang.String scriptOriginUrl) {
    this.scriptOriginUrl = scriptOriginUrl;
    return this;
  }

  /**
   * Virtual time of the event, as an offset from the beginning of the render in seconds.
   * @return value or {@code null} for none
   */
  public java.lang.Double getVirtualTimeOffset() {
    return virtualTimeOffset;
  }

  /**
   * Virtual time of the event, as an offset from the beginning of the render in seconds.
   * @param virtualTimeOffset virtualTimeOffset or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setVirtualTimeOffset(java.lang.Double virtualTimeOffset) {
    this.virtualTimeOffset = virtualTimeOffset;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoWindowOpenEvent getWindowOpen() {
    return windowOpen;
  }

  /**
   * @param windowOpen windowOpen or {@code null} for none
   */
  public HtmlrenderWebkitHeadlessProtoRenderEvent setWindowOpen(HtmlrenderWebkitHeadlessProtoWindowOpenEvent windowOpen) {
    this.windowOpen = windowOpen;
    return this;
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoRenderEvent set(String fieldName, Object value) {
    return (HtmlrenderWebkitHeadlessProtoRenderEvent) super.set(fieldName, value);
  }

  @Override
  public HtmlrenderWebkitHeadlessProtoRenderEvent clone() {
    return (HtmlrenderWebkitHeadlessProtoRenderEvent) super.clone();
  }

}
