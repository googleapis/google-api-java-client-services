/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.documentai.v1beta3.model;

/**
 * EntityType is the wrapper of a label of the corresponding model with detailed attributes and
 * limitations for entity-based processors. Multiple types can also compose a dependency tree to
 * represent nested types.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Document AI API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDocumentaiV1beta3SchemaEntityType extends com.google.api.client.json.GenericJson {

  /**
   * Type of the entity. It must be one of the following: `document` - the entity represents a
   * classification of a logical document. `object` - if the entity has properties it is likely an
   * object (or or a document.) `datetime` - the entity is a date or time value. `money` - the
   * entity represents a money value amount. `number` - the entity is a number - integer or floating
   * point. `string` - the entity is a string value. `boolean` - the entity is a boolean value.
   * `address` - the entity is a location address. `duration` - the entity is a duration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String baseType;

  /**
   * Description of the entity type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * If specified, lists all the possible values for this entity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> enumValues;

  /**
   * Occurrence type limits the number of times an entity type appears in the document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String occurrenceType;

  /**
   * Describing the nested structure of an entity. An EntityType may consist of several other
   * EntityTypes. For example, in a document there can be an EntityType 'ID', which consists of
   * EntityType 'name' and 'address', with corresponding attributes, such as TEXT for both types and
   * ONCE for occurrence types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDocumentaiV1beta3SchemaEntityType> properties;

  /**
   * Source of this entity type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * Name of the type. It must satisfy the following constraints: 1. Must be unique within the set
   * of same level types (with case-insensitive match). 2. Maximum 50 characters. 3. Must start with
   * a letter. 4. Allowed characters: ASCII letters [a-zA-Z], ASCII digits [0-9], or one of the
   * following punctuation characters: * underscore '_' (recommended) * hyphen '-' (allowed, not
   * recommended) * colon ':' (allowed, not recommended) NOTE: Whitespace characters are not
   * allowed. 5. Cannot end with a punctuation character. 6. Cannot contain the following restricted
   * strings: "google", "DocumentAI" (case-insensitive match). 7. A slash character '/' is reserved
   * as a separator in flattened representations of nested entity types (e.g., "line_item/amount")
   * in which case each part (e.g., "line_item", "amount") must comply with the rules defined above.
   * We recommend using the snake case ("snake_case") in entity type names.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Type of the entity. It must be one of the following: `document` - the entity represents a
   * classification of a logical document. `object` - if the entity has properties it is likely an
   * object (or or a document.) `datetime` - the entity is a date or time value. `money` - the
   * entity represents a money value amount. `number` - the entity is a number - integer or floating
   * point. `string` - the entity is a string value. `boolean` - the entity is a boolean value.
   * `address` - the entity is a location address. `duration` - the entity is a duration.
   * @return value or {@code null} for none
   */
  public java.lang.String getBaseType() {
    return baseType;
  }

  /**
   * Type of the entity. It must be one of the following: `document` - the entity represents a
   * classification of a logical document. `object` - if the entity has properties it is likely an
   * object (or or a document.) `datetime` - the entity is a date or time value. `money` - the
   * entity represents a money value amount. `number` - the entity is a number - integer or floating
   * point. `string` - the entity is a string value. `boolean` - the entity is a boolean value.
   * `address` - the entity is a location address. `duration` - the entity is a duration.
   * @param baseType baseType or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setBaseType(java.lang.String baseType) {
    this.baseType = baseType;
    return this;
  }

  /**
   * Description of the entity type.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description of the entity type.
   * @param description description or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * If specified, lists all the possible values for this entity.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEnumValues() {
    return enumValues;
  }

  /**
   * If specified, lists all the possible values for this entity.
   * @param enumValues enumValues or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setEnumValues(java.util.List<java.lang.String> enumValues) {
    this.enumValues = enumValues;
    return this;
  }

  /**
   * Occurrence type limits the number of times an entity type appears in the document.
   * @return value or {@code null} for none
   */
  public java.lang.String getOccurrenceType() {
    return occurrenceType;
  }

  /**
   * Occurrence type limits the number of times an entity type appears in the document.
   * @param occurrenceType occurrenceType or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setOccurrenceType(java.lang.String occurrenceType) {
    this.occurrenceType = occurrenceType;
    return this;
  }

  /**
   * Describing the nested structure of an entity. An EntityType may consist of several other
   * EntityTypes. For example, in a document there can be an EntityType 'ID', which consists of
   * EntityType 'name' and 'address', with corresponding attributes, such as TEXT for both types and
   * ONCE for occurrence types.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDocumentaiV1beta3SchemaEntityType> getProperties() {
    return properties;
  }

  /**
   * Describing the nested structure of an entity. An EntityType may consist of several other
   * EntityTypes. For example, in a document there can be an EntityType 'ID', which consists of
   * EntityType 'name' and 'address', with corresponding attributes, such as TEXT for both types and
   * ONCE for occurrence types.
   * @param properties properties or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setProperties(java.util.List<GoogleCloudDocumentaiV1beta3SchemaEntityType> properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Source of this entity type.
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Source of this entity type.
   * @param source source or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * Name of the type. It must satisfy the following constraints: 1. Must be unique within the set
   * of same level types (with case-insensitive match). 2. Maximum 50 characters. 3. Must start with
   * a letter. 4. Allowed characters: ASCII letters [a-zA-Z], ASCII digits [0-9], or one of the
   * following punctuation characters: * underscore '_' (recommended) * hyphen '-' (allowed, not
   * recommended) * colon ':' (allowed, not recommended) NOTE: Whitespace characters are not
   * allowed. 5. Cannot end with a punctuation character. 6. Cannot contain the following restricted
   * strings: "google", "DocumentAI" (case-insensitive match). 7. A slash character '/' is reserved
   * as a separator in flattened representations of nested entity types (e.g., "line_item/amount")
   * in which case each part (e.g., "line_item", "amount") must comply with the rules defined above.
   * We recommend using the snake case ("snake_case") in entity type names.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Name of the type. It must satisfy the following constraints: 1. Must be unique within the set
   * of same level types (with case-insensitive match). 2. Maximum 50 characters. 3. Must start with
   * a letter. 4. Allowed characters: ASCII letters [a-zA-Z], ASCII digits [0-9], or one of the
   * following punctuation characters: * underscore '_' (recommended) * hyphen '-' (allowed, not
   * recommended) * colon ':' (allowed, not recommended) NOTE: Whitespace characters are not
   * allowed. 5. Cannot end with a punctuation character. 6. Cannot contain the following restricted
   * strings: "google", "DocumentAI" (case-insensitive match). 7. A slash character '/' is reserved
   * as a separator in flattened representations of nested entity types (e.g., "line_item/amount")
   * in which case each part (e.g., "line_item", "amount") must comply with the rules defined above.
   * We recommend using the snake case ("snake_case") in entity type names.
   * @param type type or {@code null} for none
   */
  public GoogleCloudDocumentaiV1beta3SchemaEntityType setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleCloudDocumentaiV1beta3SchemaEntityType set(String fieldName, Object value) {
    return (GoogleCloudDocumentaiV1beta3SchemaEntityType) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDocumentaiV1beta3SchemaEntityType clone() {
    return (GoogleCloudDocumentaiV1beta3SchemaEntityType) super.clone();
  }

}
