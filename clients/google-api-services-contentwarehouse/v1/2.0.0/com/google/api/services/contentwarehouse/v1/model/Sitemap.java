/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Note: If you are going to populate any new field in this proto, you probably need to go through
 * the go/dj-new-field and go/index-changes process.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Sitemap extends com.google.api.client.json.GenericJson {

  /**
   * DEPRECATED DEPRECATED DEPRECATED In case you didn't realize, these fields are (and have been
   * for some time) deprecated. We'll stop pushing their data to production soon (probably Feb/09)
   * and after a few weeks we'll probably remove them.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DEPRECATEDSourceTitle")
  private java.lang.String dEPRECATEDSourceTitle;

  /**
   * One Sitemap can contain multiple TargetGroups, but only one of them will be displayed to the
   * user - this decision will be made at displaying time and can take into account various factors,
   * such as the users' language and country, currently running experiments, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("TargetGroups")
  private java.util.List<QualitySitemapTargetGroup> targetGroups;

  static {
    // hack to force ProGuard to consider QualitySitemapTargetGroup used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(QualitySitemapTargetGroup.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SitemapDEPRECATEDTarget> deprecatedTarget;

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. This is used to store
   * page anchors information for TopicTagsScrolltoFlow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SdrPageAnchorsDocInfo pageAnchorsDocInfo;

  /**
   * Enable site search.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean searchInSite;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sitemapType;

  /**
   * prevents cross-domain forwarding
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger sourceOrgfp;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceUrl;

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. It's not set in the
   * cdoc Sitemap.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualitySitemapSubresultList subresultList;

  /**
   * DEPRECATED DEPRECATED DEPRECATED In case you didn't realize, these fields are (and have been
   * for some time) deprecated. We'll stop pushing their data to production soon (probably Feb/09)
   * and after a few weeks we'll probably remove them.
   * @return value or {@code null} for none
   */
  public java.lang.String getDEPRECATEDSourceTitle() {
    return dEPRECATEDSourceTitle;
  }

  /**
   * DEPRECATED DEPRECATED DEPRECATED In case you didn't realize, these fields are (and have been
   * for some time) deprecated. We'll stop pushing their data to production soon (probably Feb/09)
   * and after a few weeks we'll probably remove them.
   * @param dEPRECATEDSourceTitle dEPRECATEDSourceTitle or {@code null} for none
   */
  public Sitemap setDEPRECATEDSourceTitle(java.lang.String dEPRECATEDSourceTitle) {
    this.dEPRECATEDSourceTitle = dEPRECATEDSourceTitle;
    return this;
  }

  /**
   * One Sitemap can contain multiple TargetGroups, but only one of them will be displayed to the
   * user - this decision will be made at displaying time and can take into account various factors,
   * such as the users' language and country, currently running experiments, etc.
   * @return value or {@code null} for none
   */
  public java.util.List<QualitySitemapTargetGroup> getTargetGroups() {
    return targetGroups;
  }

  /**
   * One Sitemap can contain multiple TargetGroups, but only one of them will be displayed to the
   * user - this decision will be made at displaying time and can take into account various factors,
   * such as the users' language and country, currently running experiments, etc.
   * @param targetGroups targetGroups or {@code null} for none
   */
  public Sitemap setTargetGroups(java.util.List<QualitySitemapTargetGroup> targetGroups) {
    this.targetGroups = targetGroups;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<SitemapDEPRECATEDTarget> getDeprecatedTarget() {
    return deprecatedTarget;
  }

  /**
   * @param deprecatedTarget deprecatedTarget or {@code null} for none
   */
  public Sitemap setDeprecatedTarget(java.util.List<SitemapDEPRECATEDTarget> deprecatedTarget) {
    this.deprecatedTarget = deprecatedTarget;
    return this;
  }

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. This is used to store
   * page anchors information for TopicTagsScrolltoFlow.
   * @return value or {@code null} for none
   */
  public SdrPageAnchorsDocInfo getPageAnchorsDocInfo() {
    return pageAnchorsDocInfo;
  }

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. This is used to store
   * page anchors information for TopicTagsScrolltoFlow.
   * @param pageAnchorsDocInfo pageAnchorsDocInfo or {@code null} for none
   */
  public Sitemap setPageAnchorsDocInfo(SdrPageAnchorsDocInfo pageAnchorsDocInfo) {
    this.pageAnchorsDocInfo = pageAnchorsDocInfo;
    return this;
  }

  /**
   * Enable site search.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSearchInSite() {
    return searchInSite;
  }

  /**
   * Enable site search.
   * @param searchInSite searchInSite or {@code null} for none
   */
  public Sitemap setSearchInSite(java.lang.Boolean searchInSite) {
    this.searchInSite = searchInSite;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSitemapType() {
    return sitemapType;
  }

  /**
   * @param sitemapType sitemapType or {@code null} for none
   */
  public Sitemap setSitemapType(java.lang.String sitemapType) {
    this.sitemapType = sitemapType;
    return this;
  }

  /**
   * prevents cross-domain forwarding
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getSourceOrgfp() {
    return sourceOrgfp;
  }

  /**
   * prevents cross-domain forwarding
   * @param sourceOrgfp sourceOrgfp or {@code null} for none
   */
  public Sitemap setSourceOrgfp(java.math.BigInteger sourceOrgfp) {
    this.sourceOrgfp = sourceOrgfp;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceUrl() {
    return sourceUrl;
  }

  /**
   * @param sourceUrl sourceUrl or {@code null} for none
   */
  public Sitemap setSourceUrl(java.lang.String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. It's not set in the
   * cdoc Sitemap.
   * @return value or {@code null} for none
   */
  public QualitySitemapSubresultList getSubresultList() {
    return subresultList;
  }

  /**
   * This field is populated in the Sitemap MDU subpopulator from cdoc data. It's not set in the
   * cdoc Sitemap.
   * @param subresultList subresultList or {@code null} for none
   */
  public Sitemap setSubresultList(QualitySitemapSubresultList subresultList) {
    this.subresultList = subresultList;
    return this;
  }

  @Override
  public Sitemap set(String fieldName, Object value) {
    return (Sitemap) super.set(fieldName, value);
  }

  @Override
  public Sitemap clone() {
    return (Sitemap) super.clone();
  }

}
