/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1alpha2.model;

/**
 * This structure contains configuration for streaming FHIR export.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Healthcare API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StreamConfig extends com.google.api.client.json.GenericJson {

  /**
   * The destination BigQuery structure that contains both the dataset location and corresponding
   * schema config. The output will be organized in one table per resource type. The server will
   * inspect and potentially create new tables (if they don't exist) in the given BigQuery dataset.
   * Results will be appended to the corresponding BigQuery tables. The views of the latest snapshot
   * will also be automatically created in the dataset.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudHealthcareV1alpha2FhirBigQueryDestination bigqueryDestination;

  /**
   * Supply a FHIR resource type (such as "Patient" or "Observation"). See https://www.hl7.org/fhir
   * /valueset-resource-types.html for a list of all FHIR resource types. The server will treat an
   * empty list as an intent to stream all the supported resource types in this FHIR store.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> resourceTypes;

  /**
   * The destination BigQuery structure that contains both the dataset location and corresponding
   * schema config. The output will be organized in one table per resource type. The server will
   * inspect and potentially create new tables (if they don't exist) in the given BigQuery dataset.
   * Results will be appended to the corresponding BigQuery tables. The views of the latest snapshot
   * will also be automatically created in the dataset.
   * @return value or {@code null} for none
   */
  public GoogleCloudHealthcareV1alpha2FhirBigQueryDestination getBigqueryDestination() {
    return bigqueryDestination;
  }

  /**
   * The destination BigQuery structure that contains both the dataset location and corresponding
   * schema config. The output will be organized in one table per resource type. The server will
   * inspect and potentially create new tables (if they don't exist) in the given BigQuery dataset.
   * Results will be appended to the corresponding BigQuery tables. The views of the latest snapshot
   * will also be automatically created in the dataset.
   * @param bigqueryDestination bigqueryDestination or {@code null} for none
   */
  public StreamConfig setBigqueryDestination(GoogleCloudHealthcareV1alpha2FhirBigQueryDestination bigqueryDestination) {
    this.bigqueryDestination = bigqueryDestination;
    return this;
  }

  /**
   * Supply a FHIR resource type (such as "Patient" or "Observation"). See https://www.hl7.org/fhir
   * /valueset-resource-types.html for a list of all FHIR resource types. The server will treat an
   * empty list as an intent to stream all the supported resource types in this FHIR store.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getResourceTypes() {
    return resourceTypes;
  }

  /**
   * Supply a FHIR resource type (such as "Patient" or "Observation"). See https://www.hl7.org/fhir
   * /valueset-resource-types.html for a list of all FHIR resource types. The server will treat an
   * empty list as an intent to stream all the supported resource types in this FHIR store.
   * @param resourceTypes resourceTypes or {@code null} for none
   */
  public StreamConfig setResourceTypes(java.util.List<java.lang.String> resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  @Override
  public StreamConfig set(String fieldName, Object value) {
    return (StreamConfig) super.set(fieldName, value);
  }

  @Override
  public StreamConfig clone() {
    return (StreamConfig) super.clone();
  }

}
