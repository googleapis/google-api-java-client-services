/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firestore.v1beta1.model;

/**
 * A consistent snapshot of a database at a specific point in time. A PITR (Point-in-time recovery)
 * snapshot with previous versions of a database's data is available for every minute up to the
 * associated database's data retention period. If the PITR feature is enabled, the retention period
 * is 7 days; otherwise, it is one hour.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Firestore API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleFirestoreAdminV1PitrSnapshot extends com.google.api.client.json.GenericJson {

  /**
   * Required. The name of the database that this was a snapshot of. Format:
   * `projects/{project}/databases/{database}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String database;

  /**
   * Output only. Public UUID of the database the snapshot was associated with.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseUid;

  /**
   * Required. Snapshot time of the database.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String snapshotTime;

  /**
   * Required. The name of the database that this was a snapshot of. Format:
   * `projects/{project}/databases/{database}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabase() {
    return database;
  }

  /**
   * Required. The name of the database that this was a snapshot of. Format:
   * `projects/{project}/databases/{database}`.
   * @param database database or {@code null} for none
   */
  public GoogleFirestoreAdminV1PitrSnapshot setDatabase(java.lang.String database) {
    this.database = database;
    return this;
  }

  /**
   * Output only. Public UUID of the database the snapshot was associated with.
   * @see #decodeDatabaseUid()
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseUid() {
    return databaseUid;
  }

  /**
   * Output only. Public UUID of the database the snapshot was associated with.
   * @see #getDatabaseUid()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeDatabaseUid() {
    return com.google.api.client.util.Base64.decodeBase64(databaseUid);
  }

  /**
   * Output only. Public UUID of the database the snapshot was associated with.
   * @see #encodeDatabaseUid()
   * @param databaseUid databaseUid or {@code null} for none
   */
  public GoogleFirestoreAdminV1PitrSnapshot setDatabaseUid(java.lang.String databaseUid) {
    this.databaseUid = databaseUid;
    return this;
  }

  /**
   * Output only. Public UUID of the database the snapshot was associated with.
   * @see #setDatabaseUid()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public GoogleFirestoreAdminV1PitrSnapshot encodeDatabaseUid(byte[] databaseUid) {
    this.databaseUid = com.google.api.client.util.Base64.encodeBase64URLSafeString(databaseUid);
    return this;
  }

  /**
   * Required. Snapshot time of the database.
   * @return value or {@code null} for none
   */
  public String getSnapshotTime() {
    return snapshotTime;
  }

  /**
   * Required. Snapshot time of the database.
   * @param snapshotTime snapshotTime or {@code null} for none
   */
  public GoogleFirestoreAdminV1PitrSnapshot setSnapshotTime(String snapshotTime) {
    this.snapshotTime = snapshotTime;
    return this;
  }

  @Override
  public GoogleFirestoreAdminV1PitrSnapshot set(String fieldName, Object value) {
    return (GoogleFirestoreAdminV1PitrSnapshot) super.set(fieldName, value);
  }

  @Override
  public GoogleFirestoreAdminV1PitrSnapshot clone() {
    return (GoogleFirestoreAdminV1PitrSnapshot) super.clone();
  }

}
