/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1.model;

/**
 * Represents a git repository as a build dependency.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleDevtoolsCloudbuildV1GitSourceDependency extends com.google.api.client.json.GenericJson {

  /**
   * Optional. How much history should be fetched for the build (default 1, -1 for all history).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long depth;

  /**
   * Required. Where should the files be placed on the worker.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destPath;

  /**
   * Optional. True if submodules should be fetched too (default false).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean recurseSubmodules;

  /**
   * Required. The kind of repo (url or dev connect).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleDevtoolsCloudbuildV1GitSourceRepository repository;

  /**
   * Required. The revision that we will fetch the repo at.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String revision;

  /**
   * Optional. How much history should be fetched for the build (default 1, -1 for all history).
   * @return value or {@code null} for none
   */
  public java.lang.Long getDepth() {
    return depth;
  }

  /**
   * Optional. How much history should be fetched for the build (default 1, -1 for all history).
   * @param depth depth or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceDependency setDepth(java.lang.Long depth) {
    this.depth = depth;
    return this;
  }

  /**
   * Required. Where should the files be placed on the worker.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestPath() {
    return destPath;
  }

  /**
   * Required. Where should the files be placed on the worker.
   * @param destPath destPath or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceDependency setDestPath(java.lang.String destPath) {
    this.destPath = destPath;
    return this;
  }

  /**
   * Optional. True if submodules should be fetched too (default false).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRecurseSubmodules() {
    return recurseSubmodules;
  }

  /**
   * Optional. True if submodules should be fetched too (default false).
   * @param recurseSubmodules recurseSubmodules or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceDependency setRecurseSubmodules(java.lang.Boolean recurseSubmodules) {
    this.recurseSubmodules = recurseSubmodules;
    return this;
  }

  /**
   * Required. The kind of repo (url or dev connect).
   * @return value or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceRepository getRepository() {
    return repository;
  }

  /**
   * Required. The kind of repo (url or dev connect).
   * @param repository repository or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceDependency setRepository(GoogleDevtoolsCloudbuildV1GitSourceRepository repository) {
    this.repository = repository;
    return this;
  }

  /**
   * Required. The revision that we will fetch the repo at.
   * @return value or {@code null} for none
   */
  public java.lang.String getRevision() {
    return revision;
  }

  /**
   * Required. The revision that we will fetch the repo at.
   * @param revision revision or {@code null} for none
   */
  public GoogleDevtoolsCloudbuildV1GitSourceDependency setRevision(java.lang.String revision) {
    this.revision = revision;
    return this;
  }

  @Override
  public GoogleDevtoolsCloudbuildV1GitSourceDependency set(String fieldName, Object value) {
    return (GoogleDevtoolsCloudbuildV1GitSourceDependency) super.set(fieldName, value);
  }

  @Override
  public GoogleDevtoolsCloudbuildV1GitSourceDependency clone() {
    return (GoogleDevtoolsCloudbuildV1GitSourceDependency) super.clone();
  }

}
