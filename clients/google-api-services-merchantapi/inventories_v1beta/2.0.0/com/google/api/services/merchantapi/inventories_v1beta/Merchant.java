/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.inventories_v1beta;

/**
 * Service definition for Merchant (inventories_v1beta).
 *
 * <p>
 * Programmatically manage your Merchant Center Accounts.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.devsite.corp.google.com/merchant/api" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MerchantRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Merchant extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Merchant API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://merchantapi.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://merchantapi.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Merchant(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Merchant(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Merchant merchantapi = new Merchant(...);}
   *   {@code Merchant.Accounts.List request = merchantapi.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * An accessor for creating requests from the Products collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Merchant merchantapi = new Merchant(...);}
     *   {@code Merchant.Products.List request = merchantapi.products().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Products products() {
      return new Products();
    }

    /**
     * The "products" collection of methods.
     */
    public class Products {

      /**
       * An accessor for creating requests from the LocalInventories collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Merchant merchantapi = new Merchant(...);}
       *   {@code Merchant.LocalInventories.List request = merchantapi.localInventories().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public LocalInventories localInventories() {
        return new LocalInventories();
      }

      /**
       * The "localInventories" collection of methods.
       */
      public class LocalInventories {

        /**
         * Deletes the specified `LocalInventory` from the given product in your merchant account. It might
         * take a up to an hour for the `LocalInventory` to be deleted from the specific product. Once you
         * have received a successful delete response, wait for that period before attempting a delete
         * again.
         *
         * Create a request for the method "localInventories.delete".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the local inventory for the given product to delete. Format:
         *        `accounts/{account}/products/{product}/localInventories/{store_code}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.Empty> {

          private static final String REST_PATH = "inventories/v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+/localInventories/[^/]+$");

          /**
           * Deletes the specified `LocalInventory` from the given product in your merchant account. It
           * might take a up to an hour for the `LocalInventory` to be deleted from the specific product.
           * Once you have received a successful delete response, wait for that period before attempting a
           * delete again.
           *
           * Create a request for the method "localInventories.delete".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the local inventory for the given product to delete. Format:
         *        `accounts/{account}/products/{product}/localInventories/{store_code}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.inventories_v1beta.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+/localInventories/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the local inventory for the given product to delete. Format:
           * `accounts/{account}/products/{product}/localInventories/{store_code}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the local inventory for the given product to delete. Format:
         `accounts/{account}/products/{product}/localInventories/{store_code}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the local inventory for the given product to delete. Format:
           * `accounts/{account}/products/{product}/localInventories/{store_code}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+/localInventories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Inserts a `LocalInventory` resource to a product in your merchant account. Replaces the full
         * `LocalInventory` resource if an entry with the same `storeCode` already exists for the product.
         * It might take up to 30 minutes for the new or updated `LocalInventory` resource to appear in
         * products.
         *
         * Create a request for the method "localInventories.insert".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The account and product where this inventory will be inserted. Format:
         *        `accounts/{account}/products/{product}`
         * @param content the {@link com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory}
         * @return the request
         */
        public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory content) throws java.io.IOException {
          Insert result = new Insert(parent, content);
          initialize(result);
          return result;
        }

        public class Insert extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory> {

          private static final String REST_PATH = "inventories/v1beta/{+parent}/localInventories:insert";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+$");

          /**
           * Inserts a `LocalInventory` resource to a product in your merchant account. Replaces the full
           * `LocalInventory` resource if an entry with the same `storeCode` already exists for the product.
           * It might take up to 30 minutes for the new or updated `LocalInventory` resource to appear in
           * products.
           *
           * Create a request for the method "localInventories.insert".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
           * <p> {@link
           * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The account and product where this inventory will be inserted. Format:
         *        `accounts/{account}/products/{product}`
           * @param content the {@link com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory}
           * @since 1.13
           */
          protected Insert(java.lang.String parent, com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory content) {
            super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.inventories_v1beta.model.LocalInventory.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public Insert set$Xgafv(java.lang.String $Xgafv) {
            return (Insert) super.set$Xgafv($Xgafv);
          }

          @Override
          public Insert setAccessToken(java.lang.String accessToken) {
            return (Insert) super.setAccessToken(accessToken);
          }

          @Override
          public Insert setAlt(java.lang.String alt) {
            return (Insert) super.setAlt(alt);
          }

          @Override
          public Insert setCallback(java.lang.String callback) {
            return (Insert) super.setCallback(callback);
          }

          @Override
          public Insert setFields(java.lang.String fields) {
            return (Insert) super.setFields(fields);
          }

          @Override
          public Insert setKey(java.lang.String key) {
            return (Insert) super.setKey(key);
          }

          @Override
          public Insert setOauthToken(java.lang.String oauthToken) {
            return (Insert) super.setOauthToken(oauthToken);
          }

          @Override
          public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Insert) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Insert setQuotaUser(java.lang.String quotaUser) {
            return (Insert) super.setQuotaUser(quotaUser);
          }

          @Override
          public Insert setUploadType(java.lang.String uploadType) {
            return (Insert) super.setUploadType(uploadType);
          }

          @Override
          public Insert setUploadProtocol(java.lang.String uploadProtocol) {
            return (Insert) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The account and product where this inventory will be inserted. Format:
           * `accounts/{account}/products/{product}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The account and product where this inventory will be inserted. Format:
         `accounts/{account}/products/{product}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The account and product where this inventory will be inserted. Format:
           * `accounts/{account}/products/{product}`
           */
          public Insert setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Insert set(String parameterName, Object value) {
            return (Insert) super.set(parameterName, value);
          }
        }
        /**
         * Lists the `LocalInventory` resources for the given product in your merchant account. The response
         * might contain fewer items than specified by `pageSize`. If `pageToken` was returned in previous
         * request, it can be used to obtain additional results. `LocalInventory` resources are listed per
         * product for a given account.
         *
         * Create a request for the method "localInventories.list".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The `name` of the parent product to list local inventories for. Format:
         *        `accounts/{account}/products/{product}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.ListLocalInventoriesResponse> {

          private static final String REST_PATH = "inventories/v1beta/{+parent}/localInventories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+$");

          /**
           * Lists the `LocalInventory` resources for the given product in your merchant account. The
           * response might contain fewer items than specified by `pageSize`. If `pageToken` was returned in
           * previous request, it can be used to obtain additional results. `LocalInventory` resources are
           * listed per product for a given account.
           *
           * Create a request for the method "localInventories.list".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The `name` of the parent product to list local inventories for. Format:
         *        `accounts/{account}/products/{product}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.inventories_v1beta.model.ListLocalInventoriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The `name` of the parent product to list local inventories for. Format:
           * `accounts/{account}/products/{product}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The `name` of the parent product to list local inventories for. Format:
         `accounts/{account}/products/{product}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The `name` of the parent product to list local inventories for. Format:
           * `accounts/{account}/products/{product}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of `LocalInventory` resources for the given product to return. The
           * service returns fewer than this value if the number of inventories for the given
           * product is less that than the `pageSize`. The default value is 25000. The maximum value
           * is 25000; If a value higher than the maximum is specified, then the `pageSize` will
           * default to the maximum
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of `LocalInventory` resources for the given product to return. The service
         returns fewer than this value if the number of inventories for the given product is less that than
         the `pageSize`. The default value is 25000. The maximum value is 25000; If a value higher than the
         maximum is specified, then the `pageSize` will default to the maximum
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of `LocalInventory` resources for the given product to return. The
           * service returns fewer than this value if the number of inventories for the given
           * product is less that than the `pageSize`. The default value is 25000. The maximum value
           * is 25000; If a value higher than the maximum is specified, then the `pageSize` will
           * default to the maximum
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListLocalInventories` call. Provide the page
           * token to retrieve the subsequent page. When paginating, all other parameters provided
           * to `ListLocalInventories` must match the call that provided the page token. The token
           * returned as nextPageToken in the response to the previous request.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListLocalInventories` call. Provide the page token to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListLocalInventories` must match the call that provided the page token. The token returned as
         nextPageToken in the response to the previous request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListLocalInventories` call. Provide the page
           * token to retrieve the subsequent page. When paginating, all other parameters provided
           * to `ListLocalInventories` must match the call that provided the page token. The token
           * returned as nextPageToken in the response to the previous request.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the RegionalInventories collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Merchant merchantapi = new Merchant(...);}
       *   {@code Merchant.RegionalInventories.List request = merchantapi.regionalInventories().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public RegionalInventories regionalInventories() {
        return new RegionalInventories();
      }

      /**
       * The "regionalInventories" collection of methods.
       */
      public class RegionalInventories {

        /**
         * Deletes the specified `RegionalInventory` resource from the given product in your merchant
         * account. It might take up to an hour for the `RegionalInventory` to be deleted from the specific
         * product. Once you have received a successful delete response, wait for that period before
         * attempting a delete again.
         *
         * Create a request for the method "regionalInventories.delete".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the `RegionalInventory` resource to delete. Format:
         *        `accounts/{account}/products/{product}/regionalInventories/{region}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.Empty> {

          private static final String REST_PATH = "inventories/v1beta/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+/regionalInventories/[^/]+$");

          /**
           * Deletes the specified `RegionalInventory` resource from the given product in your merchant
           * account. It might take up to an hour for the `RegionalInventory` to be deleted from the
           * specific product. Once you have received a successful delete response, wait for that period
           * before attempting a delete again.
           *
           * Create a request for the method "regionalInventories.delete".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the `RegionalInventory` resource to delete. Format:
         *        `accounts/{account}/products/{product}/regionalInventories/{region}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Merchant.this, "DELETE", REST_PATH, null, com.google.api.services.merchantapi.inventories_v1beta.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+/regionalInventories/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the `RegionalInventory` resource to delete. Format:
           * `accounts/{account}/products/{product}/regionalInventories/{region}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the `RegionalInventory` resource to delete. Format:
         `accounts/{account}/products/{product}/regionalInventories/{region}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the `RegionalInventory` resource to delete. Format:
           * `accounts/{account}/products/{product}/regionalInventories/{region}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+/regionalInventories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Inserts a `RegionalInventory` to a given product in your merchant account. Replaces the full
         * `RegionalInventory` resource if an entry with the same `region` already exists for the product.
         * It might take up to 30 minutes for the new or updated `RegionalInventory` resource to appear in
         * products.
         *
         * Create a request for the method "regionalInventories.insert".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The account and product where this inventory will be inserted. Format:
         *        `accounts/{account}/products/{product}`
         * @param content the {@link com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory}
         * @return the request
         */
        public Insert insert(java.lang.String parent, com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory content) throws java.io.IOException {
          Insert result = new Insert(parent, content);
          initialize(result);
          return result;
        }

        public class Insert extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory> {

          private static final String REST_PATH = "inventories/v1beta/{+parent}/regionalInventories:insert";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+$");

          /**
           * Inserts a `RegionalInventory` to a given product in your merchant account. Replaces the full
           * `RegionalInventory` resource if an entry with the same `region` already exists for the product.
           * It might take up to 30 minutes for the new or updated `RegionalInventory` resource to appear in
           * products.
           *
           * Create a request for the method "regionalInventories.insert".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
           * <p> {@link
           * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The account and product where this inventory will be inserted. Format:
         *        `accounts/{account}/products/{product}`
           * @param content the {@link com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory}
           * @since 1.13
           */
          protected Insert(java.lang.String parent, com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory content) {
            super(Merchant.this, "POST", REST_PATH, content, com.google.api.services.merchantapi.inventories_v1beta.model.RegionalInventory.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public Insert set$Xgafv(java.lang.String $Xgafv) {
            return (Insert) super.set$Xgafv($Xgafv);
          }

          @Override
          public Insert setAccessToken(java.lang.String accessToken) {
            return (Insert) super.setAccessToken(accessToken);
          }

          @Override
          public Insert setAlt(java.lang.String alt) {
            return (Insert) super.setAlt(alt);
          }

          @Override
          public Insert setCallback(java.lang.String callback) {
            return (Insert) super.setCallback(callback);
          }

          @Override
          public Insert setFields(java.lang.String fields) {
            return (Insert) super.setFields(fields);
          }

          @Override
          public Insert setKey(java.lang.String key) {
            return (Insert) super.setKey(key);
          }

          @Override
          public Insert setOauthToken(java.lang.String oauthToken) {
            return (Insert) super.setOauthToken(oauthToken);
          }

          @Override
          public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Insert) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Insert setQuotaUser(java.lang.String quotaUser) {
            return (Insert) super.setQuotaUser(quotaUser);
          }

          @Override
          public Insert setUploadType(java.lang.String uploadType) {
            return (Insert) super.setUploadType(uploadType);
          }

          @Override
          public Insert setUploadProtocol(java.lang.String uploadProtocol) {
            return (Insert) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The account and product where this inventory will be inserted. Format:
           * `accounts/{account}/products/{product}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The account and product where this inventory will be inserted. Format:
         `accounts/{account}/products/{product}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The account and product where this inventory will be inserted. Format:
           * `accounts/{account}/products/{product}`
           */
          public Insert setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Insert set(String parameterName, Object value) {
            return (Insert) super.set(parameterName, value);
          }
        }
        /**
         * Lists the `RegionalInventory` resources for the given product in your merchant account. The
         * response might contain fewer items than specified by `pageSize`. If `pageToken` was returned in
         * previous request, it can be used to obtain additional results. `RegionalInventory` resources are
         * listed per product for a given account.
         *
         * Create a request for the method "regionalInventories.list".
         *
         * This request holds the parameters needed by the merchantapi server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The `name` of the parent product to list `RegionalInventory` resources for. Format:
         *        `accounts/{account}/products/{product}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends MerchantRequest<com.google.api.services.merchantapi.inventories_v1beta.model.ListRegionalInventoriesResponse> {

          private static final String REST_PATH = "inventories/v1beta/{+parent}/regionalInventories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^accounts/[^/]+/products/[^/]+$");

          /**
           * Lists the `RegionalInventory` resources for the given product in your merchant account. The
           * response might contain fewer items than specified by `pageSize`. If `pageToken` was returned in
           * previous request, it can be used to obtain additional results. `RegionalInventory` resources
           * are listed per product for a given account.
           *
           * Create a request for the method "regionalInventories.list".
           *
           * This request holds the parameters needed by the the merchantapi server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The `name` of the parent product to list `RegionalInventory` resources for. Format:
         *        `accounts/{account}/products/{product}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Merchant.this, "GET", REST_PATH, null, com.google.api.services.merchantapi.inventories_v1beta.model.ListRegionalInventoriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The `name` of the parent product to list `RegionalInventory` resources for.
           * Format: `accounts/{account}/products/{product}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The `name` of the parent product to list `RegionalInventory` resources for. Format:
         `accounts/{account}/products/{product}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The `name` of the parent product to list `RegionalInventory` resources for.
           * Format: `accounts/{account}/products/{product}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^accounts/[^/]+/products/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of `RegionalInventory` resources for the given product to return.
           * The service returns fewer than this value if the number of inventories for the given
           * product is less that than the `pageSize`. The default value is 25000. The maximum value
           * is 100000; If a value higher than the maximum is specified, then the `pageSize` will
           * default to the maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of `RegionalInventory` resources for the given product to return. The service
         returns fewer than this value if the number of inventories for the given product is less that than
         the `pageSize`. The default value is 25000. The maximum value is 100000; If a value higher than the
         maximum is specified, then the `pageSize` will default to the maximum.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of `RegionalInventory` resources for the given product to return.
           * The service returns fewer than this value if the number of inventories for the given
           * product is less that than the `pageSize`. The default value is 25000. The maximum value
           * is 100000; If a value higher than the maximum is specified, then the `pageSize` will
           * default to the maximum.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListRegionalInventories` call. Provide the page
           * token to retrieve the subsequent page. When paginating, all other parameters provided
           * to `ListRegionalInventories` must match the call that provided the page token. The
           * token returned as nextPageToken in the response to the previous request.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListRegionalInventories` call. Provide the page token to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListRegionalInventories` must match the call that provided the page token. The token returned as
         nextPageToken in the response to the previous request.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListRegionalInventories` call. Provide the page
           * token to retrieve the subsequent page. When paginating, all other parameters provided
           * to `ListRegionalInventories` must match the call that provided the page token. The
           * token returned as nextPageToken in the response to the previous request.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Merchant}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Merchant}. */
    @Override
    public Merchant build() {
      return new Merchant(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MerchantRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMerchantRequestInitializer(
        MerchantRequestInitializer merchantRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(merchantRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
