/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Requirements that must be true before a table is scanned in discovery for the first time. There
 * is an AND relationship between the top-level attributes. Additionally, minimum conditions with an
 * OR relationship that must be met before Cloud DLP scans a table can be set (like a minimum row
 * count or a minimum table age).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DiscoveryBigQueryConditions extends com.google.api.client.json.GenericJson {

  /**
   * BigQuery table must have been created after this date. Used to avoid backfilling.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createdAfter;

  /**
   * At least one of the conditions must be true for a table to be scanned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2OrConditions orConditions;

  /**
   * Restrict discovery to categories of table types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String typeCollection;

  /**
   * Restrict discovery to specific table types.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2BigQueryTableTypes types;

  /**
   * BigQuery table must have been created after this date. Used to avoid backfilling.
   * @return value or {@code null} for none
   */
  public String getCreatedAfter() {
    return createdAfter;
  }

  /**
   * BigQuery table must have been created after this date. Used to avoid backfilling.
   * @param createdAfter createdAfter or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions setCreatedAfter(String createdAfter) {
    this.createdAfter = createdAfter;
    return this;
  }

  /**
   * At least one of the conditions must be true for a table to be scanned.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2OrConditions getOrConditions() {
    return orConditions;
  }

  /**
   * At least one of the conditions must be true for a table to be scanned.
   * @param orConditions orConditions or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions setOrConditions(GooglePrivacyDlpV2OrConditions orConditions) {
    this.orConditions = orConditions;
    return this;
  }

  /**
   * Restrict discovery to categories of table types.
   * @return value or {@code null} for none
   */
  public java.lang.String getTypeCollection() {
    return typeCollection;
  }

  /**
   * Restrict discovery to categories of table types.
   * @param typeCollection typeCollection or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions setTypeCollection(java.lang.String typeCollection) {
    this.typeCollection = typeCollection;
    return this;
  }

  /**
   * Restrict discovery to specific table types.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2BigQueryTableTypes getTypes() {
    return types;
  }

  /**
   * Restrict discovery to specific table types.
   * @param types types or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions setTypes(GooglePrivacyDlpV2BigQueryTableTypes types) {
    this.types = types;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DiscoveryBigQueryConditions) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryBigQueryConditions clone() {
    return (GooglePrivacyDlpV2DiscoveryBigQueryConditions) super.clone();
  }

}
